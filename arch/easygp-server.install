## arg 1:  the new package version
pre_install() {
  # do something here
  echo -n
}

## arg 1:  the new package version
post_install() {
  if netstat -xtlp | grep -q postgres; then
     echo -n # do nothing, postgres is running
  else
    /etc/rc.d/postgresql start
  fi
  sleep 1
  if psql --list --user postgres | grep -q easygp; then
     echo Easygp database appears to already exist.
     echo Installing terminating
     return 1
  fi
  read -s -p "Password for database owner:"
  echo 
  echo Now installing database....
  (
     echo \\set ON_ERROR_STOP off
     echo DROP USER easygp\;
     echo DROP ROLE staff\;
     echo \\set ON_ERROR_STOP on
     echo CREATE USER easygp CREATEROLE PASSWORD \'$REPLY\' \; 
     echo CREATE ROLE staff NOLOGIN\;
     cat /usr/share/easygp/easygp.schema.sql
     cat /usr/share/easygp/easygp.data.sql
   ) | psql template1 --user postgres > /dev/null
   echo done.
}

## arg 1:  the new package version
## arg 2:  the old package version
#pre_upgrade() {
  # do something here
#}

## arg 1:  the new package version
## arg 2:  the old package version
#post_upgrade() {
  # do something here
#}

## arg 1:  the old package version
pre_remove() {
  if ps ax | grep -q postgres ; then
     echo -n # nothing
  else
     /etc/rc.d/postgresql start
  fi
  (
     echo DROP DATABASE easygp\;
     echo DROP ROLE easygp\;
     echo DROP ROLE staff\;
  ) | psql template1 --user postgres
  /etc/rc.d/postgresql stop
}

## arg 1:  the old package version
post_remove() {
  # do something here
  echo -n
}

# vim:set ts=2 sw=2 et:
