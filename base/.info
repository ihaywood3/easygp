#Log

C
panic_level
C
i
0
error_level
C
i
1
warning_level
C
i
2
info_level
C
i
3
debug_level
C
i
4
data_level
C
i
5
_init
M


Set_Logfile
M

(l)s
Init
M


SetLevel
M

(new_level)i
MakeLog
M

(msg_level)i(msg)s
PanicMsg
M

(msg)s
ErrorMsg
M

(msg)s
WarningMsg
M

(msg)s
InfoMsg
M

(msg)s
DebugMsg
M

(msg)s
DataMsg
M

(msg)s
GetWholeLog
M
s

#cRegex

C
Subject
v
s

NumMatches
r
i

_new
m

(re)s[(subj)s(compileOptions)i]
_get
m
s
(idx)i
Set
m

(v)s
_next
m


Replace
M
s
(regex)s(subj)s(repl)s[(compileOptions)i]
Unit_Test
M


#cRow

C
changed
r
String[]

Count
r
i

Key
r
s

AsCollection
m
Collection

_put
m

(value)v(field)s
Exist
m
b
(field)s
_get
m
v
(field)s
put_unchanged
m

(value)v(field)s
_new
m

[(mycoll)Collection;]
Save
m

(table)s(pk_view_name)s[(fields)String[];]
_next
m
v

ToJSON
m
s

Remove
m

(Key)s
Clone
m
CRow

#modCmdLine

C
GetOptions
M
Collection

Main
M


#modDBConnect

C
currentUser
R
Collection

IsConnected
R
b

DbName
R
s

DbHost
R
s

Set_User
M

(u2)Collection;
currentUser_FullName
M
s

userName
M
s

dbConnect_global
M

(opt)Collection;
Shutdown
M


Scp_Download_Cmd_List
M
String[]
(remote_file)s(local_file)s
Scp_Download
M

(remote_file)s(local_file)s
Scp_Upload_Cmd_List
M
String[]
(local_file)s(remote_file)s
Scp_Upload_Cmd
M
s
(local_file)s(remote_file)s
Scp_Upload
M

(local_file)s(remote_file)s
exec_query
M
Result
(sql)s[(params)Variant[];]
Close_Listener
M


Send_Notify
M
v
(notify)s(the_param)s[(its_us)b]
Unregister_Listener
M

(evt)s(obj)o
File_Read
M


Ssh_Read
M


Ssh_Error
M

(err)s
Register_Listener
M

(evt)s(obj)o
BeginTrans
M
Result

RollBack
M
Result

CommitTrans
M
Result

Subst
M
s
(sql)s(params)Variant[];
startStoring
M


stopStoring
M
s

Select
M
Collection
(table)s(field)s(v)v
exec_query_collection
M
Collection
(sql)s[(params)Variant[];]
exec_query_first
M
Collection
(sql)s[(params)Variant[];]
FormatBlob
M
s
(fname)s
insert
M
v
(table)s(data)Collection;[(pk_name)s]
Role_Check_If_Exists
M
b
(role)s
update
M
b
(table)s(old_data)Collection;(new_data)Collection;[(old_pk_name)s(table_pk_name)s]
update_array
M

(tbl)s(old_pk)v(Fields)String[];(vals)Variant[];
exec_query_row
M
Collection
(sql)s[(params)Variant[];]
Esc_Like
M
s
(s)s
#modLater

C
Init
M


Timer1_Timer
M


Add
M

(obj)o(method)s[(arg)Variant[];]
Add_And_Now
M

(obj)o(method)s[(arg)Variant[];]
#modUtil

C
Read_PDF_Page_Count
M
i
(filename)s
Fix_HTML
M
s
(s)s(lastspan)String[];
As_Percent
M
s
(num)i(data_count)i
Show_in_external_pdf_viewer
M

(filename)s(bIsDocument)b
FindProgram
M
s
(prg)s(package)s
filepath_fix_Blanks
M
s
(filepath)s
text_gt_lt_protect
M
s
(s)s
Splitter_Defaults
M
Integer[]
(values)Integer[];(sz)i
Calc_BMI
M
v
(height)v(weight)v
Calc_md5sum_File
M
s
(filename)s
Filename_Protect
M
s
(fname)s
Make_Plural
M
s
(txt)s
Ucase_Word_First_Letter
M
s
(txt)s
Calc_age
M
i
(dob)d
Is_Birthday
M
b
(dob)d
Write_HTML
M
s
(sHTML)s[(prefix)s]
Convert_rtf_to_html
M
s
(sHTML)s
COct
M
s
(num)i
SplitStrings_into_collection
M
Collection
(sstring)s(delimiter)s
DateString_Encode
M
s
(datestring)s
DateString_Decode
M
d
(datestring)s
Copy_Collection
M
Collection
(cSource)Collection;
Get_One
M
v
(coll)Collection;
Copy_Collection_Keyed_Sequentially
M
Collection
(cSource)Collection;
Make_Date_From_String
M
d
(d)s
Format_Date
M
s
(d)d
CapsLockStatus
M
b

Medicare_Number_Check
M
s
(mcn)s
Medicare_Number_Format
M
s
(mcn)s
Medicare_Create_Expiry_date
M
s
(s)s
Provider_Number_Check
M
s
(pn)s
Check_Coding_Missing
M
b

Find_File
M
s
(fname)s
StripAllBlanks
M
s
(s1)s
StripExtraBlanks
M
s
(s1)s
IsSameDay
M
b
(d1)d(d2)d
SendMailToDeveloper
M

(subject)s(Text)s
SendContribution
M

(user_from)s(sMsg)s
Money_Format
M
s
(money)v
isMoney
M
b
(s)s
MoneyToFloat
M
f
(s)s
Split_Firstname
M

(name)s(firstname)s(initial)s
Kill_If_Temp
M

(fname)s
Get_Temp_Dir
M
s

Not_Numeric
M
b
(s)s
Is_Loinc
M
b
(loinc)s
Get_Caller
M
s

Is_Developer
M
b

