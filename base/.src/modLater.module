' Gambas module file

' a module for calling a certain function later on in execution

' Copyright (C) 2008-2014 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Export

Private timer1 As Timer
Private queue As Collection[]
Private first_tick As Boolean

Public Sub Init()

  timer1 = New Timer As "Timer1"
  timer1.Delay = 200
  first_tick = True
  queue = New Collection[]

End

Public Sub Timer1_Timer()

  Dim job As Collection

  If first_tick Then
    first_tick = False
    timer1.Delay = 100 ' 100milliseconds
  Endif

  If queue.Length > 0 Then
    job = queue.Pop()
    Try Object.Call(job!thing, job!method, job!arg)
    If Error Then
      Log.ErrorMsg("Job failed: " & Error.Text & " " & Error.Where)
    Endif
    If queue.Length = 0 Then
      timer1.Stop()
    Endif

  Endif

End

' schedule a job for execution later on
' jobs will be executed one at a time every 150msec until all jobs done.
Public Sub Add(obj As Object, method As String, Optional arg As Variant[] = Null)

  If IsNull(timer1) Then Init()
  queue.Add(["thing": obj, "method": method, "arg": arg], 0)
  timer1.Start()

End

' schedule a job and do it immediately
' this is apure convience method, calling code could of course easily make the direct call itself.
Public Sub Add_And_Now(obj As Object, method As String, Optional arg As Variant[] = Null)

  Object.Call(obj, method, arg)
  Add(obj, method, arg)

End
