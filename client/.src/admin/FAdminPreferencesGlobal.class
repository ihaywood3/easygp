' Gambas class file

' Copyright (C) 2008-2013 Drs. Richard Terry, Ian Haywood
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' A module to set global preferences for easyGP eg paths to documents etc
'-------------------------------------------------------------------------
'PURPOSE       Enable admin to set basic stuff like, path to hl7, set path
'              where scanned documents are kept
'-------------------------------------------------------------------------

Private fk_clinic As Integer
Private bExit As Boolean
Private document_fk_lu_archive_site As Integer
Private staff_members As Collection
Private Form_Help As FHtmlViewer
Private Clinics As Collection
Private cvwGeneralPreferences_key As Integer

Public Sub Init()
   '-----------------------------------------------------
   'Basic housekeeping, this is called from FAdmin.Init()
   '-----------------------------------------------------
   
   staff_members = modUtil.LoadCombo(cmbStaffMembers, modInboxDBI.Inbox_Staff_Get(), "wholename")
   With Form_Help = New FHtmlViewer(Vbox_Help)
      .tbWebBrowserZoomIn.Visible = True
      .tbWebBrowserZoomOut.Visible = True
      .Help_Show("global-preferences.html")
   End With
   
   Settings_Load()
   lblmeasure.text = " Path to Full Production Information PDF's   "
   modEditAreaHelpers.Resize_labels(VBox_EditArea, lblmeasure)
   modEditAreaHelpers.Resize_label(lblDefaultStaffMember, lblmeasure)
   With cvwGeneralPreferences
      .columns.count = 3
      .Columns[0].width = 150
      .Columns[0].text = "Location"
      .Columns[1].width = 200
      .Columns[2].width = cvwGeneralPreferences.Parent.width - 350
   End With
   HBox_ToolBar_Right.width = HSplit_GlobalSettings.Children[1].Width
   Reload()
   
End

Public Sub Save()
   '----------------------------------------------------------------
   ' Saves the global preferences
   'globalpreference!document_fk_lu_archive_site  set by radiobutton
   '----------------------------------------------------------------
   
   Dim v As String
   
   If Not (HBox_EditArea.Padding) Then Return       'no padding = nothing changed
   If Not EditArea_Data_Valid() Then                'ensure minimal valid data
      Return
   Else
      HBox_EditArea.Enabled = False
      modDBConnect.exec_query("lock admin.global_preferences in exclusive mode") ' implictly begins a transaction
      modAdminDBI.Config_Save(fk_clinic, "document_scanning_directory", Trim(txtFilePathScannedDocuments.text))
      modAdminDBI.Config_Save(fk_clinic, "document_archiving_directory", Trim(txtFilePathArchivedDocuments.text))
      modAdminDBI.Config_Save(fk_clinic, "hl7_incoming_directory", Trim(txtHL7Incoming.text))
      modAdminDBI.Config_Save(fk_clinic, "hl7_outgoing_directory", Trim(txtHL7Outgoing.text))
      modAdminDBI.Config_Save(fk_clinic, "fk_hl7_fallback_staff_member", staff_members[cmbStaffMembers.index]!fk_staff)
      modAdminDBI.Config_Save(fk_clinic, "document_fk_lu_archive_site", document_fk_lu_archive_site)
      modAdminDBI.Config_Save(fk_clinic, "library_directory_network", Trim(txtLibraryPathNetwork.text))
      modAdminDBI.Config_Save(fk_clinic, "product_information_directory", Trim(txtProductInformationPath.text))
      modAdminDBI.Config_Save(fk_clinic, "area_of_need", CBool(chkAreaOfNeed.value))
      modAdminDBI.Config_Save(fk_clinic, "use_ozefax", CBool(cbOzefax.Value))
      modAdminDBI.Config_Save(fk_clinic, "smtp_server", Trim(txtSMTPServer.text))
      modAdminDBI.Config_Save(fk_clinic, "smtp_username", Trim(txtSMTPUserName.text))
      modAdminDBI.Config_Save(fk_clinic, "smtp_password", Trim(txtSMTPPassword.text))
      modAdminDBI.Config_Save(fk_clinic, "dictation_ftp_server", Trim(txtDictationsFTPServer.text))
      modAdminDBI.Config_Save(fk_clinic, "dictation_ftp_username", Trim(txtDictationsFTPUserName.text))
      modAdminDBI.Config_Save(fk_clinic, "dictation_ftp_password", Trim(txtDictationsFTPPassword.text))
      
      If rbReferralLaTeX.Value Then
         v = "l"
      Else
         v = "h"
      Endif
      modAdminDBI.Config_Save(fk_clinic, "referral_engine", v)
      modDBConnect.CommitTrans()
      EditArea_Notify_Datachanged(False)
      modAdminDBI.Config_Refresh()
      Reload()
   End If
   
End

Public Sub Form_KeyPress()
   
   Dim CtrlDown As Boolean
   
   If key.code = Key.f12 Then
      Save()
   Endif
   Try CtrlDown = Key.Control
   If CtrlDown Then
      Select Case Key.code
         Case Asc("=")
            Try form_help.Zoom_In()
         Case Asc("-")
            Try form_help.Zoom_Out
      End Select
   End If
   
End

Public Sub Reload()
   
   Dim clinic As Collection
   Dim x As Integer
   
   cvwGeneralPreferences.Clear()
   clinics = modutil.Copy_Collection_Keyed_Sequentially(modContactsDBI.Clinics_Get())
   For Each clinic In clinics
      '  x = clinic!pk_view
      cvwGeneralPreferences.Add(x, 0)
      cvwGeneralPreferences[x][0] = clinic!branch
      cvwGeneralPreferences[x][1] = Trim(clinic!street1 & " " & clinic!street2)
      cvwGeneralPreferences[x][2] = clinic!town & " " & clinic!postcode
      Inc x
   Next
   
End

Public Function EditArea_Data_Valid() As Boolean
   '-------------------------------------------
   'make sure directories etc are valid paths
   '-------------------------------------------
   
   If Not IsDir(txtFilePathScannedDocuments.text) Then
      Message.Info("Please supply a valid path for the scanning files.\n\nYou may browse for a file path by clicking the browse button next to this textbox")
      txtFilePathScannedDocuments.SetFocus()
      Return False
   End If
   If Not IsDir(txtFilePathArchivedDocuments.text) Then
      Message.Info("Please supply a valid path for the archived documents files.\n\nYou may browse for a file path by clicking the browse button next to this textbo")
      txtFilePathArchivedDocuments.SetFocus()
      Return False
   End If
   If Not IsDir(txtLibraryPathNetwork.text) Then
      Message.Info("Please supply a valid path for the networked libary files.\n\nYou may browse for a file path by clicking the browse button next to this textbo")
      txtFilePathArchivedDocuments.SetFocus()
      Return False
   End If
   If Not IsDir(txtProductInformationPath.text) Then
      Message.Info("Please supply a valid path for the full product information pdf files.\n\nYou may browse for a file path by clicking the browse button next to this textbo")
      txtFilePathArchivedDocuments.SetFocus()
      Return False
   End If
   If Not IsDir(txtHL7Incoming.text) Then
      Message.Info("Please supply a valid path for the location of the incoming hl7 files.\n\nYou may browse for a file path by clicking the browse button next to this textbo")
      txtFilePathArchivedDocuments.SetFocus()
      Return False
   End If
   If Not staff_members.Exist(cmbStaffMembers.Index) Then
      Message.Info("Please specify a staff member to receive unmatched results")
      cmbStaffMembers.SetFocus()
      Return False
   End If
   
   If Not fk_clinic Then
      Message.info("Please select a clinic you wish to apply these global preferences to\nfrom the combo box at the bottom")
      cvwGeneralPreferences.SetFocus()
      Return False
   End If
   Return True
   
End

Public Sub EditArea_Notify_Datachanged(flag As Boolean)
   '--------------------------------------------------
   'Adds or removes padding around edit area
   'to indicate if data is changed and unsaved
   '--------------------------------------------------
   
   If flag Then
      HBox_EditArea.Padding = 1
      HBox_EditArea.Background = Color.red
      tbSave.Foreground = color.red
      
   Else
      HBox_EditArea.Padding = 0
      HBox_EditArea.Background = Color.white
      tbSave.Foreground = color.black
   End If
   
End

Public Sub EditArea_TextBox_Activate()
   
   If Bexit Then Return
   Select Case Last.tag
      Case "scanned document path"
         txtFilePathArchivedDocuments.SetFocus()
      Case "archived document path"
   End Select
   
End

Public Sub EditArea_TextBox_LostFocus()
   
   Last.BackGround = Color.white
   Last.pos = 0
   
End

Public Sub EditArea_TextBox_GotFocus()
   
   If Last.enabled Or Last.readonly Then Return
   Last.BackGround = Color.rgb(95, 255, 175)
   
End

Public Sub EditArea_TextBox_Change()
   
   EditArea_Notify_Datachanged(True)
   
End

Public Sub Settings_Save()
   
   Settings["FAdminPreferencesGlobal/HSplit_GlobalSettings.layout"] = HSplit_GlobalSettings.layout
   Settings["FAdminPreferencesGlobal/VSplit_EditArea.layout"] = VSplit_EditArea.layout
   Settings["FAdminPreferencesGlobal/Help_Zoom"] = Form_Help.WebView1.Zoom
   
End

Private Sub Settings_Load()
   
   HSplit_GlobalSettings.layout = Settings["FAdminPreferencesGlobal/HSplit_GlobalSettings.layout", modUtil.HSplit([915, 792])]
   VSplit_EditArea.layout = Settings["FAdminPreferencesGlobal/VSplit_EditArea.layout", modutil.VSplit([320, 609])]
   Form_Help.WebView1.Zoom = Settings["FAdminPreferencesGlobal/Help_Zoom", 1.0]
   cvwGeneralPreferences.Font = Font[Settings["FAdminPreferencesGlobal/cvwGeneralPreferences.font", "DejaVu Sans,9"]]
   
End

Public Sub Preference_Show()
   '----------------------------------------------------------------------------------------
   'User has selected one of the clinics, show the defaults for that clinic at it's address
   '----------------------------------------------------------------------------------------
   
   Dim v As Variant
   Dim clinic As Collection 
   
   If Not cvwGeneralPreferences.count Then Return
   Preference_new()
   fk_clinic = clinics[cvwGeneralPreferences_key]!fk_clinic
   clinic = clinics[cvwGeneralPreferences_key]
   lblOrganisation.Text = "Global Preferences for " & clinic!organisation
   txtOrganisation.text = clinic!organisation
   txtBranch.text = clinic!branch
   txtBranch_Street1.Text = clinic!street1
   txtBranch_Street2.Text = clinic!street2
   txtBranch_Suburb.Text = clinic!town
   txtBranch_State.Text = clinic!state
   txtBranch_Postcode.Text = clinic!postcode
   chkAreaOfNeed.value = modAdminDBI.Config_Get("area_of_need", False, Null, fk_clinic)
   bExit = True
   document_fk_lu_archive_site = modAdminDBI.Config_Get("document_fk_lu_archive_site", const.globalpreference_archive_filesystem, Null, fk_clinic)
   Select Case document_fk_lu_archive_site
      Case const.globalpreference_archive_filesystem
         rbStoreInfilesystem.value = True
      Case Const.globalpreference_archive_web
         rbStoreWeb.value = True
   End Select
   v = modAdminDBI.Config_Get("referral_engine", "h", Null, fk_clinic)
   If v = "h"
      rbReferralHTML.Value = True
      rbReferralLaTeX.Value = False
   Else
      rbReferralHTML.Value = False
      rbReferralLaTeX.Value = True
   Endif
   If modAdminDBI.Config_Get("use_ozefax", False, Null, fk_clinic) Then
      cbOzefax.Value = cbOzefax.True
   Else
      cbOzefax.Value = cbOzefax.False
   Endif
   txtFilePathScannedDocuments.text = modAdminDBI.Config_Get("document_scanning_directory", "/var/lib/easygp/scanning", Null, fk_clinic)
   txtFilePathArchivedDocuments.text = modAdminDBI.Config_Get("document_archiving_directory", "", Null, fk_clinic)
   txtHL7Incoming.text = modAdminDBI.Config_Get("hl7_incoming_directory", "/var/lib/easygp/hl7/incoming", Null, fk_clinic)
   txtHL7Outgoing.text = modAdminDBI.Config_Get("hl7_outgoing_directory", "/var/lib/easygp/hl7/outgoing", Null, fk_clinic)
   Try cmbStaffMembers.index = modAdminDBI.Config_Get("fk_hl7_fallback_staff_member", -1, Null, fk_clinic)
   Try txtLibraryPathNetwork.text = modAdminDBI.Config_Get("library_directory_network", "", Null, fk_clinic)
   Try txtProductInformationPath.text = modAdminDBI.Config_Get("product_information_directory", "", Null, fk_clinic)
   txtSMTPServer.text = modAdminDBI.Config_Get("smtp_server", "", Null, fk_clinic)
   txtSMTPUserName.text = modAdminDBI.Config_Get("smtp_username", "", Null, fk_clinic)
   txtSMTPPassword.text = modAdminDBI.Config_Get("smtp_password", "", Null, fk_clinic)
   txtDictationsFTPServer.text = modAdminDBI.Config_Get("dictation_ftp_server", "", Null, fk_clinic)
   txtDictationsFTPUserName.text = modAdminDBI.Config_Get("dictation_ftp_username", "", Null, fk_clinic)
   txtDictationsFTPPassword.text = modAdminDBI.Config_Get("dictation_ftp_password", "", Null, fk_clinic)
   bExit = False
   EditArea_Notify_Datachanged(False)
   HBox_EditArea.Enabled = True
   
End

Public Sub Preference_new()
   
   bexit = False
   modEditAreaHelpers.EditArea_Clear(VBox_EditArea)
   fk_clinic = 0
   document_fk_lu_archive_site = 0
   rbStoreInfilesystem.value = True
   lblOrganisation.Text = "Branch"
   EditArea_Notify_Datachanged(False)
   bExit = False
   
End

Public Sub EditArea_Buttons_Click()
   
   Dim hCtrl As Control
   Dim aTextbox As TextBox
   
   If bexit Then Return
   Select Case Last.tag
      Case "save"
         Save()
      Case "new"
         Preference_new()
      Case "Path to find scanned documents", "Path to place archived documents", "Path to library files network", "Path to library files local"
         If Dialog.SelectDirectory() Then Return
         Print Dialog.Path
         For Each hctrl In Last.parent.children
            If hctrl Is Textbox Then
               aTextbox = hctrl
               aTextbox.text = Dialog.Path
               Break
            End If
         Next
   End Select
   
End

Public Sub EditArea_RadioButtons_Click()
   
   EditArea_Notify_Datachanged(True)
   
End

Public Sub Archive_RadioButtons_Click()
   
   If bExit Then Return
   
   document_fk_lu_archive_site = Last.tag
   EditArea_Notify_Datachanged(True)
   
End

Public Sub cvwGeneralPreferences_Select()

   cvwGeneralPreferences.MoveCurrent
   cvwGeneralPreferences_key = cvwGeneralPreferences.Item.Key
   Preference_Show()
   
End

Public Sub cmbStaffMembers_Click()
   
   EditArea_Notify_Datachanged(True)
   
End

Public Sub EditArea_CheckBox_Click()
   
   EditArea_Notify_Datachanged(True)
   
End

Public Sub HSplit_GlobalSettings_Resize()
   
   modEditAreaHelpers.Resize_labels(VBox_EditArea, lblmeasure)
   '  HBox_ToolBar_Right.width = Vbox_Help.Width
   HBox_ToolBar_Right.width = HSplit_GlobalSettings.Children[1].Width
   
End

Public Sub mnuGeneralPreferences_Click()
   
   Select Case Last.tag
      Case "edit"
         HBox_EditArea.Enabled = True
      Case "font"
         modUtil.Columnview_SetFont(cvwGeneralPreferences, "FAdminPreferencesGlobal")
   End Select
   
End

Public Sub cvwGeneralPreferences_Menu()
   
   If cvwGeneralPreferences.count Then
      mnuGeneralPreferences.Popup()
   Endif
   
End

Public Sub Form_Resize()
   
   HSplit_GlobalSettings_Resize()
   
End
