' Gambas class file
' Copyright (C) 2008,2009 Dr. Richard Terry, Dr. I Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
' A module to allow setting up of room preferences such as printers
'----------------------------------------------------------------------
Private allprinters As String[]

Public Sub form_Open()
   Init()
End

Public Sub form_Close()
  
  Settings_Save()
  
End

Public Sub Init()
  Help_Create()
  allprinters = modPrinting.Printers_Load()
  LoadPrinterOptions(cmbPlain, tbPlain, "plain")
  LoadPrinterOptions(cmbScript, tbScript, "script")
  LoadPrinterOptions(cmbLong, tbLong, "long")
  LoadPrinterOptions(cmbRequest, tbRequest, "request")
End

Private Sub LoadPrinterOptions(cmb As ComboBox, opts As TextBox, printername As String)
  Dim i As String
  
  cmb.Add("Default")
  For Each i In allprinters
    cmb.Add(i)
  Next
  cmb.Index = cmb.Find(Settings[Subst$("Printers/&1", printername), "Default"])
  opts.Text = Settings[Subst$("Printers/&1_options", printername), ""]
End



Public Sub SliderFont_Change()

  tlHelp.Font.size = Last.value

End

Private Sub Settings_Save()


  

End

Private Sub Settings_Load()


  

End


Public Sub Help_Create()
   tlhelp.text = "<html><head><title>Document Storage Site</title></head><body>"
 
   "<h2>Room Setup</h2>"
  "<p>This will tell EasyGP where how you wish to set up your clinic rooms."

      "<P><B>Default Printer</B><BR>."
      "<P>This should be the printer in your room you wish to use to print plain paper documents. "
      "Within EasyGP you can over-ride this at any time to print to any printer on the network."
      "<P><B>Script Printer</B><BR>."
      "<P>In many clinic rooms, the staff member will have to print to pre-formatted script paper.</P>"
      "<P>Please test your printers to ensure they are working satisfactorily before saving these defaults.</P>"
 
  End

Public Sub tbTestPrinter_Click()

  PrintTestPage(cmbPlain, tbPlain, "plain", Last.tag)
  PrintTestPage(cmbScript, tbScript, "script", Last.tag)
  PrintTestPage(cmbLong, tbLong, "long", Last.tag)
  PrintTestPage(cmbRequest, tbRequest, "request", Last.tag)

End

Private Sub PrintTestPage(cmb As ComboBox, opts As TextBox, printername As String, tag As String)

   Dim lpr_opts_str As String
   Dim dvips_opts_str As String
   Dim cmd As String
   Dim f As File
   Dim fname As String
   Dim coll As New Collection
   
   Inc Application.Busy
   
   If printername <> tag Then Return ' only do the clicked-on widget
   lpr_opts_str = cmb.Text
   dvips_opts_str = ""
   If lpr_opts_str = "Default" Then
     lpr_opts_str = ""
   Else
     lpr_opts_str = Subst$("-P &1 ", lpr_opts_str)
   Endif
   If opts.Text <> "" Then
     coll = modPrinting.SplitOptions(opts.Text) 
     lpr_opts_str &= coll!lpr
     dvips_opts_str = coll!dvips
   Endif
   ' we can't use this filename as a parameter to lpr
   ' as in production system all application files
   ' are wrapped up in the executable file, only 
   ' gambas can read them
   fname = Temp$("example-print")
   f = Open fname & ".tex" For Write Create
   Print #f, File.Load("templates/testpage.tex")
   Close #f
   cmd = modUtil.FindProgram("latex", "texlive-latex-base")
   If IsNull(cmd) Then Return
   Inc Application.Busy
   cmd = "cd `dirname " & fname & "` ; " & cmd 
   cmd &= " \\\\nonstopmode\\\\input example-print.tmp.tex ; "
   cmd &= Subst$("dvips example-print.tmp.dvi &1 -o", dvips_opts_str)
   cmd &= Subst$(" '!lpr &1'", lpr_opts_str)
   Log.DebugMsg("Printing using command " & cmd)
   Shell cmd Wait
   Try Kill fname & ".tex"
   Try Kill fname & ".dvi"
   Try Kill fname & ".aux"
   Try Kill fname & ".log"
   Finally
     Dec Application.Busy
   Catch
     Message.Error(Error.Text, "OK")
End

Public Sub tbSave_Click()

   '--------------------------------------------------------
   'Save defaults for a room - at this stage - just printers
   '--------------------------------------------------------
   Settings.Clear("Printers")
   SavePrinterOptions(cmbPlain, tbPlain, "plain")
   SavePrinterOptions(cmbScript, tbScript, "script")
   SavePrinterOptions(cmbLong, tbLong, "long")
   SavePrinterOptions(cmbRequest, tbRequest, "request")
End

Private Sub SavePrinterOptions(cmb As ComboBox, opts As TextBox, printername As String)

  If cmb.Text = "Default" Then
    Settings[Subst$("Printers/&1", printername)] = Null
  Else
    Settings[Subst$("Printers/&1", printername)] = cmb.Text
  Endif
  
  If Trim$(opts.Text) <> "" Then
    Settings[Subst$("Printers/&1_options", printername)] = opts.Text
  Endif

End
