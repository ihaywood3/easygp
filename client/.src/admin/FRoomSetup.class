' Gambas class file

' Copyright (C) 2008-2012 Dr. Richard Terry, Dr. I Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
' A module to allow setting up of room preferences such as printers
'----------------------------------------------------------------------
Private allprinters As String[]
Private audios As Collection
Private Form_Help As FHtmlViewer
Private bExit As Boolean

Public Sub HSplit_ClinicRooms_Resize()
   
   VBox_EditArea_Outer.Width = VBox1.width 
   VBox_EditArea_Inner.width = VBox_EditArea_Outer.Width 
   
End

Public Sub Form_Resize()
   
   HSplit_ClinicRooms_Resize()
   
End

Public Sub form_Open()
   
   Init()
   
End

Public Sub Form_Show()
   
   HSplit_ClinicRooms_Resize()  
   
End

Public Sub form_Close()
   
   Settings_Save()
   
End

Public Sub Init()
   
   Dim s As String
   Dim i As Integer
   Dim sLastDeviceName As String
   
   With Form_Help = New FHtmlViewer(Vbox_Help)
      .tbWebBrowserZoomIn.Visible = True
      .tbWebBrowserZoomOut.Visible = True
      .WebView1.HTML = Temp_Help()
   End With
   allprinters = modPrinting.Printers_Load()
   audios = FDictaphone.GetSoundCards()
   For Each s In audios
      cmbAudioDevice.Add(audios.Key)
      If Len(audios.key) > Len(sLastDeviceName) Then
         sLastDeviceName = audios.Key
      Endif
   Next
   lblMeasure.text = "  Centrelink Medical Certificate  "
   modEditAreaHelpers.Resize_labels(VBox_EditArea_Inner, lblMeasure)
   i = cmbAudioDevice.Find(Settings["Audio/device", "Default"])
   Try cmbAudioDevice.Index = cmbAudioDevice.Find(i)
   bexit = True  'stop the combo-click event
   Printers_Reload()
   bexit = False
   Settings_Load()
   
End

Private Sub LoadPrinterOptions(cmb As ComboBox, opts As TextBox, printername As String)
   
   Dim i As String
   
   cmb.Clear
   cmb.Add("Default")
   For Each i In allprinters
      cmb.Add(i)
   Next
   cmb.Index = cmb.Find(Settings[Subst$("Printers/&1", printername), "Default"])
   opts.Text = Settings[Subst$("Printers/&1_options", printername), ""]
   
End

Public Sub Settings_Save()
   
   Settings["FRoomSetup/Help_Zoom"] = Form_Help.WebView1.Zoom
   Settings["FRoomSetup/HSplit_ClinicRooms.Layout"] = HSplit_ClinicRooms.Layout
   
End

Private Sub Settings_Load()
   'load settings, prevent edit area border going red with bEdit
   
   bexit = True
   Form_Help.WebView1.Zoom = Settings["FRoomSetup/Help_Zoom", 1.0]
   HSplit_ClinicRooms.Layout = Settings["FRoomSetup/HSplit_ClinicRooms.Layout", modUtilGUI.HSplit([655, 1019])]
   cmbAudioDevice.index = cmbAudioDevice.Find(Settings["Audio/device"])
  ' TxtCentrelinkVerticalOffset.text = Replace(Replace(Settings["FRoomSetup/Centrelink_Form_Vertical_Offset", 39.5], "-", ""), "mm", "") 'when used these will be negative numbers
  ' TxtCentrelinkHorizontalOffset.text = Replace(Replace(Settings["FRoomSetup/Centrelink_Form_Horizontal_Offset", 36], "-", ""), "mm", "") 'when used these will be negative numbers
   bexit = False  

End

Public Sub Printers_Reload()
   
   allprinters = modPrinting.Printers_Load() 
   LoadPrinterOptions(cmbPlain, tbPlain, "plain")
   LoadPrinterOptions(cmbScript, tbScript, "script")
   LoadPrinterOptions(cmbRequest, tbRequest, "request")
   
End

Public Sub tbTestPrinter_Click()
   
   Inc Application.Busy
   PrintTestPage(cmbPlain, tbPlain, "plain", Last.tag)
   PrintTestPage(cmbScript, tbScript, "script", Last.tag)
   PrintTestPage(cmbRequest, tbRequest, "request", Last.tag)
   Dec Application.Busy
   
End

Private Sub PrintTestPage(cmb As ComboBox, opts As TextBox, printername As String, tag As String)
   
   Dim lpr_opts_str As String
   Dim dvips_opts_str As String
   Dim cmd As String
   Dim f As File
   Dim fname As String
   Dim coll As New Collection
   
   If printername <> tag Then Return ' only do the clicked-on widget
   lpr_opts_str = cmb.Text
   dvips_opts_str = ""
   If lpr_opts_str = "Default" Then
      lpr_opts_str = ""
   Else
      lpr_opts_str = Subst$("-P &1 ", lpr_opts_str)
   Endif
   If opts.Text <> "" Then
      coll = modPrinting.SplitOptions(opts.Text)
      lpr_opts_str &= coll!lpr
      dvips_opts_str = coll!dvips
   Endif
   ' we can't use this filename as a parameter to lpr
   ' as in production system all application files
   ' are wrapped up in the executable file, only
   ' gambas can read them
   fname = Temp$("example-print")
   f = Open fname & ".tex" For Write Create
   Print #f, File.Load(modUtil.Find_File("templates/test-printing.tex"))
   Close #f
   cmd = modUtil.FindProgram("latex", "texlive-latex-base")
   If IsNull(cmd) Then
      Return
   Endif
   cmd = "cd `dirname " & fname & "` ; " & cmd
   cmd &= " \\\\nonstopmode\\\\input example-print.tmp.tex ; "
   cmd &= Subst$("dvips example-print.tmp.dvi &1 -o", dvips_opts_str)
   cmd &= Subst$(" '!lpr &1'", lpr_opts_str)
   Log.DebugMsg("Printing using command " & cmd)
   Shell cmd Wait
   Try Kill fname & ".tex"
   Try Kill fname & ".dvi"
   Try Kill fname & ".aux"
   Try Kill fname & ".log"
   
Catch
   Message.Title = "Error condition"
   Message.Error(Error.Text, "OK")
   
End

Private Sub SavePrinterOptions(cmb As ComboBox, opts As TextBox, printername As String)
   
   If cmb.Text = "Default" Then
      Settings[Subst$("Printers/&1", printername)] = Null
   Else
      Settings[Subst$("Printers/&1", printername)] = cmb.Text
   Endif
   
   If Trim$(opts.Text) = "" And If IsNull(Settings[Subst$("Printers/&1_options", printername)]) Then
      ' do nothing
   Else
      Settings[Subst$("Printers/&1_options", printername)] = opts.Text
   Endif
   
   '  Settings.Save()
   
End

Public Sub cmbAudioDevice_Click()
   
   Settings["Audio/device"] = cmbAudioDevice.Text
   
End

Public Sub tbTestSound_Click()
   
   FDictaphone.TestSound(cmbAudioDevice.Text)
   
End

Public Sub Save_Options()
   '--------------------------------------------------------
   'Save defaults for a room - at this stage - just printers
   '--------------------------------------------------------
   
   If bexit Then Return
   Settings.Clear("Printers")
   If cmbAudioDevice.index <> -1 Then
      Settings["Audio/device"] = cmbAudioDevice.Text
   End If
   SavePrinterOptions(cmbPlain, tbPlain, "plain")
   SavePrinterOptions(cmbScript, tbScript, "script")
   SavePrinterOptions(cmbRequest, tbRequest, "request")
   
End

Public Sub EditArea_ComboBox_Click()
   
   Save_Options() 
   
End

Public Sub bSave_Click()
   
   Save_Options() 
   Centrelink_Medical_Certificate_Forms_Save_Paper_Offsets
   Settings.Save
   EditArea_Nofify_Data_Change(False)
   
End

Public Sub EditArea_ToolButtons_Click()
   
   Select Last.tag
      Case "print centrelink"
         Centrelink_Medical_Certificate_Print
      Case "reload centrelink defaults"
         Centrelink_Medical_Certificate_Forms_Reload_Default_Paper_Offsets
   End Select
   
End

Private Sub Centrelink_Medical_Certificate_Forms_Reload_Default_Paper_Offsets()
   
   Dim R As Result
   
   R = modDBConnect.exec_query("Select * from admin.test_latex_templates where name = 'centrelink medical certificate'")
   If R.count Then
      TxtCentrelinkHorizontalOffset.text = Replace(Str(R!horizontal_offset), "-", "")
      TxtCentrelinkVerticalOffset.Text = Replace(Str(R!vertical_offset), "-", "")
   Endif
   EditArea_Nofify_Data_Change(True)
   
End 

Private Sub Centrelink_Medical_Certificate_Forms_Save_Paper_Offsets()
   
   Settings["FRoomSetup/Centrelink_Form_Vertical_Offset"] = "-" & TxtCentrelinkVerticalOffset.text & "mm"
   Settings["FRoomSetup/Centrelink_Form_Horizontal_Offset"] = "-" & TxtCentrelinkHorizontalOffset.text & "mm"
   
End

Private Sub Centrelink_Medical_Certificate_Print()
   'Do a test print of a centrelink medical certificate using current offsets
   'if user has selected the pre-printed form option in FStaffPreferencesClinical 
   
   Dim R As Result
   Dim Latex As String
   
   If modAdminDBI.Config_Get_Staff_Member("centrelink-form-use-pre-printed", False, Null, modDBConnect.currentUser!fk_clinic, modDBConnect.currentUser!fk_staff) Then
      Message.Title = "Centrelink Certificates - Test Print"
      If Message.Question("Please insert pre-formatted centrelink medical certificate paper into your printer", "Test Print?", "Cancel") = 2 Then Return
   Else
      Message.info("In your user preferences/clinical section you the current form option is not to use centrelink pre-printed forms.\n\nYou may change this at any time.", "Ok")
   Endif
   R = modDBConnect.exec_query("Select * from admin.test_latex_templates where name = 'centrelink medical certificate'")
   Latex = R!latex
   latex = Replace(latex, "!print-offset-horizontal", Trim(TxtCentrelinkHorizontalOffset.text) & "mm")
   latex = Replace(latex, "!print-offset-vertical", Trim(TxtCentrelinkVerticalOffset.text) & "mm")
   Print latex
   modPrinting.Print_latex(latex)
   
End

Public Sub tbRefreshPrinterList_Click()
   
   Printers_Reload
   
End

Public Function EditArea_TxtBox_ExcludeKeys(keycode As Integer, tag As String) As Boolean
   
   Dim bKeyValid As Boolean
   
   Select Case tag
      Case "centrelink vertical offset", "centrelink horizontal offset"
         bKeyValid = modUtilGUI.AllowKeys(const.AllowKeys_NumbersDecimal, Key.Code)
      Case Else
         bKeyValid = True
   End Select
   Return bKeyValid
   
End

Public Sub EditArea_TxtBox_KeyPress()
   
   Dim bKeyValid As Boolean
   
   bkeyvalid = EditArea_TxtBox_ExcludeKeys(key.code, Last.tag)
   If bkeyvalid = False Then
      Stop Event
      Return
   End If
   If Key.code = Key.Return Or Key.code = Key.Tab Then
      Select Case Last.tag
         Case "centrelink vertical offset"
            TxtCentrelinkHorizontalOffset.SetFocus
      End Select
   End If    
   
End

Public Sub EditArea_Nofify_Data_Change(flag As Boolean)
   
   If bexit Then Return
   If flag Then
      VBox_EditArea_Inner.width = VBox_EditArea_Outer.Width - 2
      VBox_EditArea_Outer.Padding = 1
   Else
      VBox_EditArea_Outer.Padding = 0
      VBox_EditArea_Inner.width = VBox_EditArea_Outer.Width
   End If
   
End

Public Sub EditArea_TxtBox_Change()
   
   EditArea_Nofify_Data_Change(True)
   
End

Public Function Temp_Help() As String
   
   Return ""
   "<html><head><title>Setting Defaults for Printers and Audio</title></head><body>"
   "<h2>Setting Defaults for Printers and Audio</h2>"
   "<p/>"
   "In this section you may tell EasyGP which printers are to be used for which particular task, and which audio device you would like to use for dictation etc.  Please test your printers to ensure they are working satisfactorily. Any choices you make will be automatically saved as they are selected."
   "<p/>"
   "Note that these default will be "
   "<i>computer specific</i>   i.e will apply to which ever printers are available on the machine you are running EasyGP. Should you move this machine to another room and re-attach different printers you will have to do the  setup again."
   "<p/>"
   "<b> Default Printer</b> <p/>"
   "This should be the printer in your room you wish to use to print plain paper documents, "
   " or the printer into which you may put a pre-printed form that EasyGP has the ability to print output to, for example the centrelink medical certificate."
   "<p/>"
   "<p/>"
   "<b>Script Printer</b> <p/>"
   "This will be the printer to which you send your prescriptions. Note that as pre-formatted prescription paper is required in Australia that this will usually be a dedicated printer."
   "<p/>"
   "<p/>"
   "<b>Request Printer</b> <p/>"
   "Note that requests in EasyGP for example for pathology or radiology testing are printed on plain paper, so you should ensure you select a plain paper printer - usually the Default printer on your system."
   "<p/>"
   "<b>Default Audio Device</b> <p/>"
   "This will be used during any dication see"
   "<a href=\"dictating-letters.html\">Dictating Letters</a><p/>"
   ""
   "<H2>Fine Tuning Text Position on Forms</H2>"
   "<P> Sometimes the co-ordinates built into EasyGP for printing forms may not be exactly the same as needed by your printer.<P>"
   "<P>The x-y co-ordinates where the text starts can be adjusted in millimeter increments (or 0.5mm) by "
   "changing the vertical and horizontal offset values listed next to the apppropriate forms listed. This way you can more the output up, down "
   "left or right, so that what gets printed on your page lines up better with the underlying pre-printed forms or the supplied electronic pdf "
   "version of your forms."
   "At the moment, only the centrerlink medical form is listed.<P>"
   "<UL><LI><B>To move the text to the left hand side of a page </B> select the Horizontal Offset. The more -ve the number "
   "the closer the output will be to the left hand side of the A4 page"
   "<LI><B>To start the text closer to the top of the page</B> select the Vertical Offset. The more -ve the number "
   "the closer the output will be to the top of the A4 page."
   "</UL>"
   "</body></html>" 
   
End
