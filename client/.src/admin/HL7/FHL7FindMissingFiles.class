' Gambas class file

' Copyright (C) 2008-2014 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'-----------------------------------------------------------------------------
'PURPOSE          A Utility for me to find 'lost' Hl7 files on my hard drive
'HOW THIS WORKS   User selects a directory, files in this are compared to
'                 files in the documents directory, and any files not in the
'                 database are listed for the user to action.
'CAVEAT           Files in list are not checked to be genuine hl7 files FIXME
'                 As the database gets 'huge' this will be very slow
'                 I put this in just for me as I 'lost' a lot of files during
'                 development and I needed to 'find' them again.
'-----------------------------------------------------------------------------
Private files_in_dir As String[]
Private Files_in_DB As Collection 
Private Form_Help As FHtmlViewer


Public Sub Init()
   
   Dirchooser2.Root = User.home
    
   With Form_Help = New FHtmlViewer(Vbox_Help)
       .Parent_Form_Set("HL7Files")
       .Help_Show("help/checking-for-missing-hl7-files.html")
   End With
   Settings_Load()

End


Public Sub Compare_DirFiles_To_DatabaseFiles()
   
   Dim sFile As String 
   Dim files_found As Integer
   
   Inc Application.Busy
   Reset()
   GetDBFiles()                                                   'collection of all unique files imported
   files_in_dir = Dir(Dirchooser2.SelectedPath)                   'string[] of all files in the directory
   For Each sFile In files_in_dir                                'for each file in the directory in the directory view
      If Not IsDir(Dirchooser2.SelectedPath & "/" & sFile) Then  'if not a directory
         If Not Files_in_DB.Exist(sFile) Then                    'if it dosn't exist in the files list in the Db
            lvwMissingFiles.Add(sfile, sFile)                          'display to the user
            Inc files_found
            lblNotInDatabase.text = "Files Not In Datatabase (" & Str(files_found) & ")"
            Wait
         Endif
      End If
   Next
   Dec Application.Busy
   'FIXME
   If files_found = 0 Then Message.info("All files in this directory have been imported into EasyGP Documents")
   
End

Public Sub GetDBFiles()
   
   Dim R As Result
   Dim x As Integer

   Inc Application.Busy  
   R = modHL7AuditDBI.HL7FilesNames_GetImported_RT()
   
   If R.count Then 
      Files_in_DB = New Collection 
      For Each R
         Files_in_DB.Add(R!source_file, R!source_file) ' source_file is the key
         Inc x
      Next
   End If
   Dec Application.Busy
End

Public Sub Settings_Save()

   Settings["FH7FindMissingFiles/Hsplit_Main.layout"] = HSplit_Main.Layout
   Settings["FH7FindMissingFiles/VSplit_Right.layout"] = VSplit_Right.Layout
   Settings["FH7FindMissingFiles/Form_Help_zoom"] = Form_Help.WebView1.Zoom

End

Public Sub Settings_Load()

   HSplit_Main.Layout = Settings["FH7FindMissingFiles/Hsplit_Main.layout", modUtilGUI.HSplit([842, 841])]
   VSplit_Right.Layout = Settings["FH7FindMissingFiles/VSplit_Right.layout", modUtilGUI.VSplit([681, 223])]
   Form_Help.WebView1.Zoom = Settings["FH7FindMissingFiles/Form_Help_zoom", 1.0]
   lvwMissingFiles.font = Font[Settings["FH7FindMissingFiles/lvwMissingFiles.font", "DejaVu Sans,9"]]
End


Public Sub DirChooser2_Activate()
   
   Search

End

Public Sub Search()
   '------------------------------------------------------------------------------------------------
   'Starts the search to compare local or network hl7 files to those  we have imported into database
   '------------------------------------------------------------------------------------------------  
   txtCurrentDirectory.text = DirChooser2.SelectedPath
   txtCurrentFile.text = ""
   lvwMissingFiles.Clear()
   Compare_DirFiles_To_DatabaseFiles()
   
End

Public Sub Files_Manipulate(action As String, lvw As ListView, Optional bAllFiles As Boolean = False)
   
   Dim x As Integer
   Dim incoming_hl7_dir As String = ModAdminDBI.Config_Get("hl7_incoming_directory", "/var/lib/easygp/hl7/incoming")
   
   lvw.MoveFirst()
   For x = 0 To lvw.Count - 1
      If lvw.Item.Selected = True Or bAllFiles Then
          If action = "move" Then 
            Try Move DirChooser2.SelectedPath &/ lvw.Item.key To incoming_hl7_dir &/ lvw.Item.Key
            If Error Then Message.info("Error whilst moving file\n\n" & Error.text)
         End If
         If action = "copy" Then
            Try Copy DirChooser2.SelectedPath & "/" & lvw.Item.key To incoming_hl7_dir &/ lvw.Item.Key
            If Error Then Error Message.info("Error whilst coying file\n\n" & Error.text)
         Endif
      End If
      lvw.MoveNext()
   Next
   DirChooser2_Activate() 'reload

End

Public Sub mnFilesNotImported_Click()
   
   lvwMissingFiles.MoveCurrent
   If IsNull(lvwMissingFiles.Item) Then Return 
   Select Case Last.tag
      Case "move selected"
         Files_Manipulate("move", lvwMissingFiles)
      Case "move all"
         Files_Manipulate("move", lvwMissingFiles, True)
      Case "delete"
         Delete_File(DirChooser2.SelectedPath &/ lvwMissingFiles.Item.key)
      Case "copy selected"
         Files_Manipulate("copy", lvwMissingFiles)
      Case "copy all"
         Files_Manipulate("copy", lvwMissingFiles, True)
      Case "help"
         modUtilGUI.NotImplemented("Help for this section")
      Case "font"
         modUtilGUI.Listview_SetFont(lvwMissingFiles, "FHL7FindMissingFiles")
   End Select

End

Public Sub Delete_File(filepath As String)

   If Message.Warning("Are you sure you want to delete this file?", "Yes", "No") = 2 Then Return 
   Try Kill modUtil.filepath_fix_Blanks(Filepath)
   
   If Error Then
      Message.Info("Unable to delete the file - an error occurred")
   Endif
   DirChooser2_Activate()

End

Public Sub lvwMissingFiles_Select()
   
   txtCurrentFile.text = lvwMissingFiles.Item.text
   
End

Public Sub lvwMissingFiles_Menu()
   
   If lvwMissingFiles.count Then mnFilesNotImported.Popup
   
End

Public Sub tbStartSearch_Click()
   
   Search
   
End

Public Sub DirChooser2_Change()
   
   txtCurrentDirectory.text = Last.SelectedPath
   Reset
   
End

Public Sub Reset()
  
  lblNotInDatabase.text = "Files Not In Datatabase"
  lvwMissingFiles.Clear()
  
End
