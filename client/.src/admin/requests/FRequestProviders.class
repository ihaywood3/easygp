' Gambas class file

' A Module to keep list of what companies can be involved with what requests
' E.G South Coast Pathology would be involved with pathology requesting e.g FBC
'     North Coast Imaging   would be involved with imaging requests e.g CXR
'
' This form is plugged into FAdmin on the main tab
'-------------------------------------------------------------------------------
Private FHelp As FHtmlViewer 
Private bExit As Boolean
Private Type_Request_Provider As Integer
Private Organisations As Collection 
Private branches As Collection 
Private member As Collection 
Private fk_default_branch As Variant                 'branch_key or the organisation head office
Private fk_headoffice_branch As Variant 
Private fk_organisation As Variant
Private fk_person As Variant
Private fk_address_person As Variant
Private fk_employee As Variant
Private fk_request_provider As Variant             'null if new provider
Private RequestTypes As Collection 
Private RequestType As Collection 
Private RequestProviders As Collection
Private RequestProvider As Collection 
Private persons As Collection
Private person As Collection
Private cvwRequestProviders_Key As Variant

Static Private form_request_providers As FRequestProviders

Public Sub Form_Show()
   
   form_request_providers = Me
   Try Init()
   
End

Public Sub Form_Close()
   
   Settings_Save()
   
End

Static Public Sub Update_From_Contacts()
   
   form_request_providers.Reload 
   
End

Public Sub Init()
   
   RequestTypes = modUtilGUI.LoadCombo(cmbRequesttypes, modRequestsDBI.RequestTypes_Get(), "type")
   For Each RequestType In RequestTypes 
      lvRequestTypes.Add(RequestType!pk, RequestType!type)
   Next
   lvRequestTypes.MoveFirst()
   lvRequestTypes.Item.Selected = True
   lvRequestTypes.SetFocus()
   With cvwRequestProviders
      .Columns.count = 4
   End With
   columnview1.columns.Count = 3
   With FHelp = New FHtmlViewer(Vbox_Help)
      .tbWebBrowserZoomIn.Visible = True   
      .tbWebBrowserZoomOut.Visible = True   
   End With
   Settings_Load()
   rbTypeSender_Organisation.Value = True 
   Type_Request_Provider = const.contacttype_organisation
   FHelp.Help_Show("setting-up-request-providers.html")
   lblMeasure.text = " Set As Users Default "
   modEditAreaHelpers.Resize_labels(VBox_EditArea, lblMeasure)
   modEditAreaHelpers.Fill_Combo_Sex(cmbSex)
   modEditAreaHelpers.Fill_Combo_Titles(cmbtitle)
   
End

Public Sub lvRequestTypes_Select()
   
   lvRequestTypes.MoveCurrent()
   VBox_EditArea_Outer.Enabled = False  'no data change unless explicitly edited
   cmbRequesttypes.index = cmbRequesttypes.Find(lvRequestTypes.item.text)
   Reload()
   
End

Public Sub Settings_Save()
   
   Settings["FRequestProviders/HSplit_Request_Defaults.layout"] = HSplit_Request_Defaults.layout
   Settings["FRequestProviders/Vsplit_Main.layout"] = VSplit_Main.layout
   Settings["FRequestProviders/HSplit_Main.layout"] = HSplit_Main.layout
   Settings["FRequestProviders/FHelp_zoom"] = FHelp.WebView1.Zoom 
   
End

Private Sub Settings_Load()
   
   VSplit_Main.layout = Settings["FRequestProviders/Vsplit_Main.layout", modUtilGUI.VSplit([0, 271, 657])] 
   HSplit_Request_Defaults.layout = Settings["FRequestProviders/HSplit_Request_Defaults.layout", modUtilGUI.HSplit([178, 673])]
   HSplit_Main.layout = Settings["FRequestProviders/HSplit_Main.layout", modUtilGUI.HSplit([852, 851])] 
   FHelp.WebView1.Zoom = Settings["FRequestProviders/FHelp_zoom", 1.0]
   cvwRequestProviders.font = Font[Settings["RequestProviders/cvwRequestProviders.font", "DejaVu Sans,9"]]
   lvRequestTypes.font = cvwRequestProviders.Font
   
End

Public Sub EditArea_TextBox_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)  
   Select Case Last.tag
      Case "find"
         With listview2
            .top = Last.parent.parent.top + Last.parent.height
            .left = Last.parent.Left
            .Raise
            .width = Last.width
         End With
         With columnview1
            .top = Last.parent.parent.top + Last.parent.height 
            .left = Last.parent.Left
            .Raise
            .width = Last.width
         End With
   End Select
   
End

Public Sub Reset_Keys()
   '--------------------------------------------------------------------------  
   'resets the keys when this form being used for allocating scanned documents
   '--------------------------------------------------------------------------
   
   fk_organisation = Null
   fk_person = Null
   fk_address_person = Null 'not implemented fixme
   fk_employee = Null
   fk_headoffice_branch = Null
   fk_default_branch = Null
   fk_request_provider = Null
   
End

Public Sub Type_Sender_Click()
   
   If bExit Then Return 
   RequestProvider_New()
   
End

Public Sub EditArea_TextBox_KeyRelease()
   
   Select Case Last.tag
      Case "find"
         Select Case Type_Request_Provider
            Case const.contacttype_organisation
               Organisation_Get()
            Case const.contacttype_patient, const.contacttype_person
               Timer1.start()
         End Select
   End Select
   
End

Public Sub Organisation_LostFocus()
   
   Last.pos = 1
   Last.BackGround = Color.white
   
End 

Public Sub Organisation_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)  
   With listview2 'fixme rename me
      .Visible = False   
      .Clear()
      .top = Last.parent.top + Last.height 
      .width = Last.width
      .Raise
   End With
   
End

Public Sub Organisation_Get()
   '---------------------------------------------------------------
   'Get a list or organisations and their branches like search text
   '---------------------------------------------------------------
   
   Dim sMsg As String 
   Dim x As Integer
   
   With listview2
      .Visible = False  
      .Clear
   End With
   If Trim(txtFind.text) = "" Then Return 
   Organisations = modMetaData.Organisations_Fill_Popup_List(listview2, txtFind) 'zero based collection
   '-----------------------------------------------------------------
   'If categories exist to match the text, auto-select or show a list
   '-----------------------------------------------------------------
   If Organisations.count Then 
      listview2.Clear()
      For Each Member In Organisations
         sMsg = Member!organisation & " " & Member!branch & " " 
         sMsg &= Trim(Member!street1 & " " & Member!street2) & " " & Member!town & " " & Member!postcode 
         listview2.Add(x, sMsg) '
         Inc x
      Next
      listview2.Visible = True
      Select Case Type_Request_Provider
         Case const.contacttype_organisation
            listview2.tag = txtOrganisation
         Case const.contacttype_person
            listview2.tag = txtPersonSurname
      End Select
   Else
      listview2.Visible = False   
   End If
   
End

Public Sub EditArea_TextBox_Change()
   
   If Bexit Then Return 
   Select Case Last.tag
      Case "find"
         If Trim(Last.text) = "" Then
            EditArea_Clear()
            txtFind.SetFocus()
         Endif
   End Select
   EditArea_Notify_DataChange(True)
   
End

Public Sub EditArea_Notify_DataChange(flag As Boolean)
   
   If flag Then
      With tbAccept
         .text = "Save Changes"
         .Foreground = Color.Red
      End With
      VBox_EditArea_Outer.Padding = 1
   Else
      With tbAccept
         .text = "Save"
         .Foreground = Color.Black
      End With
      VBox_EditArea_Outer.Padding = 0
   Endif
   
End

Public Sub EditArea_TextBox_KeyPress()
   
   Select Case Last.tag
      Case "find"
         Select Case Key.Code
            Case Key.Down
               If listview2.Visible = True Then
                  listview2.MoveFirst()
                  listview2.Item.Selected = True
                  listview2.SetFocus()
               Endif
               If columnview1.Visible = True Then
                  columnview1.MoveFirst()
                  columnview1.Item.Selected = True
                  columnview1.SetFocus()
               Endif
         End Select
   End Select
   
End

Public Sub listview2_KeyPress()
   
   If key.code = key.return Then
      Listview2_DblClick()
   End If
   
End

Public Sub listview2_DblClick()
   
   Listview2.MoveCurrent
   Select Case Last.tag.tag
         ' Case "employee"
         '    Organisation_Select()
      Case "organisation"
         Organisation_Select()
   End Select
   
End

Public Sub Organisation_Select()
   '---------------------------------------------------------------
   'User is adding a new organisation, is selecting from popup list
   '--------------------------------------------------------------- 
   
   listview2.MoveCurrent
   RequestProvider = Organisations[listview2.item.key]
   listview2.Visible = False
   Organisation_Display()
   cmbBranches.Enabled = True
   cmbBranchesDefault.Enabled = True
   Print HBox_Org_Branch.Enabled
   Print Hbox_Default_branch.Enabled 
   tbAccept.SetFocus()
Catch
   
   Return  
   
End

Public Sub Organisation_Display()
   '------------------------------------------------------------------------------------
   'Displays an organisation
   'The collection either comes from contacts.vwOrganisationsEmployees if a new provider
   'in which case there will be no fields fro default_branch 
   'or clin_requests.vwRequestProviders if viewing an already saved record.
   '------------------------------------------------------------------------------------
   
   bExit = True
   fk_organisation = RequestProvider!fk_organisation
   branches = modUtilGUI.LoadCombo(cmbBranches, modContactsDBI.Branches_Get_For_Organisation(fk_organisation), "branch")
   branches = modUtilGUI.LoadCombo(cmbBranchesDefault, branches, "branch")
   
   fk_employee = RequestProvider!fk_employee
   If Not IsNull(fk_employee) Then  
      txtOrganisationEmployeee.text = RequestProvider!wholename
   End If   
   txtOrganisation.text = RequestProvider!organisation
   fk_default_branch = RequestProvider!fk_default_branch 'dosn't exist new record
   If IsNull(fk_default_branch) Then
      cmbBranchesDefault.index = -1
   End If    
   fk_headoffice_branch = RequestProvider!fk_headoffice_branch
   If IsNull(fk_headoffice_branch) Then
      fk_headoffice_branch = RequestProvider!fk_branch
      txtBranch.text = RequestProvider!branch
      txtstreet1.text = RequestProvider!street1
      txtstreet2.text = RequestProvider!street2
      txtsuburbOrganisation.text = RequestProvider!town & " " & RequestProvider!state & " " & RequestProvider!postcode
      cmbBranches.index = cmbBranches.Find(RequestProvider!branch)
   Else 
      txtBranch.text = RequestProvider!default_branch
      txtstreet1.text = RequestProvider!default_branch_street1
      txtstreet2.text = RequestProvider!default_branch_street2
      txtsuburbOrganisation.text = RequestProvider!default_branch_town & " " & RequestProvider!default_branch_state & " " & RequestProvider!default_branch_postcode
      cmbBranches.index = cmbBranches.Find(RequestProvider!headoffice_branch)
      cmbBranchesDefault.index = cmbBranchesDefault.Find(RequestProvider!default_branch)
   Endif
   txtOrganisationCategory.text = RequestProvider!category
   Try chkHeadOffice.value = RequestProvider!head_office 
   Try chkStaffDefault.value = RequestProvider!staff_default
   '----------------------------------------------
   'load branches for this provider into the combo
   '----------------------------------------------
   ' If IsNull(RequestProvider!fk_default_provider)
   '    cmbBranches.index = cmbBranches.Find("HEAD OFFICE")
   ' Else
   ' End If 
   lblHeading.Visible = False  
   bExit = False  
   
End

Public Sub EditArea_Clear()
   
   bExit = True
   modEditAreaHelpers.EditArea_Clear(VBox_EditArea)
   lblHeading.text = ""
   EditArea_Notify_DataChange(False)
   bExit = False  
   listview2.Visible = False  
   columnview1.Visible = False   
   
End

Public Sub EditArea_Buttons_Click()
   
   Select Case Last.tag
      Case "save"
         Save()
      Case "add new"
         RequestProvider_New()
   End Select
   
End

Public Sub Save()
   '-----------------------------------------------------------------------
   'Save nominated company/person/employee as a someone to send requests to
   'the fk_branch = the default branch, not the organisation head office.
   'If staff have no default for this type of request then add one for them
   'fixme at some point convert all to crow  
   '  FIXME - will later need to add to FRequestProviders the flags
   '  like system wide send electronicallye etc
   '  currently still have to be set by user but default to print
   '-----------------------------------------------------------------------
   
   Dim RequestProvider As New Crow 
   Dim sql As String
   Dim R As Result
   Dim user_provider_default As CRow   
   Dim staff As Collection
   Dim staff_member As Collection
   
   If VBox_EditArea_Outer.Padding = 0 Then Return     'no padding = no changes
   If Not Request_Provider_Valid() Then Return        'invalid data = no changes
   '-------------------------------------------------------------------------------
   'now  if admin is making this type of request + this provider the staff default
   'set to False any other requestprovider of this type for this fk_lu_request_type
   'otherwise, check they have made at least one of this type a default if they
   'have left the chkStaffDefault False
   '-------------------------------------------------------------------------------
   If chkStaffDefault.value = True Then
      modDBConnect.exec_query("update clin_requests.request_providers set staff_default = False where fk_lu_request_type =" & RequestTypes[cmbRequesttypes.Index]!pk)
   Else
      R = modDBConnect.exec_query("Select * from  clin_requests.request_providers where  fk_lu_request_type =" & RequestTypes[cmbRequesttypes.Index]!pk & " AND staff_default is True")
      If R.count = 0 Then
         chkStaffDefault.value = True 'make this one the default, but do tell the user
         Message.Title = "Default provider for " & cmbRequesttypes.text
         Message.Info("The Admin user when adding providers for request types should always ensure that at least one provider is set as the staff default.\n\n"
         "The reason for this is that when new staff members are added, though they can at a later date choose their own default provider "
         "they will be automatically allocated the default that the Admin user has allocated.\n\n"
         "Accordingly this provider will be made the default for staff until the Admin User chooses to change it.")
      Endif
   Endif
   '--------------------------------------------------------------
   ' Now save the request provider
   '--------------------------------------------------------------
   ' CREATE TABLE clin_requests.request_providers
   ' (
   '   pk serial NOT NULL,
   '   fk_headoffice_branch integer,
   '   fk_employee integer,
   '   fk_person integer,
   '   fk_lu_request_type integer NOT NULL,
   '   deleted boolean DEFAULT false,
   '   fk_default_branch integer,
   '   staff_default boolean DEFAULT false, -- if True then this provider is the default for staff who have no current default in user_provider_defaults....
   '   CONSTRAINT request_providers_pkey PRIMARY KEY (pk),
   '   CONSTRAINT request_providers_fk_default_branch_fkey FOREIGN KEY (fk_default_branch)
   '       REFERENCES contacts.data_branches (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT request_providers_fk_employee_fkey FOREIGN KEY (fk_employee)
   '       REFERENCES contacts.data_employees (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT request_providers_fk_headoffice_branch_fkey FOREIGN KEY (fk_headoffice_branch)
   '       REFERENCES contacts.data_branches (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT request_providers_fk_lu_request_type_fkey FOREIGN KEY (fk_lu_request_type)
   '       REFERENCES clin_requests.lu_request_type (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT request_providers_fk_person_fkey FOREIGN KEY (fk_person)
   '       REFERENCES contacts.data_persons (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION
   ' )
   ' WITH (
   '   OIDS=FALSE
   ' );
   '-------------------------------------------------------------
   RequestProvider = New CRow
   If Not IsNull(fk_request_provider) Then
      RequestProvider.put_unchanged(fk_request_provider, "fk_request_provider")
   Endif
   RequestProvider!fk_headoffice_branch = fk_headoffice_branch
   RequestProvider!fk_employee = fk_employee
   RequestProvider!fk_person = fk_person
   RequestProvider!fk_lu_request_type = RequestTypes[cmbRequesttypes.Index]!pk
   RequestProvider!fk_default_branch = fk_default_branch
   RequestProvider!staff_default = CBool(chkStaffDefault.value)
   RequestProvider.Save("clin_requests.request_providers", "fk_request_provider")
   
   '--------------------------------------------------------------------------------------------------
   'now, do all the users who have appropriate access level (read now only doctors till I change this) 
   'have an entry in clin_requests.user_provider_defaults?, if not, then add it
   'User can change this later
   '--------------------------------------------------------------------------------------------------
   ' CREATE TABLE clin_requests.user_provider_defaults
   ' (
   '   pk serial NOT NULL,
   '   fk_staff integer NOT NULL, -- key to admin.staff table ie describes the user
   '   fk_request_provider integer, -- foreign key to clin_requests.requests_provideris which ultimately will point to contact details of person/employee or organisation...
   '   send_electronically boolean DEFAULT false,
   '   print_paper boolean DEFAULT true,
   '   deleted boolean DEFAULT false,
   '   fk_lu_request_type integer NOT NULL,
   '   CONSTRAINT user_provider_defaults_pkey PRIMARY KEY (pk),
   '   CONSTRAINT user_provider_defaults_fk_lu_request_type_fkey FOREIGN KEY (fk_lu_request_type)
   '       REFERENCES clin_requests.lu_request_type (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT user_provider_defaults_fk_request_provider_fkey FOREIGN KEY (fk_request_provider)
   '       REFERENCES clin_requests.request_providers (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT user_provider_defaults_fk_staff_fkey FOREIGN KEY (fk_staff)
   '       REFERENCES admin.staff (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION
   ' )
   ' WITH (
   '   OIDS=FALSE
   ' );
   ' This doesn't take into acount th staff status but probably doesn't matter. ie if left who cares
   '---------------------------------------------------------------------------------------------------
   staff = modDBConnect.exec_query_collection("Select * from admin.staff where fk_role = " & const.StaffRole_Doctor)  'may have to add nurses (!!!) later
   For Each staff_member In staff
      sql = "Select * from clin_requests.user_provider_defaults where fk_lu_request_type = " & RequestProvider!fk_lu_request_type
      sql &= " AND fk_staff = " & staff_member!pk
      R = modDBConnect.exec_query(sql)                 'does the staff member(doctor) already have a default provider for this request type?
      If R.count = 0 Then                              'no?
         user_provider_default = New CRow              'then add one
         user_provider_default!fk_staff = staff_member!pk
         user_provider_default.fk_default_branch_user = fk_default_branch
         user_provider_default!fk_lu_request_type = RequestProvider!fk_lu_request_type
         user_provider_default!fk_request_provider = RequestProvider!fk_request_provider
         user_provider_default.Save("clin_requests.user_provider_defaults", "fk_user_provider_default")
      End If 
   Next
   modDBConnect.CommitTrans()
   Reload()
   EditArea_Clear()
   
End

Public Sub Reload()
   '---------------------------------------------
   'Displays all the providers for a request type
   '---------------------------------------------   
   
   Dim x As Integer
   
   With cvwRequestProviders
      .Columns.count = 4
   End With
   lvRequestTypes.MoveCurrent()
   lblCompanies.text = "Providers for " & Lower(lvRequestTypes.Item.text) & " requests"                'tell user what type
   RequestProviders = modUtil.Copy_Collection_Keyed_Sequentially(modRequestsDBI.Request_Providers_Get(lvRequestTypes.Item.key))                  'refresh providers for that type
   cvwRequestProviders.Clear()
   For Each RequestProvider In RequestProviders                                                        'reload the types list
      ' x = RequestProvider!pk_request_provider
      cvwRequestProviders.Add(x, 0)
      If RequestProvider!staff_default Then
         cvwRequestProviders[x][0] = "Default"
      Else
         cvwRequestProviders[x][0] = ""
      End If      
      '----------------------------------------------------------------------------------------------
      'Now, a provider can be an organisation/person/employee or patient ' latter two not implemented
      '----------------------------------------------------------------------------------------------
      If Not IsNull(RequestProvider!fk_person) Then
         cvwRequestProviders[x][1] = RequestProvider!title & " " & RequestProvider!firstname & " " & RequestProvider!surname
      Else
         cvwRequestProviders[x][1] = RequestProvider!organisation ' & " [" & RequestProvider!default_branch & " ]" 
      End If   
      cvwRequestProviders[x][2] = RequestProvider!default_branch
      cvwRequestProviders[x][3] = Trim(RequestProvider!default_branch_street1 & " " & RequestProvider!default_branch_street2) & " " & RequestProvider!default_branch_town
      Inc x
   Next
   If cvwRequestProviders.count Then
      With cvwRequestProviders
         .MoveFirst
         .SetFocus
         .Item.Selected = True   
      End With      
   Endif
   modUtilGUI.Columnview_Columns_Set_Size(cvwRequestProviders, lblMeasure)
   
End

Public Sub Reload_Old()
   '---------------------------------------------
   'Displays all the providers for a request type
   '---------------------------------------------   
   
   Dim x As Integer
   
   lvRequestTypes.MoveCurrent()
   lblCompanies.text = "Providers for " & Lower(lvRequestTypes.Item.text) & " requests"                'tell user what type
   RequestProviders = modUtil.copymodRequestsDBI.Request_Providers_Get(lvRequestTypes.Item.key)                    'refresh providers for that type
   cvwRequestProviders.Clear()
   For Each RequestProvider In RequestProviders                                                        'reload the types list
      x = RequestProvider!pk_request_provider
      cvwRequestProviders.Add(x, 0)
      If RequestProvider!staff_default Then
         cvwRequestProviders[x][0] = "Default"
      Else
         cvwRequestProviders[x][0] = ""
      End If      
      '----------------------------------------------------------------------------------------------
      'Now, a provider can be an organisation/person/employee or patient ' latter two not implemented
      '----------------------------------------------------------------------------------------------
      If Not IsNull(RequestProvider!fk_person) Then
         cvwRequestProviders[x][1] = RequestProvider!title & " " & RequestProvider!firstname & " " & RequestProvider!surname
      Else
         cvwRequestProviders[x][1] = RequestProvider!organisation & " [" & RequestProvider!default_branch & " ]" 
      End If   
      cvwRequestProviders[x][2] = Trim(RequestProvider!default_branch_street1 & " " & RequestProvider!default_branch_street2) & " " & RequestProvider!default_branch_town
   Next
   If cvwRequestProviders.count Then
      With cvwRequestProviders
         .MoveFirst
         .SetFocus
         .Item.Selected = True   
      End With      
   Endif
   
End

Public Sub cmbRequestTypes_Click()
   
   ' Dim x As Integer
   Print
   ' lvRequestTypes.MoveFirst
   ' For x = 0 To lvRequestTypes.count - 1
   '    If lvRequestTypes.Item.text = cmbRequesttypes.Text Then
   '       
   '       lvRequestTypes.Item.Selected = True
   '       lvRequestTypes.SetFocus()
   '       Break
   '    Else
   '       lvRequestTypes.MoveNext
   '    Endif
   '    
   ' Next
   EditArea_Notify_DataChange(True)
   
End

Public Function Request_Provider_Valid() As Boolean
   '------------------------------------------
   'Valid providers may not be an organisation
   '------------------------------------------
   
   Dim sMsg As String
   
   Message.title = "Default Providers"
   If IsNull(fk_default_branch) And IsNull(fk_person) Then
      sMsg = "Please select a default branch for this provider."
      Goto ShowMissing
   Endif
   If IsNull(fk_headoffice_branch) Then
      If IsNull(fk_person) Then
         sMsg = "Please select the head office branch for this organisation to whom you will be sending the request."
         Goto ShowMissing
      End If
   End If
   If IsNull(fk_person) Then
      sMsg = "Please select the person to whom you will be sending the request." 
   Endif
   Return True
   
ShowMissing:
   Message.Info(sMsg)
   Return False
   
End

Public Sub EditArea_Buttons_KeyPress()
   
   Select Case Last.tag
      Case "save"
         Save()
      Case "clear"
         EditArea_Clear()
   End Select
   
End

Public Sub cvwRequestProviders_Menu()
   
   If Last.count Then mnuRequestProviders.Popup()
   
End

Public Sub mnuRequestProviders_Click()
   
   Select Case Last.tag
      Case "edit"
         RequestProvider_Edit()
      Case "remove"
         RequestProvider_Delete()
      Case "help"
         modUtilGUI.NotImplemented("Help for this section")
      Case "font"
         modUtilGUI.Columnview_SetFont(cvwRequestProviders, "FRequestProviders")
   End Select
Catch
   Return   
   
End

Public Sub RequestProvider_Delete()
   
   Dim R As Result
   Dim sql As String
   Dim sMsg As String
   
   Message.Title = "Deleting a Request Provider" 
   sql = "Select * from clin_requests.forms where fk_request_provider = " & RequestProvider!pk_request_provider
   R = modDBConnect.exec_query(sql) 
   If R.count = 0 Then                            'no request forms printed yet
      sql = "Select * from clin_requests.user_provider_defaults where fk_request_provider = " & RequestProvider!pk_request_provider
      R = modDBConnect.exec_query(sql)
      If R.count <> 0 Then                       'staff members have selected this company/person/employee as a default provider
         sMsg = "Though no request forms have yet been printed for this provider, there are staff members who have selected this " 
         "provider.\n\nYou should probably check this with all your staff, however the record can still be deleted."
         Message.Info(sMsg)
         Goto Delete_Provider
      Endif
   Else 
      Message.Info("EasyGP cnnot delete this request provider as  you  have already printed request forms in their name.")
      Return
   Endif
   
   'ok, there are no request forms using this provider key
Delete_Provider:
   If modDBConnect.update("clin_requests.request_providers", Null, ["pk": RequestProvider!pk_request_provider, "deleted": True]) Then
      modDBConnect.CommitTrans
   Else
      Message.Info("An error occurred whilst attempting to delete this Request Provider")
   Endif
   Reload()
   
End

Public Sub RequestProvider_New()
   
   Layout_screen()
   
   lblHeading.text = "Add New Entity to Send Requests"
   lblHeading.Foreground = Color.red
   Vbox_EditArea_Outer.Enabled = True 
   With cmbBranches
      .Clear
      .index = -1
      .Enabled = False
   End With
   With cmbBranchesDefault
      .Clear
      .index = -1
      .Enabled = False  
   End With  
   branches = New Collection
   txtFind.SetFocus()
   
End

Public Sub Data_Input_Make_Visible(flag As Boolean)
   
   Dim hCtrl As Control
   'Makes all textboxes etc related to organisation search visible
   For Each hCtrl In Vbox_EditArea.Children
      If hctrl Is Hbox Then
         If hctrl.tag = "organisation" Then
            hctrl.Visible = flag 
         Else If hctrl.Tag = "person" Then 
            hctrl.Visible = Not Flag 
         End If   
      End If    
   Next
   
End

Public Sub Layout_screen()
   
   EditArea_Clear()                                      'clear all editing areas
   Reset_Keys()
   
   If rbTypeSender_Organisation.value = True Then
      ' Hbox_Org_Branch.enabled = True
      ' HBox_Default_Branch.enabled = True
      Type_Request_Provider = const.contacttype_organisation
      Data_Input_Make_Visible(True)
   End If
   ' If rbTypeSender_Employee.Value = True Then
   '    Type_Request_Provider = const.contacttype_employee
   '    Data_Input_Make_Visible(True)
   '    txtOrganisationEmployee.Enabled = True   
   ' Endif
   ' If rbTypeSender_Patient.Value = True Then 
   '    Type_Request_Provider = const.contacttype_patient
   '    Data_Input_Make_Visible(False)
   ' End If  
   If rbTypeSender_Person.Value = True Then 
      Type_Request_Provider = const.contacttype_person
      Data_Input_Make_Visible(False)
      '   Hbox_Org_Branch.enabled = False
      '   HBox_Default_Branch.enabled = False
      
   End If
   
End

Public Sub RequestProvider_Display()
   
   EditArea_Clear()                                     'Clear input area
   RequestProvider = RequestProviders[cvwRequestProviders_Key]
   If Not IsNull(RequestProvider!fk_person) Then 
      bExit = True    
      rbTypeSender_Person.Value = True    'otherwise get re-entry into layout_screen()
      bExit = False  
      Layout_screen()                     'change screen display for persons, re-set all keys
      Person_Display(RequestProvider)
   Else
      bExit = True  
      rbTypeSender_Organisation.value = True 
      bExit = False    
      Layout_screen()                     'change screen display for organisations, reset all keys
      Organisation_Display()
   Endif
   bExit = True   
   chkStaffDefault.value = RequestProvider!staff_default
   bExit = False 
   VBox_EditArea_Outer.Enabled = False     'no data change unless explicitly edited
   
End

Public Sub RequestProvider_Edit()
   '---------------------------------
   'Edit the current Request Provider
   'note: the fk_request_provider key is kept to indicate an edited record
   '----------------------------------------------------------------------  
   
   fk_employee = RequestProvider!fk_employee
   fk_organisation = RequestProvider!fk_organisation
   fk_default_branch = RequestProvider!fk_default_branch  'fixme duplicated in  Organisation_Display()
   fk_headoffice_branch = RequestProvider!fk_headoffice_branch  'fixme duplicated in  Organisation_Display()
   fk_person = RequestProvider!fk_person
   fk_request_provider = RequestProvider!pk_request_provider 
   If Not IsNull(fk_organisation) Then
      Type_Request_Provider = const.contacttype_organisation
      Organisation_Display()
      With lblHeading
         .text = "Edit " & UCase(txtOrganisation.text) & " - " & RequestProvider!branch
         .Foreground = Color.Red
         .Visible = True
      End With
   End If   
   If Not IsNull(fk_employee) Then
      Type_Request_Provider = const.contacttype_employee
      With lblHeading
         .text = "Edit " & UCase(txtOrganisationEmployeee.text)
         .Foreground = Color.Red
         .Visible = True
      End With
   End If     
   If Not IsNull(fk_person) And Not IsNull(fk_employee) Then
      Type_Request_Provider = const.contacttype_person
      With lblHeading
         .text = "Edit " & UCase(txtPersonFirstname.text) & " " & UCase(txtPersonSurname.text)
         .Foreground = Color.Red
         .Visible = True
      End With
   End If
   
   With tbAccept
      .text = "Save Changes"
      .Foreground = Color.Black
   End With
   VBox_EditArea_Outer.Enabled = True  'no data change unless explicitly edited
   EditArea_Notify_DataChange(False)
   
End

Public Sub cvwRequestProviders_Select()
   '----------------------------------------------------------------------
   'User has clicked on the list of providers for the current request type
   '----------------------------------------------------------------------   
   
   cvwRequestProviders.MoveCurrent
   cvwRequestProviders_Key = cvwRequestProviders.Item.key
   RequestProvider_Display
   
End

Public Sub EditArea_TextBox_LostFocus()
   
   Last.BackGround = Color.White
   
End

Public Sub cmbBranches_Click()
   
   If bExit Then Return 
   fk_headoffice_branch = branches[cmbBranches.index]!fk_branch
   Try chkHeadOffice.value = branches[cmbBranchesDefault.index]!head_office 
   EditArea_Notify_DataChange(True)
   
End

Public Sub cmbBranchesDefault_Click()
   '------------------------------------
   'User is selecting the default branch
   '------------------------------------
   
   If bExit Then Return 
   EditArea_Notify_DataChange(True)
   fk_default_branch = branches[cmbBranchesDefault.index]!fk_branch
   txtBranch.text = branches[cmbBranchesDefault.index]!branch
   txtstreet1.text = branches[cmbBranchesDefault.index]!street1
   txtstreet2.text = branches[cmbBranchesDefault.index]!street2
   txtsuburbOrganisation.text = branches[cmbBranchesDefault.index]!town & " " & branches[cmbBranchesDefault.index]!state & " " & branches[cmbBranchesDefault.index]!postcode
   
End

Public Sub Timer1_Timer()
   
   Persons_Find()
   
End

Public Sub Persons_Find()
   '-------------------------------------------------------------------------------------
   'Finds either patients or persons according to Type
   'A Patient could be a provider of a service in another life hence this option included
   '-------------------------------------------------------------------------------------  
   
   Inc Application.Busy
   Timer1.stop()
   If Trim(txtFind.text) <> "" Then    
      persons = modContactsDBI.Person_Get(Trim(txtFind.text), Type_Request_Provider)
      Try Persons.Remove("sql_in_english")  'ian included this for FClinical patient search to display query to user
      persons = modUtil.Copy_Collection_Keyed_Sequentially(persons) 'no zero based
      Persons_List_Fill()
   End If   
   Dec Application.Busy
   
End

Public Sub Persons_List_Fill()
   
   Dim person As Collection 
   Dim iLastperson_pk As Variant
   Dim x As Integer
   
   columnview1.Clear                           'clear current list persons
   If Persons.count Then       
      For Each Person In Persons
         columnview1.Add(x, 0)
         If iLastperson_pk <> Person!fk_person Then
            columnview1[x][0] = Person!wholename
            iLastperson_pk = Person!fk_person
         Else
            columnview1[x][0] = ""
         End If
         columnview1[x][1] = Person!occupation
         columnview1[x][2] = Trim(Person!street1 & " " & Person!street2) & " " & Person!town & " " & Person!postcode
         Inc x
      Next
      With columnview1
         .Visible = True                    
      End With
   End If
   modUtilGUI.Columnview_Columns_Set_Size(columnview1, lblMeasure)
   
End 

Public Sub cvwRequestProviders_Update_From_Contacts()
   
End

Public Sub columnview1_KeyPress()
   
   If key.code = key.return Then
      columnview1_dblClick() 
   End If 
   
End

Public Sub columnview1_dblclick()
   
   columnview1.MoveCurrent()
   person = persons[columnview1.Item.key]
   Person_Display(person)
   columnview1.Visible = False 
   bExit = True                                             'otherwise will wipe what we have put in 
   txtFind.text = ""  
   bExit = False  
Catch
   Return
   
End

Public Sub Person_Display(person_data As Collection)
   
   txtPersonFirstname.text = Person_data!firstname
   txtPersonSurname.text = Person_data!surname
   txtPersonOccupation.text = Person_data!occupation
   If Not IsNull(person_data!default_branch_town) Then
      txtPersonstreet1.text = Person_data!default_branch_street1
      txtPersonstreet2.text = Person_data!efault_branch_street2
      txtPersonSuburb.text = Person_data!default_branch_town
      txtPersonpostcode.text = Person_data!sefault_branch_postcode
      txtPersonstate.text = Person_data!default_branch_state 
   Else
      txtPersonOccupation.text = Person_data!occupation
      txtPersonstreet1.text = Person_data!street1
      txtPersonstreet2.text = Person_data!street2
      txtPersonSuburb.text = Person_data!town
      txtPersonpostcode.text = Person_data!postcode
      txtPersonstate.text = Person_data!state
   End If 
   txtPersoncategory.text = Person_data!category
   cmbtitle.index = Person_data!fk_title
   cmbSex.Index = Person_data!fk_sex  
   fk_person = Person_data!fk_person
   
End

Public Sub chkEditArea_Click()
   
   If Bexit Then Return
   EditArea_Notify_DataChange(True)
   
End
