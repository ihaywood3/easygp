' Gambas class file

' A Module to keep list of what companies can be involved with what requests
' E.G South Coast Pathology would be involved with pathology requesting e.g FBC
'     North Coast Imaging   would be involved with imaging requests e.g CXR
'
' This form is plugged into FAdmin on the main tab
'-------------------------------------------------------------------------------
Private FHelp As FHtmlViewer 
Private bExit As Boolean
Private Type_Request_Provider As Integer
Private Organisations As Collection 
Private branches As Collection 
Private member As Collection 
Private SendingOrganisation As Collection
Private fk_default_branch As Integer                 'branch_key or the organisation head office
Private fk_headoffice_branch As Integer 
Private fk_organisation As Integer
Private fk_person As Integer
Private fk_address_person As Integer
Private fk_patient As Integer
Private fk_employee As Integer
Private pk_request_provider As Integer '0 if a new provider
Private RequestTypes As Collection 
Private RequestType As Collection 
Private RequestProviders As Collection
Private RequestProvider As Collection 
Private persons As Collection
Private person As Collection

Private pk_view As Integer

Public Sub Form_Open()
   
   Try Init()
   
End

Public Sub Form_Close()
   
   Settings_Save()
   
End

Public Sub Init()
   
   RequestTypes = modUtil.LoadCombo(cmbRequesttypes, modRequestsDBI.RequestTypes_Get(), "type")
   For Each RequestType In RequestTypes 
      lvRequestTypes.Add(RequestType!pk, RequestType!type)
   Next
   
   lvRequestTypes.MoveFirst()
   lvRequestTypes.Item.Selected = True
   lvRequestTypes.SetFocus()
   
   With cvwRequestProviders
      .Columns.count = 2
   End With
   columnview1.columns.Count = 7
   With FHelp = New FHtmlViewer(Vbox_Help)
      .tbWebBrowserZoomIn.Visible = True   
      .tbWebBrowserZoomOut.Visible = True   
   End With
   Try Settings_Load()
   rbTypeSender_Organisation.Value = True 
   Type_Request_Provider = const.contacttype_organisation
   FHelp.Help_Show("global-request-ordering.html")
   lblMeasure.text = " Default Branch "
   modEditAreaHelpers.Resize_labels(VBox_EditArea, lblMeasure)
   modEditAreaHelpers.Fill_Combo_Sex(cmbSex)
   modEditAreaHelpers.Fill_Combo_Titles(cmbtitle)
   
End

Public Sub lvRequestTypes_Select()
   
   lvRequestTypes.MoveCurrent()
   VBox_EditArea_Outer.Enabled = False  'no data change unless explicitly edited
   
   EditArea_Clear()     'Clear input area
   cmbRequesttypes.index = cmbRequesttypes.Find(lvRequestTypes.item.text)
   Reload()
   
End

Public Sub Settings_Save()
   
   Settings["Admin_Requests_Defaults/HSplit_Request_Defaults.layout"] = HSplit_Request_Defaults.layout
   Settings["Admin_Requests_Defaults/Vsplit_Main.layout"] = VSplit_Main.layout
   Settings["Admin_Requests_Defaults/HSplit_Main.layout"] = HSplit_Main.layout
   Settings["Contacts_Organisations/FHelp_zoom"] = FHelp.WebView1.Zoom
   
End

Private Sub Settings_Load()
   
   Try VSplit_Main.layout = Settings["Admin_Requests_Defaults/Vsplit_Main.layout"] 
   Try HSplit_Request_Defaults.layout = Settings["Admin_Requests_Defaults/HSplit_Request_Defaults.layout"]
   Try HSplit_Main.layout = Settings["Admin_Requests_Defaults/HSplit_Main.layout"] 
   '  Try FHelp.WebView1.Zoom = Settings["Contacts_Organisations/FHelp_zoom"]
   
End

Public Sub EditArea_TextBox_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)  
   Select Case Last.tag
      Case "find"
         With listview2
            .top = Last.parent.parent.top + Last.parent.height
            .left = Last.parent.Left
            .Raise
            .width = Last.width
         End With
         With columnview1
            .top = Last.parent.parent.top + Last.parent.height 
            .left = Last.parent.Left
            .Raise
            .width = Last.width
         End With
   End Select
   
End

Public Sub Reset_Keys()
   
   'resets the keys when this form being used for allocating scanned documents
   
   fk_organisation = 0
   fk_person = 0
   fk_address_person = 0 'not implemented fixme
   fk_employee = 0
   fk_headoffice_branch = 0
   fk_default_branch = 0
   
End

Public Sub Type_Sender_Click()
   
   If bExit Then Return 
   RequestProvider_New()
   
End

Public Sub EditArea_TextBox_KeyRelease()
   
   Select Case Last.tag
      Case "find"
         Select Case Type_Request_Provider
            Case const.contacttype_organisation
               Organisation_Get()
            Case const.contacttype_employee
               
            Case const.contacttype_patient, const.contacttype_person
               Timer1.start()
         End Select
   End Select
   
End

Public Sub Organisation_LostFocus()
   
   Last.pos = 1
   Last.BackGround = Color.white
   
End 

Public Sub Organisation_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)  
   With listview2 'fixme rename me
      .Visible = False   
      .Clear()
      .top = Last.parent.top + Last.height ' HBox_Author.top +
      .width = Last.width
      .Raise
   End With
   
End

Public Sub Organisation_Get()
   '---------------------------------------------------------------
   'Get a list or organisations and their branches like search text
   '---------------------------------------------------------------
   Dim sMsg As String 
   
  
   If Trim(txtFind.text) = "" Then
      listview2.Visible = False
      Return
   End If
   
   '  Organisations = modContactsDBI.Organisations_Get(Trim(txtFind.text))
   ' Organisations = modContactsDBI.Organisations_Get_HeadOffice(Trim(txtFind.text))
   Organisations = modMetaData.Organisations_Fill_Popup_List(listview2, txtFind)
   
   '-----------------------------------------------------------------
   'If categories exist to match the text, auto-select or show a list
   '-----------------------------------------------------------------
   If Organisations.count Then 
      listview2.Clear()
      For Each Member In Organisations
         sMsg = Member!organisation & " " & Member!branch & " " 
         sMsg &= Trim(Member!street1 & " " & Member!street2) & " " & Member!town & " " & Member!postcode 
         listview2.Add(Member!pk_view, sMsg)
      Next
      listview2.Visible = True
      Select Case Type_Request_Provider
         Case const.contacttype_employee
         Case const.contacttype_organisation
            listview2.tag = txtOrganisation
         Case const.contacttype_person
            listview2.tag = txtPersonSurname
      End Select
   Else
      listview2.Visible = False   
   End If
   
End

Public Sub EditArea_TextBox_KeyPress()
   
   Select Case Last.tag
      Case "find"
         Select Case Key.Code
            Case Key.Down
               If listview2.Visible = True Then
                  listview2.MoveFirst()
                  listview2.Item.Selected = True
                  listview2.SetFocus()
               Endif
               If columnview1.Visible = True Then
                  columnview1.MoveFirst()
                  columnview1.Item.Selected = True
                  columnview1.SetFocus()
               Endif
               
         End Select
   End Select
   
End

Public Sub listview2_KeyPress()
   
   If key.code = key.return Then
      Listview2_DblClick()
   End If
   
End

Public Sub listview2_DblClick()
   
   Listview2.MoveCurrent
   Select Case Last.tag.tag
      Case "employee"
         Organisation_Select()
      Case "organisation"
         Organisation_Select()
   End Select
   
End

Public Sub Organisation_Select()
   '---------------------------------------------------------------
   'User is adding a new organisation, is selecting from popup list
   '--------------------------------------------------------------- 
   
   listview2.MoveCurrent
   RequestProvider = Organisations[listview2.item.key]
   listview2.Visible = False
   Organisation_Display()
   tbAccept.SetFocus()
   
End

Public Sub Organisation_Display()
   '------------------------------------------------------------------------------------
   'Displays an organisation
   'The collection either comes from contacts.vwOrganisationsEmployees if a new provider
   'in which case there will be no fields fro default_branch 
   'or clin_requests.vwRequestProviders if viewing an already saved record.
   '------------------------------------------------------------------------------------
   
   bExit = True
   fk_organisation = RequestProvider!fk_organisation
   branches = modUtil.LoadCombo(cmbBranches, modContactsDBI.Branches_Get_For_Organisation(fk_organisation), "branch")
   branches = modUtil.LoadCombo(cmbBranchesDefault, branches, "branch")
   
   fk_employee = RequestProvider!fk_employee
   If fk_employee Then  
      Try txtOrganisationEmployee.text = RequestProvider!wholename
   End If   
   txtOrganisation.text = RequestProvider!organisation
   Try fk_default_branch = RequestProvider!fk_default_branch 'dosn't exist new record
   If Error Then
      cmbBranchesDefault.index = -1
   End If    
   
   Try fk_headoffice_branch = RequestProvider!fk_headoffice_branch
   If Error Then
      fk_headoffice_branch = RequestProvider!fk_branch
      txtBranch.text = RequestProvider!branch
      txtstreet1.text = RequestProvider!street1
      txtstreet2.text = RequestProvider!street2
      txtsuburbOrganisation.text = RequestProvider!town & " " & RequestProvider!state & " " & RequestProvider!postcode
      cmbBranches.index = cmbBranches.Find(RequestProvider!branch)
   Else 
      txtBranch.text = RequestProvider!default_branch
      txtstreet1.text = RequestProvider!default_branch_street1
      txtstreet2.text = RequestProvider!default_branch_street2
      txtsuburbOrganisation.text = RequestProvider!default_branch_town & " " & RequestProvider!default_branch_state & " " & RequestProvider!default_branch_postcode
      cmbBranches.index = cmbBranches.Find(RequestProvider!headoffice_branch)
      cmbBranchesDefault.index = cmbBranchesDefault.Find(RequestProvider!default_branch)
      
   Endif
   txtOrganisationCategory.text = RequestProvider!category
   Try chkHeadOffice.value = RequestProvider!head_office 
   '----------------------------------------------
   'load branches for this provider into the combo
   '----------------------------------------------
   ' If IsNull(RequestProvider!fk_default_provider)
   '    cmbBranches.index = cmbBranches.Find("HEAD OFFICE")
   ' Else
   ' End If 
   lblHeading.Visible = False  
   bExit = False  
   
End

Public Sub EditArea_Clear()
   
   bExit = True
   modEditAreaHelpers.EditArea_Clear(VBox_EditArea)
   lblHeading.text = ""
   EditArea_Notify_DataChange(False)
   bExit = False  
   listview2.Visible = False  
   columnview1.Visible = False   
   
End

Public Sub EditArea_Buttons_Click()
   
   Select Case Last.tag
      Case "save"
         Save()
      Case "add new"
         RequestProvider_New()
   End Select
   
End

Public Sub EditArea_TextBox_Change()
   
   If Bexit Then Return 
   Select Case Last.tag
      Case "find"
         If Trim(Last.text) = "" Then
            EditArea_Clear()
            txtFind.SetFocus()
         Endif
   End Select
   EditArea_Notify_DataChange(True)
   
End

Public Sub EditArea_Notify_DataChange(flag As Boolean)
   
   If flag Then
      With tbAccept
         .text = "Save Changes"
         .Foreground = Color.Red
      End With
      VBox_EditArea_Outer.Padding = 1
   Else
      With tbAccept
         .text = "Save"
         .Foreground = Color.Black
      End With
      VBox_EditArea_Outer.Padding = 0
   Endif
   
End

Public Sub Save()
   '-----------------------------------------------------------------------
   'Save nominated company/person/employee as a someone to send requests to
   'the fk_branch = the default branch, not the organisation head office.
   '-----------------------------------------------------------------------
      Dim Request_Provider As New Collection 
   If VBox_EditArea_Outer.Padding = 0 Then Return 'no padding = no changes
   If Not valid_Request_Provider() Then Return
   If pk_request_provider <> 0 Then
      Request_Provider!pk_request_provider = pk_request_provider
   Endif
   Request_Provider!fk_default_branch = fk_default_branch
   Request_Provider!fk_headoffice_branch = fk_headoffice_branch
   Request_Provider!fk_employee = fk_employee
   Request_Provider!fk_person = fk_person
   Request_Provider!fk_lu_request_type = RequestTypes[cmbRequesttypes.Index]!pk
   modDBConnect.BeginTrans()
   modRequestsDBI.Request_Providers_Save(RequestProviders, pk_view, Request_Provider)
   modDBConnect.CommitTrans()
   Reload()
   EditArea_Clear()
   
End

Public Sub Reload()
   '-----------------------------------
   'Displays all the types of providers
   '-----------------------------------   
   
   Dim x As Integer
   
   lvRequestTypes.MoveCurrent()
   lblCompanies.text = "Providers for " & Lower(lvRequestTypes.Item.text) & " requests"   'tell user what type
   RequestProviders = modRequestsDBI.Request_Providers_Get(lvRequestTypes.Item.key)                    'refresh providers for types
   cvwRequestProviders.Clear()
   For Each RequestProvider In RequestProviders                                                        'reload the types list
      x = RequestProvider!pk_request_provider
      cvwRequestProviders.Add(x, 0)
      '----------------------------------------------------------------------------------------------
      'Now, a provider can be an organisation/person/employee or patient ' latter two not implemented
      '----------------------------------------------------------------------------------------------
      If RequestProvider!fk_person <> 0 Then
         cvwRequestProviders[x][0] = RequestProvider!title & " " & RequestProvider!firstname & " " & RequestProvider!surname
      Else
         cvwRequestProviders[x][0] = RequestProvider!organisation & " [" & RequestProvider!default_branch & " ]" 
      End If   
      cvwRequestProviders[x][1] = Trim(RequestProvider!default_branch_street1 & " " & RequestProvider!default_branch_street2) & " " & RequestProvider!default_branch_town
   Next
   
End

Public Sub cmbRequestTypes_Click()
   
   ' Dim x As Integer
   ' 
   ' lvRequestTypes.MoveFirst
   ' For x = 0 To lvRequestTypes.count - 1
   '    If lvRequestTypes.Item.text = cmbRequesttypes.Text Then
   '       
   '       lvRequestTypes.Item.Selected = True
   '       lvRequestTypes.SetFocus()
   '       Break
   '    Else
   '       lvRequestTypes.MoveNext
   '    Endif
   '    
   ' Next
   
End

Public Function valid_Request_Provider() As Boolean
   '------------------------------------------
   'Valid providers may not be an organisation
   '------------------------------------------
   
   Dim sMsg As String
   
   Message.title = "Default Providers"
   
   If fk_default_branch = 0 And fk_person = 0 Then
      sMsg = "Please select a default branch for this provider."
      Goto ShowMissing
   Endif
   If fk_headoffice_branch = 0 Then
      If fk_person = 0 Then
         sMsg = "Please select the organisation to whom you will be sending the request."
         Goto ShowMissing
      End If
   End If
   If fk_person = 0 Then
      sMsg = "Please select the person to whom you will be sending the request." 
   Endif
   Return True
   
ShowMissing:
   Message.Info(sMsg)
   Return False
   
End

Public Sub EditArea_Buttons_KeyPress()
   
   Select Case Last.tag
      Case "save"
         Save()
      Case "clear"
         EditArea_Clear()
   End Select
   
End

Public Sub cvwRequestProviders_Menu()
   
   If Last.count Then mnuRequestProviders.Popup()
   
End

Public Sub mnuRequestProviders_Click()
   
   Select Case Last.tag
      Case "edit"
         RequestProvider_Edit()
      Case "remove"
         RequestProvider_Remove()
      Case "help"
         
   End Select
   
End

Public Sub RequestProvider_Remove()
   
End

Public Sub RequestProvider_New()
   
   Layout_screen()
   lblHeading.text = "Add New Entity to Send Requests"
   lblHeading.Foreground = Color.red
   Vbox_EditArea_Outer.Enabled = True 
   cmbBranches.index = -1
   cmbBranchesDefault.index = -1
   branches = New Collection
   txtFind.SetFocus()
   
End

Public Sub Data_Input_Make_Visible(flag As Boolean)
   
   Dim hCtrl As Control
   Dim HB As HBox
   'Makes all textboxes etc related to organisation search visible
   For Each hCtrl In Vbox_EditArea.Children
      If hctrl Is Hbox Then
         If hctrl.tag = "organisation" Then
            hctrl.Visible = flag 
         Else If hctrl.Tag = "person" Then 
            hctrl.Visible = Not Flag 
         End If   
      End If    
   Next
   
End

Public Sub Layout_screen()
   
   EditArea_Clear()                                      'clear all editing areas
   Reset_Keys()
   
   If rbTypeSender_Organisation.value = True Then
      Type_Request_Provider = const.contacttype_organisation
      Data_Input_Make_Visible(True)
      
   End If
   If rbTypeSender_Employee.Value = True Then
      Type_Request_Provider = const.contacttype_employee
      Data_Input_Make_Visible(True)
      txtOrganisationEmployee.Enabled = True   
   Endif
   If rbTypeSender_Patient.Value = True Then 
      Type_Request_Provider = const.contacttype_patient
      Data_Input_Make_Visible(False)
   End If  
   If rbTypeSender_Person.Value = True Then 
      Type_Request_Provider = const.contacttype_person
      Data_Input_Make_Visible(False)
   End If
   
End

Public Sub RequestProvider_Edit()
   '---------------------------------
   'Edit the current Request Provider
   'note: the fk_request_provider key is kept to indicate an edited record
   '----------------------------------------------------------------------  
   
   cvwRequestProviders.MoveCurrent()
   RequestProvider = RequestProviders[cvwRequestProviders.Item.key]
   fk_employee = RequestProvider!fk_employee
   fk_organisation = RequestProvider!fk_organisation
   fk_default_branch = RequestProvider!fk_default_branch  'fixme duplicated in  Organisation_Display()
   fk_headoffice_branch = RequestProvider!fk_headoffice_branch  'fixme duplicated in  Organisation_Display()
   fk_person = RequestProvider!fk_person
   pk_request_provider = RequestProvider!pk_request_provider 
   pk_view = RequestProvider!pk_request_provider
   If fk_organisation Then
      Type_Request_Provider = const.contacttype_organisation
      Organisation_Display()
      With lblHeading
         .text = "Edit " & UCase(txtOrganisation.text) & " - " & RequestProviders[cvwRequestProviders.Item.key]!branch
         .Foreground = Color.Red
         .Visible = True
      End With
   End If   
   If fk_employee Then
      Type_Request_Provider = const.contacttype_employee
      With lblHeading
         .text = "Edit " & UCase(txtOrganisationEmployee.text)
         .Foreground = Color.Red
         .Visible = True
      End With
   End If     
   If fk_person And fk_employee <> 0 Then
      Type_Request_Provider = const.contacttype_person
      With lblHeading
         .text = "Edit " & UCase(txtPersonFirstname.text) & " " & UCase(txtPersonSurname.text)
         .Foreground = Color.Red
         .Visible = True
      End With
   End If
   
   With tbAccept
      .text = "Save Changes"
      .Foreground = Color.Black
   End With
   VBox_EditArea_Outer.Enabled = True  'no data change unless explicitly edited
   EditArea_Notify_DataChange(False)
   
End

Public Sub cvwRequestProviders_Select()
   '----------------------------------------------------------------------
   'User has clicked on the list of providers for the current request type
   '----------------------------------------------------------------------   
   
   cvwRequestProviders.MoveCurrent
   RequestProvider = RequestProviders[cvwRequestProviders.Item.key]
   If RequestProvider!fk_person <> 0 Then 
      bExit = True    
      rbTypeSender_Person.Value = True    'otherwise get re-entry into layout_screen()
      bExit = False  
      Layout_screen()                     'change screen display for persons, re-set all keys
      Person_Display(RequestProvider)
   Else
      bExit = True  
      rbTypeSender_Organisation.value = True 
      bExit = True  
      Layout_screen()                     'change screen display for organisations, reset all keys
      Organisation_Display()
   Endif
   VBox_EditArea_Outer.Enabled = False  'no data change unless explicitly edited
   
End

Public Sub lvRequestTypes_Click()
   
   lvRequestTypes_Select()
   
End

Public Sub EditArea_TextBox_LostFocus()
   
   Last.BackGround = Color.White
   
End

Public Sub cmbBranches_Click()
   If bExit Then Return 
   fk_headoffice_branch = branches[cmbBranches.index]!fk_branch
   Try chkHeadOffice.value = branches[cmbBranchesDefault.index]!head_office 
   EditArea_Notify_DataChange(True)
End

Public Sub cmbBranchesDefault_Click()
   '------------------------------------
   'User is selecting the default branch
   '------------------------------------
   
   If bExit Then Return 
   EditArea_Notify_DataChange(True)
   fk_default_branch = branches[cmbBranchesDefault.index]!fk_branch
   txtBranch.text = branches[cmbBranchesDefault.index]!branch
   txtstreet1.text = branches[cmbBranchesDefault.index]!street1
   txtstreet2.text = branches[cmbBranchesDefault.index]!street2
   txtsuburbOrganisation.text = branches[cmbBranchesDefault.index]!town & " " & branches[cmbBranchesDefault.index]!state & " " & branches[cmbBranchesDefault.index]!postcode
   
End

Public Sub Timer1_Timer()
   
   Persons_Find()
   
End

Public Sub Persons_Find()
   '-------------------------------------------------------------------------------------
   'Finds either patients or persons according to Type
   'A Patient could be a provider of a service in another life hence this option included
   '-------------------------------------------------------------------------------------  
   
   Inc Application.Busy
   Timer1.stop()
   persons = modContactsDBI.Person_Get(Trim(txtFind.text), Type_Request_Provider)
   
   Persons_List_Fill()
   Dec Application.Busy
   
End

Public Sub Persons_List_Fill()
   
   Dim iKey As Integer
   
   Dim comm As Collection
   Dim sTemp As String
   Dim sStatusMessage As String
   Dim person As Collection 
   Dim iLastperson_pk As Integer
   
   columnview1.Clear                           'clear current list persons
   If Persons.count Then       
      Try Persons.Remove("sql_in_english") 'ian included this for FClinical patient search     
      For Each Person In Persons
         columnview1.Add(Person!pk_view, 0)
         If iLastperson_pk <> Person!fk_person Then
            columnview1[Person!pk_view][0] = Person!surname
            columnview1[Person!pk_view][1] = Person!firstname 
            columnview1[Person!pk_view][2] = Person!sex       
            '  Try columnview1[Person!pk_view][3] = Format(person!birthdate, "dd/mm/yyyy")
            iLastperson_pk = Person!fk_person
         Else
            columnview1[Person!pk_view][0] = ""
         End If
         columnview1[Person!pk_view][4] = ""
         columnview1[Person!pk_view][5] = Trim(Person!street1 & " " & Person!street2) & " " & Person!town & " " & Person!postcode
         columnview1[Person!pk_view][6] = ""
      Next
      With columnview1
         .Visible = True                    
      End With
   End If
   
End 

Public Sub columnview1_KeyPress()
   
   If key.code = key.return Then
      columnview1_dblClick() 
   End If 
   
End

Public Sub columnview1_dblclick()
   
   columnview1.MoveCurrent()
   person = persons[columnview1.Item.key]
   Person_Display(person)
   columnview1.Visible = False   
   
End

Public Sub Person_Display(person_data As Collection)
   
   txtPersonFirstname.text = Person_data!firstname
   txtPersonSurname.text = Person_data!surname
   txtPersonOccupation.text = Person_data!occupation
   txtPersonstreet1.text = Person_data!street1
   txtPersonstreet2.text = Person_data!street2
   txtPersonSuburb.text = Person_data!town
   txtPersonpostcode.text = Person_data!postcode
   txtPersonstate.text = Person_data!state
   txtPersoncategory.text = Person_data!category
   cmbtitle.index = Person_data!fk_title
   cmbSex.Index = Person_data!fk_sex  
   fk_person = Person_data!fk_person
   
End
