' Gambas class file

Private UserNames As Collection
Private Username As Collection

Private SenderNames As Collection
Private senderName As Collection
Private fk_lu_request As Integer 
Public Sub Init()
   
    Reload()
   
End

Public Sub Reload()
   
  usernames = modInboxDBI.User_Names_With_Synonym_Get(Trim(txtFilterUserName.text))
  lvUsernames.Clear()
  cvwSenderNames.Clear()
  If usernames.count Then  
     For Each username In usernames
         lvUsernames.Add(username!pk_lu_request, username!user_request_name) 
     Next 
  Endif
  lvUsernames.MoveFirst()
  Try lvUserNames_Select()
End

Public Sub Settings_Save()
   
  Settings["Admin_MaintainSynonyms/HSplit_userNames.Layout"] = HSplit_userNames.Layout
  Settings["Admin_MaintainSynonyms/VSplit_Main.Layout"] = VSplit_Main.Layout
   
   
End

Private Sub Settings_Load()
   
   
   Try HSplit_userNames.Layout = Settings["Admin_MaintainSynonyms/HSplit_userNames.Layout"]
   Try Vsplit_Main.layout = Settings["Admin_MaintainSynonyms/VSplit_Main.Layout"] 
End


Public Sub lvUserNames_Select()
   lvUserNames.movecurrent()  'do not change to LAST
   fk_lu_request = lvUserNames.item.key
   SenderNames = modInboxDBI.User_Name_Get_Synonyms(fk_lu_request)
   cvwSenderNames.Clear
   For Each sendername In SenderNames
       cvwSenderNames.add(sendername!pk_lu_link_provider_user_requests, 0)
       cvwSenderNames[sendername!pk_lu_link_provider_user_requests][0] = sendername!provider_request_name
   Next
End

Public Sub txtFilterUserName_KeyRelease()


      Reload()
   

End
