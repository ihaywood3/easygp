' Gambas class file

' Gambas module file
' Copyright (C) 2008-2013 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'------------------------------------------------------------------------
' PURPOSE      A module to maintain lists of vaccines, for example
'              vaccine schedules come/go, vaccines contained may no
'              longer be available, but need to be viewed in the patients
'              file as part of the old data
' TODO         Code under the option buttons eg current/discontinued
'------------------------------------------------------------------------
Private bExit As Boolean
Private bKeyValid As Boolean
Private seasons As Collection
Private formulations As Collection
Private routes As Collection
Private Routes_Administration As Collection
Private vaccines As Collection
Private vaccine As Collection
Private fk_vaccine As Integer
Private fk_formulation As Integer
Private fk_season As Integer
Private fk_route As Integer
Private descriptions As Collection

Private pk_view As Integer

Private Form_Help As FHtmlViewer
Private Form_PDF As FPdf

Public Sub Init()
   
   Try Settings_Load()
   With form_help = New FHtmlViewer(Vbox_Help)
      .tbWebBrowserZoomIn.Visible = True
      .tbWebBrowserZoomOut.Visible = True 
      .Help_Show("maintaining-vaccination-schedules.html")
   End With
   seasons = modUtil.LoadCombo(cmbSeasons, modCommonDBI.Seasons_Get(), "season")
   routes = modUtil.LoadCombo(cmbRouteAdministration, modVaccinationDBI.Vaccines_Get_Routes_Administration(), "route")
   descriptions = modUtil.LoadCombo(cmbDescriptions, modVaccinationDBI.Descriptions_Get(), "description")
   formulations = modUtil.LoadCombo(cmbFormulations, modVaccinationDBI.Vaccine_Formulations_Get(), "form")
   lblMeasure.text = " Route of Administration "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea_Inner, lblMeasure)
   columnview1.Columns.count = 3 'brand/form/description see Vaccines_Get()
   cvwVaccines.Columns.count = 4
   Reload()
   EditArea_Clear()
   
End

Public Sub Settings_Save()
   
   Settings["Admin_Vaccination_Vaccines/VSplit_Main.layout"] = Vsplit_Main.layout
   Settings["Admin_Vaccination_Vaccines/HSplit_Main.Layout"] = HSplit_Main.Layout
   Settings["Admin_Vaccination_vaccines/cvwVaccines.font"] = cvwVaccines.Font.ToString()
   
End

Private Sub Settings_Load()
   
   Try HSplit_Main.Layout = Settings["Admin_Vaccination_Vaccines/HSplit_Main.Layout"]
   Try Vsplit_Main.layout = Settings["Admin_Vaccination_Vaccines/VSplit_Main.layout"] 
   Try cvwVaccines.Font = Font[Settings["Admin_Vaccination_Vaccines/cvwVaccines.font"]]
   Try cvwVaccines.Font = Font[Settings["Admin_Vaccination_Vaccines/cvwVaccines.font"]]
   
End

Public Sub EditArea_Clear()
   
   bExit = True  
   modEditAreaHelpers.EditArea_Clear(Vbox_EditArea_Inner)
   cmbDescriptions.index = -1
   cmbFormulations.Index = -1
   cmbRouteAdministration.index = -1
   pk_view = 0
   fk_vaccine = 0
   bExit = False
   VBox_Help.Visible = True   
   HBox_PDF.Visible = False 
   Vbox_EditArea_Outer.Padding = 0  
   
End

Public Sub EditArea_Notify_DataChanged(flag As Boolean)
   
   If Bexit Then Return 
   If flag Then 
      tbSave.Foreground = Color.Red
      Vbox_EditArea_Outer.Padding = 1
      tbSave.Enabled = True   
   Else
      tbSave.Foreground = Color.Black
      Vbox_EditArea_Outer.Padding = 0 
      tbSave.Enabled = False  
   Endif
   
End

Public Sub EditArea_TextBox_KeyPress()
   
   If bExit Then Return 
   
   If Not EditArea_Textbox_ExcludeKeys(key.code, Last.tag) Then 
      Stop Event
      Return
   End If
   ' Select Case Last.tag
   '    Case "find vaccine"
   '    
   ' End Select
   
End 

Public Function EditArea_TextBox_ExcludeKeys(keycode As Integer, tag As String) As Boolean
   
   Select Case tag
      Case "brand", "noted"
         bKeyValid = modUtil.AllowKeys(const.AllowKeys_SQLCrash, keycode)
         '    Case "age due from", "age due to"
         '       bKeyValid = bKeyValid = modUtil.AllowKeys(const.AllowKeys_NumbersOnly, keycode)
         '    Case "date inactive"
         '       bKeyValid = modUtil.AllowKeys(const.AllowKeys_DateFormat, keycode)
         '    Case Else
         '       bKeyValid = True
   End Select
   Return bKeyValid
   
End

Public Sub EditArea_TextBox_GotFocus()
   
   columnview1.Visible = False    'could be visible, e.g user 1/2 way through doing something, moves off that textbox
   Last.BackGround = Color.rgb(95, 255, 175)  
   ' Select Case Last.tag
   '    Case "find vaccine"
   '       With columnview1
   '          .top = Last.parent.top + Last.parent.height
   '          .left = Last.left
   '          .width = Last.width + chkVaccineATSIOnly.Width
   '          .Raise
   '          
   '       End With
   ' End Select
   
End

Public Sub EditArea_TextBox_LostFocus()
   
   Last.BackGround = Color.White
   ' Select Case Last.tag
   '    ' Case "date inactive"
   '    '    If Last.text <> "" Then
   '    '       If Not modEditAreaHelpers.Valid_Date(Last) Then
   '    '          bExit = True
   '    '          Last.text = ""
   '    '          bExit = False   
   '    '       End If
   '    '    End If
   '    '    
   ' End Select 
   
End

Public Sub EditArea_TextBox_Activate()
   '--------------------------
   'Enter key has been pressed
   '--------------------------
   
   ' Select Case Last.tag
   '    ' Case "schedule"
   '    '    rbMultipleYes.SetFocus()
   '    '    
   '    ' Case "date inactive"
   '    '    txtAgeDueFrom.SetFocus()
   '    ' Case "age due from"
   '    '    txtAgeDueTo.SetFocus()
   '    ' Case "age due to"
   '    '    tbSave.SetFocus()
   '    ' Case "notes"
   '    '    
   '    '    txtFindVaccine.SetFocus()
   '    ' Case "find vaccine"
   '    '    If Trim(txtFindVaccine.text) = "" Then
   '    '       tbSave.SetFocus()
   '    '    Else
   '    '       tbAddVaccine.SetFocus()
   '    '    Endif
   '       
   ' End Select
   
End

Public Sub EditArea_TextBox_Change()
   
   If bExit Then Return 
   ' Select Case Last.tag
   '    ' Case "find vaccine"
   '    '    If Trim(Last.text) = "" Then
   '    '       fk_vaccine = 0
   '    '    Endif
   '    '    
   ' End Select
   EditArea_Notify_DataChanged(True)
   
End

Public Sub EditArea_Buttons_Click()
   
   Select Case Last.tag
      Case "new"
         Vaccine_New()
      Case "save"
         Save()
      Case "refresh"
         bexit = True
         txtFilterName.text = ""
         txtFilterDescription.text = ""
         rbDisplayVaccinesCurrent.value = True
         Reload()
         bexit = False  
   End Select
   ' 
   
End

Public Sub EditArea_Buttons_KeyPress()
   
   If key.code = key.return Then
      EditArea_Buttons_Click()
   Endif
   
End

Public Sub Save()
   '----------------------------------
   'Save a vaccine's details
   '   clin_vaccination.lu_vaccines
   '
   '   pk serial primary key,
   '   brand text,
   '   form text,
   '   fk_form integer not null,
   '   fk_description integer,
   '   fk_route integer,
   '   inactive boolean DEFAULT false,
   '   deleted boolean DEFAULT false
   '-----------------------------------
   
   If Vbox_EditArea_Outer.padding = 0 Then Return ' no changes, nothing to save
   If Not Vaccine_Valid() Then Return
   
   Vaccine = New Collection
   If fk_vaccine Then
      vaccine!pk = fk_vaccine   
   Endif
   Vaccine!brand = Trim(txtBrand.text)
   vaccine!fk_form = formulations[cmbFormulations.index]!pk
   vaccine!fk_description = descriptions[cmbDescriptions.index]!pk
   vaccine!fk_route = routes[cmbRouteAdministration.index]!pk
   If rbSeasonalNo.value = True Then
      
   Else
      
   Endif
   If rbFemaleOnlyYes.value = True Then 
      
   Else
      
   End If 
   
   fk_vaccine = modVaccinationDBI.Vaccine_Save(Vaccines, pk_view, vaccine)
   modDBConnect.CommitTrans()
   EditArea_Notify_DataChanged(False)
   Reload()
   
End

Public Sub Edit()
   '
   'Edit the currently highlighted vaccine
   'Accessed only via popup menu over the vaccines list
   '----------------------------------------------------
   
   Display()
   Vbox_EditArea_Inner.Enabled = True   
   
End

Public Sub Reload()
   
   Vaccines_Get()
   
End

Public Sub Display()
   '---------------------------------------------------------
   'Displays the currently selected vaccine, disables editing
   'which must be explicitly done from the popup menu
   '---------------------------------------------------------
   
   EditArea_Clear()
   bExit = True
   fk_vaccine = cvwVaccines.Item.key
   pk_view = cvwVaccines.Item.key
   txtBrand.text = vaccines[pk_view]!brand
   txtDescription.text = vaccines[pk_view]!description
   If vaccines[pk_view]!inactive = False Then
      rbVaccineCurrentNo.value = True
   Else
      rbVaccineCurrentYes.Value = True  
   Endif
   cmbDescriptions.index = cmbDescriptions.Find(vaccines[pk_view]!description)
   cmbFormulations.index = cmbFormulations.Find(vaccines[pk_view]!form)
   cmbRouteAdministration.index = cmbRouteAdministration.Find(vaccines[pk_view]!route)
   
   ' If Lower$(vaccines[pk_view]!form) = "injection" Then
   '    cmbFormulations.index = cmbFormulations.Find("pre-mixed syringe")
   ' Endif
   If vaccines[pk_view]!female_only = False Then
      rbFemaleOnlyNo.value = True
   Else
      rbFemaleOnlyYes.Value = True  
   Endif
   ' If vaccines[pk_view]!female_only = False Then
   '    rbFemaleOnlyNo.value = True
   ' Else
   '   rbFemaleOnlyYes.Value = True  
   ' Endif
   rbFemaleOnlyNo.value = True
   If Not IsNull(vaccines[pk_view]!fk_season) Then
      rbSeasonalYes.value = True
      cmbSeasons.Visible = True
      cmbSeasons.index = cmbSeasons.Find(seasons[vaccines[pk_view]!fk_season - 1]!season)
   Else
      cmbSeasons.Visible = False 
      rbSeasonalNo.value = True  
   End If
   Vbox_EditArea_Inner.Enabled = False   
   bExit = False  
   
End


Public Sub mnuVaccines_Click()
   
   Select Case Last.tag
      Case "edit"
         Edit()
      Case "delete"
      '   Delete()
      Case "help"
        ' Help()
      Case "font"
         modUtil.Columnview_SetFont(cvwVaccines, "Admin_Vaccination_Vaccines")
      Case "product information"
         If IsNull(Form_PDF) Then
            With Form_PDF = New (FPDF, HBox_PDF)
               .btZoomIn.Visible = True
               .btZoomOut.Visible = True
               .BtPrint.Visible = True  
            End With
            
         End If 
         Try Form_PDF.Load_PDF(User.home &/ "easygp/library/Drugs/afpaamox10206.pdf")
         If Not Error Then 
            VBox_Help.Visible = False   
            HBox_PDF.Visible = True  
         Else
            Message.Info("Product information for this vaccine is not currently available")  
         Endif
   End Select
   
End

Public Function Vaccine_Valid() As Boolean
   
   Dim sMsg As String
   
   If Trim(txtBrand.text) = "" Then
      txtBrand.SetFocus() 
      Return 
   Endif
   If cmbFormulations.index = -1 Then
      cmbFormulations.SetFocus() 
      Return 
   Endif
   If cmbRouteAdministration.index = -1 Then
      cmbRouteAdministration.SetFocus() 
      Return 
   Endif
   Return True
   
Prompt:
   Message.title = "Vaccines"
   Message.Info(sMsg)
   Return False   
   
End

Public Sub Columnview1_KeyPress()
   
   If key.code = key.return Then
      columnview1_DblClick()
   Endif
   
End

Public Sub columnview1_DblClick()
   
   Columnview1.MoveCurrent
   ' Select Case Last.tag.tag
   '    Case "find vaccine"
   '       Vaccines_Select()
   ' End Select
   columnview1.Visible = False   
   
End

Public Sub Vaccines_Get()
   '-------------------------------------------------------------------------------------------
   'Gets list of vaccines from the database, filtered optionally by name and or description
   'by default inactive vaccinations will be shown.
   '-------------------------------------------------------------------------------------------
   
   Vaccines = modVaccinationDBI.Vaccines_Get_By_Brand_Name(Trim(txtFilterName.text), Trim(txtFilterDescription.text))
   cvwVaccines.clear()
   If Vaccines.count = 0 Then Return
   For Each vaccine In Vaccines
      cvwVaccines.Add(vaccine!pk, 0)
      cvwVaccines[vaccine!pk][0] = vaccine!brand
      cvwVaccines[vaccine!pk][2] = vaccine!description
   Next
   
End

Public Sub cvwVaccines_Menu()
   
   cvwVaccines.MoveCurrent()
   If Last.count Then mnuVaccines.Popup()
   
End

Public Sub cvwVaccines_Select()
   '------------------------------------------------------------------
   'User has clicked on the vaccines list, display in the editing area
   '------------------------------------------------------------------
   
   Last.MoveCurrent()
   Display()
   
End

Public Sub cmbSeasons_Click()
   
   EditArea_Notify_DataChanged(True)
   
End

Public Sub rbSeasonal_Click()
   
   EditArea_Notify_DataChanged(True)
   
End

Public Sub cmbRouteAdministration_Click()
   
   EditArea_Notify_DataChanged(True)
   
End

Public Sub cmbFormulations_Click()
   
   EditArea_Notify_DataChanged(True)
   
End

Public Sub rbFemaleOnly_Click()
   
   EditArea_Notify_DataChanged(True)
   
End

Public Sub rbVaccineCurrent_Click()
   
   EditArea_Notify_DataChanged(True)
   
End

Public Sub txtFilter_KeyRelease()
   If bexit Then Return 
   Vaccines_Get()
   
End

Public Sub Vaccine_New()
   '---------------------------------------
   'Add a new vaccine to the vaccines table
   '--------------------------------------- 
   
   EditArea_Clear()
   Vbox_EditArea_Inner.Enabled = True 
   txtBrand.SetFocus()
   
End
