' Gambas class file
' Copyright (C) 2008,2009 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'
'PURPOSE: Enforces an audit trail
'         present the user With information about what they are about
'         to act upon eg delete a record, or mark a recall complete
'NOTES  : extra_html is written to this form from the calling form
'         contains specific details about origin of data
'         Note that  the reason itself passed back to the calling form
'         is set in txtAuditReason_Change, but the key (if it exists)
'         is set by listview2_dblclick
'----------------------------------------------------------------------
Private extrahtml As String
Private audit_reasons As Collection
Private data As Collection 
Private Section As Integer
Private currentconsult As CConsult

Static Private form_audit As FAudit

Public Function AuditReason() As String
  
        Return txtAuditReason.text
  
End

Public Sub Init(data As Collection, section As Integer, audit_action As Integer, currentconsult As Cconsult) 
   '------------------------------------------------------
   'Sets the html which is specific to the audit situation
   'see calling routine on calling form
   '------------------------------------------------------  
  
   Dim sString As String 
   Dim sRowTemplate As String = ""
         "<TR VALIGN=TOP>"
            "<TD WIDTH=20% bgcolor=#EEEEEE>"
               "<P>col1</P>"
            "</TD>"
            "<TD WIDTH=80% bgcolor=#EEEEEE>"
                "<P>col2</P>"
            "</TD>"
           "</TR>" 

   data = data
   section = section 
   form_audit = Me
   lblHeading.text = "ACTION: " & const.sAuditAction[audit_action]
   extrahtml = modHTML.audit_template
   Select Case section
     
   Case const.cSection_Documents
      extrahtml = Replace(extrahtml, "%header%", "")
      extrahtml = Replace(extrahtml, "%section%", "Documents")
      extrahtml = Replace(extrahtml, "%table%", "documents.documents")
      extrahtml = Replace(extrahtml, "%user%", modDBConnect.currentUser!title & " " & modDBConnect.currentuser!wholename)
      extrahtml = Replace(extrahtml, "%action%", const.sAuditAction[audit_action])
       sString = "<B>" & currentconsult!patient!firstname & " " & currentconsult!patient!surname & "</B><BR>"
      sString &= data!data_summary
      ' Sstring = Replace(sString, "col1", "       ")
      ' Sstring = Replace(sString, "col2", data!data_summary)
       extrahtml = Replace(extrahtml, "%data%", sString & "<BR><BR>")
      ' 
   Case const.cSection_PastHistory
      extrahtml = Replace(extrahtml, "%header%", "")
      extrahtml = Replace(extrahtml, "%section%", "Health Issues")
      extrahtml = Replace(extrahtml, "%table%", "clin_history.pasthistory")
      extrahtml = Replace(extrahtml, "%user%", modDBConnect.currentUser!title & " " & modDBConnect.currentuser!wholename)
      extrahtml = Replace(extrahtml, "%action%", const.sAuditAction[audit_action])
      sString = "<B>" & currentconsult!patient!firstname & " " & currentconsult!patient!surname & "</B><BR>"
      sString &= sRowTemplate
      Sstring = Replace(sString, "col1", "       ")
      Sstring = Replace(sString, "col2", "Past history Item " & data!description)
      extrahtml = Replace(extrahtml, "%data%", sString & "<BR><BR>")
  
   Case const.cSection_OccupationalHistory
     
      extrahtml = Replace(extrahtml, "%header%", "")
      extrahtml = Replace(extrahtml, "%section%", "OccupationalHistory")
      extrahtml = Replace(extrahtml, "%table%", "clin_history." & data!tablename)
      Select Case data!tablename
      Case "occupation"
        
      Case "occupations_exposures"
    
      '---------------------------------------
      'Now remind them what they are  deleting
      '---------------------------------------
      sString = "<B>" & currentconsult!patient!firstname & " " & currentconsult!patient!surname & "</B><BR>"
      sString &= sRowTemplate
      Sstring = Replace(sString, "col1", "       ")
      Sstring = Replace(sString, "col2", "Work Exposure " & data!exposure)
      extrahtml = Replace(extrahtml, "%data%", sString & "<BR><BR>")
      extrahtml = Replace(extrahtml, "%user%", modDBConnect.currentUser!title & " " & modDBConnect.currentuser!wholename)
      extrahtml = Replace(extrahtml, "%action%", const.sAuditAction[audit_action])

      End Select

   Case const.cSection_MentalHealth
      extrahtml = Replace(extrahtml, "%header%", "")
      extrahtml = Replace(extrahtml, "%section%", "Mental Health")
      extrahtml = Replace(extrahtml, "%table%", "clin_mentalhealth.mentalhealth_plans")
      '--------------------------------------
      'Now remind them what they are marking completed
      '--------------------------------------
      sString = "<B>" & currentconsult!patient!firstname & " " & currentconsult!patient!surname & "</B><BR>"
      sString &= sRowTemplate
      Sstring = Replace(sString, "col1", "       ")
      Sstring = Replace(sString, "col2", "Mental Health Plan for  " & data!diagnosis & " written on  " & Format(data!plan_date, "dd/mm/yyyy"))
      extrahtml = Replace(extrahtml, "%data%", sString & "<BR><BR>")
      
      extrahtml = Replace(extrahtml, "%user%", modDBConnect.currentUser!title & " " & modDBConnect.currentuser!wholename)
      extrahtml = Replace(extrahtml, "%action%", const.sAuditAction[audit_action])
   
   Case const.cSection_Recalls
    '  sString = Replace(sString, "%table%", "clin_Recalls.recalls")
    
      extrahtml = Replace(extrahtml, "%header%", "")
      extrahtml = Replace(extrahtml, "%section%", "Recalls")
      extrahtml = Replace(extrahtml, "%table%", "clin_Recalls.recalls")
      '--------------------------------------
      'Now remind them what they are marking completed
      '--------------------------------------
      sString = "<B>" & currentconsult!patient!firstname & " " & currentconsult!patient!surname & "</B><BR>"
      sString &= sRowTemplate
      Sstring = Replace(sString, "col1", "       ")
      Sstring = Replace(sString, "col2", "Recall for " & data!reason & "due on " & Format(data!due, "dd/mm/yyyy"))
      extrahtml = Replace(extrahtml, "%data%", sString & "<BR><BR>")
      
      extrahtml = Replace(extrahtml, "%user%", modDBConnect.currentUser!title & " " & modDBConnect.currentuser!wholename)
      extrahtml = Replace(extrahtml, "%action%", const.sAuditAction[audit_action])
   Case const.cSection_ScratchPad
      extrahtml = Replace(extrahtml, "%header%", "")
      extrahtml = Replace(extrahtml, "%section%", "Scratch Pad")
      extrahtml = Replace(extrahtml, "%table%", "clin_consult.scratchpad")
      '--------------------------------------
      'Now remind them what they are marking completed
      '--------------------------------------
      sString = "<B>" & currentconsult!patient!firstname & " " & currentconsult!patient!surname & "</B><BR>"
      sString &= sRowTemplate
      Sstring = Replace(sString, "col1", "       ")
      Sstring = Replace(sString, "col2", "Scratch Pad Item " & data!note)
      extrahtml = Replace(extrahtml, "%data%", sString & "<BR><BR>")
      
      extrahtml = Replace(extrahtml, "%user%", modDBConnect.currentUser!title & " " & modDBConnect.currentuser!wholename)
      extrahtml = Replace(extrahtml, "%action%", const.sAuditAction[audit_action])
    End Select
    Print extrahtml
End

Public Sub Run() As Boolean
   Return Not Me.ShowModal()
End

Public Sub btnOK_Click()
   '------------------------------------------------------------------
   'User happy!, and pressed the ok button
   'pass back the reason pk of audit.lu_reasons or pk=0 if new reason
   'typing in the textbox, or picking from listview2
   'IAN FIXME: a better way to pass back the pk
   '------------------------------------------------------------------
  If Trim(txtAuditReason.text) = "" Then 
   Message.Info("Please enter a reason for your actions before proceeding")
   Return 
  Endif
  Me.Close(True)
End

Public Sub btnCancel_Click()
   Me.Close(False)
End


Public Sub Form_Open()
   Dim shtml As String 
   Me.Title = "Audit Form"                           'add title
   Me.Center                                             'centre form on screen
  ' Me.ShowModal()
   shtml = "<html><head><meta name='qrichtext' content='1'/></head><body>"
         "<p align='center'><B><EasyGP Audit Trail<BR></p>"
         "<P>Please note:<BR><BR>"
         "If you modify the details of any data which was saved at a previous consultation, by either yourself or another user (if your "
         "permissions allow), the program will create a complete audit-trail of your actions<BR><BR>"
         "<br> Note that the data will not be physically removed from the database, and can be reviewed or audited at any future time."
         " <BR><BR>Please enter the reason why you are deleting this data.<br>"
          
   textlabel1.text = extrahtml ' & "</body></html>" 
   If IsNull(Me.Parent) Then  
     Print "I have no parent"
   Else 
       Print "i HAVE A PARENT"
   End If
   txtAuditReason.SetFocus
End

Public Sub txtAuditReason_Change()
   '--------------------------------------------------
   'If user deletes all the text in the reason textbox
   'empty the collection which will contain data
   '--------------------------------------------------
  
End

Public Sub txtAuditReason_KeyRelease()
   '------------------------------------------------------------Vbox1.top +
   'as user types in the reason try and match with an existing
   'one ie fetch a list (if it exists) of reasons for the audit
   'action ona per-user basis
   '------------------------------------------------------------
   Dim reason As Collection 
   audit_reasons = modAuditDBI.Get_Reasons(Trim(txtAuditReason.text))
   listview2.clear()
   If audit_reasons.count Then
      For Each reason In audit_reasons
         listview2.add(reason!pk, reason!reason)
      Next
      listview2.Visible = True 
      listview2.Raise()  
   Else
      listview2.Visible = False  
   End If  
End

Public Sub txtAuditReason_GotFocus()
   '-------------------------------------
   'Align the popup list with the textbox
   '-------------------------------------
   With listview2
       .top = hbox10.top + Hbox10.height + Vbox3.padding  ' Vbox2.Padding
       .width = txtAuditReason.width
       .left = Hbox10.left + txtAuditReason.Left + Vbox3.Padding 
       .Raise
   End With
   
End

Public Sub txtAuditReason_KeyPress()
   '--------------------------------------------
   'If the key pressed is enter or tab then
   'first check if what has been written matches
   'what is in the listview2. If it dose, then
   'trigger listview2_DblClick() to get the key
   'otherwise, the key is 0 so this is a new
   'reason which will be saved for this user
   '
   'If key pressed = down arrow, simply move
   'focus onto the list for user to select
   '--------------------------------------------
  Dim x As Integer
  Select Case Key.Code
          Case Key.tab, Key.Return
            If listview2.Visible Then
                For x = 0 To listview2.Count
                      If Lower(Trim(txtAuditReason.text)) = Lower(listview2.Item.text) Then
                        ListView2_DblClick()
                        Break
                      End If
                Next
            End If
            btnOK.SetFocus()
            
         Case Key.Down
           If listview2.Visible Then
              listview2.SetFocus()
              listview2.MoveFirst
              listview2.Item.Selected = True
           End If
  End Select
End

Public Sub ListView2_KeyPress()
   '------------------------------------------------
   'User has pressed <enter> key whilst perusing the
   'list of previous reasons, so accept this data
   '------------------------------------------------
   If Key.code = Key.Return Then
      ListView2_DblClick()
   End If   
End

Public Sub ListView2_DblClick()
   '----------------------------------------------------
   'User has selected a reason for the audit action from
   'a list of his previously used reason
   'Accept this to textbox
   'pass back the pk of clin_audit.lu_reasons table
   'FIXME IAN
   '----------------------------------------------------
   listview2.MoveCurrent
   txtAuditReason.text = listview2.Item.text
  

End

Public Sub btnOK_KeyPress()

  If key.code = key.return Then  
      btnOK_Click()
  End If 

End
