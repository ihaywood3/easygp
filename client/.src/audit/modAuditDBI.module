' Gambas module file
' Copyright (C) 2008,2009 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
' A module to hold database routines where audit trail is involved
'----------------------------------------------------------------------

Public Function Save(currentconsult As Cconsult, audit As Collection, reason As String) As Boolean
   '-----------------------------------------------------
   'Save the audit data provided in clin_audit.audit
   'or audit.lu_reasons on a per-user basis
   'returns    TRUE if successful
   'FIXME put in error trapping to return correct flag
   '-----------------------------------------------------
   Dim sql As String
   Dim newreason As New Collection
   modDBConnect.BeginTrans()
   If audit!fk_lu_reason = 0 Then
      'actual field in audit.lu_reasons is the pk
      'reason!pk = 0
      newreason!reason = reason
      newreason!fk_staff = modDBConnect.currentUser!fk_staff
      audit!fk_lu_reason = modDBConnect.insert("audit.lu_reasons", newreason)
   End If   
   audit!fk_consult = currentconsult.GetPK()
   audit!pk_audit = modDBConnect.insert("audit.audit", audit) 
   modDBConnect.CommitTrans()
   Return True
End 


Public Function Get_Reasons(reason As String) As Collection 
   '-----------------------------------------------------------
   'Gets  a user-specific list of reasons for the audit action
   'e.g could be "written for the wrong patient" or
   '             "patient has left practice"
   '-----------------------------------------------------------
   Dim sql As String
   
   sql = "SELECT * FROM audit.lu_reasons WHERE fk_staff = " & modDBConnect.currentUser!fk_staff
   sql &= " AND reason ILIKE $$%" & Lower(reason) & "%$$ LIMIT 10"
   Return modDBConnect.exec_query_collection(sql)

End

' Public Function Save_Reason(audit As CAudit) As Integer
'    ' '------------------------------------------------------------
'    ' 'saves a new reason, insert into lookup table and return the key
'    ' 'saved on a per-staff basis, May no longer be using this
'    ' '------------------------------------------------------------
'    ' Dim sql As String
'    ' Dim $Result As Result
'    ' sql = "INSERT INTO audit.lu_reasons(fk_staff, reason)"
'    '     "VALUES ("
'    ' sql &= audit.fk_staff & ",$$" & audit.reason & "$$)"
'    ' 'Print sql
'    ' $Result = modDBConnect.exec_query(sql)
'    ' sql = "SELECT currval('audit.lu_reasons_pk_seq') as pk_lu_reasons"
'    ' $Result = modDBConnect.exec_query(sql)
'    ' Return $Result!pk_lu_reasons
'    ' 
' End


Public Sub AuditTrail_Get_PastHistory(schema_tablename As String, fk_patient As Integer, Optional fk_row As Integer) As Collection 
   '----------------------------------------------------------------------------------
   'Get the audit trail for either the entire section eg recalls or a specific record
   'fk_row in the audit table = the primary key of the table being audited
   '----------------------------------------------------------------------------------
   Dim sql As String
   sql = "Select * from " & schema_tablename & " where fk_patient = " & fk_patient 
   If fk_row <> 0 Then
      sql &= " AND fk_row = " & fk_row
   End If   
   Return modDBConnect.exec_query_collection(sql)
End
