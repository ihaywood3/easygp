' Gambas class file

' Copyright (C) 2008-2014 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'
' A class to record the save and manipulate medicare/veteran bulk bill claims
'-----------------------------------------------------------------------------
'TODO: just about everything
'      Investigate how medclaims work to lodge electronically
'-----------------------------------------------------------------------------
Private staff As Collection                              'all staff loaded into staff combo
Private clinics As Collection                            'all clinics in the location combo
Private fk_staff As Integer                              'the current user
Private fk_branch As Integer                             'the current branch
Private vouchers As Collection                           'available vouchers for the claim.
Private voucher As Collection
Private claims_vouchers As Collection                    'the vouchers in the claim
Private fk_lu_bulk_billing_type As Integer               'const.BulkBilling_Type_Medicare/Veteran
Private bExit As Boolean
Private bKeyValid As Boolean
Private fk_claim As Integer                              'key to billing.bulk_billing_claims
Private claim As Collection                              'the currently selected claim (i.e already batched and saved claim)
Private bVouchersPaid As Boolean = True
Private bVouchersUnpaid As Boolean = False

Public Sub init(s As Collection, c As Collection)
   '------------------------------------------------
   'Initialise form
   'clear editing area, default to medicare batching
   'check this but I think staff, clinics are zero based.
   '------------------------------------------------

   staff = s
   clinics = c
   modUtilGUI.LoadCombo(cmbStaff, staff, "wholename")
   clinics = modUtilGUI.LoadCombo(cmbClinic, clinics, "branch")
   lblMeasure.text = "Max Number of Vouchers  "
   With cvwVouchers
      .Clear
      .Columns.count = 5
      .Columns[0].text = "Invoice"
      .Columns[0].Alignment = Align.Center
      .Columns[1].text = "Patient                     "
      .Columns[2].text = "  Visit Date  "
      .Columns[2].Alignment = Align.Center
      .Columns[3].text = "Item Number"
      .Columns[3].Alignment = Align.Right
      .Columns[4].text = "Amount"
   End With
   bExit = True
   cmbClinic.index = -1
   cmbStaff.Index = -1
   rbBulkBillMedicare.value = True 'set fk_lu_bulk_billing_type
   modEditAreaHelpers.Resize_labels(VBox_EditArea_Inner, lblMeasure)
   EditArea_Clear()
   bExit = False

End

Public Sub EditArea_Clear()

   modEditAreaHelpers.EditArea_Clear(VBox_EditArea_Inner)
   VBox_EditArea_Outer.Padding = 0
   txtNumberOfVouchers.text = 50
   cvwVouchers.Clear
   vouchers = New Collection
   tbProcessClaim.Enabled = False

End

Public Function Staff_Member(fk_staff As Integer) As Collection

   Dim c As Collection
   'fixeme do something else and remove me
   For Each c In staff
      If c!fk_staff = fk_staff Then
         Return c
      Endif
   Next

End

Public Function Branch_Get_Name(fk_branch As Integer) As String

   Dim c As Collection

   For Each c In clinics
      If c!fk_branch = fk_branch Then
         Return c!branch
      Endif
   Next

End

Public Sub cvwVouchers_Refresh()
   '---------------------------------------------
   'Refresh the list of vouchers in current claim
   '---------------------------------------------

   Dim grand_total As Variant
   Dim fk_last_invoice As Integer
   Dim invoice_count As Integer
   Dim running_total As Float

   EditArea_Clear()
   If bexit Then Return
   claims_vouchers = New Collection
   Inc Application.Busy
   Vouchers = modBillingDBI.Bulk_Bill_Batching_Get_Vouchers(fk_staff, fk_branch, bVouchersUnpaid, fk_lu_bulk_billing_type, fk_claim)
   For Each voucher In Vouchers
      If invoice_count = 50 Then Break             'have our 50 max vouchers
      cvwVouchers.Add(voucher!pk_items_billed, 0)
      If fk_last_invoice <> voucher!fk_invoice Then
         claims_vouchers.add(voucher, claims_vouchers.count)
         Inc invoice_count
         fk_last_invoice = voucher!fk_invoice
         cvwVouchers[voucher!pk_items_billed][0] = Str(voucher!fk_invoice)
         cvwVouchers[voucher!pk_items_billed][1] = voucher!patient_wholename
         cvwVouchers[voucher!pk_items_billed][2] = Format(voucher!visit_date, "dd/mm/yyyy")
      Else
         cvwVouchers[voucher!pk_items_billed][0] = ""
         cvwVouchers[voucher!pk_items_billed][1] = ""
         cvwVouchers[voucher!pk_items_billed][2] = ""
      Endif
      cvwVouchers[voucher!pk_items_billed][3] = voucher!mbs_item
      cvwVouchers[voucher!pk_items_billed][4] = modUtil.Money_Format(voucher!amount)
      running_total += modUtil.MoneyToFloat(voucher!amount)
   Next
   If invoice_count Then
      txtClaimTotal.text = modUtil.Money_Format(running_total)
      txtActualVouchers.Text = Str(invoice_count) & " vouchers"
      VBox_EditArea_Outer.Padding = 1
   Endif
   Dec Application.Busy

End

Public Sub cmbEditArea_Click()

   If bexit Then Return
   Select Case Last.tag
      Case "staff"
         fk_staff = staff[cmbStaff.index]!fk_staff
      Case "clinic"
         fk_branch = clinics[cmbClinic.Index]!fk_branch
   End Select
   If cmbStaff.index <> -1 Then
      If cmbClinic.Index <> -1 Then claim_new()
      Return
   Else
      cmbClinic.SetFocus()
      Return
   End If

   If cmbClinic.index <> -1 Then
      If cmbStaff.Index <> -1 Then claim_New()
      Return
   Else
      cmbClinic.SetFocus()
      Return
   End If

End

Public Sub rbBulkBillType_Click()

   fk_lu_bulk_billing_type = Last.tag 'const.BulkBilling_Type_Medicare Or const.BulkBilling_Type_Veteran 1,2
   If Trim(txtNumberOfVouchers.Text) = "" Then
      txtNumberOfVouchers.text = 50
   Endif
   cvwVouchers_Refresh()

End

Public Function EditAreaTextBox_ExcludeKeys(keycode As Integer, tag As String) As Boolean

   bKeyValid = True
   Select Case Tag
      Case "number of vouchers"
         bKeyValid = modUtilGUI.AllowKeys(const.AllowKeys_NumbersOnly, keycode)
   End Select
   Return bKeyValid

End

Public Sub EditArea_TextBox_KeyPress()

   If bexit Then Return

   If Not EditAreaTextBox_ExcludeKeys(key.code, Last.tag) Then
      Stop Event
      Return
   End If

End

Public Sub MainToolbar_Click()

   Select Case Last.tag
      Case "new claim"
         claim_New()
      Case "print"
         claim_print()
      Case "process"
         claim_lodge()
   End Select

End

Public Sub claim_New()
   '---------------------------------------------------------
   'Prepare a new claim for lodging with Medicare or Veterans
   '---------------------------------------------------------

   Dim smsg As String

   Message.Title = "Medicare & Veteran Batching"
   If cmbStaff.index = -1 Or cmbClinic.index = -1 Then
      Message.Info("You must select both a staff member and a branch to be able to start the batching.")
      Return
   End If
   lblHeading.text = "New Claim"
   fk_staff = staff[cmbStaff.index]!fk_staff
   fk_branch = clinics[cmbClinic.Index]!fk_branch
   fk_claim = 0
   If rbBulkBillMedicare.value = True Then
      fk_lu_bulk_billing_type = const.BulkBilling_Type_Medicare
   Else
      fk_lu_bulk_billing_type = const.BulkBilling_Type_Veteran
   Endif
   cvwVouchers_Refresh()
   If cvwVouchers.count = 0 Then
      Message.Title = "Prepare Claim"
      Message.info("There are no outstanding vouchers for this doctor and branch")
      lblHeading.text = ""
      Return
   Endif
   tbProcessClaim.Enabled = True
   txtClaimIDNumber.SetFocus()

End

Public Sub claim_print()
   '----------------------------------------------------------------------------------
   'prints html of the claim if staff so desire to cross reference to vouchers (paper)
   '----------------------------------------------------------------------------------

   If Not Claim_Valid() Then Return
   modPrinting.PrintHtml(Claim_HTML())

End

Public Sub Claim_Display(claim As Collection)
   '--------------------------------------------------
   'display processed claim - loaded from FRecordVisit
   '--------------------------------------------------

   Dim invoice As Collection
   Dim fk_last_invoice As Integer
   Dim vouchers As Collection
   Dim staff_processed As Collection
   Dim x As Integer

   bexit = True
   lblHeading.text = "Reconcile Existing Claim"
   cvwVouchers.Clear()  'fixme this view and code below is wrong just temporary
   vouchers = modUtil.Copy_Collection_Keyed_Sequentially(modBillingDBI.Bulk_Bill_Batching_Get_Claim_vouchers(claim!pk))
   For Each voucher In vouchers
      cvwVouchers.Add(x, 0)
      If fk_last_invoice <> voucher!fk_invoice Then
         fk_last_invoice = voucher!fk_invoice
         cvwVouchers[x][0] = Str(voucher!fk_invoice)
         cvwVouchers[x][1] = voucher!patient_wholename & "   "
         cvwVouchers[x][2] = Format(voucher!visit_date, "dd/mm/yyyy") & " "
      Else
         cvwVouchers[x][0] = ""
         cvwVouchers[x][1] = ""
         cvwVouchers[x][2] = ""
      Endif
      cvwVouchers[x][3] = voucher!mbs_item & "   "
      cvwVouchers[x][4] = modUtil.Money_Format(voucher!amount_paid)
      Inc x
   Next
   cmbStaff.index = cmbStaff.Find(Staff_Member(claim!fk_staff_provided_service)!wholename)
   cmbClinic.index = cmbClinic.Find(Branch_Get_Name(claim!fk_branch))
   staff_processed = Staff_Member(claim!fk_staff_processed)
   txtStaffLodged.text = staff_processed!title & " " & staff_processed!wholename
   txtClaimIDNumber.text = claim!claim_id
   txtClaimTotal.text = claim!claim_amount
   txtActualVouchers.text = claim!voucher_count
   If Not IsNull(voucher) And If voucher!fk_lu_bulk_billing_type = const.BulkBilling_Type_Medicare Then
      rbBulkBillMedicare.value = True
   Else
      rbBulkBillVeteran.Value = True
   Endif
   Dec Application.Busy
   lblMeasure.Font = cvwVouchers.Font
   modUtilGUI.Columnview_Columns_Set_Size(cvwVouchers, lblMeasure)
   bExit = False

End

Public Sub claim_lodge()
   ' Save the claim to be lodged
   ' create table billing.link_invoice_bulk_bill_claim
   ' (pk serial primary key,
   ' fk_claim integer not null,
   ' fk_invoice integer not null,
   ' CONSTRAINT link_invoice_bulk_bill_claim_fk_invoice_fkey FOREIGN KEY (fk_invoice)
   '       REFERENCES billing.invoices (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION
   ' );
   '
   '
   ' create table billing.bulk_billing_claims
   ' (pk serial primary key,
   '  claim_id text not null,
   '  claim_date date,
   '  claim_amount money not null,
   '  voucher_count integer not null,
   '  finalised boolean default false,
   '  fk_branch integer not null,
   '  fk_medclaim integer default null,
   '  fk_lu_bulk_billing_type integer not null,
   '  fk_staff_provided_service integer not null,
   '  fk_staff_processed integer NOT NULL,
   '  html text NOT null,
   '  CONSTRAINT bulk_billing_claims_fk_branch_fkey FOREIGN KEY (fk_branch)
   '       REFERENCES contacts.data_branches (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   ' CONSTRAINT bulk_billing_claims_fk_lu_bulk_billing_type_fkey FOREIGN KEY (fk_lu_bulk_billing_type)
   '       REFERENCES billing.lu_bulk_billing_type (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   ' CONSTRAINT bulk_billing_claims_fk_staff_processed_fkey FOREIGN KEY (fk_staff_processed)
   '       REFERENCES admin.staff (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   ' CONSTRAINT bulk_billing_claims_fk_link_invoice_bulk_bill_claim_fkey FOREIGN KEY (fk_link_invoice_bulk_bill_claim)
   '       REFERENCES billing.link_invoice_bulk_bill_claim (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   ' CONSTRAINT bulk_billing_claims_fk_doctor_provided_service_fkey FOREIGN KEY (fk_staff_provided_service)
   '       REFERENCES admin.staff (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION

   Dim claim As New CRow
   Dim link_invoice_claim As CRow
   Dim fk_last_invoice As Integer

   If VBox_EditArea_Inner.Padding = 0 Then Return ' no changes no claim
   If Not Claim_Valid() Then Return
   tbProcessClaim.enabled = False
   If fk_claim Then
      claim.put_unchanged(fk_claim, "fk_claim") 'currently cannot edit a claim
   Else
      claim!claim_date = Now()
      claim!claim_amount = txtClaimTotal.Text
      claim!claim_id = Trim(txtClaimIDNumber.text)
      claim!voucher_count = Val(txtActualVouchers.text)
      claim!fk_branch = modDBConnect.currentUser!fk_branch
      If rbBulkBillMedicare.value = True Then
         claim!fk_lu_bulk_billing_type = const.BulkBilling_Type_Medicare
      Else
         claim!fk_lu_bulk_billing_type = const.BulkBilling_Type_Veteran
      Endif
      claim!fk_staff_provided_service = staff[cmbStaff.Index]!fk_staff
      claim!fk_staff_processed = modDBConnect.currentUser!fk_staff
      claim!html = Claim_HTML()
      Print claim!html
   Endif
   claim.Save("billing.bulk_billing_claims", "fk_claim")
   For Each voucher In claims_vouchers
      If fk_last_invoice <> voucher!fk_invoice Then
         fk_last_invoice = voucher!fk_invoice
         link_invoice_claim = New CRow
         link_invoice_claim!fk_invoice = voucher!fk_invoice
         link_invoice_claim!fk_claim = claim!fk_claim
         link_invoice_claim.Save("billing.link_invoice_bulk_bill_claim", "fk_link_invoice_bulk_bill_claim")
      End If
   Next
   modDBConnect.CommitTrans()
   EditArea_Clear
   FRecordVisit_New.Bulk_Billing_Claims_Reload

End

Public Function Claim_Valid() As Boolean
   '----------------------------------------------------------
   'returns true if enough information to claim these vouchers
   '----------------------------------------------------------

   If vouchers.count Then
      If Trim(txtClaimIDNumber.text) = "" Then
         txtClaimIDNumber.BackGround = Color.rgb(95, 255, 175)
         txtClaimIDNumber.SetFocus()
         Return
      End If
   Endif
   Return cvwVouchers.Count

End

Public Function Claim_HTML() As String
   '------------------------------------------------------------
   'creates html table of a invoices(aka vouchers) being claimed
   '------------------------------------------------------------

   Dim sHtml As String
   Dim sRow As String
   Dim x As Integer
   Dim sBulkBillType As String
   Dim fk_last_invoice As Integer

   If rbBulkBillMedicare.value = True Then
      sBulkBillType = "Medicare"
   Else
      sBulkBillType = "Veterans"
   Endif

   ' sHtml = "<HTML><BODY>"
   ' shtml &= "<P><B>" & modDBConnect.currentUser!organisation & " " & modDBConnect.currentUser!branch & " Bulk Bill Claim</B></P>"
   ' shtml &= "<P><B>Claim Type:</B>" & sBulkbillType & "<BR>"
   ' shtml &= "<B>Claim No.:</B>" & Trim(txtClaimIDNumber.text) & "<BR>"
   ' sHtml &= "<B>Staff Member:</B>" & cmbStaff.Text & "<BR>"
   ' sHtml &= "<B>Location:</B>" & cmbClinic.Text & "<BR>"
   ' sHtml &= "<B>Process Date:</B>" & Format(Now, "dd/mm/yyyy") & "<BR>"
   ' sHtml &= "<B>Processed By:</B>" & modDBConnect.currentUser!wholename & "<BR>"
   ' sHtml &= "<B>Vouchers:</B>" & Replace(txtActualVouchers.text, "vouchers", "") & "<BR>"
   ' sHtml &= "<B>Claim Total:</B>" & txtClaimTotal.text & "<BR></P><HR>"

   sHtml = "<HTML><BODY>"
   shtml &= "<P><B>" & modDBConnect.currentUser!organisation & " " & modDBConnect.currentUser!branch & " Bulk Bill Claim</B></P>"
   sHtml &= "<TABLE WIDTH=100% CELLPADDING=1 CELLSPACING=0>"
   "<COL WIDTH=20%>"
   "<COL WIDTH=80%>"
   sHtml &= Bulk_Bill_Html_heading_Row_Template()
   shtml = Replace(shtml, "%heading%", "Claim Type")
   shtml = Replace(shtml, "%value%", sBulkbillType)
   sHtml &= Bulk_Bill_Html_heading_Row_Template()
   shtml = Replace(shtml, "%heading%", "Claim Number")
   shtml = Replace(shtml, "%value%", Trim(txtClaimIDNumber.text))
   sHtml &= Bulk_Bill_Html_heading_Row_Template()
   shtml = Replace(shtml, "%heading%", "Staff Member")
   shtml = Replace(shtml, "%value%", cmbStaff.Text)
   sHtml &= Bulk_Bill_Html_heading_Row_Template()
   shtml = Replace(shtml, "%heading%", "Location")
   shtml = Replace(shtml, "%value%", cmbClinic.Text)
   sHtml &= Bulk_Bill_Html_heading_Row_Template()
   shtml = Replace(shtml, "%heading%", "Process Date")
   shtml = Replace(shtml, "%value%", Format(Now, "dd/mm/yyyy"))
   sHtml &= Bulk_Bill_Html_heading_Row_Template()
   shtml = Replace(shtml, "%heading%", "Processed By")
   shtml = Replace(shtml, "%value%", modDBConnect.currentUser!wholename)
   sHtml &= Bulk_Bill_Html_heading_Row_Template()
   shtml = Replace(shtml, "%heading%", "Total Vouchers")
   shtml = Replace(shtml, "%value%", Replace(txtActualVouchers.text, "vouchers", ""))
   sHtml &= Bulk_Bill_Html_Heading_Row_Template()
   shtml = Replace(shtml, "%heading%", "Claim Total")
   shtml = Replace(shtml, "%value%", txtClaimTotal.text)
   sHtml &= "</TABLE><HR>"
   sHtml &= "<TABLE WIDTH=100% CELLPADDING=1 CELLSPACING=0>"
   "<COL WIDTH=43*>"
   "<COL WIDTH=43*>"
   "<COL WIDTH=43*>"
   "<COL WIDTH=43*>"
   "<COL WIDTH=43*>"
   '------------------------------------------------------
   'now add a row for each money recieved
   'receipt no|Payer|payment type|Cheque Drawer|Amount|Tax
   '------------------------------------------------------
   sHtml &= "<TR VALIGN=TOP>" & Bulk_Bill_Html_Row_Template() & "</TR>"
   shtml = Replace(shtml, "%invoice_no%", "<B>Invoice</B>")
   shtml = Replace(shtml, "%patient%", "<B>Patient</B>")
   shtml = Replace(shtml, "%date_visit%", "<B>Visit Date</B>")
   shtml = Replace(shtml, "%item%", "<B>Item</B>")
   shtml = Replace(shtml, "%amount%", "<B>Amount</B>")
   For Each voucher In Vouchers
      sHtml &= "<TR VALIGN=TOP>" & Bulk_Bill_Html_Row_Template()
      If fk_last_invoice <> voucher!fk_invoice Then
         fk_last_invoice = voucher!fk_invoice
         sHtml = Replace(sHtml, "%invoice_no%", Str$(voucher!fk_invoice))
         sHtml = Replace(sHtml, "%patient%", voucher!patient_wholename)
         sHtml = Replace(sHtml, "%date_visit%", Format(voucher!visit_date, "dd/mm/yyyy"))
      Else
         sHtml = Replace(sHtml, "%invoice_no%", "")
         sHtml = Replace(sHtml, "%patient%", "")
         sHtml = Replace(sHtml, "%date_visit%", "")
      End If
      sHtml = Replace(sHtml, "%item%", voucher!mbs_item)
      sHtml = Replace(sHtml, "%amount%", modUtil.Money_Format(voucher!amount))
      sHtml &= "</TR>"
   Next
   sHtml &= "</TABLE></BODY></HTML>"
   Print shtml
   Return shtml

End

Public Function Bulk_Bill_Html_Row_Template() As String

   Return ""
   "<TD WIDTH=8%>"
   "   <P>%invoice_no%</P>"
   "</TD>"
   "<TD WIDTH=30%>"
   "   <P>%patient%</P>"
   "</TD>"
   "<TD WIDTH=15%>"
   "   <P>%date_visit%</P>"
   "</TD>"
   "<TD WIDTH=20%>"
   "   <P>%item%</P>"
   "</TD>"
   "<TD WIDTH=10%>"
   "   <P>%amount%</P>"
   "</TD>"

End

Public Function Bulk_Bill_Html_Heading_Row_Template() As String

   Return ""
   "<TR VALIGN=TOP>"
   "<TD WIDTH=20%>"
   "   <P<B>%heading%</B></P>"
   "</TD>"
   "<TD WIDTH=80%>"
   "   <P>%value%</P>"
   "</TD>"
   "</TR>"

End

Public Sub pnlToolButtons_Enter()

   tbPrintClaim.Enabled = cvwVouchers.count

End

Public Sub EditArea_TextBox_GotFocus()

   Last.BackGround = Color.rgb(95, 255, 175)

End

Public Sub EditArea_TextBox_Lost_Focus()

   Last.BackGround = Color.White

End
