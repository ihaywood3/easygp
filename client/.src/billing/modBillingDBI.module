' Gambas module file

Public Function Descriptors_Get(descriptor As String, Optional include_ama As Boolean = True, use_vwfees As Boolean = True, Optional limit As Integer = 500) As Collection
   
   Dim sql As String
   Dim searchcomponents As New String[]
   Dim component As String
   Dim i As Integer
   Dim r As Regexp
   
   If use_vwfees Then
      sql = "clerical.vwfees"
   Else
      sql = "clerical.schedule"
   Endif
   sql = "Select * from " & sql & " where "
   r = New Regexp(descriptor, "^[0-9]+$")
   If r.Offset <> -1 Then 
     sql &= "mbs_item = '" & descriptor & "'"
   Else 
      r = New Regexp(descriptor, "^[a-z]+[0-9]+$", Regexp.Caseless)
      If r.Offset <> -1 And include_ama Then
        sql &= "ama_item = '" & descriptor & "'"
      Else
        searchcomponents = Split(descriptor, ",")
        For i = 0 To searchcomponents.Max
          searchcomponents[i] = "descriptor ILIKE $$%" & Trim$(searchcomponents[i]) & "%$$"
        Next
        sql &= searchcomponents.Join(" AND ")
      End If
   End If
   If Not include_ama Then
     sql &= " and not mbs_item is null"
   End If
   sql &= " order by cast(mbs_item as int), descriptor   LIMIT " & limit
   Return modDBConnect.exec_query_collection(sql)
   
End

Public Function Descriptors_Save(old_data As Collection, pk_descriptor As Integer, new_data As Collection)
   
   If pk_descriptor = -1 Then
      
   Else
      modDBConnect.update("clerical.schedule", old_data[pk_descriptor], new_data)
   End If  
   
End

Public Function Fee_Types_Get() As Collection
   
  Return modDBConnect.exec_query_collection("Select * from clerical.lu_billing_type") 
   
End

Public Function Descriptors_Brief_Get(searchtext As String, Optional limit As Integer = 100) As Collection 
   Dim sql As String
   
   sql = "Select * from clerical.schedule where descriptor_brief ILIKE $$%" & searchtext
   sql &= "%$$ order by cast(mbs_item as int), descriptor LIMIT " & limit
   Return modDBConnect.exec_query_collection(sql)

End

Public Function Items_Get(item As String, Optional fk_lu_billing_type As Integer = -1) As Collection
   '---------------------------------------------
   'Gets list of item numbers and associated fees
   '---------------------------------------------
   Dim sql As String
   
   sql = "select * From clerical.vwFees WHERE (mbs_item = $$" & item & "$$ or ama_item = $$" & item & "$$)"
   If fk_lu_billing_type <> -1 Then
      sql &= " and fk_lu_billing_type = " & fk_lu_billing_type
   Endif
   Return modDBConnect.exec_query_collection(sql)
   
End

Public Function Make_Invoice(pk_patient As Integer, items As String[], fk_lu_billing_type As Integer)

End


Public Sub UnitTest(main_form As Form)
  Dim r As Collection
  
  r = Descriptors_Get("AC510", True, True) 
  Print r
   
End

