' Gambas class file

Private Descriptors As Collection
Private Descriptor As Collection
Private bExit As Boolean
Private lcRow As CDescriptorRow
Private timer_count As Integer 
Private pk_descriptor As Integer
Private cSearchMBS As Integer = 0
Private cSearchAMA As Integer = 1
Private cSearchDescriptor As Integer = 2
Private cSearchDescriptor_Brief As Integer = 3
Private cSearchGroup As Integer = 4
Private Billingtypes As Collection
Private BillingType As Collection
Private OnRow As Integer
Private OnCol As Integer
Private bFoundFirst As Integer
Private iLastRow As Integer
Private iFirstRow As Integer
Private iLeft As Integer
Private iTop As Integer
Private timercount As Integer = 0
Private ama_mbs_or_both As String

Public Sub Init()
   
   lblMeasure.text = " Percentage Fee Rule Applies "
   modEditAreaHelpers.Resize_labels(Vbox_Editarea, lblmeasure)
   modEditAreaHelpers.Resize_label(lblSearch, lblMeasure)
   modEditAreaHelpers.Resize_label(lblItemTypes, lblMeasure)
   modEditAreaHelpers.Resize_label(lblButtons, lblMeasure)
   ' cmbSearchFor.Add("MBS Item Number")
   ' cmbSearchFor.Add("AMA Item Number")
   ' cmbSearchFor.Add("Description")
   ' cmbSearchFor.Add("Brief Description")
   ' cmbSearchFor.Add("Group")
   Gridview1_Init()
   ama_mbs_or_both = "mbs"
   Try Settings_Load()
   Reload() 
   
End

Public Sub Gridview1_Init()
   
   Dim x As Integer
   Dim columnwidth As Integer
   Dim lastwidth As Integer = 100
   
   Billingtypes = modBillingDBI.Fee_types_Get()
   For Each BillingType In BillingTypes
      lblmeasure.text = BillingType!name 
      If lblmeasure.width + 2 > lastwidth Then
         lastwidth = lblmeasure.width + 2
      Endif
   Next
   
   With gridview1
      .Rows.H = 20 
      .Columns.Count = 2
      .Rows.count = Billingtypes.Count
      For x = 0 To 1
         If x <> 1 Then 
            .Columns[x].Width = lastwidth 
         Else
            .Columns[1].width = gridview1.width - 400
         End If
      Next
      .Columns[0].text = "Type"
      .Columns[1].text = "Fee"
   End With
   x = 0
   For Each Billingtype In Billingtypes
      gridview1.row = x 
      gridview1[x, 0].text = Billingtype!name
      Inc x
   Next
   ' Hbox_FeeList.height = (Billingtypes.count + 2) * 20
   
End

Public Sub Reload()
   
  ' Timer1.enabled = False
  ' lcDescriptors.Clear()
  ' Descriptors = modBillingDBI.Descriptors_Get(Trim(txtFilterDescriptor.text), sbLimit.value)
   
   ' For Each Descriptor In Descriptors
   '    lcRow = New CDescriptorRow(lcDescriptors, descriptor)
   ' Next    
   ' Timer1.Enabled = True   
   
End

Public Sub Search_Old()
   
   ' Select Case cmbSearchFor.Index
   '    Case cSearchMBS 
   '       Descriptors = modBillingDBI.Items_Get(Trim(txtSearch.text), const.Billingtype_Schedule)
   '    Case cSearchAMA
   '       Descriptors = modBillingDBI.Items_Get(Trim(txtSearch.text), const.Billingtype_AMA) 
   '    Case cSearchDescriptor
   '       Descriptors = modBillingDBI.Descriptors_Get(Trim(txtSearch.text))
   '    Case cSearchDescriptor_Brief
   '       Descriptors = modBillingDBI.Descriptors_Brief_Get(Trim(txtSearch.text))
   '    Case cSearchGroup
   '       
   ' End Select 
   Select Case modBillingDBI.Schedule_Search_Query1(Trim(TxtSearch.text))
      Case "mbs_item"
         Descriptors = modBillingDBI.Items_Get(Trim(txtSearch.text), const.Billingtype_Schedule) 
      Case "ama_item"
         Descriptors = modBillingDBI.Items_Get(Trim(txtSearch.text), const.Billingtype_AMA)  
      Case "descriptors" 
         Descriptors = modBillingDBI.Descriptors_Get(Trim(txtSearch.text)) 
   End Select
   
   lcDescriptors.Clear
   For Each Descriptor In Descriptors
      lcRow = New CDescriptorRow(lcDescriptors, descriptor)
   Next    
   
End

Public Sub Search()
   '-------------------------------------------------------------------
   ' Once timercount = 3 then search 'fixme make this user configurable
   ' ------------------------------------------------------------------
  
   
   Timer1.Stop          'stop timer hence stop timercount incrementing
   timercount = 0       'until another keyrelease in txtsearch
   If Trim(TxtSearch.text) = "" Then Return 
   Inc Application.Busy
   Print "searching for ", Trim(TxtSearch.text)
   Select Case modBillingDBI.Schedule_Search_Query1(Trim(TxtSearch.text))
      Case "mbs_item"
         Descriptors = modBillingDBI.Items_Get(Trim(txtSearch.text), const.Billingtype_Schedule) 
      Case "ama_item"
         Descriptors = modBillingDBI.Items_Get(Trim(txtSearch.text), const.Billingtype_AMA)  
      Case "descriptor" 
         Descriptors = modBillingDBI.Descriptors_Get(Trim(txtSearch.text), ama_mbs_or_both) 
   End Select
   
   lcDescriptors.Clear
   lblSQLCount.Text = Str$(Descriptors.count) & " records returned"
   For Each Descriptor In Descriptors
      lcRow = New CDescriptorRow(lcDescriptors, descriptor)
   Next    
   Dec Application.Busy
   
End

Public Sub Search_12Dec11()
   '-------------------------------------------------------------------
   ' Once timercount = 3 then search 'fixme make this user configurable
   ' ------------------------------------------------------------------
  
   
   Timer1.Stop          'stop timer hence stop timercount incrementing
   timercount = 0       'until another keyrelease in txtsearch
   If Trim(TxtSearch.text) = "" Then Return 
   Inc Application.Busy
   Print "searching for ", Trim(TxtSearch.text)
   Select Case modBillingDBI.Schedule_Search_Query1(Trim(TxtSearch.text))
      Case "mbs_item"
         Descriptors = modBillingDBI.Items_Get(Trim(txtSearch.text), const.Billingtype_Schedule) 
      Case "ama_item"
         Descriptors = modBillingDBI.Items_Get(Trim(txtSearch.text), const.Billingtype_AMA)  
      Case "descriptor" 
         Descriptors = modBillingDBI.Descriptors_Get(Trim(txtSearch.text), ama_mbs_or_both) 
   End Select
   
   lcDescriptors.Clear
   lblSQLCount.Text = Str$(Descriptors.count) & " records returned"
   For Each Descriptor In Descriptors
      lcRow = New CDescriptorRow(lcDescriptors, descriptor)
   Next    
   Dec Application.Busy
   
End

Public Sub Save()
   '--------------------------
   'Save a modified descriptor
   '--------------------------
   
   Dim Descriptor As New Collection
   
   If VBox_EditArea_Outer.padding = 0 Then Return
   
   Descriptor!pk = pk_descriptor
   Descriptor!descriptor_Brief = Trim(txtDescriptorBrief.text)
   modDBConnect.BeginTrans()
   modBillingDBI.Descriptors_Save(Descriptors, pk_descriptor, descriptor)
   modDBConnect.CommitTrans() 
   EditArea_Notify_Datachange(False)
   Reload()
   
End

Public Sub Settings_Save()
   
   Settings["Billing_Descriptors/VSplit_Main.Layout"] = Vsplit_Main.Layout
   Settings["Billing_Descriptors/HSplit_EditArea.Layout"] = HSplit_EditArea.Layout

End

Private Sub Settings_Load()
   
   Try Vsplit_Main.Layout = Settings["Billing_Descriptors/VSplit_Main.Layout"]
   Try HSplit_EditArea.Layout = Settings["Billing_Descriptors/HSplit_EditArea.Layout"] 

End

' Public Sub Timer1_Timer()
'    
'    Inc timer_count
'    If timer_count = 3 Then
'       Reload()
'    End If   
'    
' End

Public Sub txtFilterDescriptor_KeyRelease()
   
   If Timer1.Enabled = False Then Timer1.Enabled = True   
   timer_count = 0 
   
End

Public Sub txtFilterDescriptor_GotFocus()
   
   Timer1.Start()
   
End

Public Sub EditArea_Clear()
   
   modEditAreaHelpers.EditArea_Clear(Vbox_Editarea) 
   
End

Public Sub Display()
   '------------------------------------------
   'Displays the currently selected descriptor
   '------------------------------------------ 
   
   EditArea_Clear()
   bexit = True
   txtMBSItemNumber.text = descriptor!mbs_item
   txtAMAItemNumber.text = descriptor!ama_item
   txtDescriptor.text = descriptor!descriptor
   pk_descriptor = descriptor!pk
   txtDescriptorBrief.text = descriptor!descriptor_brief
   Try txtDateceased = Format(descriptor!ceased_date, "dd/mm/yyyy")
   txtGroup.text = descriptor!group
   
   bexit = False  
   
End

Public Sub lcDescriptors_Click()
   
   '----------------------------------------------------------------------------------
   'User has clicked on one row of the list container - hence selecting a patient
   'put that patient into the current patient collection, and photo into patient_photo
   '----------------------------------------------------------------------------------
   
   Dim hctrl As Control
   Dim HB As HBox
   Dim Tl As TextLabel
   
   If lcDescriptors.Count Then
      descriptor = Descriptors[Last.children[Last.index].tag] 
      
      Display()
   Endif
   
End

Public Sub Form_Close()
   
   Settings_Save()
   
End

Public Sub EditArea_Notify_Datachange(bFlag As Boolean)
   
   If bFlag Then
      VBox_EditArea_Outer.Padding = 1
   Else
      VBox_EditArea_Outer.Padding = 0
   End If  
   
End

Public Sub EditArea_Buttons_Click()
   
   Select Case Last.tag
      Case "save"
         Save() 
   End Select
   
End

Public Sub EditAreaTextBox_GotFocus()
   '-----------------------------------------------------------------------
   'User clicks on search textbox, start the time which controls the search
   '-----------------------------------------------------------------------

   If Last.tag = "search" Then 
      Timer1.Start
      Timercount = 0
   Else
      Timer1.Stop
   End If    

End

Public Sub EditAreaTextBox_Change()
   
   If bexit Then Return
   If Last.tag <> "search" Then 
      EditArea_Notify_Datachange(True)
   Else
      EditArea_Clear()
      EditArea_Notify_Datachange(False)
   End If 
   
End

Public Sub EditAreaTextBox_KeyRelease()
   
   If Last.tag = "search" Then
      timercount = 0
      Timer1.start
      Print "zeroing timer"
      Print Timer1.Enabled, "enabled"
      Print "count:", timercount
   End If   
   
End

Public Sub GridView1_Click()

   Print "on row" & gridview1.Row
   Print "on col" & gridview1.Column
   onrow = gridview1.Row
   OnCol = gridview1.Column
   
End

Public Sub GridView1_DblClick()

   Dim i As Integer
   Dim iSlotCount As Integer
   
   TextBox1.text = ""                              'clear search textbox
   bFoundFirst = False  
   
   Print "The first was ", iFirstRow
   Print "The last was ", iLastRow
   For i = 0 To gridview1.rows.count - 1           'figure out which rows are selected
      
      If gridview1.rows[i].selected = True Then
         If bfoundfirst = False Then
            bfoundfirst = True
            ifirstrow = i
         End If 
         ilastrow = i
         Print "row " & i & " is selected"
      End If 
      '  If bfoundfirst = False Then 
      '     islotcount += gridrows[i]!slots
      '  Endif
   Next   
   Print gridview1.Rows.Select
   Print gridview1.Rows.height 
   onrow = gridview1.Row 
   iLeft = gridview1[onrow, oncol].Left
   iTop = ((onrow + 1) * 20) + 1  'iSlotCount * 20
   TextBox1.left = iLeft + 2
   TextBox1.top = iTop
   TextBox1.width = gridview1.Columns[oncol].Width + 4
   ' TextBox1.top = gridview1.ScreenX
   TextBox1.Height = ((iLastRow - iFirstRow) + 1) * gridview1.Rows[0].Height + 5
   TextBox1.Visible = True
   TextBox1.SetFocus()
   
End

Public Sub Timer1_Timer()
   '--------------------------------------------------------------
   'if txtSearch has focus, each keystroke sets timercount to 0
   'once users pauses in the keystrokes, the timer will increment
   'to over 3 and search will begin.
   '--------------------------------------------------------------

   Inc timercount
   Print "in timer:", timercount
   If timercount > 3 Then
      If Trim(txtSearch.text) <> "" Then Search() 
   Endif
   
End

Public Sub TextBox1_Activate()
   
   gridview1[onrow, oncol].text = Last.text
   Last.Visible = False 
   
End

Public Sub VBox1_MouseDown()
   
End

Public Sub rbEditArea_Click()

   ama_mbs_or_both = Last.tag
   EditArea_Clear()
   Search()

End
