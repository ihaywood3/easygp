' Gambas class file

' Copyright (C) 2008-2013 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' 
Private FTask As FStaffTasks
Private Const cTab_OutstandingTasks As Integer = 0
Private Const cTab_Completed_Tasks As Integer = 1
Private Const CTab_Allocated_Tasks As Integer = 2
Private Const cTab_Critical_Tasks As Integer = 3
Private AllocatedTasks As Collection
Private allocatedTask As Collection
Private CompletedTasks As Collection
Private CompletedTask As Collection 
Private iTaskFor As Integer                         'points to category of current task
Private cTaskForPatient As Integer = 0
Private cTaskBetweenStaff As Integer = 1
Private ColumnHeadings As String[] = ["Patient", "Staff Member"]
Private form_tasks_allocated As FTaskViewer
Private form_tasks_completed As FTaskViewer
Private form_critical_tasks As FTaskViewer

Public Sub Form_Open()
   
   Init()
   
End

Public Sub Settings_Save()
   
   FTask.Settings_Save()
   
End

Public Sub Init()
   
   With FTask = New FStaffTasks(HBox_StaffTask)
      .Set_Parent_Form("FDayBook")
      .Init()
   End With       
   
End

Public Sub Reload_Tasks()
   
   FTask.Reload()
   
End

Public Sub TabStrip1_Click()
   '-----------------------------------------------------------------
   'User has clicked on one of two tabs
   ' Tab1: shows all outstanding tasks for the staff member logged on
   ' Tab2: shows all completed tasks for the staff member logged on
   '-----------------------------------------------------------------
   
   Select Last.Index
      Case cTab_OutstandingTasks
      Case CTab_Allocated_Tasks
         If IsNull(form_tasks_allocated) Then
            With form_tasks_allocated = New FTaskViewer(Vbox_Tasks_Allocated)
               .Init("allocated")
            End With
         Else
            form_tasks_allocated.Reload()
         Endif
      Case cTab_Completed_Tasks
         If IsNull(form_tasks_completed) Then
            With form_tasks_completed = New FTaskViewer(Vbox_Tasks_Completed) 
               .Init("completed") 
            End With 
         Else
               form_tasks_allocated.Reload()
         End If 
      Case cTab_Critical_Tasks
         If IsNull(form_critical_tasks) Then
            With form_critical_tasks = New FTaskViewer(Vbox_Tasks_Critical)
               .Init("critical") 
            End With
         Else
               form_tasks_allocated.Reload()
         End If
   End Select
   
End

Public Sub Completed_Tasks_Refresh()
   ' '---------------------------------------------------
   ' 'Displays a list of completed tasks for current user
   ' '---------------------------------------------------
   ' 
   ' Dim x As Integer
   ' Dim task As Collection 
   ' Dim notes As Collection
   ' Dim note As Collection
   ' Dim document As Collection 
   ' Dim bNotedDocument As Boolean
   ' 
   ' CompletedTasks = modDayBookDBI.Staff_Tasks_Get(modDBConnect.currentUser!fk_staff, True, 0, 0, 0, True)
   ' cvwCompletedTasks.Clear()
   ' If CompletedTasks.count Then
   '    For Each task In CompletedTasks
   '       
   '       cvwCompletedTasks.Add(x, 0)
   '       cvwCompletedTasks[x][0] = Format(task!date_component_logged, "dd/mm/yyyy")
   '       If Not IsNull(task!patient_wholename) Then
   '          cvwCompletedTasks[x][1] = Task!patient_wholename
   '       Endif
   '       cvwCompletedTasks[x][2] = Task!task
   '       cvwCompletedTasks[x][3] = Task!details
   '       Inc x
   '       If Not IsNull(task!fk_row) And bNotedDocument = False Then
   '          'currently only documents are linked, so don't care what the fk is, this may change
   '          document = modInboxDBI.Document_Get(task!fk_row)
   '          If Not IsNull(document) Then
   '             cvwCompletedTasks.Add(x, 0)
   '             cvwCompletedTasks[x][0] = ""
   '             cvwCompletedTasks[x][1] = ""
   '             cvwCompletedTasks[x][2] = "Document source: " & document!msh_sending_entity & " " & document!tag_user
   '             cvwCompletedTasks[x][3] = ""
   '             Inc x
   '             
   '             bNotedDocument = True   
   '          Endif
   '       End If
   '       
   '       '-------------------------------
   '       'Now get the notes for that task
   '       '--------------------------------
   '       notes = modDayBookDBI.Staff_Tasks_Get_Notes(task!fk_task)
   '       For Each note In notes
   '          cvwCompletedTasks.Add(x, 0)
   '          cvwCompletedTasks[x][0] = ""
   '          cvwCompletedTasks[x][1] = ""
   '          cvwCompletedTasks[x][2] = note!note
   '          cvwCompletedTasks[x][3] = "- " & note!staff_made_note_title & " " & note!staff_made_note_wholename '& ")"
   '          Inc x
   '       Next
   '       cvwCompletedTasks.Add(x, 0)
   '       cvwCompletedTasks[x][0] = ""
   '       cvwCompletedTasks[x][1] = ""
   '       Try cvwCompletedTasks[x][2] = "Finalised on " & Format(task!date_finalised, "dd/mm/yyyy") & " by " & task!staff_finalised_task_title & " " & task!staff_finalised_task_wholename
   '       cvwCompletedTasks[x][3] = ""
   '       Inc x
   '    Next
   ' Endif
   ' 
   
End

Public Sub rbTasks_Click()
   '------------------------------------------------------------------------------
   'The tag property of radiobutton = either cTaskBetweenStaff or cTaskForPatient
   '-----------------------------------------------------------------------------
   ' 
   ' iTaskFor = Last.tag
   ' lblFilter.text = "Filter by " & ColumnHeadings[Last.tag] & "    " 'label is auto-resize
   ' cvwCompletedTasks.Columns[1].text = ColumnHeadings[iTaskFor]  
   
End

Public Sub txtFilter_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   
End

Public Sub txtFilter_LostFocus()
   
   Last.BackGround = Color.White
   
End

' Public Sub tbRefreshAllocatedTasks_Click()
'    
' End
' 
' Public Sub chkTaskStatus_Click()
'    
'    Tasks_Allocated_For_Others_ReLoad()
'    
' End
