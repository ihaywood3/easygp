' Gambas class file

' Copyright (C) 2008-2012 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' ------------------------------------------------------------------------
' PURPOSE         A module to save patient specific information to do with 
'                 billing and general practice
' TODO            Put in an admin general option for the default doctor
'-------------------------------------------------------------------------
Private doctors As Collection
Private fk_person As Collection
Private patient As Collection 
Private veteran_card_types As Collection
Private centrelink_card_types As Collection
Private health_insurance_companies As Collection
Private billing_types As Collection
Private bExit As Boolean
Private bkeyvalid As Boolean
Private FPersons_Vbox_EditArea As VBox

Public Function Preferred_Doctor() As Integer
   
   Return doctors[cmbPreferredDoctor.index]!fk_staff
   
End

Public Function Medicare_Number() As String
   
   Return Trim(txtMedicareNumber.text) 
   
End

Public Function Medicare_Reference_number() As Integer
   
   Return Val(txtMedicareReferenceNumber.text)
   
End 

Public Function Medicare_Card_Expiry_Date() As String
   
   Return (Trim(txtMedicareCardExpiryDate.text))
   
End

Public Function Veteran_Card_Number() As String
   
   Return Trim(txtVeteranNumber.text) 
   
End

Public Function Veteran_Card_Type() As Integer
   '---------------------------------------
   'return clerical.lu_veteran_card_type
   '1= gold, 2=lilac, 3= specific condition
   '---------------------------------------
   If cmbVeteranCardTypes.Index <> 0 Then
     Return veteran_card_types[cmbVeteranCardTypes.Index]!pk
   End If      
End

Public Function veteran_specific_condition() As String
   '---------------------------------------------------
   'The veterans entitlement may be limited to say skin 
   '---------------------------------------------------  

   Return Trim(txtVeteranSpecificCondition.Text)
   
End

Public Function Concession_Card_Number() As String
   '---------------------------------------------------------
   'The number of one of the three available concession cards
   '--------------------------------------------------------- 

   Return Trim(txtConcessionNumber.text)
   
End

Public Function Concession_Card_Expiry_Date() As String
   '------------------------------------
   'The date the concession card expires
   '------------------------------------

   Return Trim(txtConcessionExpiryDate.text)
   
End


Public Function Billing_type() As Integer
   If cmbBIllingLevel.index <> -1 Then 
      Return billing_types[cmbBIllingLevel.index]!pk
   End If   

End
 
Public Function Centrelink_Card_Type() As Integer
   If cmbCentreLinkCardTypes.index <> 0 Then Return centrelink_card_types[cmbCentreLinkCardTypes.index]!pk 
   
End

Public Function Private_Health_Fund() As Integer
   If cmbPrivateInsuranceCompany.index <> -1 Then Return health_insurance_companies[cmbPrivateInsuranceCompany.index]!pk
   
End

Public Sub Init(VB As VBox)
   '-----------------------------------------------------------------------------------------------------------
   'note that modUtil.Copy_Collection_Keyed_Sequentially gives the collection keys 0>n to match the combo index
   '-----------------------------------------------------------------------------------------------------------   
   FPersons_Vbox_EditArea = VB
   lblMeasure.text = "  Concession Card Name  "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea, lblMeasure)
   doctors = modUtil.Copy_Collection_Keyed_Sequentially(modContactsDBI.Staff_Get_With_Provider_Number())
   modUtil.LoadCombo(cmbPreferredDoctor, doctors, "wholename")
   veteran_card_types = modUtil.Copy_Collection_Keyed_Sequentially(modBilling.Veteran_Card_Types_Get())
   modUtil.LoadCombo(cmbVeteranCardTypes, veteran_card_types, "type")
   centrelink_card_types = modUtil.Copy_Collection_Keyed_Sequentially(modBilling.Centrelink_Card_Types_Get())
   modUtil.LoadCombo(cmbCentreLinkCardTypes, centrelink_card_types, "type")
   health_insurance_companies = modUtil.Copy_Collection_Keyed_Sequentially(modBilling.Health_Funds_Get())
   modUtil.LoadCombo(cmbPrivateInsuranceCompany, health_insurance_companies, "fund")
   billing_types = modUtil.Copy_Collection_Keyed_Sequentially(modBilling.Billing_Types_Get())
   modUtil.LoadCombo(cmbBIllingLevel, billing_types, "name") 'ian's table hence the different field name
   lblMeasure.text = "  Commonwealth Seniors Health Card  "
   cmbPreferredDoctor.width = lblMeasure.Width
   cmbVeteranCardTypes.width = lblMeasure.Width
   cmbCentreLinkCardTypes.width = lblMeasure.Width
   cmbBIllingLevel.width = lblMeasure.Width
   cmbPrivateInsuranceCompany.width = lblMeasure.Width
   HBox_Medicare.width = lblMeasure.Width
   HBox_Concession.width = lblMeasure.Width  
   
End

Public Sub EditArea_Clear()
    
    bExit = True
    modEditAreaHelpers.EditArea_Clear(Vbox_EditArea)
    Veteran_Data_Entry_Enable(False)
    Concession_Card_Enable(False)
    bExit = False
    
End

Public Sub Concession_Card_Enable(flag As Boolean)
   
    txtConcessionExpiryDate.Enabled = flag  
    txtConcessionNumber.Enabled = flag   
    If Not Flag Then
        txtConcessionExpiryDate.text = ""
         txtConcessionNumber.text = ""
    Endif
End


Public Sub Veteran_Data_Entry_Enable(flag As Boolean)
   
    txtVeteranNumber.Enabled = flag   
    txtVeteranSpecificCondition.Enabled = flag 
   If Not Flag Then
      txtVeteranNumber.text = ""
      txtVeteranSpecificCondition.text = ""
   Endif
End

Public Sub Display_Patient_Data(P As Collection)
   
   EditArea_Clear()
   patient = P
   bExit = True
   Try txtMedicareNumber.text = P!medicare_number
   Try txtMedicareReferenceNumber.text = P!medicare_ref_number
   Try txtMedicareCardExpiryDate.text = Format(P!medicare_expiry_date, "dd/mm/yyyy")
   cmbVeteranCardTypes.index = cmbVeteranCardTypes.Find(P!veteran_card_type)
   If Not IsNull(P!veteran_card_type) Then
      Veteran_Data_Entry_Enable(True)
   Endif
   Try txtVeteranNumber.text = P!veteran_number
   Try txtVeteranSpecificCondition.text = P!veteran_specific_condition
   Try cmbCentreLinkCardTypes.Find(P!concesssion_card_type)
   If Not IsNull(P!concesssion_card_type) Then
      Concession_Card_Enable(True)
      Try txtConcessionExpiryDate.text = P!concesssion_card_type
      Try txtConcessionNumber = P!concession_card_number 
   Endif
   Try cmbBIllingLevel.index = cmbBIllingLevel.Find(P!billing_type)
   Try cmbPrivateInsuranceCompany.index = cmbPrivateInsuranceCompany.Find(P!fund)
   Try txtlegacyFileNumber.text = P!pk_legacy
   bExit = False  
End

Public Function EditArea_ExcludeKeys(keycode As Integer, tag As String) As Boolean
   '----------------------------------------------------------
   'PURPOSE       Restrict key presses for validation purposes
   'HOW IT WORKS  see routines names
   'FIXME         Ian would do this much simpler I'm sure
   '-----------------------------------------------------------
   
   Select Case Last.Tag
      Case "medicare number", "medicare card reference number"
         bKeyValid = modUtil.AllowKeys(const.AllowKeys_NumbersOnly, keycode)
      Case "veteran number", "Concession number"
         bKeyValid = modUtil.AllowKeys(const.AllowKeys_Letters_Numbers, keycode)
      Case "age onset"
         bKeyValid = modUtil.AllowKeys(const.AllowKeys_NumbersOnly, keycode)
      Case "medicare card expiry date", "concession expiry date"
         bKeyValid = modUtil.AllowKeys(const.AllowKeys_DateFormat, keycode)
      Case Else
         bkeyvalid = True
   End Select
   Return bKeyValid
   
End
Public Sub EditArea_Notify_DataChange(flag As Boolean)
   
  FPersons_Vbox_EditArea.padding = 1 
   
End

Public Sub EditArea_TextBox_Activate()
   
   Select Case Last.tag
         
      Case "medicare number"
         txtMedicareReferenceNumber.SetFocus()
      Case "medicare card reference number"
         txtMedicareCardExpiryDate.SetFocus()
      Case "medicare card expiry date"
         cmbBIllingLevel.SetFocus()
      Case "veteran number"
         txtVeteranSpecificCondition.SetFocus()
      Case "veteran condition"
         txtFindNextOfKin.SetFocus()
      Case "Concession number"
         txtConcessionExpiryDate.SetFocus()
      Case "concession expiry date"
         cmbBIllingLevel.SetFocus()
      Case "responsible payer"
         cmbPrivateInsuranceCompany.SetFocus()
   End Select
   
End

Public Sub EditArea_TextBox_Keypress()
   If bExit Then Return 
   bkeyvalid = EditArea_ExcludeKeys(key.code, Last.tag)
   If bkeyvalid = False Then
      Stop Event
      Return
   End If
   Select Case Key.Code
      Case Key.Down
         If columnview1.Visible Then
            With columnview1
               .SetFocus()
               .Item.Selected = True   
            End With
         Endif
   End Select
   EditArea_Notify_DataChange(True)
End

Public Sub EditArea_Combo_Click()
   If Bexit Then Return
   Select Case Last.tag
      Case "veteran card type"
         Select Case Last.index + 1                'the types are 1 based
            Case const.Veteran_Entitlement_None
               Veteran_Data_Entry_Enable(False)
                txtFindNextOfKin.SetFocus()
            Case const.Veteran_Entitlement_Full
                 Veteran_Data_Entry_Enable(True)
                  txtVeteranNumber.SetFocus()
            Case const.Veteran_Entitlement_Specific 
               Veteran_Data_Entry_Enable(True)
               txtVeteranSpecificCondition.SetFocus()
         End Select
        Case "centrelink card type"
          If Last.index + 1 = const.Concession_Entitlement_None Then
             Concession_Card_Enable(False)
            txtFindNextOfKin.SetFocus()
          Else
             Concession_Card_Enable(True)
             txtConcessionNumber.SetFocus()
          Endif
      Case "private insurance company"
         cmbPreferredDoctor.SetFocus()
      Case "preferred doctor"
        txtFindNextOfKin.SetFocus()
   End Select
   EditArea_Notify_DataChange(True)
End

Public Sub Next_Of_Kin_Get()
   
End

Public Sub Next_Of_Kin_Select()
   
End

Public Sub EditArea_TextBox_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   
End

Public Sub EditArea_TextBox_LostFocus()
   
   Last.BackGround = Color.white
   
End 

Public Sub EditArea_Combo_Keypress()

   If Key.code = Key.Return Then    
      Select Case Last.tag
         Case "veteran card type"
         Case "centrelink card type"
         Case "private insurance company"
         Case "preferred doctor"
         Case "billing type"
            txtPayer.SetFocus()
      End Select
   End If  

End

