' Gambas class file

' Gambas module file

' Copyright (C)2008-2016 Dr. Richard Terry
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'-------------------------------------------------------------------------------
' PURPOSE      A form to allow entry and viewing of day to day staff activities
'-------------------------------------------------------------------------------
Private currentShift As CStaffShift
Private Form_Viewer As FProgressNotesViewer
Private Form_Editor As FEditor
Private fk_staff_note As Variant
Private Embedded_In_Form As String = Me.Name
Private staff_notes_types As Collection
Private staff_notes As Collection
Private staff_notes_selected As Collection 'the current row of saved data selected
Private fk_lu_notes_type As Variant
Private day_notes As HBox[]
Private staff As Collection
Private fk_lu_urgency As Variant
Private current_notes As TextLabel
Private Last_Row_Clicked As HBox
Private Form_html_viewer As FHtmlViewer

Public Sub _new()
   
   With Form_Editor = New FEditor(VBox_Editor)
      .lblHeading.Visible = False
      .Hbox_WordProcessorButtons.Visible = False   
   End With
   timer1.delay = 1000 * 120 '2 mins
   With Form_html_viewer = New FHtmlViewer(VBox_StaffNotes)
      .tbWebBrowserZoomIn.visible = True
      .tbWebBrowserZoomout.visible = True
      .tbWebBrowserPrint.Visible = True
      .VBox_HTML_SubHeading.visible = True   
      .tlSubHeading.text = SubHeading()
   End With
   staff_notes_types = modUtilGUI.LoadCombo(cmbNotesType, modUtil.Copy_Collection_Keyed_Sequentially(modStaffShiftDBI.Notes_Types_Get()), "type")
   Notes_Type_Make_Menu
   staff = modUtil.Copy_Collection_Keyed_Sequentially(modContactsDBI.Staff_Get())
   modUtilGUI.LoadCombo(cmbStaff, staff, "wholename")
   lblMeasure.text = "  For Staff Member "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea, lblMeasure) 
   VSplit1.Layout = Settings[Me.name & "/Vsplit1.Layout", modUtilGUI.VSplit([1, 8])]
   
End

Public Sub Form_KeyPress()
   
   Dim CtrlDown As Boolean
   
   Try CtrlDown = Key.Control
   If CtrlDown Then
      Select Case Key.code
         Case Asc("=")
            Form_html_viewer.zoom_in()
            ' Zoom("zoom_in")
         Case Asc("-")
            Form_html_viewer.zoom_out() 
            '  Zoom("zoom_out")
      End Select
   End If
   
End

Public Sub Set_Embedded_In_Form(FN As String)
   
   Embedded_In_Form = FN  
   
End

Public Sub Init()
   
   modLater.Add(Me, "Shift_Create")
   If Embedded_In_Form = "FProgressNoteEditor" Then
      Vbox_Right.Reparent(Me)
      HSplit1.Visible = False 
   Endif
   
End

Public Sub Shift_Create()
   
   currentShift = New CStaffShift(modDBConnect.currentUser!fk_staff)
   Reload()
   
End


Public Sub EditArea_Clear()
   
   Vbox_EditArea.Enabled = False 
   modEditAreaHelpers.EditArea_Clear(Vbox_EditArea)
   cmbNotesType.Index = cmbNotesType.Find("General")
   Try fk_lu_notes_type = staff_notes_types[cmbNotesType.Index]!pk
   cmbStaff.Index = - 1
   Form_Editor.teNotes.RichText = ""
   rbUrgencyRoutine.Value = True 
   fk_lu_urgency = const.UrgencyLevelRoutine
   fk_staff_note = Null
   
End

Public Function Save() As Boolean
   '------------------------------------------------------------------------------
   'Saves another row of notes for the staff member
   '------------------------------------------------------------------------------
   ' CREATE TABLE clerical.staff_notes
   ' (
   '   pk serial NOT NULL,
   '   fk_staff_shift integer NOT NULL,
   '   notes text NOT NULL,
   '   fk_staff_destination integer,
   '   fk_lu_staff_notes_type integer NOT NULL,
   '   deleted boolean DEFAULT false,
   '   CONSTRAINT staff_notes_pkey PRIMARY KEY (pk),
   '   CONSTRAINT staff_notes_fk_lu_staff_notes_type_fkey FOREIGN KEY (fk_lu_staff_notes_type)
   '       REFERENCES clerical.lu_staff_notes_type (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT staff_notes_fk_staff_shift_fkey FOREIGN KEY (fk_staff_shift)
   '       REFERENCES clerical.staff_shifts (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION
   ' )
   ' WITH (
   '   OIDS=FALSE
   ' );
   '-------------------------------------------------------------------------
   
   Dim New_Note As CRow 
   Dim editor_notes As String = Form_Editor.teNotes.RichText
   
   If Form_Editor.Vbox_ConsultNotes.Padding = 0 Then Return
   If Not Notes_Valid() Then Return
   
   ' editor_notes = Replace$(editor_notes, "font-weight: 600", "font-weight: bold")
   ' editor_notes = Replace$(editor_notes, "-qt-paragraph-type:empty; margin-top:0px;", "")
   New_Note = New CRow  
   If fk_staff_note Then
      New_Note.put_Unchanged(fk_staff_note, "fk_staff_note")
   Endif 
   New_Note!fk_staff_shift = currentShift.GetPK()
   If cmbStaff.Index <> -1 Then
      New_Note!fk_staff_destination = staff[cmbStaff.index]!fk_staff
   Endif
   Print editor_notes
   ' New_Note!notes = Fix_HTML(editor_notes, [])
   '  New_Note!notes = Replace(New_Note!notes, "p, li { white-space: pre-wrap; }", "")
   New_Note!notes = editor_notes
   New_Note!time_logged = Format(Now, "yyyy-mm-dd hh:nn")
   New_Note!fk_lu_staff_notes_type = fk_lu_notes_type
   New_Note!fk_lu_urgency = fk_lu_urgency
   New_Note!completed = CBool(chkCompleted.value)
   If Trim(txtCompletionNotes.text) <> "" Then
      New_Note!completion_notes = Trim(txtCompletionNotes.text)
   Else
      New_Note!completion_notes = Null
   Endif
   New_Note.Save("clerical.staff_notes", "fk_staff_note")
   modDBConnect.CommitTrans
   Reload() 
   
End

Public Function Fix_HTML(s As String, lastspan As String[]) As String
   'Attempt to clean up the crappy html that comes out of the QT widgit
   
   Dim r As Regexp
   Dim newtag As String
   
   If s = "" Then Return s
   s = RegExp.Replace(s, "<style.*</style>", "", RegExp.DotAll Or RegExp.Multiline)
   r = New Regexp(s, "<([^>]+)>")
   If r.Offset = -1 Then
      Return s
   Else
      newtag = Make_New_Tag(LCase$(r[1].Text), ByRef lastspan)
      If IsNull(newtag) Or If newtag = "" Then
         Return Left$(s, r.Offset) & Fix_HTML(Right$(s, - (r.Offset + Len(r.Text))), lastspan)
      Else
         Return Left$(s, r.Offset) & "<" & newtag & ">" & Fix_HTML(Right$(s, - (r.Offset + Len(r.Text))), lastspan)
      Endif
   Endif
   
End

Private Function Make_New_Tag(tag As String, ByRef lastspan As String[]) As String
   
   Dim r As Regexp
   Dim tokens As New String[]
   Dim tokens_close As New String[]
   
   If IsNull(lastspan) Then lastspan = New String[]
   r = New Regexp(tag, "^span.*")
   If r.Offset = 0 Then
      If InStr(tag, "font-weight:600") Then
         tokens.Add("b")
         tokens_close.Add("/b")
      Endif
      If InStr(tag, "font-style:italic") Then
         tokens.Add("i")
         tokens_close.Add("/i")
      Endif
      If InStr(tag, "text-decoration: underline") Then
         tokens.Add("u")
         tokens_close.Add("/u")
      Endif
      If Not IsNull(tokens) And If Not IsNull(tokens_close) And If tokens.Length > 0 And If tokens_close.Length > 0 Then
         lastspan.Push(tokens_close.Join("><"))  ' calling code adds the final outer < >
         Return tokens.Join("><")
      Else  ' we didn't recognise anything in the span, so add nothing to the translated HTML stream
         lastspan.Add("")
         Return Null
      Endif
   Endif
   If tag = "/span" Then
      If lastspan.Length > 0 Then
         Return lastspan.Pop()
      Else
         Return Null
      Endif
   Endif
   r = New Regexp(tag, "^p.*")
   If r.Offset = 0 Then
      Return "p"
   Endif
   If tag = "/p" Then
      Return "/p"
   Endif
   Return Null
   
End



Public Sub lblNotes_mousedown()
   
   Try Last_Row_Clicked.Background = Color.White
   Last.Parent.background = Color.RGB(215, 232, 240) 'Color.LightBackground
   Note_Display
   Last_Row_Clicked = Last.Parent 
   
End

Public Sub lblNotes_Menu()
   
   mnuOfficeLog.Popup
   
End

Public Function New_Row_HTML() As String
   'Used in this module and FSTaffNotes
   'date, category, destination, notes
   
   Dim sHtml As String
   
   If Embedded_In_Form = "FProgressNoteEditor" Then
      'date and notes only will fit in the space
      sHtml = ""
      "<COL WIDTH=5%>"
      "<COL WIDTH=85%>"
      "<TR VALIGN=TOP>"
      "<TD WIDTH=5%>"
      "col1"
      "</TD>"
      "<TD WIDTH=85%>"
      "col4"
      "</TD>"
      "</TR>" 
   Else
      'in the main staff messages form
      'date, type, for whom, notes
      sHtml = ""
      "<COL WIDTH=5%>"
      "<COL WIDTH=10%>"
      "<COL WIDTH=15%>"
      "<COL WIDTH=70%>"
      "<TR VALIGN=TOP>"
      "<TD WIDTH=5%>"
      "col1"
      "</TD>"
      "<TD WIDTH=10%>"
      "col2"
      "</TD>"
      "<TD WIDTH=15%>"
      "col3"
      "</TD>"
      "<TD WIDTH=70%>"
      "col4"
      "</TD>"
      "</TR>" 
   Endif
   Return sHTML
   
End

Public Sub New_Message_Row(row_data As Collection) 
   'adds a new row to a scrollview representing an internal office staff message
   'fixme code duplicated in FProgressNoteEditor - no time to think tonight
   'This sub creats a HBOX containing a picture dot: green, amber, red (urgency)
   'the date of the message, who its for,the message.
   'When the user clicks on the textlabel, it is  highlighted blue background
   
   Dim HB As HBox
   Dim lbl As TextLabel
   Dim hline As Separator
   Dim urgency_pic As PictureBox
   Dim sTableTemplate As String
   Dim sDestinationStaff As String
   
   If IsNull(day_notes) Then day_notes = New HBox[]
   With HB = New HBox(scrollview1) As "notes_row"         'create the box to hold everything
      .AutoResize = True 
      .Padding = 2
      .tag = row_data
      .Background = Color.White
   End With
   With urgency_pic = New PictureBox(HB) As "picUrgency"  'green, amber and red
      .height = 28
      .Width = 28
      .Alignment = Align.TopLeft
      Select Case row_data!fk_lu_urgency
         Case 1
            .Picture = Picture.Load("icons/12/green_dot.png")
         Case 2
            .Picture = Picture.Load("icons/12/amber_dot.png")
         Case 3
            .Picture = Picture.Load("icons/12/red_dot.png")
      End Select
   End With
   
   With lbl = New TextLabel(HB) As "lblNotes"              'the row of notes
      .AutoResize = True 
      .Alignment = Align.TopLeft
      .width = scrollview1.width
      .text = "<TABLE WIDTH=100% BORDER=0 CELLPADDING=5 CELLSPACING=1>"
      .text &= New_Row_HTML()
      .text = Replace(.text, "col1", Format(row_data!shift_date, "dd/mm/yyyy"))
      .text = Replace(.text, "col2", row_data!type)
      If IsNull(row_data!staff_destination_wholename) Then
         .text = Replace(.text, "col3", "")
      Else
         .text = Replace(.text, "col3", row_data!staff_destination_title & " " & row_data!staff_destination_wholename)
      End If   
      .text = Replace(.text, "col4", row_data!notes)
      .text &= "</TABLE>"
      .Expand = True
   End With
   Hb.Height = lbl.Height
   With hline = New Separator(scrollview1)  ' a line to separate each noes
      .height = 1
      .background = Color.DarkGray
   End With
   
End

Public Sub Notes_Row_Enter()
   
   Dim HCtrl As Control
   Dim lbl As Label
   Dim cb As ComboBox
   Dim HB As HBox
   Dim TL As TextLabel
   
   staff_notes_selected = Last.tag
   
   For Each Hctrl In Last.Children  
      Select Case Hctrl.Name
          Case "lblNotes"
            current_notes = hctrl
          End Select
   Next
   
End

Public Sub Reload()
   
   Dim entry As Collection
   
   staff_notes = modStaffShiftDBI.Staff_Notes_Get_Outstanding()
   scrollview1.Children.Clear
   For Each entry In staff_notes
      New_Message_Row(entry)
   Next
   If Embedded_In_Form <> "FProgressNoteEditor" Then
      Form_html_viewer.WebView1.HTML = modStaffShiftDBI.Offices_Notes_Create_HTML()
   End If   
   EditArea_Clear
   
End

Public Sub VSplit1_ReSize()
   
   Settings[Me.name & "/Vsplit1.Layout"] = VSplit1.layout
   
End

Public Sub EditArea_Buttons_Click()
   
   Select Case Last.tag
      Case "new"
         EditArea_Clear
         Vbox_EditArea.Enabled = True  
      Case "save"
         Save()
         EditArea_Clear
      Case "reload"
         Reload
   End Select
   
End

Public Function Notes_Valid() As Boolean
   
   Return True 
   
End

Public Sub rbDegreeUrgency_Click()
   
   fk_lu_urgency = Last.tag   
   
End

Public Sub EditArea_Combo_Click()
   
   Print Last.tag
   Select Case Last.tag
      Case "notes type"
         fk_lu_notes_type = staff_notes_types[Last.index]!pk
   End Select
   
End

Public Sub lblNotes_Type_menu()
   
   mnuOfficeLog.Popup() 
   
End

Public Sub mnuOfficeLog_Click()
   
   Select Case Last.tag
      Case "edit"
         Note_Edit
      Case "change entry type"
         Note_Change_Entry_Type
      Case "change staff allocated"
         Note_Change_Staff_Allocated
      Case "mark completed"
         Note_Mark_Completed
      Case "mark logged"
      Case "delete"
         Note_Delete
      Case "print"
      Case "help"
         modUtilGUI.NotImplemented("Help for this section")
   End Select   
   
End

Public Sub Note_Mark_Completed()
   
   If modDBConnect.update("clerical.staff_notes", Null, ["pk": fk_staff_note, "completed": True]) Then
      modDBConnect.CommitTrans
      Reload 
   Endif
   
End

Public Sub Note_Edit()
   
   VBox_EditArea.Enabled = True  
   Form_Editor.teNotes.SetFocus 
   
End

Public Sub Note_Display()
   
   EditArea_Clear
   fk_staff_note = staff_notes_selected!pk_staff_notes
   cmbNotesType.Index = cmbNotesType.Find(staff_notes_selected!type)
   cmbStaff.index = cmbStaff.Find(staff_notes_selected!staff_destination_wholename)
   With Form_Editor
      .bExit = True  
      .teNotes.RichText = staff_notes_selected!notes
      .bExit = False 
   End With
   Select Case staff_notes_selected!fk_lu_urgency
      Case const.UrgencyLevelRoutine
         rbUrgencyRoutine.Value = True  
      Case const.UrgencyLevelModerate  
         rbUrgencyModerate.value = True 
      Case const.UrgencyLevelUrgent
         rbUrgencyUrgent.value = True   
   End Select
   chkCompleted.value = staff_notes_selected!completed   
   If Not IsNull(staff_notes_selected!completion_notes) Then
      txtCompletionNotes.text = staff_notes_selected!completion_notes
   Endif
   
End

Public Sub Note_Change_Entry_Type()
   
End

Public Sub Note_Change_Staff_Allocated()
   
End

Public Sub Note_Delete()
   
   If Message.Question("Are you sure you wish to delete this entry", "Yes", "No") = 2 Then Return
   If modDBConnect.update("clerical.staff_notes", Null, ["pk": fk_staff_note, "deleted": True]) Then
      modDBConnect.CommitTrans
      Reload
   Endif
   
End

' Add's types to the popup menu over a note or entry made by staff
Public Sub Notes_Type_Make_Menu()
   
   Dim mnu As Menu
   Dim type As Collection
   
   For Each type In staff_notes_types
      With mnu = New Menu(mnuOfficeLog_ChangeEntrytype) As "mnuChangeOfficeType"
         .Text = type!type
         .tag = type
         .Visible = True   
      End With
   Next
   
End



Public Sub Form_Leave()
   
   Timer1.Stop
   
End

Public Sub Form_Enter()
   
   Timer1.Enabled = True
   
End

Public Sub Timer1_Timer()
   
   Reload  
   Print "reloading"
   
End

Public Function SubHeading() As String
   
   Dim sHtml As String 
   
   sHtml = "<TABLE WIDTH=100% BORDER=0 CELLPADDING=5 CELLSPACING=1>"
   sHtml &= modStaffShiftDBI.Staff_Notes_Table_Row_Template()
   sHtml = Replace(sHtml, "col1", "Date")
   sHtml = Replace(sHtml, "col2", "Time")
   sHTMl = Replace(sHtml, "col3", "Sender")
   sHtml = Replace(sHtml, "col4", "Recipient and Message")
   sHtml = Replace(sHtml, "col5", "Status")
   shtml &= "</TABLE>"
   Print shtml
   Return sHtml
   
End

' 
' - - drop table clerical.staff_shifts cascade;
' - - drop table clerical.lu_staff_notes_type cascade;
' - - drop table clerical.staff_notes;
' Create TABLE clerical.lu_staff_notes_type
' (
'   pk serial Not Null,
'   type text Not Null,
'   CONSTRAINT lu_staff_notes_type_pkey PRIMARY KEY(pk)
' )
' With (
'   OIDS = False
' );
' 
' ALTER TABLE clerical.lu_staff_notes_type OWNER To easygp;
' GRANT Select On TABLE clerical.lu_staff_notes_type To staff;
' 
' COMMENT On TABLE clerical.lu_staff_notes_type Is 
' 'the type of entry made by the staff';
' 
' INSERT INTO clerical.lu_staff_notes_type(type)values( 'General');
' INSERT INTO clerical.lu_staff_notes_type(type)values( 'Complaint');
' INSERT INTO clerical.lu_staff_notes_type(type)values( 'Referral Needed');
' INSERT INTO clerical.lu_staff_notes_type(type)values( 'Make Phone Call');
' INSERT INTO clerical.lu_staff_notes_type(type)values( 'Scripts Needed');
' INSERT INTO clerical.lu_staff_notes_type(type)values( 'Call Patient');
' INSERT INTO clerical.lu_staff_notes_type(type)values( 'Document Needed');
' INSERT INTO clerical.lu_staff_notes_type(type)values( 'Staff Meeting Item ');
' 
' Create TABLE clerical.staff_shifts
' (
'   pk serial primary key,
'   shift_date timestamp without Time zone Not Null,
'   fk_staff integer Not Null references admin.staff(pk)
' );
' ALTER TABLE clerical.staff_shifts OWNER To easygp;
' GRANT ALL On TABLE clerical.staff_shifts To staff;
' 
' comment On table clerical.staff_shifts Is 'the record of the staff''s shift';
' 
' 
' 
' Create TABLE clerical.staff_notes
' (
'   pk serial primary key,
'   time_logged Time Not Null;
'   fk_staff_shift integer Not Null references clerical.staff_shifts(pk),
'   notes text Not Null,
'   fk_staff_destination integer Default Null,
'   fk_lu_urgency integer Not Null references common.lu_urgency(pk),
'   fk_staff_completed integer Default Null,
'   fk_lu_staff_notes_type integer Not Null references clerical.lu_staff_notes_type(pk),
'   completed boolean Default False,
'   date_completed Date Default Null,
'   completion_notes text Default Null,
'   deleted boolean Default False 
' );
' 
' ALTER TABLE clerical.staff_notes OWNER To easygp;
' GRANT ALL On TABLE clerical.staff_notes To richard;
' 
' Create Or replace view Clerical.vwStaffNotes As (
' Select staff_shifts.pk As Fk_staff_shift,
'        staff_shifts.shift_date,
'        staff_shifts.fk_staff As Fk_staff_logged,
'        vwStaff.title As Staff_logged_title,
'        vwStaff.wholename As Staff_logged_wholename,
'        staff_notes.pk As Pk_staff_notes,
'        staff_notes.time_logged,
'        staff_notes.notes,
'        staff_notes.fk_staff_destination,
'        staff_notes.fk_staff_completed,
'        staff_notes.fk_lu_urgency,
'        staff_notes.fk_lu_staff_notes_type,
'        staff_notes.deleted As Staff_note_deleted,
'        staff_notes.completed,
'        staff_notes.date_completed,
'        staff_notes.completion_notes,
'        lu_staff_notes_type.type,
'        vwStaff1.wholename As Staff_destination_wholename,
'        vwStaff1.title As Staff_destination_title,
'        vwStaff2.wholename As Staff_completed_wholename,
'        vwStaff2.title As Staff_completed_title
' From clerical.staff_shifts
' JOIN admin.vwStaff On staff_shifts.fk_staff = vwSTaff.fk_staff
' JOIN clerical.staff_notes On staff_notes.fk_staff_shift = staff_shifts.pk
' JOIN common.lu_urgency On staff_notes.fk_lu_urgency = lu_urgency.pk
' LEFT JOIN admin.vwStaff As VwStaff1 On staff_notes.fk_staff_destination = vwStaff1.fk_staff
' LEFT JOIN admin.vwStaff As VwStaff2 On staff_notes.fk_staff_completed = vwStaff2.fk_staff
' JOIN clerical.lu_staff_notes_type On lu_staff_notes_type.pk = staff_notes.fk_lu_staff_notes_type)
' ;
' 
' ALTER TABLE clerical.vwStaffNotes OWNER To easygp;
' GRANT Select On TABLE clerical.vwStaffNotes To staff;
' 
' ALTER TABLE clerical.vwStaffNotes OWNER To easygp;
' GRANT Select On TABLE clerical.vwStaffNotes To staff;

'- - added staff status To the admin.vwStaff
' Create Or REPLACE VIEW admin.vwstaff As 
'  Select roles.role,
'     staff.fk_person,
'     staff.logon_name,
'     staff.fk_role,
'     staff.pk,
'     staff.pk As Fk_staff,
'     persons.firstname,
'     persons.surname,
'     (persons.firstname || ' '::text) || persons.surname AS wholename,
'     persons.salutation,
'     persons.fk_title,
'     lu_title.title,
'     staff.qualifications,
'     persons.surname_normalised,
'     employees_numbers.provider_number,
'     data_numbers_persons.prescriber_number,
'     employees_numbers.australian_business_number,
'     data_numbers_persons.hpii,
'     staff.fk_status,
'     lu_employee_status.status
'    From admin.staff staff
'      JOIN admin.lu_staff_roles roles On staff.fk_role = roles.pk
'      JOIN contacts.data_persons persons On staff.fk_person = persons.pk
'      JOIN contacts.lu_title On persons.fk_title = lu_title.pk
'      LEFT JOIN contacts.data_numbers_persons On staff.fk_person = data_numbers_persons.fk_person
'      LEFT JOIN contacts.data_numbers employees_numbers On staff.fk_person = employees_numbers.fk_person
'      JOIN contacts.lu_employee_status On staff.fk_status = lu_employee_status.pk;
'      
' ALTER TABLE admin.vwstaff OWNER To easygp;
' GRANT ALL On TABLE admin.vwstaff To staff;
' 
' update db.lu_version set lu_minor = 484;
