' Gambas class file

' Copyright (C) 2008-2011 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'--------------------------------------------------------------------------
'PURPOSE          A form to display and enter appointment for a single day
'TODO             IAN TO RE-WRITE THIS MODULE USING PROPER LOGIC
'                 CODE IN THIS MODULE SUCKS BADLY - TOTALLY WRONG!
'-------------------------------------------------------------------------

Private $iLast As Integer
Private $sLast As String
Private $sOption As String
Private $hEditor As Object
Private bexit As Boolean
Private obs As Observer
Private OnRow As Integer
Private GridData As Collection 
Public GridRows As Collection
Private iLeft As Integer
Private iTop As Integer
Private i As Integer
Public iFirstRow As Integer
Private iLastRow As Integer
Private bFoundFirst As Integer
Private PregnancyIcon As Picture = Picture["icons/20/pregnancy.png"]
Private BloodTestIcon As Picture = Picture["icons/16/bloodtube16x16.png"]
Private ProcedureIcon As Picture = Picture["icons/24/glove-scalple_2424.png"]
Private MentalHealthPlan As Picture = Picture["icons/22/face-smile.png"]
Private ScriptIcon As Picture = Picture["icons/20/pill2020.png"]
Private ImmunizationIcon As Picture = Picture["icons/20/syringe2020.png"]
Private WorkcoverIcon As Picture = Picture["icons/20/workcover2020.png"]  
Private CheckupIcon As Picture = Picture["icons/22/heart.png"]
Private irowheight As Integer = 18 'fix me
Private staff_photo As Picture
Private staff_member As Collection
Private form_select As FPatientsSelect
Private appointment_interval As Integer      'the time interval in minutes for this user for this day FIXME get from backend
Private fk_clinic As Integer                 'clinic where the appointments are being made for
Private Appointments As Collection
Private fk_staff As Integer
Private pk_view As Integer
Private appointment As Collection
Private appointment_Date As Date
Public patient As Collection 

Public Sub Init(sm As Collection, app_date As Date, clinic_key As Integer)
   '----------------------------------------------------------
   'initialise the appointment module from  FMakeAppointments 
   'embryonic so don't worry about the fixed values they will be
   'later grabbed from the backend
   '----------------------------------------------------------
   
   staff_member = sm
   fk_staff = staff_member!fk_staff
   fk_clinic = clinic_key
   Appointment_Date = app_date
   txtAppointment.height = irowheight                                    'grid rows = same height as our textbox
   Me.title = UCase(staff_member!title & " " & staff_member!wholename)   'will appear on the tab                     'heading e.g "appointments for 01/01/2011"
   lblDate.text = Format(appointment_date, gb.LongDate)                        'Wednesay 18th September   
   '------------------------------------------------------------------
   'Contruct the basic grid
   'FIXME:later get the times and intervals from backend configuration
   'for each staff member and each day as appropriate
   '------------------------------------------------------------------
   With gridview1                                                                                                             
      .columns.count = 3 
      .columns[0].width = 80                                            'col 0=time
      .columns[1].width = 24                                             'col 1=icon
      .columns[2].width = gridview1.width - 104                          'col 2=the appointment details
   End With
   appointment_interval = 10 'fix me get me from backend (when done)  
   GridRows_Init(Time(8, 30, 0), Time(18, 0, 0), appointment_interval)   'fill empty collection with times
   Reload()                                                              'load the days appointments
   
End

Public Sub GridRows_Init(starttime As Date, EndTime As Date, appointment_interval As Integer)
   '---------------------------------------------------------------
   'Using pre-defined start and end times and appointment intervals
   'FIX ME
   'create a collection of grid rows with nothing but the time
   '---------------------------------------------------------------
   
   Dim ihour As Integer = Hour(starttime)
   Dim iminute As Integer = Minute(starttime)
   Dim x As Integer
   Dim row_key As Collection
   
   gridrows = New Collection
   
   Do Until x = -1
      griddata = New Collection
      griddata!time = Format(Time(ihour, iminute, 0), "hh:nn")
      griddata!slots = 1
      gridrows.add(griddata, x) 
      iminute += appointment_interval
      If iminute = 60 Then
         Inc ihour
         iminute = 0
      End If   
      If ihour = Hour(EndTime) Then
         If iminute > Minute(Endtime) Then
            Break
         End If    
      Endif
      Inc x
   Loop   
   
End



Public Sub Reload()
   '----------------------------------------------------------
   'Get any existing appointments for the day from the backend
   'Merge these with the initialised gridrows collection
   'and fill gridview1 with the appointments.
   '----------------------------------------------------------   
   Appointments = modAppointmentsDBI.Appointments_GetDay(appointment_date, fk_staff, fk_clinic)
   GridRows_Update()
   Gridview1_Rebuild(gridrows)
   
End

Public Sub GridRows_Update()
   '----------------------------------------------
   'Update the contents of the gridrows collection
   '!time, !name,!picture!slots
   'really really really crap code
   '---------------------------------------------- 
   
   Dim NewRows As New Collection
   Dim i As Integer
   Dim x As Integer
   Dim sTime As String
   Dim sArray As String[]
   Dim duration As Integer
   Dim sEndTime As Date 
   Dim sBeginTime As String 
   Dim slots As Integer
   
   For Each appointment In appointments
      '------------------------------------------------------------- 
      'Duration can be in multiples of the days appointment_interval
      'the time off appointmen is the key to the gridrows collection
      '-------------------------------------------------------------
      sTime = Format(appointment!begin, "hh:nn")                      ' e.g 10:20 gridrows key
      duration = Val(Split(appointment!duration, ":")[1])             ' e.g 10, 20, 30
      If duration <> 10 Then                                          ' If duration longer than 1 appointment slot fixme use backend app duratin for dr
         sBeginTime = Format(appointment!begin, "hh:nn")
         sEndTime = DateAdd(appointment!begin, gb.minute, duration)   ' work out the end time
         sTime = sTime & "-" & Format(sEndTime, "hh:nn")              ' key becomes eg 10-20:10-30 fixme more complex than this eg 10:50-11,20
         For i = 0 To GridRows.Count - 1
            If Not IsNull(gridrows[i]) Then    
               If gridrows[i]!time = sBeginTime Then
                  slots = duration / appointment_interval 
                  gridrows[i]!time = sTime
                  gridrows[i]!name = appointment!wholename & " [" & Format(appointment!birthdate, "dd/mm/yyyy") & "] " & Trim(appointment!street1 & " " & appointment!street2) & " " & appointment!town
                  gridrows[i]!slots = slots
                  For x = 1 To slots - 1
                     gridrows.Remove(i + x)
                  Next
                  Break
               End If   
            Endif
            
         Next
      Else
         '------------------------------------------------------------- 
         'this is a standard appointment length - will have only 1 slot
         '-------------------------------------------------------------  
         For i = 0 To GridRows.Count - 1
            If Not IsNull(gridrows[i]) Then    
               If gridrows[i]!time = stime Then
                  gridrows[i]!name = appointment!wholename & " [" & Format(appointment!birthdate, "dd/mm/yyyy") & "] " & Trim(appointment!street1 & " " & appointment!street2) & " " & appointment!town
               Endif
            End If
         Next
      End If   
   Next
   '----------------------------------------------------------------------------------------------
   'Now the gridrows collection will be "missing" elements which are now covered by multiple slots
   'so rebuild the collection to be consecutive numbers
   '----------------------------------------------------------------------------------------------   
   x = 0
   For i = 0 To GridRows.Count - 1
        If Not IsNull(GridRows[i]) Then 
           NewRows.Add(GridRows[i], x)
           Inc x
        End If 
   Next
   GridRows = modUtil.Copy_Collection(NewRows)
End

Public Sub GridData_Rebuild()
   '----------------------------------------------------------------
   'Rebuild the collection of apointments in the gridrows collection
   'iFirstrow has previously been set when user selected one or more
   'rows in the grid to place an appointment time
   '----------------------------------------------------------------
   
   Dim NewRows As New Collection
   Dim iNewRowCount As Integer
   
   Dim i As Integer 
   
   For i = 0 To Gridview1.Rows.Count - 1              'look through all the rows on the grid
      If i < iFirstRow Then                           'for each time slot prior to this new appointment                     
         NewRows.Add(GridRows[i], iNewRowCount)       'just add it into the new collection of appointments
      Else If i = iFirstRow And i < iLastRow + 1 Then 'have now reached the first row the user selected
         GridData = New Collection                    'when they first searched for the patient
         If iFirstRow = iLastRow Then                 'if they only selected a single row= 1 slot
            GridData!time = GridRows[i]!time          'put in the time of the appointment
            GridData!picture = GridRows[i]!picture    'any associated icon e.g for pregnancy check
            GridData!slots = 1                        'and it only takes up one time slot
         Else                                         'otherwise - they must have selected > 1 rows
            GridData!time = GridRows[i]!time & "-" & GridRows[iLastRow + 1]!time 'time e.g 9:00-9:20
            GridData!picture = GridRows[i]!picture    'plus any icon
            GridData!slots = iLastRow + 1 - iFirstRow 'and covering however many of standard grid heights
            i = i + iLastRow - iFirstRow              'increment the loop counter
         End If 
         GridData!name = Trim(txtAppointment.text)    'complete the collection with the patient name
         NewRows.Add(GridData, iNewRowCount)          'add the collection to the rows collection
      Else                                            'as above, the next one is an existing appointment
         GridData = New Collection                    'create a new collection
         GridData!time = GridRows[i]!time             'put in existing time
         GridData!slots = GridRows[i]!slots           'the number of slots (or grid rows) it spans
         GridData!name = GridRows[i]!name             'the patients name
         NewRows.Add(GridData, iNewRowCount)          'add to the new collection
      End If   
      Inc iNewRowCount
   Next
   GridRows = modUtil.Copy_Collection(NewRows)        'and copy back to gridRows
   
End




Public Sub Gridview1_Rebuild(data As Collection)
   '----------------------------------------------------
   'Using the underlying collection of appointment times
   're-build the grid
   '-----------------------------------------------------   
   
   Dim i As Integer
   Dim sTimes As String[]
   Dim sTime As String 
   
   Gridview1.Clear()
   Gridview1.Rows.count = data.count
   For i = 0 To data.count - 1
      Gridview1[i, 0].text = data[i]!time
      Gridview1[i, 1].picture = data[i]!picture
      Gridview1[i, 2].text = data[i]!name
      Gridview1.Rows[i].height = data[i]!slots * irowheight
   Next
   
End

Public Sub form_Close()
   
   Settings_Save()
   
End

Public Sub mnuAppointments_Click()
   
   Print Last.Picture
   Gridview1[Gridview1.Row, 1].Picture = Last.Picture
   GridRows[Gridview1.Row]!picture = Last.Picture
   Return 
   Select Case Last.tag
      Case "ante-natal"
         Gridview1[Gridview1.Row, 1].Picture = PregnancyIcon
         GridRows[Gridview1.Row]!picture = PregnancyIcon
      Case "blood test"
         Gridview1[Gridview1.Row, 1].Picture = BloodTestIcon
         GridRows[Gridview1.Row]!picture = BloodTestIcon
   End Select 
   
End

Private Sub Settings_Save()
   
End

Private Sub Settings_Load()
   
End

Public Sub Gridview1_Keypress()
   '------------------------------------------------------------------------------
   'Keypress detected coming from the grid - ie using typing whilst grid has focus
   '------------------------------------------------------------------------------   
   
   If bExit Then Return 
   
   If txtAppointment.text = "" Then
      '----------------------------------------------------------- 
      'user has just started typing whilst the gridview1 has focus
      '----------------------------------------------------------- 
      If Key.code > 64 And Key.code < 91 Then         'capture first keypress of the user
         Try txtAppointment.text = Chr(Key.code)      'if valid a-z and put it into the txtAppointment
         GridView1_DblClick()                         'and enter edit mode to allow typing/searching
      End If   
   Else
      '------------------------------------------------------------------- 
      'user just has hit <enter> key = assume they want to enter edit mode
      '------------------------------------------------------------------- 
      If Key.code = Key.return Then 
         Try txtAppointment.text = Chr(Key.code) 
         GridView1_DblClick()
      End If   
   End If 
   
End

Public Sub Gridview1_DblClick()
   '----------------------------------------------------------------
   'User has double clicked on an appointment slot - enter edit mode
   'figure out which row is selected and if multi-selected, then
   'move the editing textbox txtAppointment to align to proper place
   'overlying this appointment slot.
   '----------------------------------------------------------------
   
   Dim i As Integer
   Dim iSlotCount As Integer
   Dim x As Integer
   
   bFoundFirst = False  
   Print gridrows
   For i = 0 To Gridview1.rows.count - 1           'figure out which rows are selected
      x = x + Gridview1.Rows[i].Height
      If Gridview1.Rows[i].Selected = True Then
         If bFoundFirst = False Then
            bFoundFirst = True
            iFirstRow = i
            itop = x - Gridview1.Rows[i].height
         End If 
         iLastRow = i
      End If 
      If bFoundFirst = False Then 
         iSlotCount += GridRows[i]!slots
      Endif
   Next 
   onrow = iFirstRow  
   Show_EditingTextBox()
   txtAppointment.Height = ((iLastRow - iFirstRow) + 1) * Gridview1.Rows[0].Height + 5
   
End

Public Sub Gridview1_Select()
   '----------------------------------------------------
   'user has clicked on or otherwise selected a grid row
   'remove and clear the appointment textbox
   '----------------------------------------------------   
   
   txtAppointment.visible = False   
   txtAppointment.text = ""
   
End

Public Sub Gridview1_Menu()
   '-------------------------------------------------------------------
   'User has right mouse clicked on the name column, show them the menu
   '-------------------------------------------------------------------   
   
   If Gridview1[Gridview1.Row, 2].text = "" Then Return 
   mnuAppointments.Popup()
   
End

Public Sub Patients_Find(Optional fk_patient As Integer) 
   '-----------------------------------------------------------------------------
   'Attemps to find patients according to criteria entered in cmbSearch
   'of by patient key if picked from list of patients seen that day
   'If none found , resets focus to cmbsearch
   'Otherwise creates an empty patient object
   'If only one name and address auto-load that patient to currentconsult
   'If multiple names/addresses, popup a modal for choice
   'which returns a patient object which becomes currentconsult
   'fixme - implement the patient stack
   '-----------------------------------------------------------------------------
   
   Dim AllPatients As New Collection
   Dim patient As Collection
   Dim sql_in_english As String
   Dim P As Picture
   Dim bPhotoConfirmed As Boolean = False 
   
   If BExit Then Return 
   bExit = True   
   
   Inc Application.Busy
   
   If fk_patient Then
      AllPatients = modContactsDBI.Patient_Get_Using_PK(fk_patient)
   Else
      AllPatients = modContactsDBI.patients_get_firstname_surname(Lower(txtAppointment.text), False) 'get only living patients
      
      sql_in_english = AllPatients!sql_in_english
      AllPatients.Remove("sql_in_english")
   End If   
   If AllPatients.count = 0 Then 
      txtAppointment.SetFocus()
      Dec application.Busy
      bExit = False  
      Return
   Else  
      '----------------------------------------------------
      'One or more patients.
      'If one, get their photo if it exists and load record
      '----------------------------------------------------
      If AllPatients.count = 1 Then  
         '----------------------------------------------------
         'no way in gambas to get a key without an iteraction
         'get first key
         '----------------------------------------------------
         For Each patient In AllPatients
            If Not IsNull(patient!image.data) Then 
               P = modGraphics.Blob_Convert_To_Picture(patient!image)!picture 
            Else
               P = Picture.Load("icons/misc/no_photo.png")
            End If   
         Next
         FConfirmPatient.Init(P, patient!wholename)
         If Not FConfirmPatient.ShowModal() Then 
            bExit = False  
            Return            
         End If
         patient_load_record(patient, bPhotoConfirmed, P)
      Else  
         '---------------------
         'more than one patient
         '---------------------
         Dec Application.Busy
         Me.Parent.Parent.Parent.Visible = False  '(vbox1 on FClerical)
         form_select = New FPatientsSelect(Me.Parent.Parent.Parent.Parent)
         obs = New Observer(form_select.btnCancel) As "SelectPatient"     
         form_select.Init(AllPatients, sql_in_english, "FAppointmentList")
         form_select.Visible = True 
      Endif
   End If   
   bExit = False  
   Dec application.Busy
End

Public Sub patient_load_record(patient As Collection, bPhotoConfirmed As Boolean, Optional P As Picture) 
   '-------------------------------------------
   'Loads the patients name for the appointment
   '-------------------------------------------
   
   Me.Parent.Parent.Parent.Visible = True       're-show the appointment grids
   txtAppointment.text = patient!wholename & " [" & Format(patient!birthdate, "dd/mm/yyyy") & "] " & Trim(patient!street1 & " " & patient!street2) & " " & patient!town
   
   GridData_Rebuild()
   Save(patient)
   gridview1.SetFocus()
   
End

Public Sub Save(patient As Collection)
   ' pk bigserial NOT NULL,
   '   fk_patient integer,
   '   fk_staff integer NOT NULL,
   '   "begin" timestamp without time zone,
   '   duration interval,
   '   notes text,
   '   fk_staff_booked integer NOT NULL,
   '   fk_clinic timestamp without time zone NOT NULL DEFAULT now()
   
   Dim appointment As New CRow
   Dim starttime As Date
   Dim endtime As Date
   Dim Appointment_times As String[]
   Dim appointment_length As String[]
   
   appointment!fk_patient = patient!fk_patient  
   appointment!fk_staff = staff_member!fk_staff
   Appointment_times = Split(gridrows[onrow]!time, "-")
   If Appointment_times.count = 2 Then
      starttime = Date(Year(appointment_date), Month(appointment_date), Day(appointment_date), Hour(Appointment_times[0]), Minute(Appointment_times[0]), 0)
      appointment!begin = Format$(starttime, "dd/mm/yyyy hh:nn")
      EndTime = Date(Year(appointment_date), Month(appointment_date), Day(appointment_date), Hour(Appointment_times[0]), Minute(Appointment_times[1]), 0)
      appointment!duration = Str(DateDiff(starttime, EndTime, gb.Minute) + appointment_interval) & " minutes"
   Else
      starttime = Date(Year(appointment_date), Month(appointment_date), Day(appointment_date), Hour(gridrows[onrow]!time), Minute(gridrows[onrow]!time), 0)
      appointment!begin = Format$(starttime, "dd/mm/yyyy hh:nn")
      appointment!duration = Str(appointment_interval) & " minutes"
   Endif
   appointment!notes = gridrows[onrow]!notes
   appointment!fk_staff_booked = modDBConnect.currentUser!fk_staff 
   appointment!fk_clinic = fk_clinic  
   modDBConnect.BeginTrans()
   modAppointmentsDBI.Appointment_Save(appointment)
   modDBConnect.CommitTrans()
   Reload()
   
End

Public Sub SelectPatient_click()                                       
   '-------------------------------------------------------------------
   'User has cancelled patient selection in popup patient selector form
   '-------------------------------------------------------------------
   
   If Last.tag = "cancel" Then Stop Event
   form_select.Visible = False 
   Vbox1.Visible = True   
   Gridview1_Rebuild
   
End

Public Sub Form_Resize()
   
   gridview1.Columns[2].width = gridview1.width - gridview1.Columns[1].W - gridview1.Columns[0].Width - 25
   
End

Public Sub Form_Leave()
   
   txtAppointment.Visible = False   
   
End

Public Sub TextBox2_Change()
   '-------------------------------------------------------
   'This is triggered externally by the FPatientSelect form
   'when > 1 patient name for the search criteria
   '-------------------------------------------------------   
   If Len(Last.text) Then
      patient_load_record(patient, True) 
   Endif
   
End

Public Sub Show_EditingTextBox()
   '--------------------------------------------------------------------------------------------
   'Displays the editing textbox
   'Copied some of this code from the gambas IDE so can't remmber reason for use of the hEditor   
   '--------------------------------------------------------------------------------------------
   
   Dim sAppointment As String  'the contents of the grid column with patients 
   Dim hEditor As Object 
   
   hEditor = txtAppointment
   txtAppointment.ReadOnly = False
   $hEditor = hEditor
   Move_EditingTextBox
   $hEditor.Show
   txtAppointment.Visible = True 
   $hEditor.SetFocus
   $hEditor = txtAppointment 
   txtAppointment.SelectAll
   If Not IsNull(gridrows[onrow]!name) Then
      txtAppointment.text = gridrows[onrow]!name
   Else
      txtAppointment.pos = Len(txtAppointment.text) 
   End If   
   
End

Public Sub Move_EditingTextBox()
   
   Dim iW As Integer
   
   If IsNull($hEditor) Then Return
   
   With gridview1[gridview1.Row, 2]
      txtAppointment.Move(gridview1.X + .X - gridview1.ScrollX, gridview1.Y + itop - gridview1.ScrollY, .Width, ((iLastRow - iFirstRow) + 1) * Gridview1.Rows[0].Height + 5)
   End With
   
End

Public Sub Gridview1_Scroll()
   
   If gridview1.row = -1 Then Return 
   Move_EditingTextBox
   
End
