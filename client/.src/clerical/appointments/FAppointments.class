' Gambas class file

' Copyright (C) 2008-2011 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'
' A Form Template for most other new forms
' Copy this form and paste as a new form
'----------------------------------------------------------------------

Private bexit As Boolean
Private OnRow As Integer
Private GridData As Collection 
Private GridRows As Collection
Private iLeft As Integer
Private iTop As Integer
Private iRowHeight As Integer = 20 'make this configurable
Private i As Integer
Private iFirstRow As Integer
Private iLastRow As Integer
Private bFoundFirst As Integer
Private PregnancyIcon As Picture = Picture["icons/20/pregnancy.png"]
Private BloodTestIcon As Picture = Picture["icons/16/bloodtube16x16.png"]
Private Staff As Collection
Private Staff_Member As Collection
Private form_select As FPatientsSelect
Private clinics As Collection
Private clinic As Collection
Private obs As Observer 
Private Appointment_Lists As Collection   'of FAppointmentList forms
Private FContainer As FAppLists

Static Private form_appointments As FAppointments        ' so that patient multi-select can acess this form

Static Public Sub patient_load_record_external(patient As Collection, bPhotoConfirmed As Boolean, P As Picture) 
   '------------------------------------------------------------------------------
   'User has searched for a patient > multiple choice > chosen, so load the record
   '------------------------------------------------------------------------------   
   
   form_appointments.patient_load_record(patient, bPhotoConfirmed, P)
   
End

Public Sub Init()
   '------------------------------------------------
   'Initialise the appointment module from FClerical 
   '------------------------------------------------
   
   Dim Appointment_interval As Integer                                                 'interval in minutes for appointments
   
   Dim x As Integer
   Dim iHour As Integer
   Dim iMinute As Integer
   Dim iStartHour As Integer = 8                                                       'fixme make me configurable
   Dim iStartMinute As Integer = 30
   rbWeekView.value = True 
   form_appointments = Me                                                              'static form
   staff = modUtil.LoadCombo(cmbStaff, modContactsDBI.Staff_Get(), "wholename")     'get all staff
   clinics = modUtil.LoadCombo(cmbLocation, modAdminDBI.Clinics_Get(), "branch")       'get all branches
   TextBox1.height = iRowHeight                                                        'grid rows = same height as our textbox
   Me.title = "Appointments for " & Format(Now, "dd/mm/yyyy")                          'Heading e.g "Appointments for 01/01/2011"
   
End

Public Sub Init_old()
   ' '------------------------------------------------
   ' 'Initialise the appointment module from FClerical 
   ' '------------------------------------------------
   ' Dim Appointment_interval As Integer                                                 'interval in minutes for appointments
   ' 
   ' Dim x As Integer
   ' Dim iHour As Integer
   ' Dim iMinute As Integer
   ' Dim iStartHour As Integer = 8                                                       'fixme make me configurable
   ' Dim iStartMinute As Integer = 30
   ' 
   ' form_appointments = Me                                                              'static form
   ' staff = modUtil.LoadCombo(cmbStaff, modInboxDBI.Inbox_Staff_Get(), "wholename")     'get all staff
   ' clinics = modUtil.LoadCombo(cmbLocation, modAdminDBI.Clinics_Get(), "branch")       'get all branches
   ' TextBox1.height = iRowHeight                                                        'grid rows = same height as our textbox
   ' Me.title = "Appointments for " & Format(Now, "dd/mm/yyyy")                          'Heading e.g "Appointments for 01/01/2011"
   ' 
   ' Appointment_interval = 10                                                           'fixme make me configurable
   ' 
   ' With gridview1                                                                         
   '    .Columns.count = 3
   '    .Columns[0].Width = 100
   '    .Columns[1].Width = 50
   '    .Columns[2].width = gridview1.width - 100
   '    .Rows.count = 50
   '  
   ' End With
   ' iHour = istarthour
   ' iminute = iStartMinute
   ' gridview1.Rows.H = 20
   ' GridRows = New Collection
   ' 
   ' For x = 0 To 49
   '    GridData = New Collection
   '    ' GridData.Add(Format(Time(iHour, iminute, 0), "hh:nn"), Str(x))
   '    GridData!time = Format(Time(iHour, iminute, 0), "hh:nn")
   '    GridData!slots = 1
   '    GridRows.Add(GridData, Str(x))
   '    gridview1[x, 0].text = Format(Time(iHour, iminute, 0), "hh:nn") 
   '    gridview1.Rows[x].height = GridData!slots * iRowHeight
   '    '   Print Format(Time(iHour, iminute, 0), "hh:nn")
   '    iminute += 10
   '    Print iminute
   '    
   '    If iminute = 60 Then
   '       Inc iHour
   '       iMinute = 0
   '       
   '    Endif
   ' Next
   ' 
   ' ' gridview1.row = 0
   ' ' gridview1.
   ' Print GridRows
   ' Me.Center
   
End

Public Sub Gridview1_Rebuild(data As Collection)
   
   ' Dim i As Integer
   ' 
   ' Dim pic As Picture = Picture["icons/20/green_dot.png"]
   ' 
   ' gridview1.Clear()
   ' gridview1.Rows.count = data.count
   ' For i = 0 To data.count - 1
   '    gridview1[i, 0].text = data[i]!time
   '    gridview1[i, 1].picture = data[i]!picture
   '    gridview1[i, 2].text = data[i]!name
   '    gridview1.Rows[i].height = data[i]!slots * iRowHeight
   ' Next
   ' 
End

Public Sub form_Close()
   
   Settings_Save()
   
End

Public Sub Form_Resize()
   
   '  gridview1.Columns[2].width = gridview1.width - gridview1.Columns[1].W - gridview1.Columns[0].Width - 25
   
End

Public Sub Patients_Find(Optional fk_patient As Integer) 
   '-----------------------------------------------------------------------------
   'Attemps to find patients according to criteria entered in cmbSearch
   'of by patient key if picked from list of patients seen that day
   'If none found , resets focus to cmbsearch
   'Otherwise creates an empty patient object
   'If only one name and address auto-load that patient to currentconsult
   'If multiple names/addresses, popup a modal for choice
   'which returns a patient object which becomes currentconsult
   'fixme - implement the patient stack
   '-----------------------------------------------------------------------------
   
   Dim AllPatients As New Collection
   Dim patient As Collection
   Dim sql_in_english As String
   Dim P As Picture
   Dim bPhotoConfirmed As Boolean = False 
   
   If BExit Then Return 
   bExit = True   
   
   Inc Application.Busy
   
   If fk_patient Then
      AllPatients = modContactsDBI.Patient_Get_Using_PK(fk_patient)
   Else
      AllPatients = modContactsDBI.patients_get_firstname_surname(Lower(textbox1.text), False) 'get only living patients
      
      sql_in_english = AllPatients!sql_in_english
      AllPatients.Remove("sql_in_english")
   End If   
   If AllPatients.count = 0 Then 
      TextBox1.SetFocus()
      Dec application.Busy
      bExit = False  
      Return
   Else  
      '----------------------------------------------------
      'One or more patients.
      'If one, get their photo if it exists and load record
      '----------------------------------------------------
      If AllPatients.count = 1 Then  
         '----------------------------------------------------
         'no way in gambas to get a key without an iteraction
         'get first key
         '----------------------------------------------------
         For Each patient In AllPatients
            If Not IsNull(patient!image.data) Then 
               P = modGraphics.Blob_Convert_To_Picture(patient!image)!picture 
            Else
               P = Picture.Load("icons/misc/no_photo.png")
            End If   
         Next
         FConfirmPatient.Init(P, patient!wholename)
         If Not FConfirmPatient.ShowModal() Then 
            bExit = False  
            Return            
         End If
         patient_load_record(patient, bPhotoConfirmed, P)
      Else  
         '---------------------
         'more than one patient
         '---------------------
         Dec Application.Busy
         ' Vbox1.Visible = False  
         Me.Parent.Parent.Parent.Visible = False  '(vbox1 on FClerical)
         form_select = New FPatientsSelect(Me.Parent.Parent.Parent.Parent)
         obs = New Observer(form_select.btnCancel) As "SelectPatient"     
         form_select.Init(AllPatients, sql_in_english, "FAppointments")
         form_select.Visible = True 
         
      Endif
   End If   
   bExit = False  
   Dec application.Busy
   
End

Public Sub patient_load_record(patient As Collection, bPhotoConfirmed As Boolean, P As Picture) 
   '----------------------------------------------------------------------------
   'PURPOSE   : Loads the minimal necessary patient record
   '--------------------------------------------------------------------------- 
   ' Me.Parent.Parent.Parent.Visible = True
   ' TextBox1.text = patient!wholename & " [" & Format(patient!birthdate, "dd/mm/yyyy") & "] " & Trim(patient!street1 & " " & patient!street2) & " " & patient!town
   ' gridview1.SetFocus()
   
End

Public Sub SelectPatient_click()                                       
   '-------------------------------------------------------------------
   'User has cancelled patient selection in popup patient selector form
   '-------------------------------------------------------------------
   
   If Last.tag = "cancel" Then Stop Event
   form_select.Visible = False 
   Vbox1.Visible = True   
   ' Gridview1_Rebuild
   
End

Public Sub mnuAppointments_Click()
   
   ' Select Case Last.tag
   '    Case "ante-natal"
   '       gridview1[gridview1.Row, 1].Picture = PregnancyIcon
   '       GridRows[gridview1.Row]!picture = PregnancyIcon
   '    Case "blood test"
   '       gridview1[gridview1.Row, 1].Picture = BloodTestIcon
   '       GridRows[gridview1.Row]!picture = BloodTestIcon
   ' End Select 
   
End

Private Sub Settings_Save()
   
End

Private Sub Settings_Load()
   
End

Public Sub GridView1_Keypress()
   
   ' Select Case Key.Code
   '   Case Key.Down 
   '      onrow = Max(onrow + 1, gridview1.Rows.Count)
   '   Case Key.Up
   '       onrow = Min(onrow - 1, 0)   
   '   Case Else 
   '       Print Asc(Chr$(Key.code))
   '      If Key.code > 64 And Key.code < 113 Then
   '       GridView1_DblClick()
   '       textbox1.text = Chr$(Key.code)
   '       textbox1.pos = Len(textbox1.text)
   '      End If 
   ' End Select
   ' 
End

Public Sub GridView1_Click()
   
   ' Print "on row" & gridview1.Row
   ' Print "From the collection:", GridRows[gridview1.row]!time
   
End

Public Sub GridView1_DblClick()
   
   '  Dim i As Integer
   '  Dim iSlotCount As Integer
   ' ' 
   ' ' TextBox1.text = ""                              'clear search textbox
   '  bFoundFirst = False  
   '  For i = 0 To gridview1.rows.count - 1           'figure out which rows are selected
   '     
   '     If gridview1.Rows[i].Selected = True Then
   '        If bFoundFirst = False Then
   '           bFoundFirst = True
   '           iFirstRow = i
   '        End If 
   '        iLastRow = i
   '        Print "Row " & i & " is selected"
   '     End If 
   '     If bFoundFirst = False Then 
   '        iSlotCount += GridRows[i]!slots
   '     Endif
   '  Next 
   '  Print "The first was ", iFirstRow
   '  Print "The last was ", iLastRow
   '  
   '  Print gridview1.Rows.Select
   '  Print gridview1.Rows.height 
   '  onrow = gridview1.Row
   '  iLeft = gridview1[0, 2].Left
   '  ' iTop = onrow * gridview1.Rows.height 
   '  iTop = iSlotCount * 20 + HBox_Heading.height + VBox_Spacer_under_heading.height
   '  ' iTop = iFirstRow * gridview1.Rows.height 
   '  TextBox1.left = iLeft
   '  TextBox1.width = gridview1.Columns[2].Width
   '  TextBox1.top = iTop
   '  ' TextBox1.top = gridview1.ScreenX
   '  TextBox1.Height = ((iLastRow - iFirstRow) + 1) * gridview1.Rows[0].Height + 5
   '  TextBox1.Visible = True
   '  TextBox1.SetFocus()
   '  
End

Public Sub GridView1_Select()
   
   '  TextBox1.Visible = False   
   
End

Public Sub gridview_Keypress()
   ' 
   ' If bExit Then Return 
   ' bexit = True
   ' GridView1_DblClick()
   ' TextBox1.text = Asc(gridview1.Key.code)
   
End

Public Sub Textbox1_Activate()
   '------------------------------------------------------------------------------
   'User has pressed <enter> or <return> whilst indicating want to find a patient
   'First, rebuild the array of apointment times
   '------------------------------------------------------------------------------
   ' 
   ' Dim NewRows As New Collection
   ' Dim iNewRowCount As Integer
   ' 
   ' Dim i As Integer 
   ' 
   ' Patients_Find()
   ' Print iFirstRow, iLastRow
   ' For i = 0 To gridview1.Rows.Count - 1
   '    If i < iFirstRow Then 
   '       NewRows.Add(GridRows[i], iNewRowCount)
   '       
   '    Else If i = iFirstRow And i < iLastRow + 1 Then
   '       
   '       GridData = New Collection
   '       If iFirstRow = iLastRow Then
   '          GridData!time = GridRows[i]!time
   '          GridData!picture = GridRows[i]!picture
   '          GridData!slots = 1
   '       Else
   '          GridData!time = GridRows[i]!time & "-" & GridRows[iLastRow + 1]!time
   '          GridData!picture = GridRows[i]!picture
   '          GridData!slots = iLastRow + 1 - iFirstRow
   '          i = i + iLastRow + 1 - iFirstRow
   '       End If 
   '       GridData!name = Trim(TextBox1.text)
   '       NewRows.Add(GridData, iNewRowCount)
   '       
   '    Else
   '       GridData = New Collection
   '       GridData!time = GridRows[i]!time
   '       GridData!slots = GridRows[i]!slots
   '       NewRows.Add(GridData, iNewRowCount)
   '    End If   
   '    Inc iNewRowCount
   ' Next
   ' gridview1[onrow, 2].text = TextBox1.Text
   ' TextBox1.Visible = False   
   ' GridRows = modUtil.Copy_Collection(NewRows)
   ' Gridview1_Rebuild(GridRows)
   
End

Public Sub GridView1_Menu()
   
   ' mnuAppointments.Popup()
   
End

Public Sub cmbEditArea_Click()
   
   Dim AL As FAppointmentList
   Dim x As Integer
   Dim theDate As Date
   Dim HBox_Week As Hbox
 
    Staff_Member = staff[cmbStaff.Index]
   If rbWeekView.value = True Then 
      
     FContainer = New FAppLists
     FContainer.Init(Staff_Member)
     wkspaceAllStaff.Add(FContainer)
      For x = 0 To 4
         theDate = DateAdd(Now, gb.day, x)
         With FContainer
               .HBox1.width = (x * 400) + 400
               .lblStaffMember.text = UCase(Staff_Member!title & " " & Staff_Member!wholename)
               .lblrole.text = modStrings.CapitaliseWord(Staff_Member!role)
           End With
         With AL = New FAppointmentList(FContainer.HBox1)
         '  If x = 0 Then
          '      .Vbox_Photo.Visible = True 
         '  Else
              .Vbox_Photo.Visible = False 
         '  End If  
        
          .Init(Staff_Member, Format(thedate, "dd/mm/yyyy"))
          End With
      Next
   Else
      
     
      With AL = New FAppointmentList
         .Init(Staff_Member)
         
      End With
      wkspaceAllStaff.Add(AL)
   End If   
   
End
Public Sub WeekView_Display()
   '--------------------
  'Displays a week view
  '-------------------- 
   
End

Public Sub rbWeekView_Click()

   Select Case Last.tag
     Case "day view"
     Case "week view" 
   End Select

End
