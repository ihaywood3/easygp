' Gambas class file

' Copyright (C) 2008-2016 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------------------
' PURPOSE         Mainly a container form for showing appointment grids
' HOW THIS WORKS  Contains the necessary logic to allow the user to:
'                 - set the location branch
'                 - select the type of  view eg week view for staff
'                   or day view for all staff at once
'                 - to search for e.g next available long appointment
'                 - all the days of apointments are forms embedded onto
'                   the main workspace on a scroll view - which will show
'                   three days at once. The search logic for the patient is on this
'                   form and the resultant collection of a patient are passed back
'                   to which ever embedded FDayList form called the logic
'                   in the first place
'                   SPECIAL NOTE ON AUTO-REFRESHING OF APPOINTMENT AND TIMER1
'                   - timer1 event will be prevented from auto-refreshing the appointments if
'                     user's mouse leaves the form, or if any of the daylists are
'                     manipulating the appointment tables (FIXME NOT YET DONE)
'                     via the static routines in this class
'                   - timer1 is enabled the first time appointments are loaded by the user
'                     selecting a staff member from the combo box
'                   - If mouse re-enters the form the appointments will immediately refresh
'                   - the delay of the timer is shown in the gui.
'---------------------------------------------------------------------------------------------
Private bFormBeingUsed As Boolean  'True if this form is visible to the user
Private bexit As Boolean
Private bKeyValid As Boolean
Public bAppointmentListsShowing As Boolean   'leave this public
Private OnRow As Integer
Private GridData As Collection
Private GridRows As Collection
Private iLeft As Integer
Private iTop As Integer
Private iRowHeight As Integer = 20 'make this configurable
Private i As Integer
Private iFirstRow As Integer
Private iLastRow As Integer
Private bFoundFirst As Integer
Private Appointment_Icons As Collection
Private Staff As Collection
Public Staff_Member As Collection
Private form_select As FPatientsSelect
Private clinics As Collection
Private clinic As Collection
Private obs As Observer
Private Appointment_Lists As Collection   'of FDayList forms
Private FContainer As FAppLists
Public DayLists As Object[]
Private DayList As FDayList
Private DayListContainer As Window
Private HB As HBox
Private sv As ScrollView
Private CurrentSearchTxtBox As Textbox
Private iSlotCount As Integer
Public AppointmentList As FDayList
Private WeeksAppointments As Collection
Private counter As Integer

Static Private Form_Make_Appointments As FMakeAppointments

Static Public Sub Refresh_Appointments_External()
   '----------------------------------------------------------------------------------
   'Reloads appointments called if user clicks on FClerical.Appointments Tab
   'or if the mouse cursor is over the left hand vertical menu bar of the main program
   '----------------------------------------------------------------------------------

   If Form_Make_Appointments.bAppointmentListsShowing Then
      Form_Make_Appointments.WeekList_Reload()
   Endif

End

Static Public Sub patient_load_record_external(patient As Collection, bPhotoConfirmed As Boolean, P As Picture)
   '------------------------------------------------------------------------------
   'User has searched for a patient > multiple choice > chosen, so load the record
   '------------------------------------------------------------------------------

   Form_Make_Appointments.patient_load_record(patient, bPhotoConfirmed, P)

End

Public Sub patient_load_record(patient As Collection, bPhotoConfirmed As Boolean, P As Picture)
   '---------------------------------------------------------------------------------
   'Display patient name in the appointment book
   'this name is set in the current FDayList
   'the text2_change event triggers the necessary code to update the appointment grid
   '---------------------------------------------------------------------------------

   Me.Parent.Parent.Parent.Visible = True
   If IsNull(AppointmentList.patient) Then AppointmentList.Patient = New Collection 'bad bad bug fix till find out why null FIXME.
   AppointmentList.patient = New Collection
   AppointmentList.patient = Patient
   If IsNull(patient!birthdate) Then
      Message.info("SLACK SECRETARIAL STAFF - YOU MUST ALWAYS PUT THE PATIENT DOB IN THE COMPUTER\n\nPLEASE FIX THIS NOW!!!!!!!!!!!!!!!!")
   Endif
   AppointmentList.txtFindPatient.text = patient!wholename & " [" & Format(patient!birthdate, "dd/mm/yyyy") & "] " & Trim(patient!street1 & " " & patient!street2) & " " & patient!town

End

Public Sub Init()
   '------------------------------------------------------------------------------
   'Initialise the appointment module from FClerical
   'No appointments will be loaded until the stafff member is explicitly selected
   'See special note on refreshing apointments at top of form to
   'understand how the timer1 interacts with all the daylist child forms
   '------------------------------------------------------------------------------

   Dim Appointment_interval As Integer                                                 'interval in minutes for appointments
   Dim x As Integer
   Dim iHour As Integer
   Dim iMinute As Integer
   Dim iStartHour As Integer = 8                                                       'fixme make me configurable
   Dim iStartMinute As Integer = 30

   Form_Make_Appointments = Me
   staff = modUtilGUI.LoadCombo(cmbStaff, modContactsDBI.Staff_Get(), "wholename")        'get all staff
   clinics = modUtilGUI.LoadCombo(cmbLocation, modContactsDBI.Clinics_Get(), "branch")    'get all branches
   tlLocation.text = clinics[cmbLocation.index]!organisation & "<BR>" & clinics[cmbLocation.index]!branch & "<BR>"
   tlLocation.text &= Trim(clinics[cmbLocation.index]!street1 & " " & clinics[cmbLocation.index]!street2) & "<BR>"
   tlLocation.text &= clinics[cmbLocation.index]!town
   lblMeasure.text = "  Find patient appointment  "
   '  modEditAreaHelpers.Resize_labels(VBox_SearchOptions, lblMeasure)
   ' cmbFind.Add("Normal appointment")
   ' cmbFind.Add("Long appointment")
   ' cmbFind.Add("Over 75 Health Care Assessment")
   ' cmbFind.Add("Prolonged appointment")
   ' cmbFind.Index = 0
   ' cmbDays.Add("Monday")
   ' cmbDays.Add("Tuesday")
   ' cmbDays.Add("Wednesday")
   ' cmbDays.Add("Thursday")
   ' cmbDays.Add("Friday")
   ' cmbDays.Add("Saturday")
   ' cmbDays.Add("Sunday")
   ' cmbTimeDay.Add("Morning")
   ' cmbTimeDay.Add("Afternoon")
   ' cmbTimeDay.Add("Eveniexport/hl7/messages/#cHL7MessageTransferPatient.class#ng")
   Appointment_Icons = Appointment_icons_Get_Picture(modAppointmentsDBI.Appointment_icons_get())
   bExit = True
   DateChooser1.Day = Day(Now)
   cmbStaff.index = -1
   bExit = False

End

Public Sub Form_Close()

   Form_Make_Appointments = Null
   Settings_Save()

End

Static Public Sub Reload()
   '-------------------------------------------------------
   'This is called from any instance of FDayList
   'Reload the Weeklist to Now for staff member in cmbStaff
   '-------------------------------------------------------

   Return
   Form_Make_Appointments.DateChooser1.value = Now
   Form_Make_Appointments.Workspace_Close_Windows()
   If Form_Make_Appointments.Workspace1.ActiveWindow.Caption <> Form_Make_Appointments.Staff_Member!wholename & " from " & Format(Now, gb.LongDate) Then
      Form_Make_Appointments.Generate_WeekList(Now)
   End If

End

Public Sub Workspace_Close_Windows()

   Dim window1 As Window

   Workspace1.Lock()

   For Each window1 In Workspace1.Windows
      If window1.Caption <> "This week: " & Staff_Member!wholename Then
         window1.Close()
      Else
         Workspace1.ActiveWindow = window1
      End If
   Next
   Workspace1.Unlock()

End

Public Sub Appointment_icons_Get_Picture(Appointment_Icons As Collection) As Collection
   '-----------------------------------------------------------------------------------------
   'Loads the actual picture of the appointment icon into the collection got from the backend
   '-----------------------------------------------------------------------------------------

   Dim Appointment_icon As Collection

   For Each Appointment_Icon In Appointment_Icons
      Appointment_Icon!picture = Picture.Load(Appointment_Icon!icon_path)
   Next
   Return Appointment_Icons

End

Private Sub Settings_Save()

End

Private Sub Settings_Load()

End

Public Sub form_Resize()
   '--------------------------------------------------------------------------------
   'Resize the appointment lists contained on the workspace
   'Try.. because they may not exist yet
   'I've arbitrarily at the moment made the size of each list = 1/3 of the workspace
   ''-------------------------------------------------------------------------------

   Try FContainer.HBox1.width = 5 * (Workspace1.width / 3)

End

Public Sub WeekList_Reload()
   '-----------------------------------------------------------------------------
   'Reloads all the weeks appointment on the child daylist forms from the backend
   '-----------------------------------------------------------------------------

   Dim window1 As Window
   Dim hCtrl As Control
   Dim sv As ScrollView
   Dim hb As HBox
   Dim FDL As FDayList

   Inc Application.Busy
   For Each window1 In Workspace1.Windows
      For Each hCtrl In window1.Children
         If hctrl Is ScrollView Then
            sv = hctrl
            For Each hctrl In sv.Children
               If hctrl Is HBox Then
                  hb = hctrl
                  For Each hctrl In hb.Children
                     If hctrl Is Form Then
                        FDL = hctrl
                        FDL.Reload()
                     End If
                  Next
               Endif
            Next
         Endif
      Next
   Next
   Dec application.Busy

End

Public Sub cbHideNames_Click()
   '-----------------------------------------------------------------------------
   'Reloads all the weeks appointment on the child daylist forms from the backend
   '-----------------------------------------------------------------------------

   Dim window1 As Window
   Dim hCtrl As Control
   Dim sv As ScrollView
   Dim hb As HBox
   Dim FDL As FDayList

   Inc Application.Busy
   For Each window1 In Workspace1.Windows
      For Each hCtrl In window1.Children
         If hctrl Is ScrollView Then
            sv = hctrl
            For Each hctrl In sv.Children
               If hctrl Is HBox Then
                  hb = hctrl
                  For Each hctrl In hb.Children
                     If hctrl Is Form Then
                        FDL = hctrl
                        If cbHideNames.Value = CheckBox.True Then
                           FDL.SetNameHidden(True)
                        Else
                           FDL.SetNameHidden(False)
                        End If
                     End If
                  Next
               Endif
            Next
         Endif
      Next
   Next
   Dec application.Busy

End
Public Sub Create_WeekList_GUI(startdate As Date, Optional bGenerateWeeksAppointments As Boolean = False)
   '-------------------------------------------
   'User has clicked on the staff members combo
   '-------------------------------------------

   Dim AL As FDayList
   Dim x As Integer
   Dim theDate As Date
   Dim HBox_Week As Hbox
   Dim daycount As Integer
   Dim name_hidden As Boolean = False
   
   If cbHideNames.Value = CheckBox.True Then name_hidden = True
   ' If Not bAppointmentListsShowing Then
   Daylists = New Object[]
   '  End If
   ' If bGenerateWeeksAppointments Then
   WeeksAppointments = modAppointmentsDBI.Appointments_GetWeek(startdate, Staff_Member!fk_staff, clinics[cmbLocation.index]!fk_clinic)
   '  End If
   With DayListContainer = New Window
      .Arrangement = Arrange.Fill
      .Expand = True
      If DateDiff(Now, startdate, gb.day) <> 0 Then
         .title = Staff_Member!wholename & " from " & Format(startdate, gb.LongDate)
      Else
         .title = Staff_Member!wholename & " from " & Format(Now, gb.LongDate)
      Endif
      .tag = Staff_Member
   End With
   With sv = New ScrollView(DayListContainer)
      .Expand = True
      .Arrangement = Arrange.Horizontal
      .Border = False
   End With
   With HB = New HBox(sv)
      .Expand = False
      .Padding = 5
   End With

   bExit = True
   Workspace1.Add(DayListContainer)
   bExit = False
   Inc Application.Busy

   counter = 0
   '
   Do Until DayLists.count = 7                                                         'accumulate 7 days FIX ME make me configurable
      theDate = DateAdd(startdate, gb.day, counter)                                    'next logical date
      If chkExcludeWeekends.value Then                                                 'do we want to exclude showing saturday/sunday
         Do Until Not (WeekDay(theDate) = gb.Saturday Or WeekDay(theDate) = gb.Sunday) 'if so, keep looping until not a weekend day
            Inc counter
            theDate = DateAdd(startdate, gb.day, counter)
         Loop
      Endif
      With HB
         .width = (DayLists.count + 1) * Max(Me.width / 5, 350)
      End With
      With AL = New FDayList(HB)
         '  .Init(Staff_Member, thedate, clinics[cmbLocation.index]!fk_clinic, Appointment_Icons)
         .Init(Staff_Member, thedate, clinics[cmbLocation.index]!fk_clinic, Appointment_Icons, WeeksAppointments, name_hidden)
         obs = New Observer(AL.Gridview1) As "AppointmentList"
         obs = New Observer(AL.txtAppointment) As "TxtFindPatient"
         .tag = daycount
         DayLists.Add(AL)
      End With
      Inc counter
   Loop
   Dec application.Busy
   bAppointmentListsShowing = True

End

Public Sub cmbEditArea_Click()

   Dim window1 As Window

   Select Case Last.tag
      Case "staff"
         ' For Each window1 In Workspace1.windows
         '  If window1.Caption = staff[cmbstaff.index]!wholename & " from " & Format(Now, gb.LongDate) Then
         '     Workspace1.ActiveWindow = Window1
         '    Workspace1.Tag = Staff_Member
         '    Return
         '  Endif
         ' Next
         Staff_Member = staff[cmbStaff.Index]
         '  Generate_WeekList(Now)
         Create_WeekList_GUI(Now) 'gui + initial appointments
         cmbStaff.index = -1
      Case "location"
   End Select

End

Static Public Function Get_DayLists() As Object[]

   Return Form_Make_Appointments.Daylists

End

Public Sub txtFindPatient_Activate()
   '-------------------------------------------------------
   'The Enter key has been pressed on the FDayList instance
   '-------------------------------------------------------

   Stop Event

   bExit = False
   AppointmentList = Last.Window
   Patients_Find(Last)
   Last.Visible = False

End

Public Sub Patients_Find(txtBox As Textbox, Optional fk_patient As Variant)
   '-----------------------------------------------------------------------------
   'Attemps to find patients according to criteria entered in cmbSearch
   'of by patient key if picked from list of patients seen that day
   'If none found , resets focus to cmbsearch
   'Otherwise creates an empty patient object
   'If only one name and address auto-load that patient to currentconsult
   'If multiple names/addresses, popup a modal for choice
   'which returns a patient object which becomes currentconsult
   'fixme - implement the patient stack
   '-----------------------------------------------------------------------------

   Dim AllPatients As New Collection
   Dim patient As Collection
   Dim sql_in_english As String
   Dim P As Picture
   Dim bPhotoConfirmed As Boolean = False

   If BExit Then Return
   bExit = True

   Inc Application.Busy

   If Not IsNull(fk_patient) Then
      patient = modContactsDBI.Patient_Get_Using_PK(fk_patient)
   Else
      AllPatients = modContactsDBI.patients_get_firstname_surname(Lower(txtbox.text), False) 'get only living patients
     sql_in_english = AllPatients!sql_in_english
      AllPatients.Remove("sql_in_english")
   End If
   If AllPatients.count = 0 And If IsNull(patient) Then
      '------------------------------------------------
      'No match, possibly user just typing in free text
      'which is allowable eg, could be a comment or a
      'drug rep appointment, so pass that back
      'to the FDayList instance
      '------------------------------------------------
      AppointmentList.txtFindPatient.text = UCase(txtbox.text)
      Dec application.Busy
      bExit = False
      Return
   Else
      '----------------------------------------------------
      'One or more patients.
      'If one, get their photo if it exists and load record
      '----------------------------------------------------
      If AllPatients.count = 1 Or If Not IsNull(patient) Then
         '----------------------------------------------------
         'no way in gambas to get a key without an iteraction
         'get first key
         '----------------------------------------------------
         If IsNull(patient) Then
            patient = modUtil.Get_One(AllPatients)
         Endif
         If Not IsNull(patient!image.data) Then
            P = modGraphics.Blob_Convert_To_Picture(patient!image)!picture
         Else
            P = Picture.Load("icons/misc/no_photo.png")
         End If
         FConfirmPatient.Init(P, patient!wholename)
         If Not FConfirmPatient.ShowModal() Then
            bExit = False
            Dec application.Busy
            Return
         End If
         patient_load_record(patient, bPhotoConfirmed, P)
      Else
         '---------------------
         'more than one patient
         '---------------------
         Dec Application.Busy
         Me.Parent.Parent.Parent.Visible = False  '(vbox1 on FClerical)
         form_select = New FPatientsSelect(Me.Parent.Parent.Parent.Parent)
         obs = New Observer(form_select.btnCancel) As "SelectPatient"
         form_select.Init(AllPatients, sql_in_english, "FMakeAppointments")
         form_select.Visible = True
      Endif
   End If
   bExit = False
   Dec application.Busy

End

Public Sub WeekView_Display()
   '--------------------
   'Displays a week view
   '--------------------

End

Public Sub rbWeekView_Click()

   Select Case Last.tag
      Case "day view"
      Case "week view"
   End Select

End

Public Function Next_Date(startdate As Date) As Date

   Dim thedate As Date

   theDate = DateAdd(startdate, gb.day, counter)
   If chkExcludeWeekends.value Then
      Do Until Not (WeekDay(theDate) = gb.Saturday Or WeekDay(theDate) = gb.Sunday)
         Inc counter
         theDate = DateAdd(startdate, gb.day, counter)
      Loop
   Endif
   Return theDate

End

Public Sub Workspace1_Activate()
   '------------------------------------------
   'User has clicked on a tab on the workspace
   '------------------------------------------

   Dim page As Window

   If bExit Then Return
   For Each page In Workspace1.Windows
      If page = Workspace1.ActiveWindow Then
         Staff_Member = page.tag
      End If
   Next
   '

End

Public Sub DateChooser1_Activate()

   Dim window1 As Window

   If bexit Or IsNull(Staff_Member) Then Return
   For Each window1 In Workspace1.windows
      If window1.Caption = Staff_Member!wholename & " from " & Format(DateChooser1.value, gb.LongDate) Then
         Workspace1.ActiveWindow = Window1
         Workspace1.Tag = Staff_Member
         Return
      Endif
   Next
   Create_WeekList_GUI(DateChooser1.value, True)

End

Public Sub Form_KeyPress()

   If Key.code = Key.F9 Then
      Workspace_Close_Windows()
      If Workspace1.ActiveWindow.Caption <> "This week: " & Staff_Member!wholename Then
         Create_WeekList_GUI(Now, True)
      End If
      Stop Event
      Return
   Endif

End

Public Sub DateBox1_Activate()

   DateBox1_Click()

End

Public Sub DateBox1_Click()

   DateChooser1.value = Last.value
   DateChooser1_Activate()

End

Public Sub Form_Hide()

   bFormBeingUsed = False

End

Public Sub Form_Show()
   '----------------------------------------------------------------
   'Always refresh the appointments if this form is being re-entered
   '----------------------------------------------------------------

   bFormBeingUsed = True

End

Public Sub ToolButton1_Click()

   If bAppointmentListsShowing And bFormBeingUsed Then
      WeekList_Reload
   End If

End

Public Sub txtRefreshInterval_KeyPress()

   bkeyvalid = txtRefreshInterval_ExcludeKeys(key.code, Last.tag)
   If bkeyvalid = False Then
      Stop Event
      Return
   End If

End

Public Function txtRefreshInterval_ExcludeKeys(keycode As Integer, tag As String) As Boolean

   Select Case tag
      Case "interval"
         bKeyValid = modUtilGUI.AllowKeys(const.AllowKeys_NumbersOnly, keycode)
   End Select
   Return bKeyValid

End
