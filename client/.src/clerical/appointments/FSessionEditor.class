' Gambas class file

Private Intervals As Integer[]
Private gridrows As Collection
Private griddata As Collection
Private irowheight As Integer = 18
Public Session_Day As String

Public Sub Init(sWeekDay As String)
   
   lblWeekday.text = sWeekDay
   Session_Day = sWeekDay
   cmbIntervals.add("5 minutes")
   cmbIntervals.add("10 minutes")  
   cmbIntervals.add("15 minutes")
   cmbIntervals.add("20 minutes")
   cmbIntervals.add("30 minutes")
   cmbIntervals.add("45 minutes")
   cmbIntervals.add("60 minutes")
   Intervals = [5, 10, 15, 20, 30, 45, 60]
   tbClear_Click() 
End

Public Sub cmbIntervals_Click()
   '----------------------------------------------------
   'If have a grid, update it with the new time interval
   '----------------------------------------------------
   
   If gridview1.Rows.count Then
      Show_Intervals(Intervals[cmbIntervals.Index])
   Endif
   
End

Public Sub Show_Intervals(appointment_interval As Integer)
   '------------------------------------------------
   'initialise the appointment module from fclerical 
   '------------------------------------------------
   
   Dim x As Integer
   Dim ihour As Integer
   Dim iminute As Integer
   Dim istarthour As Integer
   Dim istartminute As Integer
   Dim iEndHour As Integer
   Dim iEndMinute As Integer
   Dim iTotalMinutes As Integer
   Dim iSlots As Integer
 
   istartminute = Minute(dbStartTime.Value)
   istarthour = Hour(dbStartTime.Value)
   iEndHour = Hour(dbEndTime.value)
   iEndMinute = Minute(dbEndTime.Value)
   
   iSlots = Abs(DateDiff(dbEndTime.value, dbStartTime.value, gb.Minute) / appointment_interval)
   With gridview1     
      .Clear()                                                                    
      .columns.count = 2
      .columns[0].width = 50
      '  .columns[1].width = 24
      '   .columns[1].width = gridview1.width - 100
      .rows.count = iSlots
   End With
   ihour = istarthour
   iminute = istartminute
   gridrows = New Collection
   
   For x = 0 To iSlots - 1
      griddata = New Collection
      griddata!time = Format(Time(ihour, iminute, 0), "hh:nn")
      griddata!slots = 1
      gridrows.add(griddata, Str(x))
      gridview1[x, 0].text = Format(Time(ihour, iminute, 0), "hh:nn") 
      gridview1.rows[x].height = griddata!slots * irowheight
      iminute += appointment_interval
      Print iminute
      
      If iminute = 60 Then
         Inc ihour
         iminute = 0
         
      Endif
   Next
   
End

Public Sub dbStartTime_DblClick()
   
    
End

Public Sub Gridview1_Menu()
   
   mnuSchedule.popup()
   
End

Public Sub dbEndTime_Change()
   


End


Public Sub tbClear_Click()
   '-------------------------------------------------
   'Empty the grid and reset the time input textboxes
   '-------------------------------------------------   
   With gridview1
      .Clear()
      .Rows.count = 0
      .columns.count = 0
   End With
   dbStartTime.Value = Date(2011, 09, 25, 8, 0, 00) 'the date doesn't matter, but trying to set  the value as Time(0,0,0) didn't work
   dbEndTime.Value = Date(2011, 09, 25, 18, 0, 00)
   cmbType.index = 0

End

Public Sub tbGenerateGrid_Click()
   
   Show_Intervals(Intervals[cmbIntervals.Index])
   
End

Public Sub mnuSchedule_Click()
   Dim iRow As Integer
   
 ' Select Case Last.tag
 ' Case "appointments"
 ' Case "lunch"
      For irow = 0 To gridview1.Rows.count - 1
         If gridview1.rows[irow].Selected Then
            gridview1[irow, 1].text = Last.tag  
            
         Endif
 
      Next
      
 ' End Select   
End
