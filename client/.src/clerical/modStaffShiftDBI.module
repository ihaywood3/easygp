' Gambas module file

Public Function Shift_Create(fk_staff As Variant, Optional set_date As Date) As Collection
   '--------------------------------------------------------------
   'creates entry in clerical.staff_shifts table, returns the key
   ' CREATE TABLE clerical.staff_shifts
   ' (
   '   pk serial primary key,
   '   shift_date timestamp without time zone NOT NULL,
   '   fk_staff integer NOT NULL references admin.staff(pk)
   '  
   ' );
   ' 
   '--------------------------------------------------------------
   ' 
   
   Dim sql As String
   
   sql = "insert into clerical.staff_shifts "
   "(shift_date, fk_staff) "
   "VALUES ("
   If IsNull(set_date) Then
      sql &= "now(),"
   Else
      sql &= "$$" & Format(set_date, "yyyy-mm-dd hh:MM") & "$$,"
   Endif
   sql &= modDBConnect.currentUser!fk_staff 
   ' sql &= fk_type & ","
   sql &= ") returning shift_date, pk"
   Return modDBConnect.exec_query_first(sql)
   
End

Public Function Staff_notes_Get_All() As Collection
   
   Dim sql As String
   
   sql = "Select * from clerical.vwStaffNotes where staff_note_deleted is false "
   sql &= "order by shift_date, time_logged  ASC"
   Return modDBConnect.exec_query_collection(sql)

End

' retreives 'sticky poster notes' for the office, optionally for a staff member
Public Function Staff_Notes_Get_Outstanding(Optional fk_staff_destination As Variant = Null, Optional fk_staff_logged As Variant) As Collection
   
   Dim sql As String
   
   sql = "Select * from clerical.vwStaffNotes WHERE completed Is False " 
   ' AND deleted is not true "
  
   If Not IsNull(fk_staff_destination) Then
      sql &= " AND fk_staff_destination = " & fk_staff_destination
   Endif
   sql &= " order by shift_date, time_logged  ASC"
   Print sql
   
   Return modDBConnect.exec_query_collection(sql)
   
End

Public Function Shift_Update(pk_consult As Variant, fk_type As Variant)
   
   Dim sql As String
   
   sql = "Update clerical.staff_shifts set fk_type= " & fk_type
   sql &= "WHERE pk= " & pk_consult
   modDBConnect.exec_query(sql)
   
End

Public Function Notes_Types_Get() As Collection
   
   Return modDBConnect.exec_query_collection("Select * from clerical.lu_staff_notes_type order by type ASC") 
   
End

Public Function Offices_Notes_Create_HTML() As String
   
   Dim sStart As String
   Dim sRowTemplate As String
   Dim sEnd As String
   Dim staff_notes As Collection = Staff_notes_Get_All()
   Dim note As Collection
   Dim sHtml As String
   Dim sDate As String
   Dim sTime As String
   Dim sNote As String
   Dim sStatus As String

   sStart = "<HTML>"
   "<BODY>"
   "<TABLE WIDTH=100% BORDER=0 CELLPADDING=5 CELLSPACING=1 >"
   sRowTemplate =
      "<COL WIDTH=5%>"
   "<COL WIDTH=5%>"
   "<COL WIDTH=10%>"
   "<COL WIDTH=80%>"
   "<TR VALIGN=TOP>"
   "<TD WIDTH=5%>"
   "col1"
   "</TD>"
   "<TD WIDTH=5%>"
   "col2"
   "</TD>"
   "<TD WIDTH=10%>"
   "col3"
   "</TD>"
   "<TD WIDTH=70%>"
   "col4"
   "</TD>"
   "<TD WIDTH=180%>"
   "col5"
   "</TD>"
   "</TR>"
   sEnd = "</TABLE></BODY></HTML>" 
   sHtml = sStart
   For Each note In staff_notes
      sDate = Format(note!shift_date, "dd/mm/yyyy")
      sTime = Format(note!time_logged, gb.ShortTime)
      sNote = "<B>For " & note!staff_destination_wholename
      sNote &= " - " & note!type & "</B><BR>"
      sNote &= note!notes
      sHtml &= sRowTemplate
      sHtml = Replace(sHtml, "col1", sDate)
      sHtml = Replace(sHtml, "col2", sTime)
      sHtml = Replace(sHtml, "col3", note!staff_logged_wholename)
      sHtml = Replace(sHtml, "col4", sNote)
      If note!completed Then sStatus = "Done" Else sStatus = ""
      sHtml = Replace(sHtml, "col5", sStatus)
   Next
   Print sHTml & sEnd
   Return sHTml & sEnd
End
