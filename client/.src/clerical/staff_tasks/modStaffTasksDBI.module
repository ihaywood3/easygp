' Gambas module file


Public Function StaffTasks_Get_TaskTypes() As Collection 
     
  Return modDBConnect.exec_query_collection("Select * from clerical.lu_task_types order by type")
  
End

Public Sub StaffTasks_Save(olddata As Collection, pk_view As Integer, newdata As Collection, Optional fk_document As Integer) As Integer
   '-----------------------------------------------------
   'Saves a task associated with the filing of a document
   'Eg ring patient
   '------------------------------------------------------
   Dim ST As New Collection
   If fk_document <> 0 Then ST!fk_document = fk_document
   If IsNull(newdata!fk_task) Then
      '--------------------------------------------------------------------------
      'New task for this document? insert in tasks table and link to the document
      '--------------------------------------------------------------------------
      newdata!fk_task = modDBConnect.insert("clerical.tasks", newdata)
      St!fk_task = newdata!fk_task  
      If fk_document Then newdata!fk_link_document_task = modDBConnect.insert("Documents.link_document_task", ST) '?remove this
      
  Else
      modDBConnect.update("clerical.tasks", olddata[pk_view], newdata, "fk_task")
  Endif
 Return newdata!fk_task
End
Public Sub StaffTasks_Components_Save(olddata As Collection, pk_view As Integer, newdata As Collection) As Integer
   '--------------------------------
   'Saves a component of a task task
   'Eg ring patient
   '--------------------------------
   If IsNull(newdata!fk_component) Then
      '--------------------------------------------------------------------------
      'New task for this document? insert in tasks table and link to the document
      '--------------------------------------------------------------------------
      newdata!fk_component = modDBConnect.insert("clerical.task_components", newdata)
     
  Else
      modDBConnect.update("clerical.task_components", olddata[pk_view], newdata, "fk_component")
  Endif
 Return newdata!fk_component
End


Public Function StaffTasks_CheckOutstandingComponents(fk_task As Integer) As Integer 
   '----------------------------------------------------------------------------------
   'Checks if there are any outstanding components to a task - ie. those not completed
   '----------------------------------------------------------------------------------
   Return modDBConnect.exec_query("Select count(pk) from clerical.task_components WHERE fk_task = " & fk_task & " AND date_completed is null")!count
End

Public Function StaffTasks_Notes_Save(olddata As Collection, pk_view As Integer, newdata As Collection, fk_document As Integer) As Integer
   '-----------------------------------------------
   'Saves notes about progress dealing with a task
   'Eg rang patient - said they'd come in next week
   '------------------------------------------------
   If IsNull(newdata!fk_note) Then
      '--------------------------------------------------------------------------
      'New task for this document? insert in tasks table and link to the document
      '--------------------------------------------------------------------------
    '  newdata!fk_note = modDBConnect.insert("admin.tasks_notes", newdata)
       newdata!fk_note = modDBConnect.insert("clerical.task_component_notes", newdata)
   Else
      modDBConnect.update("clerical.task_component_notes", olddata[pk_view], newdata, "fk_note")
  Endif
 'Return fk_stafftask
End

Public Function Tasks_For_Document_Get(fk_document As Integer, fk_schema As Integer, fk_table As Integer) As Collection
'`?delete this as now that fk_row, fk_schema, fk_table is in admin.vwStaffTasks, probably not needed   
  '  Return modDBConnect.exec_query_collection("SELECT *  from documents.vwStaffTasks_Documents WHERE fk_document = " & fk_document & " And deleted = False")
   Dim sql As String
   sql = "SELECT *  from clerical.vwTasksComponents WHERE "
   sql &= "fk_row = " & fk_document & " AND fk_schema = " & fk_schema & " AND  fk_table = " & fk_table 
   sql &= " And task_deleted = False and component_deleted = false"
    Return modDBConnect.exec_query_collection(sql)

End

 
