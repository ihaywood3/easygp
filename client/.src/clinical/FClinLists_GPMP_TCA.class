' Gambas class file

' Copyright (C) 2014 Dr. Richard Terry
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'-----------------------------------------------------------------------
' PURPOSE  To display and manipulate GP Management Plans and
'          team care arrangements
'USED IN   FClinical
'-----------------------------------------------------------------------

Private CurrentConsult As CConsult
Private cvwGPMPTCA_Key As Variant

Public Sub _new()
   
   Settings_Load  
   
End

Public Sub Init(cons As CConsult)   
   
   currentconsult = Cons 
   cvwGPMPTCA_Reload
   
End

Public Sub Gui_Clear()
   
   currentconsult = Null 
   modUtilGUI.Columnview_Clear_Properly(cvwGPMPTCA)
   
End

Public Sub cvwGPMPTCA_Menu()
   
   If cvwGPMPTCA.count Then mnuGPMPTCAList.Popup
   
End

Private Sub Settings_Load()
   
   cvwGPMPTCA.Font = Font[Settings["FClinLists_GPMP_TCA/cvwGPMPTCA.font", "DejaVu Sans,9"]]
   
End

Public Sub cvwGPMPTCA_Select()
   '-------------------------------------------------------------------
   'User has selected a list item
   'this is usually Latex or a pdf, could however have been transferred
   'to this list from eg html
   '-------------------------------------------------------------------   
   Dim D As Collection
   
   cvwGPMPTCA.MoveCurrent
   cvwGPMPTCA_Key = cvwGPMPTCA.Item.key
   D = currentconsult!gp_management_plans_team_care_arrangements[cvwGPMPTCA_Key]
  
   If D!fk_lu_data_content_type = const.cData_Type_Latex Then                          'will always be 'straight' latex with no overpic stuff
      FClinical.Editor_ShowPage_External("pdf file", D!tag_user, modPrinting.Latex_To_PDF(D!data))
   Else
      FClinical.Editor_ShowPage_External("pdf document", D!tag_user & ":" & Str(D!pk_document), D!source_file) 'open as unique filename on separate tab
   Endif
   
Catch
   Log.WarningMsg("cvwGPMPTCA_Select: " & Error.Text & " " & Error.Backtrace.Join(" "))
   Return 
   
End

Public Sub cvwGPMPTCA_Reload(Optional bRefresh As Boolean)
   
   Dim item As Collection
   Dim x As Integer
   
   If IsNull(currentconsult) Then Return
   With cvwGPMPTCA                    
      .Clear()
      .Columns.count = 2
   End With
   If bRefresh Then
      currentconsult.Refresh("gp_management_plans_team_care_arrangements")
   Endif
   Print currentconsult.GetPK()
   For Each item In currentconsult!gp_management_plans_team_care_arrangements 
      x = item!pk 'pk document
      cvwGPMPTCA.Add(x, 0)
      cvwGPMPTCA[x][0] = Format(item!date_created, "dd/mm/yyyy")
      cvwGPMPTCA[x][1] = item!tag_user
      If Not IsNull(item!data) Then
         Print item!data
      Endif
   Next
   
End

Public Sub mnuGPMPTCAList_Click()
   
   Dim sMsg As String
   Dim D As Collection = currentconsult!gp_management_plans_team_care_arrangements[cvwGPMPTCA_Key]
   Dim pdf_path As String
   Dim audit_notes As String
   
   Select Case Last.tag 
      Case "file as result"
      Case "file as form"
      Case "file as letter"
          audit_notes = "Display mode changed from gpmp to letter"
         If modArchiveDocumentsDBI.Change_Display_Mode(currentconsult, D, const.Document_Display_As_Letter, const.cSection_Documents, audit_notes) Then
            cvwGPMPTCA_Reload
            FClinical.Refresh_Section(const.cSection_Documents)
         Endif
         
      Case "help"
         modUtilGUI.NotImplemented("Help for the GPMP/TCA list")
      Case "font"
         modUtilGUI.Columnview_SetFont(cvwGPMPTCA, "FClinLists_GPMP_TCA")
      Case "delete"
         sMsg = "Are you sure you want to delete this document"
      Case "external viewer"
         If IsNull(D!source_file) Then
            modArchiveDocumentsDBI.Launch_External_PDF_Viewer(modPrinting.Latex_To_PDF(D!data))
         Else
            If Lower(File.Ext(D!source_file)) = "pdf" Then   
               pdf_path = modFiles.Get("document_archiving_directory", D!source_file)
               modArchiveDocumentsDBI.Launch_External_PDF_Viewer(pdf_path)
            End If
         Endif
         ' modutil.Show_in_external_pdf_viewer(modFiles("document_archiving_directory", D!source_file), True)
         
   End Select
   
End
