' Gambas class file

' Copyright (C) 2008-2011 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Public Form_PDF As FPdf
Private sections As Collection 
Private filename As String 
Private hObs As Observer
Private currentconsult As Cconsult
Private Page_Orientation As Integer
Private bExit As Integer

Public Sub _New()
  
   Form_PDF = New FPdf(Hbox_PDF)
  
End


Public Sub Form_Close()
  
  Settings_Save()
  
End

Public Sub Init(cons As Cconsult)
   '
  currentconsult = cons
  Try Settings_Load()
  HObs = New Observer(Form_PDF.tbClose) As "tbClose" 'detect If embedded pdf viewer closes the form
  '------------------------------------------------------
  'Ok, only show checkboxes for data that actually exists
  '------------------------------------------------------
 
  chkAllProgressNotes.Visible = currentconsult!progress_notes.count
  chkProgressNotesEachHealthIssue.Visible = currentconsult!past_history.count
  chkMentalHealthPlans.visible = currentconsult!mentalhealthplans.count
  chkReferralLetterSummaries.Visible = currentconsult!referrals_written.count
  chkReferralLetters.Visible = currentconsult!referrals_written.count
  chkRequestsOrdered.Visible = currentconsult!requests_ordered.count
  ChkResults.Visible = currentconsult!results_received.count 
  chkRecalls.Visible = currentconsult!recalls_logged.count 
  chkWorkcover.Visible = currentconsult!workcover_claims.count 
  Re_set()
End

Public Sub Re_set()
  Form_PDF.PBox.visible = False                      'hide any previous pdf generated
  ProgressBar1.Visible = False
  ProgressBar1.value = 0.0                           're-zero the progress bar
  HBox_Button.visible = True
  
  
End

Public Sub tbClose_Click()
   Stop Event  
   FClinical.WorkspaceEditor_Show()
   Settings_Save()
   Me.Hide()
  
End



Public Sub tbGeneratePDF_Click()
    '----------------------------------------------------------------------------------------
   '1) Note - only checkboxes corresponding To sections containing data are shown as options
   '2) On the basis of the checkboxes tags - build the html sections to put in the pdf
   '   preceeding them by either a coversheet or TOC if desired
   '3) If the html section doesn't inherently have a html section header (e.g
   '   mental health plans or letters are just a collection of single pages),
   '   then insert the header into the first instance of the collection
   '4) Note  - < Hn > levels are used to generate the toc (table of contents) by wxhtmltopdf. 
   '  These are nested unless flagged out by an --toc-depth value
   '--------------------------------------------------------------------------
   Dim member As Collection 
   Dim page As String 
   Dim bPrintCoversheet As Boolean
   Dim bPrintTableOfContents As Boolean
   Dim x As Integer
   Dim charpos As Integer
   Dim sHtml As String 
   Dim hctrl As Control
   Dim cbox As CheckBox
   Dim ContentsPage As String         'the front page of the pdf - the contents
   Dim Output_file As String
   Dim pdf_files As Collection 
   Dim tempstring As String 
      
   Inc application.Busy
   HBox_Button.visible = False         'remove the generate pdf buttons
   ProgressBar1.value = 0.0            
   ProgressBar1.Visible = True         
   '-------------------------------------------------------
   'Loop through each checkbox which is an option for a pdf
   'if checked, generate the html for that section
   '-------------------------------------------------------
   sections = New Collection 

   For Each hctrl In Vbox_Options.children
    If hctrl Is CheckBox And hctrl.Visible Then
       Cbox = hctrl
       Select Case Cbox.Tag
         Case "coversheet"
              If Cbox.Value = True Then
                   bPrintCoversheet = True
                   ContentsPage = modProgressNotes.CoverSheet_Construct_HTML(currentconsult).GetData()
              End If
         Case "toc"
              If Cbox.Value = True Then
                   bPrintTableOfContents = True
              End If 
         Case Else
            If Cbox.Value = True And Cbox.visible Then
                Select Case cbox.Tag
                   Case "health summary"
                         sections.Add(modProgressNotes.Health_Summary_Construct_html(currentconsult), sections.count)
                   Case "care plan"
                         sections.Add(modProgressNotes.Care_Plan_Construct_html(currentconsult), sections.count)              
                   Case "all progress notes"
                         sections.Add(modProgressNotes.ConstructHTML_AllProgressNotes(currentconsult), sections.count)
                   Case "health issue progress notes"
                        If currentconsult!past_history.count Then
                           For Each member In currentconsult!past_history
                               sections.Add(modProgressNotes.ConstructHTML_SingleProblem(currentconsult, member!pk_pasthistory, const.cSection_PastHistory, member!description, True), sections.count)
                           Next
                        End If
                   Case "scratch pad"
                      ' audit_rows = modScratchPadDBI.View_AuditTrail(currentconsult!patient!fk_patient)
                       ' tempstring = modAuditDBI.Audit_HTML_Construct(modScratchPadDBI.View_AuditTrail(currentconsult!patient!fk_patient), "Scratchpad").GetData()
                        If tempstring Then
                           tempstring = "<DIV  ALIGN=CENTER><H3> Scratch Pad History</H3></DIV>" & tempstring 
                           sections.Add(tempstring, sections.count)
                        End If 
                   Case "workcover"
                       If currentconsult!workcover_claims.count Then
                         
                           x = 0
                            For Each Member In currentconsult!workcover_claims
                               ' If x = 0 Then
                               '    tempstring = member!html
                               '    charpos = InStr(tempstring, "<P")
                               '    tempstring = Left(tempstring, charpos - 1) & "<DIV  ALIGN=CENTER><H3> Mental Health Plans</H3></DIV>" & Right(tempstring, Len(tempstring) - charpos + 1)
                               '    sections.Add(tempstring, sections.count)
                               '    Inc x
                               ' Else
                               '    sections.Add(Member!html, sections.count)
                               ' End If
                            Next
                         End If 
                   ' sections.Add(modWorkCoverDBI.Claims_Get()
                   Case "mental health"
                         '-------------------
                         'Mental Health Plans
                         '-------------------
                         If currentconsult!mentalhealthplans.count Then
                            '------------------------------------------------------------------------------
                            'So as to get 'Mental Health Plans' into the table of contents, substitute that
                            'text into the html of the first mental health plan only, use a temp string
                            'otherwise the member itself will be altered
                            '------------------------------------------------------------------------------
                            x = 0
                            For Each Member In currentconsult!mentalhealthplans
                               If x = 0 Then
                                  tempstring = member!html
                                  charpos = InStr(tempstring, "<P")
                                  tempstring = Left(tempstring, charpos - 1) & "<DIV  ALIGN=CENTER><H3> Mental Health Plans</H3></DIV>" & Right(tempstring, Len(tempstring) - charpos + 1)
                                  sections.Add(tempstring, sections.count)
                                  Inc x
                               Else
                                  sections.Add(Member!html, sections.count)
                               End If
                            Next
                         End If 
                   Case "referral letter summaries"
                       If currentconsult!referrals_written.count Then
                          sections.Add(modProgressNotes.ReferralLetter_summary_construct_html(currentconsult), sections.count)
                       End If  
                  
                   Case "referrals"
                        '------------------
                        'The actual letters
                        '------------------
                        If currentconsult!referrals_written.count Then
                           x = 0 
                           For Each Member In currentconsult!referrals_written        'all the referrals
                              If x = 0 Then
                               tempstring = Member!letter_html
                              
                                tempstring = Replace(tempstring, "<BODY>", "<body><DIV ALIGN=CENTRE><H3>Referral Letters</H3></DIV", gb.IgnoreCase)
                                sections.Add(tempstring, sections.count)
                                Inc x
                              Else
                                 sections.Add(Member!letter_html, sections.count)
                              End If                                       
                             Next   
                        End If
                   Case "requests"
                          If currentconsult!requests_ordered.count Then
                             sections.Add(modProgressNotes.Requests_summary_construct_html(currentconsult), sections.Count)
                          End If  
                   Case "correspondance received"
                   Case "recalls"
                   
                        sections.Add(modProgressNotes.Recalls_summary_construct_html(currentconsult), sections.Count)
                   Case "results"
                           x = 0 
                           For Each Member In currentconsult!results_received        'all the referrals
                                 If x = 0 Then
                                
                                   tempstring = "<body><DIV ALIGN=CENTRE><H3>Results Received</H3></DIV" & Member!html
                                 '  tempstring = Replace(tempstring, "<BODY>", "<body><DIV ALIGN=CENTRE><H3>Results Received</H3></DIV", gb.IgnoreCase)
                                   sections.Add(tempstring, sections.count)
                                   Inc x
                                 Else
                                    sections.Add(Member!html, sections.count)
                                 End If                                       
                           Next   
                    End Select
            End If
       End Select
    End If
   Next
 
   '---------------------------------------------------------------
   'Ok, construct the pdf Pages for each section using wkhtmltopdf
   '---------------------------------------------------------------
   Output_file = currentconsult!patient!wholename
   Output_file = Replace(Output_file, " ", "_")
   Output_file &= "FileId:" & Str(currentconsult!patient!fk_patient) & "-birthdate:" & Format(currentconsult!patient!birthdate, "dd-mm-yyyy") & ".pdf"
   If sections.count Then
      tempstring = modPrinting.Make_PDF(sections, const.orientation_portrait, ContentsPage, bPrintTableOfContents, Output_file, ProgressBar1)
      Form_PDF.Load_PDF(tempstring)
      Form_PDF.PBox.Visible = True  
   End If   
   ProgressBar1.Visible = False 
   HBox_Button.visible = True
   Dec application.Busy
End


Private Sub Settings_Save()


      Settings["FExportClinical/Hsplit_Export"] = Hsplit_Export.Layout
      Settings["FExportClinical/Form_PDF.currentzoom"] = Form_PDF.CurrentZoom
      
  

End

Private Sub Settings_Load()


      Hsplit_Export.Layout = Settings["FExportClinical/Hsplit_Export"]
      Form_PDF.CurrentZoom = Settings["FExportClinical/Form_PDF.currentzoom"]
  

End




Public Sub rbOrientation_Click()

 Page_Orientation = Last.tag

End


Public Sub chkExportEverything_Click()
   
  
   Dim hCtrl As Control
   Dim Cbox As Checkbox
   If bexit Then Return 
   bExit = True
   Form_PDF.PBox.Visible = False 
   For Each hctrl In Last.parent.children
       If hctrl Is CheckBox Then
          Cbox = hctrl
          Select Case Cbox.Tag
          Case "coversheet", "toc"
          Case Else
               Cbox.value = chkExportEverything.value
          End Select
        End If 
   Next
   bExit = False  

End

Public Sub checkboxExport_Click()

  Form_PDF.PBox.Visible = False  

End
