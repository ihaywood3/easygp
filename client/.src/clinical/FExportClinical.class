' Gambas class file

' Copyright (C) 2008-2011 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
'PURPOSE          Simple non-conforming to MDW format pdf export
'TODO             Really clin_consult.lu_progressnote_sections should
'                 consist of the keys to each section not the ad-hoc
'                 naming of sections I've used through the program
'                 FIXME
'----------------------------------------------------------------------
Public Form_PDF As FPdf
Private sections As Collection 
Private filename As String 
Private Obs As Observer
Private currentconsult As Cconsult
Private Page_Orientation As Integer
Private bExit As Integer
Private collection_members As Collection
Private archive_dir As String

Public Sub Form_Close()
   
   Settings_Save()
   
End

Public Sub Init(cons As Cconsult)
   '-------------------------------------------------------------------
   'Initialise module, bring in a PDF reviewer, refresh all collections
   '-------------------------------------------------------------------
   
   currentconsult = cons
   Form_PDF = New FPdf(HBox_PDF)
   Try Settings_Load()
   archive_dir = modAdminDBI.Config_Get("document_archiving_directory", "/var/easygp/documents/")
   Refresh()
   
End

Public Sub Save()
   
   Form_PDF.Save_PDF()
   
End

Public Sub Zoom_In()
   
   Form_PDF.Zoom_In()
   
End

Public Sub Zoom_Out()
   
   Form_PDF.Zoom_Out()
   
End

Public Sub Refresh_Collections()
   '-----------------------------------------------------
   'Remove the keys from all collections hence these will
   're-load the contents when next referenced
   'fixme see note at top of file.
   '-----------------------------------------------------
   
   currentconsult.Refresh("progress_notes")
   currentconsult.Refresh("past_history")
   currentconsult.Refresh("staff_tasks")  
   currentconsult.Refresh("mentalhealthplans")
   currentconsult.Refresh("referrals_written")
   currentconsult.Refresh("letters_received")
   currentconsult.Refresh("requests_ordered")
   currentconsult.Refresh("recalls_logged")
   currentconsult.Refresh("results_received")
   currentconsult.Refresh("workcover_claims")
   
End

Public Sub Preview()
   '----------------------------------------------------------------------------------------
   '1) Note - only checkboxes corresponding To sections containing data are shown as options
   '2) On the basis of the checkboxes tags - build the html sections to put in the pdf
   '   preceeding them by either a coversheet or TOC if desired
   '3) If the html section doesn't inherently have a html section header (e.g
   '   mental health plans or letters are just a collection of single pages),
   '   then insert the header into the first instance of the collection
   '4) Note  - < Hn > levels are used to generate the toc (table of contents) by wxhtmltopdf. 
   '  These are nested unless flagged out by an --toc-depth value
   '  
   ' This subroutine is called from the FClinical toolbar and generates the PDF
   '-----------------------------------------------------------------------------------------
   
   Dim member As Collection 
   Dim page As String 
   Dim bPrintCoversheet As Boolean
   Dim bPrintTableOfContents As Boolean
   Dim x As Integer
   Dim charpos As Integer
   Dim sHtml As String 
   Dim hctrl As Control
   Dim cbox As CheckBox
   Dim ContentsPage As String         'the front page of the pdf - the contents
   Dim Output_file As String
   Dim pdf_files As Collection 
   Dim tempstring As String 
   Dim temp_dir As String
   Dim Letter_PDF_path As Collection
   Dim pro As Process
   
   If chkAudit.value = True Then
      Message.Title = "Adding Audit to Document Export"
      tempstring = "Including the audit trail when exporting the documents will take quite a while.\n\n"
      "This is not recommended unless these documents will be used for medico-legal reasons, or you are "
      "transferring the records to another practice.\n\n"
      "Are you sure you want to do this?"
      Select Case Message.Question(tempstring, "Include Audit Details in PDF", "Skip Audit", "Cancel")
         Case 3
            Return
         Case 2
            chkAudit.value = False    
      End Select
      
   Endif
   Inc application.Busy
   ProgressBar1.value = 0.0            
   ProgressBar1.Visible = True  
   lblStatus.Visible = False   
   Wait    
   '-------------------------------------------------------
   'Loop through each checkbox which is an option for a pdf
   'if checked, generate the html for that section
   '-------------------------------------------------------
   sections = New Collection 
   
   For Each hctrl In VBox1.children
      If hctrl Is CheckBox And hctrl.Visible Then
         Cbox = hctrl
         Select Case Cbox.Tag
            Case "coversheet"
               If Cbox.Value = True Then
                  bPrintCoversheet = True
                  ContentsPage = modProgressNotes.CoverSheet_Construct_HTML(currentconsult).GetData()
               End If
            Case "toc"
               If Cbox.Value = True Then
                  bPrintTableOfContents = True
               End If 
            Case Else
               If Cbox.Value = True And Cbox.visible Then
                  Select Case cbox.Tag
                     Case "health summary"
                        sections.Add(modProgressNotes.Health_Summary_Construct_html(currentconsult), sections.count)
                     Case "care plan"
                        sections.Add(modProgressNotes.Care_Plan_Construct_html(currentconsult), sections.count)              
                     Case "all progress notes"
                        sections.Add(modProgressNotes.ConstructHTML_AllProgressNotes(currentconsult), sections.count)
                     Case "health issue progress notes"
                        If currentconsult!past_history.count Then
                           For Each member In currentconsult!past_history
                              sections.Add(modProgressNotes.ConstructHTML_SingleProblem(currentconsult, member!pk_pasthistory, const.cSection_PastHistory, member!description, True), sections.count)
                           Next
                        End If
                     Case "tasks"
                        '-------------------------------------------------------------------- 
                        'List outstanding tasks - currently limited to document audit trails.
                        '-------------------------------------------------------------------- 
                        
                        x = 0
                        For Each member In currentconsult!staff_tasks
                           If currentconsult!staff_tasks.count Then
                              If x = 0 Then 
                                 tempstring = modProgressNotes.Tasks_summary_Construct_html(member)
                                 Print tempstring 
                                 charpos = InStr(tempstring, "<P")
                                 tempstring = Left(tempstring, charpos - 1) & "<DIV  ALIGN=CENTER><H3> Outstanding Taks</H3></DIV>" & Right(tempstring, Len(tempstring) - charpos + 1)
                                 Print tempstring  
                                 sections.Add(tempstring, sections.count)
                                 Inc x
                              Else
                                 sections.Add(modProgressNotes.Tasks_summary_Construct_html(member), sections.count)
                              End If  
                           Endif
                        Next 
                     Case "workcover"
                        ' If currentconsult!workcover_claims.count Then
                        '    x = 0
                        '    For Each Member In currentconsult!workcover_claims
                        '       If x = 0 Then
                        '          tempstring = member!html
                        '          charpos = InStr(tempstring, "<P")
                        '          tempstring = Left(tempstring, charpos - 1) & "<DIV  ALIGN=CENTER><H3> Mental Health Plans</H3></DIV>" & Right(tempstring, Len(tempstring) - charpos + 1)
                        '          sections.Add(tempstring, sections.count)
                        '          Inc x
                        '       Else
                        '          sections.Add(Member!html, sections.count)
                        '       End If
                        '    Next
                        ' End If 
                        ' sections.Add(modWorkCoverDBI.Claims_Get()
                     Case "mental health"
                        '-------------------
                        'Mental Health Plans
                        '-------------------
                        If currentconsult!mentalhealthplans.count Then
                           '------------------------------------------------------------------------------
                           'So as to get 'Mental Health Plans' into the table of contents, substitute that
                           'text into the html of the first mental health plan only, use a temp string
                           'otherwise the member itself will be altered
                           '------------------------------------------------------------------------------
                           x = 0
                           For Each Member In currentconsult!mentalhealthplans
                              If x = 0 Then
                                 tempstring = member!html
                                 charpos = InStr(tempstring, "<P")
                                 tempstring = Left(tempstring, charpos - 1) & "<DIV  ALIGN=CENTER><H3> Mental Health Plans</H3></DIV>" & Right(tempstring, Len(tempstring) - charpos + 1)
                                 sections.Add(tempstring, sections.count)
                                 Inc x
                              Else
                                 sections.Add(Member!html, sections.count)
                              End If
                           Next
                        End If 
                     Case "referral letter summaries"
                        If currentconsult!referrals_written.count Then
                           sections.Add(modProgressNotes.ReferralLetter_summary_construct_html(currentconsult), sections.count)
                        End If  
                        
                     Case "referrals"
                        '------------------
                        'The actual letters
                        '------------------
                        If currentconsult!referrals_written.count Then
                           x = 0 
                           For Each Member In currentconsult!referrals_written        'all the referrals
                              If x = 0 Then
                                 tempstring = Member!letter_html
                                 tempstring = Replace(tempstring, "<BODY>", "<body><DIV ALIGN=CENTRE><H3>Referral Letters</H3></DIV", gb.IgnoreCase)
                                 sections.Add(tempstring, sections.count)
                                 Inc x
                              Else
                                 sections.Add(Member!letter_html, sections.count)
                              End If                                       
                           Next   
                        End If
                     Case "requests"
                        If currentconsult!requests_ordered.count Then
                           sections.Add(modProgressNotes.Requests_summary_construct_html(currentconsult), sections.Count)
                        End If 
                     Case "recalls"
                        sections.Add(modProgressNotes.Recalls_summary_construct_html(currentconsult), sections.Count)
                     Case "results"
                        x = 0 
                        For Each Member In currentconsult!results_received        'all the referrals
                           If x = 0 Then
                              Tempstring = "" 
                              If (chkExcludeINR.value = True And chkExcludeINR.Enabled) Or chkExcludeINR.Enabled = False Then
                                 If member!tag <> "INR" Then tempstring = "<body><DIV ALIGN=CENTRE><H3>Results Received</H3></DIV" & Member!html
                              Else
                                 tempstring = tempstring = "<body><DIV ALIGN=CENTRE><H3>Results Received" 
                                 If chkExcludeINR.value = True Then
                                    tempstring &= "<small>(Exluding all INR's)</small>"
                                 Endif
                                 tempstring &= "</H3></DIV" & Member!html
                              End If
                              
                              '----------------------------------------
                              'now, is there an audit on this document?
                              '----------------------------------------
                              If chkAudit.value = True And Len(tempstring) <> 0 Then
                                 sHtml = modArchiveDocumentsDBI.Staff_Tasks_Document_Audit_Trail(member!pk_document)
                                 sHtml &= "<HTML><BODY><TABLE><BR><B>Document Actioning</B><BR>" & modHTML.HTML_Template_Audit_Row_Heading() 
                                 sHtml &= modAudit.MakeTrail("documents.documents", Member!pk_document)
                                 sHtml &= "</TABLE>"
                                 sHtml &= "</BODY></HTML>"
                                 tempstring &= shtml
                              End If  
                              If Len(tempstring) Then  
                                 sections.Add(tempstring, sections.count)
                                 Inc x
                              End If   
                           Else
                              tempstring = ""
                              If chkExcludeINR.value = True And chkExcludeINR.Enabled Then
                                 If member!tag <> "INR" Then tempstring = member!html
                              Else
                                 tempstring = member!html
                              End If   
                              If chkAudit.value = True And Len(tempstring) <> 0 Then
                                 sHtml = modArchiveDocumentsDBI.Staff_Tasks_Document_Audit_Trail(member!pk_document)
                                 sHtml &= "<HTML><BODY><TABLE><BR><B>Document Actioning</B><BR>" & modHTML.HTML_Template_Audit_Row_Heading() 
                                 sHtml &= modAudit.MakeTrail("documents.documents", Member!pk_document)
                                 sHtml &= "</TABLE>"
                                 sHtml &= "</BODY></HTML>"
                                 tempstring &= shtml
                              End If  
                              If Len(tempstring) Then sections.Add(tempstring, sections.count)
                           End If  
                        Next 
                     Case "letters received list"
                        If currentconsult!letters_received_sorted_ascending.count Then 
                           sections.Add(modProgressNotes.Letters_summary_construct_html(currentconsult), sections.Count)
                        End If
                        
                     Case "letters received" 
                        Temp_dir = "/tmp/letters"
                        Try Mkdir "/tmp/letters"
                        If Error Then
                           If Error.Code = const.File_ioError_DirectoryExists Then    
                               pro = Shell "rm /tmp/letters/*.pdf" Wait For Write 
                              Close #pro
                           Else
                              Message.Info("An error occurred code:" & Error.code & ".\n\nCannot process the letters.")
                              Break
                           End If   
                        End If   
                        Letter_PDF_path = New Collection
                        'Last for a reason  
                         Letter_PDF_path.Add("", 0) 'will be the generated_pdf sans the letters
                         x = 1
                        For Each Member In currentconsult!letters_received_sorted_ascending
                           
                           Tempstring = ""
                           '    If x = 0 Then
                           '      tempstring = "<body><DIV ALIGN=CENTRE><H3>LETTERS RECEIVED</H3></DIV"
                           '     End If  
                           Select Case File.Ext(member!source_file)
                              Case "pdf"
                                 Letter_PDF_path.Add(archive_dir &/ member!source_file, x)
                                 
                              Case Else
                                 '------------------ 
                                 'must be a hl7 file
                                 '------------------
                                 tempstring &= member!html
                                 Letter_PDF_path.Add(modPrinting.Make_PDF_From_Html(member!html, const.orientation_portrait, "", False, Str(x) & ".tmp.pdf", Progressbar1, "/tmp/letters/"), x)
                                
                           End Select 
                            Inc x
                           '     Print member
                           '    'sections.Add(modProgressNotes.Requests_summary_construct_html(currentconsult), sections.Count)
                        Next
                        
                  End Select
               End If
         End Select
      End If
      
   Next
   
   '---------------------------------------------------------------
   'Ok, construct the pdf Pages for each section using wkhtmltopdf
   '---------------------------------------------------------------
   Output_file = currentconsult!patient!wholename     'create filename and remove illegal characters
   Output_file = Replace(Output_file, " ", "_")
   Output_file = Replace(Output_file, "'", "")
   Output_file &= "FileId:" & Str(currentconsult!patient!fk_patient) & "-birthdate:" & Format(currentconsult!patient!birthdate, "dd-mm-yyyy") & ".pdf"
   If sections.count Then
      tempstring = modPrinting.Make_PDF_From_HTML_Pages(sections, const.orientation_portrait, ContentsPage, bPrintTableOfContents, Output_file, ProgressBar1)
      '------------------------------------------------------------------------
      'Now, have joined all the html we can but most of the incoming mail
      'at this point in time is scanned to pdf's
      'so have to join all the letters received pdf's onto the end of the file
      '-----------------------------------------------------------------------
      Letter_PDF_path[0] = tempstring
      tempstring = Temp()
      modPrinting.Join_PDF(Letter_PDF_path, tempstring)
     
      With Form_PDF
         .Load_PDF(modPrinting.Join_PDF(Letter_PDF_path, tempstring))
         .PBox.Visible = True  
      End With
   End If   
   ProgressBar1.Visible = False 
   Dec application.Busy
   
End

Private Sub Settings_Save()
   
   Settings["FExportClinical/Hsplit_Export.Layout"] = Hsplit_Export.Layout
   Settings["FExportClinical/Form_PDF.currentzoom"] = Form_PDF.CurrentZoom
   
End

Private Sub Settings_Load()
   
   Hsplit_Export.Layout = Settings["FExportClinical/Hsplit_Export.Layout"]
   Form_PDF.CurrentZoom = Settings["FExportClinical/Form_PDF.currentzoom"]
   
End

Public Sub rbOrientation_Click()
   
   Page_Orientation = Last.tag
   
End

Public Sub chkExportEverything_Click()
   
   Dim hCtrl As Control
   Dim Cbox As Checkbox
   
   If bexit Then Return 
   bExit = True
   Form_PDF.PBox.Visible = False 
   For Each hctrl In Last.parent.children
      If hctrl Is CheckBox Then
         Cbox = hctrl
         Select Case Cbox.Tag
            Case "coversheet", "toc"
            Case Else
               Cbox.value = chkExportEverything.value
         End Select
      End If 
   Next
   bExit = False  
   
End

Public Sub EditArea_Buttons_Click()
   
   Select Case Last.tag
      Case "generate pdf"
         '  GeneratePDF
      Case "reset"
         'Reload()
   End Select
   
End

Public Sub Refresh()
   '---------------------------------------------------
   'Re-sets the gui checkboxe, zero's progress bar
   'Reloads all data needed to export the patients file
   'by removing every collection key
   '---------------------------------------------------
   
   Dim cb As CheckBox
   Dim hctrl As Control
   Dim member As Collection 
   
   Inc application.Busy
   modEditAreaHelpers.EditArea_Clear(VBox_EditArea) 
   For Each hctrl In Vbox1.Children
      If hctrl Is CheckBox Then
         cb = hctrl
         If cb.tag = "toc" Or cb.tag = "coversheet" Then 
            cb.Value = True 
         Else
            cb.Foreground = Color.LightGray 
         End If    
      End If  
   Next
   ProgressBar1.Visible = False
   ProgressBar1.value = 0.0                           
   lblStatus.Visible = True   
   With lblStatus
      .visible = True 
      .text = "Re-loading data..." 
   End With
   Refresh_Collections()
   chkAllProgressNotes.Visible = currentconsult!progress_notes.count
   chkProgressNotesEachHealthIssue.Visible = currentconsult!past_history.count
   chkTasks.Visible = currentconsult!staff_tasks.count
   chkMentalHealthPlans.visible = currentconsult!mentalhealthplans.count
   chkReferralLetterSummaries.Visible = currentconsult!referrals_written.count
   chkReferralLetters.Visible = currentconsult!referrals_written.count
   chkRequestsOrdered.Visible = currentconsult!requests_ordered.count
   ChkResults.Visible = currentconsult!results_received.count 
   chkRecalls.Visible = currentconsult!recalls_logged.count 
   chkLettersReceived.Visible = currentconsult!letters_received_sorted_ascending.count
   chkLettersReceivedlist.Visible = currentconsult!letters_received_sorted_ascending.count
   chkWorkcover.Visible = currentconsult!workcover_claims.count 
   chkAudit.Visible = True 
   With chkExcludeINR
      .Enabled = False 
      .Foreground = Color.LightGray
   End With
   For Each Member In currentconsult!results_received 
      If member!tag = "INR" Then
         With chkExcludeINR 
            .value = True
            .visible = True  
            .Enabled = True   
            .Foreground = Color.Black 
         End With
         Break
      End If    
   Next
   
   For Each hctrl In Vbox1.Children
      If hctrl Is CheckBox Then
         cb = hctrl
         If cb.Visible Then
            cb.Foreground = Color.Black
            cb.Enabled = True  
         End If  
      End If   
   Next 
   Dec application.Busy
   rbSinglePDF.Value = True
   lblStatus.text = ""
   
End

Public Sub rbMultiplePDFs_Click()
   
   Dim file_extension As String
   Dim filename As String
   
   Dim source_path As String   
   Dim member As Collection
   Dim sections As New Collection
   Dim tempfile As String 
   
   Return 
   Refresh()
   
   Try Mkdir "/tmp/export_patient"
   If Error.code = const.File_ioError_DirectoryExists Then
      Shell "rm -Rf /tmp/export_patient" Wait
      Try Mkdir "/tmp/export_patient"
      If Error Then
         'give up
         Message.info("Sorry, couldn't create the temporary directory to export the files....")
         Return 
      Endif
      
   Endif
   For Each Member In currentconsult!letters_received
      file_extension = File.Ext(member!source_file)   
      Select Case file_extension
         Case "pdf"
            Copy archive_dir &/ member!source_file To "/tmp/export_patient" &/ member!source_file 
         Case Else
            filename = Replace(member!originator & "_" & member!tag_user, " ", "_") & ".pdf" 'fix this for eg o'neil
            filename = Replace(filename, "(", "")
            filename = Replace(filename, ")", "") 
            filename = Replace(filename, "'", "")  
            filename = Replace(filename, ",", "")   
            filename = Replace(filename, ">", "for")   
            Print filename
            tempfile = modPrinting.Make_PDF_From_Html(member!html, const.orientation_portrait, "", False, filename, ProgressBar1)
            
            Try Move tempfile To "/tmp/export_patient" &/ filename
            If Error Then
               Try Copy tempfile To "/tmp/export_patient" &/ filename
               If Not Error Then Kill tempfile
            Endif
      End Select  
      
   Next                      
   ' Shell "mv /tmp/*.pdf /tmp/export_patient/" Wait
   
End
