' Gambas class file

' Copyright (C) 2008-2012 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' --------------------------------------------------------------------
' PURPOSE   A module to record allergies/sensitivities/reactions
' TODO      Check accuracy
'           Implement help and delete
'           Check save works for previously created allergies
'           Implement search on generics alone
'           Write somethingin the progress notes
'----------------------------------------------------------------------

Private currentconsult As CConsult
Private bExit As Boolean
Private bKeyValid As Boolean
Private generics_to_atc As Collection
Private brands_to_atc As Collection
Private Terms As Collection
Private Term As Collection 
'The keys for each allergy
Private fk_code As String
Private fk_coding_system As Integer
Private fk_consult As Integer 
Private fk_allergy As Integer
Private fk_brand As String    'if not null the key to drugs.brands
Private fk_product As String 'if not null the key to drugs.products
Private fk_progressnote As Integer
Private atccode As String
Private atccodes As Collection
Private brands As Collection
Private generics As Collection
Private obs As Observer
Private Form_Terms As FCodedTermSelector
Private sSearchLimit As Integer = 20 'default to only get 20 terms
Private iCodingSystem As Integer  
Private currentTerm As Collection
Private SpellChecker As ClskSpell
Private timer_count As Integer
Private bGenericSearch As Boolean
Private drugs As Collection
Private Allergies As Collection 
Private iReactionType As Integer = const.ReactionType_Allergy
Private sSpecificity As String    'g=generic, b=brand c=class
Private Reaction_Types As String[]

Public Sub Init(cons As CConsult)
   '--------------------------------
   'Do all the initialization things
   '--------------------------------
   
   Try Settings_Load()
   currentconsult = cons  
   lblMeasure.text = "  Generic Specific Reaction  "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea, lblMeasure)
   With Form_Terms = New FCodedTermSelector(Me)
      .Ignore = True
      .Visible = False   
      .Height = 200    
      .Timer1.Enabled = False 
   End With
   obs = New Observer(Form_Terms.columnview1) As "cvwTerms"
   With SpellChecker = New ClskSpell
      .EditorControlToCheck = teForSpelling
      .TempFileForSpelling = User.home &/ "myspelltemp.txt"
      .TempFileForErrors = User.home &/ "myspellerrors.txt"
   End With
   With SpellChecker = New ClskSpell
      .EditorControlToCheck = teForSpelling
      .TempFileForSpelling = User.home &/ "myspelltemp.txt"
      .TempFileForErrors = User.home &/ "myspellerrors.txt"
   End With
   With cvwAllergies
      .Columns.count = 6
      .Columns[0].text = "Date Reaction"
      .Columns[0].Alignment = Align.Center
      .Columns[1].text = "ACT Class or Allergen"
      
      .Columns[2].text = "Specificity"
      .Columns[3].text = "Type"
      .Columns[4].text = "Details"
      .Columns[5].text = "Confirmed"
   End With
   Reaction_Types = New String[3]
   Reaction_Types[1] = "Allergy"
   Reaction_Types[2] = "Sensitivity"
   Reload()
   
End

Public Sub Save()
   
   '-------------------------------------------------------------
   'Save the allergy which At a minimum must have either
   '1) An allergen eg Bee or Crustacean
   '  or
   '2) A drug, a drug it must must have an ATCcode
   'Plus: description Of the reaction optionally coded
   '  Clin_allergies.allergies:
   '   (pk serial primary key,
   '   fk_consult integer Not Null,
   '   fk_brand uuid Default Null, 
   '   fk_product uuid Default Null,
   '   allergen text default null, 
   '   specificity char(1) default null, 
   '   details text Not Null,
   '   fk_lu_reaction_type integer Not Null,
   '   fk_coding_system integer,
   '   fk_code text default null, 
   '   confirmed boolean Default True, 
   '   deleted boolean Default False, 
   '   date_reaction text default null, 
   '---------------------------------------------------------------
   
   Dim allergy As CRow
   Dim progressnote As CRow
   
   FClinical.Enable_Save_Button(False)  'stop clicking twice FIXME does not work
   If Vbox_EditArea_Outer.Padding = 0 Then Goto Enable_Save   
   If Not Valid_Allergy() Then Goto Enable_Save   
   Inc Application.Busy
   allergy = New CRow
   If fk_allergy Then
      allergy.put_unchanged(fk_allergy, "fk_allergy")
   Endif
   If fk_consult = 0 Then
      allergy!fk_consult = currentconsult.GetPK()
   Else
      allergy!fk_consult = fk_consult
   Endif 
   If fk_brand <> "" Then
      allergy!fk_brand = fk_brand
   Else
      allergy!fk_brand = Null
   Endif
   If fk_product <> "" Then
      allergy!fk_product = fk_product  
   Else
      allergy!fk_brand = Null
      allergy!fk_product = Null
   Endif
   If Trim(txtAllergen.text) <> "" Then 
      allergy!allergen = modUtil.StripExtraBlanks(txtAllergen.text)
      allergy!specificity = Null 
   Else
      allergy!allergen = Null    '
      allergy!specificity = sSpecificity 
   End If   
   allergy!details = Trim(txtDetails.text) 
   If fk_coding_system <> 0 Then
      allergy!fk_coding_system = fk_coding_system
      allergy!fk_code = fk_code       'string value
   Else
      allergy!fk_coding_system = 0 'integer can't be null, could be removing coding system
      allergy!fk_code = ""
   Endif
   If rbConfirmedYes.Value = True Then
      allergy!confirmed = True
   Else
      allergy!confirmed = False  
   Endif
   allergy!fk_lu_reaction_type = iReactionType
   allergy!date_reaction = modUtil.StripExtraBlanks(txtDate.text)
   '--------------------------------------------------------------------------------------
   'If the progress note was written on today, we can edit it, otherwise, create a new one
   '--------------------------------------------------------------------------------------
   ProgressNote = New CRow 
   If fk_progressnote And txtDateEntered.text = Format(Now, "dd/mm/yyyy") Then  'if originally entered on today
      ProgressNote.put_unchanged(fk_progressnote, "fk_progressnote")            'am editing todays progress note
   End If   
   ProgressNote!fk_audit_action = const.cAuditAction_Insert                  'is an insert
   ProgressNote!fk_consult = currentconsult.GetPK()
   ProgressNote!notes = Progress_Notes_Create()
   ProgressNote!fk_section = const.cSection_allergies
   '  ProgressNote!fk_code = fk_code  FIXME Fix THE VWPROGRESSNOTES And UNCOMMENT THIS Line
   ProgressNote!problem = "Allergies"
   
   ProgressNote.Save("clin_consult.progressnotes", "fk_progressnote")
   allergy!fk_progressNote = progressnote!fk_progressnote
   allergy.Save("clin_allergies.allergies", "fk_allergy")
   modDBConnect.CommitTrans()
   Refresh_FClinical() 
   Reload()
   Goto Enable_Save
   
   ' 
Enable_Save:
   
   FClinical.Enable_Save_Button(True)
   Dec Application.Busy
   
End

Public Sub Refresh_FClinical()
   
   FClinical.Refresh_Section(const.cSection_Allergies)    'refresh lists on main screen FClinical
   FClinical.Refresh_AllPreviousNotes() 
   
End

Public Sub Allergy_New()
   
   EditArea_Clear()
   Reset_Keys() 
   Vbox_EditArea.Enabled = True  
   txtDateEntered.text = Format(Now, "dd/mm/yyyy") ' not editable
   txtDate.SetFocus()
   
End

Public Sub Allergy_Edit()
   
   Vbox_EditArea.Enabled = True
   txtDate.SetFocus()
   
End

Public Sub Allergy_Delete()
   '------------------
   'Deletes an allergy
   '------------------

   Dim sSummary As String
   Dim fk_reason As Integer
   Dim reason As Collection

   sSummary = ""
   
   sSummary = Progress_Notes_Create()
   Print sSummary
   Return   
   '------------------------------------------------------------------
   'If this allergy was entered another consultation, enforce an audit
   '------------------------------------------------------------------
   If allergies[fk_allergy]!fk_consult <> currentconsult.GetPK() Then
      Faudit.Init(": Delete Allergy", "clin_allergies.allergies", "Allergy Summary:" & sSummary)
      fk_reason = FAudit.ShowModal()  
      modDBConnect.CommitTrans()                       'otherwise if a new reason it won't have been comitted
      reason = modAudit.Get_Reason_Using_pk(fk_reason) 'get back the details to write into the progress notes
      
   End If  
   modDBConnect.update("clin_allergies.allergies", Null, ["pk": fk_allergy, "deleted": True])
   
   '  If PN!fk_consult = currentconsult.GetPK() Then           'probabably a reversal, don't need to audit just visually remove from the notes
   '             modDBConnect.update("clin_consult.progressnotes", Null, ["pk": referral!fk_progressnote, "deleted": True])
   '          Else
   '             pn!notes = Replace$(pn!notes, "<TABLE", "<TABLE BGCOLOR='#CFCFCF' ") 
   '             pn!notes = Replace$(pn!notes, "<small>", "<strike><small>", gb.IgnoreCase)
   '             pn!notes = Replace$(pn!notes, "</small>", "</strike></small>", gb.IgnoreCase)
   '             Faudit.Init(": Delete Referral Letter", "clin_consult.progressnotes/clin_referrals.referrals", "Letter summary:" & referral!tag)
   '             fk_reason = FAudit.ShowModal() 
   '             modDBConnect.CommitTrans()  'otherwise if a new reason it won't have been comitted
   '             reason = modAudit.Get_Reason_Using_pk(fk_reason)
   '             pn!notes = Replace(pn!notes, "</TABLE>", "</TABLE><small><B><I>Audit note:</B> this referral letter was deleted by " & modDBConnect.currentUser!wholename & " on " & Format(Now, "dd/mm/yyyy") & " who gave this explanation: '" & reason & "'</I></small>")
   '             modDBConnect.update("clin_consult.progressnotes", Null, ["pk": fk_progressnote, "notes": pn!notes])
   '          End If     
   '          modDBConnect.update("clin_referrals.referrals", Null, ["pk": fk_referral, "deleted": True])
   '      
   
End

Public Sub Allergy_Display()
   '-----------------------------------------
   'Display the currently highlighted allergy
   '------------------------------------------
   
   Dim allergy As Collection
   
   cvwAllergies.MoveCurrent()
   allergy = allergies[cvwAllergies.Item.key]
   EditArea_Clear                                                     'clear input area
   '------------------------
   're-allocate all the keys
   '------------------------
   Reset_Keys                                                         
   If Not IsNull(allergy!fk_coding_system) Then fk_coding_system = allergy!fk_coding_system
   If Not IsNull(allergy!fk_code) Then fk_code = allergy!fk_code
   fk_consult = allergy!fk_consult  
   Try fk_brand = allergy!fk_brand
   Try fk_product = allergy!fk_product
   fk_progressnote = allergy!fk_progressnote
   fk_allergy = allergy!pk
   '----------------------------------------------
   'Now fill the gui - textboxes, radiobuttons etc
   '----------------------------------------------
   bExit = True
   txtDateEntered.text = Format(allergy!consult_date, "dd/mm/yyyy") 'not editable
   txtDate.text = allergy!date_reaction
   Try txtBrand.text = allergy!brand
   Try txtGeneric.text = allergy!generic
   Try txtAllergen.text = allergy!allergen 
   Try txtATCName.text = allergy!product_atcname
   atccode = allergy!product_atccode
   If Not IsNull(allergy!term) Then 
      txtCodedTerm.text = allergy!term & " (" & allergy!fk_code & ")"
   End If   
   Try txtATCClass.text = allergy!class_name
   If allergy!confirmed Then
      rbConfirmedYes.value = True
   Else
      rbConfirmedNo.value = True
   Endif
   If allergy!fk_lu_reaction_type = const.ReactionType_Allergy Then
      rbReactionAllergy.value = True
      iReactionType = const.ReactionType_Allergy
   Else
      rbReactionSensitivity.value = True
      iReactionType = const.ReactionType_Sensitivity
   Endif
   Hbox_Specificity.Enabled = True
   Select Case allergy!specificity
      Case Null
         Hbox_Specificity.Enabled = False 
      Case "c"
         rbSpecificityClass.value = True
      Case "g"
         rbSpecificityGeneric.Value = True
      Case "b"
         rbSpecificityBrand.Value = True  
   End Select
   txtDetails.text = allergy!details
   bExit = False  
   txtDate.SetFocus()
   
End

Public Function Progress_Notes_Create() As String
   '-----------------------------------------------------------------------
   'Creates html for the allergy just noted to insert in the progress notes
   '-----------------------------------------------------------------------  
   
   Dim pn As String
   
   If txtDateEntered.text = Format(Now, "dd/mm/yyyy") Then       'the progress note is created today
      pn = "<B>%reaction_type% noted </B>"
   Else
      pn = "<B>%reaction_type% details edited </B>"     'otherwise this is an edit
   End If   
   pn = Replace(pn, "%reaction_type%", Reaction_Types[iReactionType]) & "<BR>"
   Select Case Trim(txtAllergen.text)
      Case ""
         pn &= "<B>Class</B>: " & Trim(txtATCClass.text) & "<BR>"
         pn &= "<B>Scope</B>: "
         Select Case sSpecificity
            Case "c"
               pn &= "class reaction"
            Case "g"
               pn &= "reaction to the generic only"
            Case "b"
               pn &= "reaction to the brand only"
         End Select
         If rbConfirmedYes.value = True Then
            pn &= " - Confirmed"
         Else
            pn &= " - Not confirmed"
         Endif
         pn &= "<BR>"
         pn &= "<B>Drug:</B>" & Trim(txtGeneric.text) & " " & "(" & Trim(txtBrand.text) & ")<BR>"
         pn = Replace(pn, "()", "")
         pn &= "<B>Details:</B>" & Trim(txtDetails.text) & "<BR>"
         If fk_code <> "" Then
            pn &= "<B>Coding:</B>" & Trim(txtCodedTerm.text) & "<BR"
         Endif
      Case Else
         
   End Select
   Print pn 
   Return pn 
   
End

Public Sub Reload()
   '--------------------------------------------------------------------------
   'Reload data from backend - display any existing allergies or sensitivities
   '-------------------------------------------------------------------------- 
   
   Dim allergy As Collection
   Dim specificity As String
   
   EditArea_Clear()                                      'clear the input area
   currentconsult.Refresh("allergies")                   'remove key from cache > later forces a reload
   allergies = currentconsult!allergies                  'reload latest list from the backend
   cvwAllergies.Clear()
   For Each allergy In allergies
      cvwAllergies.Add(allergy!pk, 0)
      If IsNull(allergy!date_reaction) Then
         cvwAllergies[allergy!pk][0] = "??"
      Else
         cvwAllergies[allergy!pk][0] = allergy!date_reaction 'could be free text
      Endif
      cvwAllergies[allergy!pk][1] = Trim(allergy!class_name & " " & allergy!allergen) 'will be only one
      Select Case allergy!specificity
         Case "c"
            specificity = "class"
         Case "g"
            specificity = "generic"
         Case "b"
            specificity = "brand"
      End Select
      cvwAllergies[allergy!pk][2] = specificity
      cvwAllergies[allergy!pk][3] = allergy!reaction_type
      cvwAllergies[allergy!pk][4] = allergy!details
      If allergy!confirmed Then
         cvwAllergies[allergy!pk][5] = "Yes"
      Else
         cvwAllergies[allergy!pk][5] = "No"
      Endif
   Next
   EditArea_Clear()
   button1.SetFocus 'hidden button
   
End

Public Sub form_Close()
   
   timer1_Stop()
   Settings_Save()
   
End

Public Sub Form_Save()
   
   ' FClinical.Refresh_AllPreviousNotes()
   
End

Public Sub Settings_Save()
   
   Settings["Allergies/VSplit_Allergies.Layout"] = VSplit_Allergies.layout
   
End

Public Sub Settings_Load()
   
   VSplit_Allergies.layout = Settings["Allergies/VSplit_Allergies.Layout"]
   
End

Public Sub EditArea_Clear()
   '-------------------------------------------------------------
   'Clear the editing area, re-set current Allergy or sensitivity
   '-------------------------------------------------------------
   
   Vbox_EditArea.Enabled = False 
   modEditAreaHelpers.EditArea_Clear(Vbox_EditArea)
   bExit = True                                      'stop re-entrance into change routines
   listview1.Visible = False                         'remove popup list if showing
   listview1.Clear()
   listview1.Visible = False
   sSpecificity = const.ReactionSpecificity_Class
   rbSpecificityClass.value = True
   iReactionType = const.ReactionType_Allergy
   rbReactionAllergy.value = True
   rbConfirmedYes.Value = True 
   bExit = False
   EditArea_Notify_DataChange(False)
   
End

Public Sub Reset_Keys()
   
   fk_code = ""      '
   fk_coding_system = 0
   fk_allergy = 0
   fk_consult = 0
   fk_brand = ""
   fk_product = ""
   fk_progressnote = 0
   iReactionType = const.ReactionType_Allergy
   sSpecificity = const.ReactionSpecificity_Class
   
End

Public Sub listview1_KeyPress()
   
   If Key.code = Key.return Then
      listview1_DblClick()
   End If
   
End

Public Sub listview1_DblClick()
   
   Select Case Last.tag.tag
      Case "brand"
         Brand_Select()
      Case "generic"
         Generic_Select()
   End Select
   
End

Public Sub EditArea_Notify_DataChange(flag As Boolean)
   
   If flag = True Then 
      Vbox_EditArea_Outer.Padding = 1
   Else
      VBox_EditArea_outer.Padding = 0
   Endif
   
End

Public Function EditArea_txtBox_ExcludeKeys(keycode As Integer, tag As String) As Boolean
   '----------------------------------------------------------
   'PURPOSE       Restrict key presses for validation purposes
   'HOW IT WORKS  see routines names
   'actually not implemented here FIXME
   '-----------------------------------------------------------
   
   Select Case Last.Tag
      Case "brand", "allergen", "coded term", "free text reaction", "generic", "date reaction", "coded term", "atc name"
         bKeyValid = True
   End Select
   Return bKeyValid
   
End

Public Sub Timer1_Timer()
   '------------------------------------------------------------------------------
   'If the timer is running, user is typing in either the brand or generic textbox
   '------------------------------------------------------------------------------   
   
   If bExit Then Return
   Inc timer_count
   If timer_count > 3 Then
      If bGenericSearch Then
         Generics_Get(Trim(txtGeneric.text))
      Else
         Brands_Get()
      End If  
   Endif
   
End

Public Sub Brand_Select()
   
   Dim R As Result
   
   listview1.MoveCurrent()
   bExit = True
   txtBrand.text = listview1.Item.Text
   atccode = brands[listview1.Item.key]!atccode
   R = modAllergyDBI.ATC_Code_Get_Class(Left(atccode, 4))
   Try txtATCClass.text = R!atcname
   txtGeneric.text = brands[listview1.Item.key]!generic
   txtATCName.text = brands[listview1.Item.key]!atcname
   bExit = False  
   fk_brand = brands[listview1.Item.key]!pk
   fk_product = brands[listview1.Item.key]!fk_product
   ListView1.Visible = False
   txtCodedTerm.SetFocus()
   
End

Private Sub Brands_Get()
   
   Dim brand As Collection 
   
   Timer1.Stop
   listview1.Clear()
   brands = modPrescribingDBI.Brands_Get_Basic(Trim(txtBrand.text))
   If brands.count Then    
      For Each brand In brands
         listview1.Add(brand!pk, brand!brand & " " & brand!display_strength & " " & brand!form)
      Next
      With listview1
         .tag = txtBrand
         .Visible = True
      End With 
   End If   
   
End

Public Sub Generic_Select()
   ' 
   ' listview1.MoveCurrent
   ' txtGeneric.text = listview1.Item.Text
   ' atccode = generics_to_atc[listview1.Item.Text]
   ' ListView1.Visible = False
   
End

Private Sub Generics_Get(generic As String)
   
   ' Dim r As Result
   ' 
   ' Timer1.Stop
   ' listview1.Clear()
   ' generics_to_atc = New Collection
   ' Let r = modPrescribingDBI.Generics_Get_Basic(generic)
   ' For Each r
   '    Try listview1.Add(r!generic, r!generic)
   '    Let generics_to_atc[r!generic] = r!atccode
   '    listview1.tag = txtGeneric
   ' Next
   ' listview1.Visible = True
   
End

Public Function Valid_Allergy() As Boolean
   '-------------------------------------------------------------------
   'Returns true if the information in the edit area is a valid allergy
   'At a minimum must have either
   '1) An allergen eg Bee or Crustacean
   '  or
   '2) A drug, hence must have an ATCcode
   '    plus
   '    description Of the reaction optionally coded
   '    plus
   '    date of reaction
   '------------------------------------------------------------------- 

   Dim sMsg As String
   
   If txtBrand.text <> "" Then 
      If atccode = "" Then
         Message.Info("Please select a valid generic or brand.")
         txtBrand.Background = Color.rgb(95, 255, 175)
         txtBrand.SetFocus()
         Return 
      Endif
   End If   
   If txtGeneric.text <> "" Then
      If atccode = "" Then
         Message.Info("Please select a valid generic or brand.")
         txtGeneric.Background = Color.rgb(95, 255, 175)
         txtGeneric.SetFocus()
         Return 
      Endif
   Endif
   If Trim(txtCodedTerm.text) <> "" Then
      If fk_code = "" Then
         smsg = "You have entered text in the coded term field, but not selected a valid code.\n\n"
         "You should either remove this text or search again, selecting from the list." 
         Message.Title = "Invalid Coded Term"
         Message.Info(sMsg)
         txtCodedTerm.Background = Color.rgb(95, 255, 175)
         txtCodedTerm.SetFocus()
         Return
      End If   
   End If   
   
   If atccode = "" Then       'user not entering a drug
      If Trim(txtAllergen.text) <> "" Then
         Goto Check_Have_Allergy_Details
      Else
         txtAllergen.Background = Color.rgb(95, 255, 175)
         txtAllergen.SetFocus
         Return
      Endif
   End If 
   
Check_Have_Allergy_Details:
   If Trim(txtDetails.text) = "" Then
      Message.Info("Please enter some details about the reaction for this allergen or drug.")
      txtDetails.Background = Color.rgb(95, 255, 175)
      txtDetails.setfocus()
      Return
   Endif
   Return True
   
End

Public Sub EditArea_TxtBox_GotFocus()
   
   Timer1.Enabled = False  
   Listview1.Visible = False
   Last.BackGround = Color.rgb(95, 255, 175)
   
End 

Public Sub EditArea_TextBox_Change()
   
   If bExit Then
      Return
   End If   
   Select Case Last.tag
      Case "allergen"
         If Trim(txtAllergen.text) <> "" Then
            'user entering an allergen - can't have drug stuff
            txtBrand.text = ""
            txtGeneric.text = ""
            txtATCClass.text = ""
            txtATCName.text = ""
            Hbox_Specificity.Enabled = False 
            fk_brand = ""
            fk_product = ""
            atccode = ""
            rbSpecificityHidden.value = True    'switch the other 3 off
         Else
            Hbox_Specificity.Enabled = True
            rbSpecificityClass.value = True  
         Endif
      Case "brand"
         If Trim(txtBrand.text) = "" Then 
            fk_brand = 0
         Else
            txtAllergen.text = "" 'should re-enter this routine
            
         End If   
      Case "generic"
         If Trim(txtBrand.text) <> "" Then 
            txtAllergen.text = ""
         Endif
      Case "atc name"
         If Trim(txtATCName.TEXT) = "" Then 
            atccode = ""
         Else
            txtAllergen.text = ""
         End If   
      Case "coded term"
         If Trim(txtCodedTerm.TEXT) = "" Then 
            fk_code = ""
            fk_coding_system = 0
         End If   
   End Select
   EditArea_Notify_DataChange(True)
   
End

Public Sub EditArea_TextBox_LostFocus()
   
   Last.BackGround = Color.White
   
End

Public Sub EditArea_TextBox_KeyRelease()
   
   If bExit Then Return 
   
   Select Case Last.tag
      Case "coded term"   
         Terms_Get()
      Case "brand"
         Timer1.Enabled = True
         timer_count = 0
         bGenericSearch = False  
      Case "generic"
         bGenericSearch = True
         Timer1.Enabled = True
         timer_count = 0
   End Select
   
End

Public Sub EditArea_TextBox_KeyPress()
   
   bkeyvalid = EditArea_txtbox_ExcludeKeys(key.code, Last.tag)
   
   If bkeyvalid = False Then
      Stop Event
      Return
   End If
   Select Case key.Code
      Case key.Down
         If listview1.Visible Then 
            listview1.SetFocus
            listview1.MoveFirst
            listview1.Item.Selected = True
            Return
         End If
         If Form_Terms.visible Then 
            With Form_Terms.columnview1
               .SetFocus
               .MoveFirst
               .Item.selected = True
            End With
            Return
         End If    
   End Select
   
End

Public Sub Coded_Term_Select()
   '-------------------------------------------
   'User has chosen a term from popup listview1
   'Display this in the txtCodedTerm Textbox
   'Set currentProblem!fk_code to the pk_term
   '-------------------------------------------
   
   CurrentTerm = Form_Terms.Get_Term()
   '-----------------------------------------------------------------------
   'We allow free text in the health issue = past history problem
   'so, if user has typed something in there like ** very bad diabetes**
   '(bad example I know), then we keep this as the health issue but it
   'will be coded back to the appropriate icpc2+ term
   'However if they havn't typed anything in here, put the natural language
   'term in the txtConditon text box and the coded term in the coded textbox
   'e.g Diabetes;Type1 (T89002) or something similar
   '------------------------------------------------------------------------
   
   txtCodedTerm.text = CurrentTerm!term & " (" & CurrentTerm!code & ")"
   fk_code = CurrentTerm!code
   fk_coding_system = CurrentTerm!fk_coding_system
   
End

Public Sub cvwTerms_KeyPress()
   '------------------------------------------------------------------
   'Act only on the <ENTER> key display what is in list in the textbox
   'This event occurs of Form_Terms and is over-ridden by this observer
   '------------------------------------------------------------------
   
   If Key.code = Key.Return Then 
      ' Stop Event                    'stop event on Form_Terms 
      cvwTerms_DblClick()
   End If
   
End

Public Sub cvwTerms_DblClick()
   '-----------------------------------------------------------------
   'This is an observer event on  Form_Terms.ColumnView1 - see Init()
   '----------------------------------------------------------------
   
   Stop Event
   
   Coded_Term_Select() 
   Form_Terms.Visible = False 
   txtDetails.SetFocus()
   
End

Public Sub Terms_Get()
   '-------------------------------------------------------------------------------------
   'Gets list of diagnostic terms
   'Cannot set default if count is one because must  be able to add new occupations
   'can't remove the label because it needs to occupy space to keep textbox correct width
   '-------------------------------------------------------------------------------------
   
   Dim term As Collection 
   Dim key As String
   
   If Trim(txtCodedTerm.text) = "" Then
      fk_code = ""
      fk_coding_system = 0
      Return
   End If
   Form_Terms.Set_SearchText(Trim(Last.text))
   Form_Terms.Get_Terms()
   
End

Public Sub EditArea_TextBox_Activate()
   
   Select Case Last.tag
      Case "allergen"
         If Trim(Last.text) = "" Then
            txtBrand.SetFocus()
         Else
            txtCodedTerm.SetFocus()
         Endif
      Case "date reaction"
         txtBrand.SetFocus()
      Case "brand"
         txtCodedTerm.SetFocus()
      Case "generic"
         txtCodedTerm.SetFocus()
      Case "coded term"
         txtDetails.SetFocus()
   End Select
   
End

Public Sub EditArea_RadioButtons_KeyPress()
   
   Select Case key.code
      Case key.tab, key.Return
         Select Case Last.tag
            Case 1
               If Last.value = False Then
                  rbReactionSensitivity.SetFocus()
               Else
                  rbConfirmedYes.SetFocus()
               Endif
            Case 2
               
         End Select
   End Select
   
End

Public Sub timer1_Stop()
   
   With Timer1
      .Stop
      .Enabled = False
   End With 
   
End

Public Sub Form_Leave()
   
   timer1_Stop()
   
End

Public Sub New_Entry()
   '------------------------------------------------------------------------------------------------------
   'This is called from the main toolbar in FClinical and here for consistant nomenclature between modules
   '------------------------------------------------------------------------------------------------------   
   
   Allergy_New()
   
End 

Public Sub Refresh()
   '--------------------------------
   'Called from toolbar in FClinical
   '--------------------------------  
   
   Reload() 
   
End

Public Sub EditArea_TextBox_GotFocus()
   
   listview1.Visible = False  
   Last.BackGround = Color.rgb(95, 255, 175)
   Select Case Last.tag
      Case "coded term"
         With Form_Terms
            .top = Last.Parent.Parent.Top + Last.Parent.Height + Vsplit_Allergies.top 
            .width = txtCodedTerm.Width
            .Left = Last.Parent.Left + VBox1.padding
            .Raise 
            .Visible = False  
            If Trim(Last.text) <> "" Then
               .Set_SearchText(Trim(Last.text))
            End If   
         End With    
      Case "brand", "generic"
         With listview1
            .top = Last.Parent.Parent.top + Last.Height
            .width = Last.Parent.width / 2
            .left = Last.Parent.Left
            .Raise()
         End With
   End Select
   
End

Public Sub rbAllergySensitivity_Click()
   
   If bExit Then Return 
   iReactionType = Last.tag
   EditArea_Notify_DataChange(True)
   
End

Public Sub EditArea_RadioButtons_Click()
   
   If bExit Then Return    
   EditArea_Notify_DataChange(True)
   
End

Public Sub cvwAllergies_Select()
   '-------------------------------------------------------------
   'User has clicked on the allergies list - display in edit area
   '-------------------------------------------------------------  
   
   Allergy_Display()
   
End

Public Sub cvwAllergies_Menu()
   
   If cvwAllergies.count Then
      mnuAllergies.Popup()
   Endif
   
End

Public Sub mnuAllergies_Click()
   
   Select Case Last.tag
      Case "edit"
         Allergy_Edit()
      Case "delete"
         Allergy_Delete()
      Case "font"
         modUtil.Columnview_SetFont(cvwAllergies, "Allergies")
      Case "help"
         modUtil.NotImplemented("Help for allergies")
   End Select
   
End

' 

Public Sub rbSpecificity_Click()
   
   If Bexit Then Return
   sSpecificity = Last.tag
   EditArea_Notify_DataChange(True)
   
End

files Not committed are here!!!!!!!!!
'0.203_update_vwDrugs.sql not commited din svn
' -- added class code and class name for each drug
' drop view drugs.vwdrugs;
' 
' CREATE OR REPLACE VIEW drugs.vwdrugs AS
'  SELECT (brand.pk || COALESCE(vwpbs.pbscode, ''::character varying)::text) || COALESCE(vwpbs.restriction_code, ''::character varying)::text AS pk_view,
'   brand.fk_product, brand.fk_company, brand.brand, brand.pk AS fk_brand, brand.price,
'   brand.from_pbs, product.atccode, product.generic, product.salt, product.fk_form,
'   product.strength, drugs.format_strength(product.strength) AS display_strength,
'   drugs.format_packsize(product.amount, product.amount_unit, product.pack_size) AS display_packsize,
'   product.salt_strength, product.free_comment, product.fk_schedule, product.updated_at, product.pack_size,
'   product.amount, product.amount_unit, schedules.schedule, form.form, brand.product_information_filename,
'   brand.product_information_filename_user, vwpbs.quantity, vwpbs.max_rpt, vwpbs.pbscode, vwpbs.chapter,
'   atc.atcname, atc1.atccode as class_code, atc1.atcname as class_name,
'   company.company, vwpbs.restrictionflag, vwpbs.pbs_type, vwpbs.restriction,
'   vwpbs.restriction_type, vwpbs.restriction_code, vwpbs.streamlined
'    FROM drugs.brand brand
'    JOIN drugs.product ON brand.fk_product = product.pk
'    JOIN drugs.form ON product.fk_form = form.pk
'    JOIN drugs.atc ON product.atccode::text = atc.atccode
'    LEFT JOIN drugs.company ON company.code::text = brand.fk_company::text
'    LEFT JOIN drugs.vwpbs ON product.pk = vwpbs.fk_product
'    LEFT JOIN drugs.schedules ON schedules.pk = product.fk_schedule
'    LEFT JOIN drugs.atc atc1 ON "substring"(product.atccode::text, 1, 4) = atc1.atccode;
' 
' ALTER TABLE drugs.vwdrugs OWNER TO easygp;
' GRANT ALL ON TABLE drugs.vwdrugs TO easygp;
' GRANT ALL ON TABLE drugs.vwdrugs TO staff;
' 
' truncate db.lu_version;
' insert into db.lu_version(lu_major, lu_minor)values(0, 203);
' 
'This file Is Not committed: 0.202 _update_clin_allergies.sql
' Drop schema clin_allergies cascade;
' 
' Create schema clin_allergies;
' 
' GRANT ALL ON SCHEMA clin_allergies To easygp;
' GRANT ALL ON SCHEMA clin_allergies To easygp;
' GRANT USAGE ON SCHEMA clin_allergies To staff;
' 
' Create table clin_allergies.lu_reaction_type
' (pk serial primary key,
'  type text Not Null);
'  
' ALTER TABLE clin_allergies.lu_reaction_type OWNER To easygp;
' GRANT ALL ON TABLE clin_allergies.lu_reaction_type To easygp;
' GRANT ALL ON TABLE clin_allergies.lu_reaction_type To staff;
' 
' insert into clin_allergies.lu_reaction_type(type)values( 'allergy');
' insert into clin_allergies.lu_reaction_type(type)values( 'sensitivity');
' 
' Create table clin_allergies.allergies
'   (pk serial primary key,
'   fk_consult integer Not Null,
'   fk_brand uuid Default Null, 
'   fk_product uuid Default Null,
'   allergen text Default Null, 
'   specificity char(1) Default Null, 
'   details text Not Null,
'   fk_lu_reaction_type integer Not Null,
'   fk_coding_system integer,
'   fk_code text Default Null, 
'   confirmed boolean Default True, 
'   deleted boolean Default False, 
'   date_reaction text Default Null, 
'   fk_progressNote integer not null,
'  CONSTRAINT allergies_fk_consult_fkey FOREIGN KEY(fk_consult)
'       REFERENCES clin_consult.consult(pk)MATCH SIMPLE
'       ON UPDATE NO ACTION ON DELETE NO ACTION,
'  CONSTRAINT allergies_fk_brand_fkey FOREIGN KEY(fk_brand)
'       REFERENCES drugs.brand(pk)MATCH SIMPLE
'       ON UPDATE NO ACTION ON DELETE NO ACTION,
'  CONSTRAINT allergies_fk_product_fkey FOREIGN KEY(fk_product)
'       REFERENCES drugs.product(pk)MATCH SIMPLE
'       ON UPDATE NO ACTION ON DELETE NO ACTION,
'  CONSTRAINT allergies_specificity_check 
'       CHECK(specificity:: text = 'c'::text OR specificity = 'b'::text OR specificity = 'g'::text OR specificity IS NULL),
'  CONSTRAINT allergies_fk_lu_reaction_type_key FOREIGN KEY(fk_lu_reaction_type)
'       REFERENCES clin_allergies.lu_reaction_type(pk)MATCH SIMPLE
'       ON UPDATE NO ACTION ON DELETE NO ACTION,
' CONSTRAINT allergies_fk_progressnote_fkey FOREIGN KEY(fk_progressnote)
'       REFERENCES clin_consult.progressnotes(pk)MATCH SIMPLE
'  );
'  
' ALTER TABLE clin_allergies.allergies OWNER To easygp;
' GRANT ALL ON TABLE clin_allergies.allergies To easygp;
' GRANT ALL ON TABLE clin_allergies.allergies To staff;
' 
' 
' COMMENT ON COLUMN clin_allergies.allergies.fk_consult Is
' 'key to clin_consult.consult table > points to consult created and patient details';
' COMMENT ON COLUMN clin_allergies.allergies.fk_brand Is
' 'if not null key to drugs.brand table points to brand with which this allergy was noted';
' COMMENT ON COLUMN clin_allergies.allergies.fk_product Is
' 'if not null key to drugs.product table points to product (generic) with which this allergy was noted';
' COMMENT ON COLUMN clin_allergies.allergies.allergen Is
' 'if not null then the substance that the person was allergic or sensitive to, eg could be bee or cedar';
' COMMENT ON COLUMN clin_allergies.allergies.specificity Is
' 'the degree of specificity of the allergy c= class effect eg non-steroidals b= brand specific e.g could be a coloring agent in a tablet or g=generic specific eg naproxen but hence not all nsaids';
' COMMENT ON COLUMN clin_allergies.allergies.details Is
' 'free text representation of the reaction, could be say anaphlyaxis of ''gets diarrhoea''';
' COMMENT ON COLUMN clin_allergies.allergies.fk_lu_reaction_type Is
' 'foreign key to allergies.lu_reaction_type 1=allergy 2=sensitivity';
' COMMENT ON COLUMN clin_allergies.allergies.fk_coding_system Is 
' 'key to coding.lu_coding_system containing name of coding system   that this allergy is linked to';
' COMMENT ON COLUMN clin_allergies.allergies.fk_code Is 
' 'the text of the code references coding.generic_terms.code';
' COMMENT ON COLUMN clin_allergies.allergies.confirmed Is 
' 'if true (the default) then the allergy has been confirmed';
' COMMENT ON COLUMN clin_allergies.allergies.deleted Is '
' If True Then this record Is marked As deleted ';
' COMMENT ON COLUMN clin_allergies.allergies.date_reaction Is '
' the date of reaction, could be date, could be year ';
' COMMENT ON COLUMN clin_allergies.allergies.fk_progressnote is '
' The associated progress note summary of this allergy - at least of the latest time it was accessed';
' 
' Create view clin_allergies.vwAllergies As
' Select 
'   clin_allergies.allergies.pk,
'   clin_allergies.allergies.fk_consult,
'   clin_allergies.allergies.fk_brand,
'   clin_allergies.allergies.fk_product,
'   clin_allergies.allergies.allergen,
'   clin_allergies.allergies.specificity,
'   clin_allergies.allergies.details,
'   clin_allergies.allergies.fk_lu_reaction_type,
'   clin_allergies.allergies.fk_progressnote,
'   lu_reaction_type.type As Reaction_type, 
'   clin_allergies.allergies.fk_coding_system,
'   clin_allergies.allergies.fk_code,
'   clin_allergies.allergies.confirmed,
'   clin_allergies.allergies.deleted,
'   clin_allergies.allergies.date_reaction,
'   clin_consult.consult.fk_patient,
'   clin_consult.consult.consult_date,
'   clin_consult.consult.fk_staff As Fk_staff_logged_allergy,
'   drugs.atc.atccode As Product_atccode,
'   drugs.atc.atcname As Product_atcname,
'   coding.generic_terms.term,
'   coding.lu_systems.system As Coding_system,
'   drugs.product.generic, atc1.atccode As class_code, atc1.atcname As class_name,
'   drugs.brand.brand,
'   progressnotes.notes
' From
'   clin_allergies.allergies
'   JOIN clin_allergies.lu_reaction_type ON(clin_allergies.allergies.fk_lu_reaction_type = clin_allergies.lu_reaction_type.pk)
'   JOIN clin_consult.consult ON(clin_allergies.allergies.fk_consult = clin_consult.consult.pk)
'   JOIN clin_consult.progressnotes ON allergies.fk_progressnote = progressnotes.pk
'   Left JOIN drugs.brand ON(clin_allergies.allergies.fk_brand = drugs.brand.pk)
'   Left JOIN drugs.product ON(clin_allergies.allergies.fk_product = drugs.product.pk)
'   Left JOIN drugs.atc ON(drugs.product.atccode = drugs.atc.atccode)
'   Left JOIN coding.generic_terms ON(clin_allergies.allergies.fk_code = coding.generic_terms.code)
'   Left JOIN coding.lu_systems ON(clin_allergies.allergies.fk_coding_system = coding.lu_systems.pk)
'   Left JOIN drugs.atc atc1 on substring(drugs.product.atccode For 4) = atc1.atccode;
'   
' 
' ALTER TABLE clin_allergies.vwallergies OWNER To easygp;
' GRANT ALL ON TABLE clin_allergies.vwallergies To easygp;
' GRANT ALL ON TABLE clin_allergies.vwallergies To staff;
' 
' truncate db.lu_version;
' insert into db.lu_version(lu_major, lu_minor)values(0, 202);
