' Gambas class file

' the manager class for the emulated browser
' Copyright (C) 2010-2015 Dr. Ian Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Private TheWorkspace As Workspace
Private currentconsult As CConsult

Public Sub _new(wkspce As Workspace, cc As CConsult)
  
  TheWorkspace = wkspce
  currentconsult = cc
  modMessaging.Listen(Me, "Browser_Goto")
  modMessaging.Listen(Me, "Browser_New_Tab") 
End

Public Sub Free()
  
  modMessaging.Unlisten(Me, "Browser_Goto")
  modMessaging.Unlisten(Me, "Browser_New_Tab")
  
End


Public Sub Handle_Button(evt As String)
  
  Dim lnkc As FLinkContainer
  
  lnkc = TheWorkspace.ActiveWindow
  If Not IsNull(lnkc) Then lnkc.Handle_Button(evt)
  
End

Public Sub Browser_Goto(lnk As CLink)
  
  Dim lnkc As FLinkContainer
  
  lnkc = TheWorkspace.ActiveWindow
  If IsNull(lnkc) Then
    Browser_New_Tab(lnk) 
  Else
    lnkc.AddLink(lnk)
  Endif
End

Public Sub Browser_New_Tab(lnk As CLink)
  
  Dim lnkc As FLinkContainer
  
  lnkc = New FLinkContainer(TheWorkspace)
  TheWorkspace.Add(lnkc)
  lnkc.AddLink(lnk)
  
End

Public Sub Browser_Show_HTML(html2 As String)

   Dim lnkc As FLinkContainer
   
   lnkc = New FLinkContainer(TheWorkspace)
   

End


Public Sub Expose()
  
  Dim lnkc As FLinkContainer
  
  lnkc = TheWorkspace.ActiveWindow
  lnkc.Expose()
  
End

Public Sub Clear()
  
  Dim lnkc As FLinkContainer
  
  For Each lnkc In TheWorkspace.Children
    lnkc.CloseLinks()
    lnkc.Close()
  Next
  
End

Public Sub Editor_ShowPage(sPageName As String)
   '----------------------------------------------------------------
   'PURPOSE:   Adds a new page to the progress notes workspace
   '           according to sType parameter passsed to it            
   '           e.g "past history", "new page", "Request" etc
   ' 
   ' A FProgressNotePageContainer doesn't contain the texteditor - just a form
   ' containg two rows of toolbars with combo's and text formatting
   ' buttons, contained in VboxEditor
   '
   ' The container then has added to it either other forms or just
   ' a plain textedit control for pages only needing a text editor
   ' Note that Collections start from a zero(0) count
   ' but the tablist count starts from 1 
   ' hence first tab > EditorPages[0] etc
   ' the page tag is either fixed eg "Skin Excision" or 
   ' is a pk_pasthistory if doing progress notes for a past historyDisplay_Health_Issue
   ' item
   'FIXME convert this routine so that lower(page.title) = tag
   'NB: Though it would seem logical not to repeat for every new page 
   '    the code: WorkspaceEditor.Add(NewPage) 
   '    within each case statement, putting it at the end seems to
   '    make it impossible to auto-set focus on the first control
   '    in the new form.
   '--------------------------------------------------------------
   Dim ProgressNotesPage As FProgressNotePage
   Dim AllPreviousNotes As FHtmlViewer
   Dim ExcisionPage As FProcedures
   Dim RequestPage As FRequests
   Dim PregnancyPage As FPregnancy
   Dim FamilyHistoryPage As FFamilyHistory
   Dim HealthAssessmentPage As FHealthAssessment
   Dim OccupationalHistoryPage As FOccupation
   Dim AllergyPage As FAllergy
   Dim RecallPage As FRecalls
   Dim PrescriptionPage As FPrescriptions
   Dim PastHistoryPage As FPastHistory
   Dim ReferralPage As FReferrals
   Dim MentalHealthPage As FMentalhealth
   Dim VaccinationPage As FVaccinations
   'Dim workcoverPage As FWorkcover
   Dim WebPage As FBrowser
   Dim TravelPage As FTravel
     
   Dim page As FLinkContainer
   
   Select Case sPageName
   Case "All Previous Notes"
      page = New FLinkContainer
      AllPreviousNotes = New FHtmlViewer(page.VBoxEditor)
      page.tag = "All Previous Notes"
      page.Title = "All Previous Notes"
    Case "DACC"
      Message.Info("Not implemented, sorry")
      Return
   Case "New General Notes"
      '----------------------------------------------------------------------
      'General notes page as the name implies is for notes not tied to a 
      'particular health issue or problem. For particular problems the user
      'should be taught to open an editor tab for that problem.
      '----------------------------------------------------------------------
      page = New FLinkContainer
      ProgressNotesPage = New FProgressNotePage(page.VBoxEditor)
      page.tag = "New General Notes"
      page.Text = "New General Notes"
      ProgressNotesPage.set_fk_section(const.cSection_GeneralNotes)
      ProgressNotesPage.lblNotesFor.text = "New General Notes"
      ProgressNotesPage.Init(currentconsult)
      'EditorPages.Add(ProgressNotesPage, "New General Notes")
    Case "Travel"
      page = New FLinkContainer
      TravelPage = New FTravel(page.VBoxEditor)
      TravelPage.Init(currentconsult)
      page.tag = "Travel"
      page.Title = "Travel"
      'EditorPages.Add(TravelPage, "Travel")
    Case "Occupational History"
      page = New FLinkContainer
      OccupationalHistoryPage = New FOccupation(page.VBoxEditor)
      OccupationalHistoryPage.Init(currentconsult)
      page.tag = "Occupational History"
      page.Title = "Occupational History"
     ' EditorPages.Add(OccupationalHistoryPage, "Occupational History")
    Case "Health Assessment"
      page = New FLinkContainer
      HealthAssessmentPage = New FHealthAssessment(page.VBoxEditor)
      HealthAssessmentPage.Init(currentconsult)
      page.tag = "HealthAssessment"
      page.Title = "HealthAssessment"
      'EditorPages.Add(HealthAssessmentPage, "HealthAssessment")    
    Case "Mental Health"
      page = New FLinkContainer
      MentalHealthPage = New FMentalhealth(page.VBoxEditor)
      MentalHealthPage.Init(currentconsult)
      page.tag = "Mental Health"
      page.Title = "Mental Health"
     ' EditorPages.Add(MentalHealthPage, "Mental Health")
    Case "Allergies"
      Message.Info("Allergies Module\n\nThis section currently not available")
      Return 
      page = New FProgressNotePageContainer
      AllergyPage = New FAllergy(page.VBoxEditor)
      AllergyPage.Init(currentconsult)
      page.tag = "Allergies"
      page.Title = "Allergies"
      'EditorPages.Add(AllergyPage, "Allergies")
    Case "Web"
      page = New FLinkContainer
      WebPage = New FBrowser(page.VBoxEditor)
      page.tag = "Web"
      page.Title = "Web"
      WebPage.Visible = True 'make it visible, default is not visible
      'WorkspaceEditor.Add(page)
    Case "Pregnancy"
      page = New FLinkContainer
      PregnancyPage = New FPregnancy(page.VBoxEditor)
      PregnancyPage.Init(currentconsult)
      page.tag = "Pregnancy"
      page.title = "Pregnancy"
     ' EditorPages.Add(PregnancyPage, "Pregnancy")

    Case "Referrals"
      page = New FLinkContainer
      ReferralPage = New FReferrals(page.VBoxEditor)
      ReferralPage.Init(currentconsult)
      page.tag = "Referrals"
      page.Title = "Referrals"
     ' EditorPages.Add(ReferralPage, "Referrals")
    Case "Scripts"
       Message.Info("Prescription Module\n\nThis section currently not available")
      Return 
      page = New FLinkContainer
      PrescriptionPage = New FPrescriptions(page.VBoxEditor)
     ' PrescriptionPage.Init(currentconsult)
      page.tag = "Scripts"
      page.Title = "Scripts"
     ' EditorPages.Add(PrescriptionPage, "Scripts")
   Case "Family History"
      page = New FLinkContainer
      FamilyHistoryPage = New FFamilyHistory(page.VBoxEditor)
      FamilyHistoryPage.Init(currentconsult)
      page.tag = "Family History"
      page.Title = "Family History"
     ' EditorPages.Add(FamilyHistoryPage, "Family History")
   Case "Health Issues"
      page = New FLinkContainer
      PastHistoryPage = New FPastHistory(page.VBoxEditor)
      PastHistoryPage.Init(currentconsult)
      page.tag = "Health Issues"
      page.Title = "Health Issues"
    '  EditorPages.Add(PastHistoryPage, "Health Issues")
    Case "Vaccinations"
      Message.Info("Immunization Module\n\nThis section currently not available")
      Return 
      page = New FLinkContainer
      VaccinationPage = New FVaccinations(page.VBoxEditor)
      page.tag = "Vaccinations"
      page.Title = "Vaccinations"
      VaccinationPage.Init(currentconsult)
    '  EditorPages.Add(VaccinationPage, "Vaccinations")
   Case "Workcover"
      page = New FLinkContainer
      'WorkcoverPage = New FWorkcover(page.VBoxEditor)
      page.tag = "Workcover"
      page.Title = "Workcover"
      'WorkcoverPage.Init(currentconsult)
     ' EditorPages.Add(WorkcoverPage, "Workcover")
   Case "Requests"
      '---------------------
      'Create an  editor page with embedded request form and space for
      'some progress notes underneath
      'Note:   A patient as none or many previously ordered request forms
      '`       i.e currentconsult!RequestForms collection
      '        A consultation has none or many RequestForms ordered just
      '        this consultation
      '        currently this is pointed to by currentconsult.RequestForms
      '------------------------------------------------------------------------
      page = New FLinkContainer
      RequestPage = New FRequests(page.VBoxEditor)
      RequestPage.Init(currentconsult)
      page.tag = "Requests"
      page.title = "Requests"
     ' EditorPages.Add(RequestPage, "Requests")
   Case "Measurements"
     Return 'nothing done yet

   Case "Recalls"
      page = New FLinkContainer
      RecallPage = New FRecalls(page.VBoxEditor)  'add a recalls page
      RecallPage.Init(currentconsult)
      page.tag = "Recalls"                        
      page.Title = "Recalls"                      'put up headings
     ' EditorPages.Add(RecallPage, "Recalls")
    '  RecallPage.FAdditionalNotesEditor.bExit = False 
   Case "Skin Excision"
      page = New FLinkContainer
      ExcisionPage = New FProcedures(page.VBoxEditor)
      page.Title = "Skin Excision"
      page.Tag = "Skin Excision"
    '  EditorPages.Add(ExcisionPage, "Skin Excision")
     ' ExcisionPage.Init(currentconsult)
   End Select


End 

Function Editor_SetActivePage(pagetitle As String) As Boolean
   '---------------------------------------------------------------
   'PURPOSE: If a page is already opened, the twitch to that page
   'EXPECTS: title of a page as a string
   'RETURNS: boolean flag TRUE if page found, FALSE = not yet added
   'for historical reasons which which will make no sens the
   'FProgressNotePageContainer is only a Vbox. FIXME
   '----------------------------------------------------------------
  ' Dim page As FProgressNotePageContainer
   Dim page As FLinkContainer
   For Each page In TheWorkspace.Children
     If Page.tag = pagetitle Then 
       TheWorkspace.ActiveWindow = page
       Return True
     End If
  Next
  Return False
End

Public Sub Editor_PastHistory_ProgressNotePage(phx As Collection)
  '--------------------------------------------------------------------------------------------------------
  ' Adds a progress note page to the workspace editor
  '
  ' Note that  any text in the editor is linked to the coding for that problem e.g Hypertension.
  ' Note these pages are held in the EditorPages collection, the pk_pasthistory key is the tag for the page
  '--------------------------------------------------------------------------------------------------------  
  Dim page As FLinkContainer
  Dim ProgressNotesPage As FProgressNotePage
 
  If Not Editor_SetActivePage(phx!pk_pasthistory) Then
     page = New FLinkContainer
     page.tag = phx!pk_pasthistory
     page.text = phx!description
     ProgressNotesPage = New FProgressNotePage(page.VBoxEditor)
     ProgressNotesPage.lblNotesFor.text = phx!description & " noted at " & phx!age_onset & "yrs"
     ProgressNotesPage.tag = phx!pk_pasthistory
     '----------------------------------------------------------------- 
     ' Initialises the page, sets the pk_pasthistory on the editor page
     ' .Init() does things including load any existing progress notes
     ' for this problem.
     '-----------------------------------------------------------------
     ProgressNotesPage.set_fk_section(Const.cSection_PastHistory)
     ProgressNotesPage.Init(currentconsult)
'     EditorPages.Add(ProgressNotesPage, phx!pk_pasthistory)
  End If
End




