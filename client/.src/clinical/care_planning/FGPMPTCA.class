' Gambas class file

' Copyright (C) 2014 Dr. Richard Terry
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'-----------------------------------------------------------------------
'A Form to allow users to claim the GPMP/TCA/Review Item 721/723/732
'Used in FClinical by clicking the 'Care Planning' button
'
'TCA  = Team Care Arrangements
'
'Note that  for GPMP the document(s) generated is tagged 'Audit Use Only'
'and kept soley in case of a medicare audit. as it is not intended to be reprinted 
'As the medical record is a 'living document' then any time you Static Public Subprint the health summary
'for anyone  having had a GPMP then the latest GPMP version will be printed
'
' modifications to arrangement/plan - update outcoform_gpmp.mes measures
' fax the review back to the team.
' 
' HOW THIS WORKS:
'      GPMP  A General Practitioner Management Plan a medicare funded item number
'            meant to generate a wholistic document describing the patients
'           chronic conditions and those providers who are involved in their care
'           (if any, aside from the GP)
'           When this tab first clicked On attempts To get the Last GPMP claimed
' 
'      TCA: Team Care Arrangements are meant to be a plan of action for all persons
'           looking after a patient with a chronic illness who needs a multi-displinary
'           Team (At least that's the spirit). Sadly in Australia it has become 
'           bastardised and Medicare has become the defacto toe-nail-cutting provider
'           for elderly Austrlians.)
'
'           Anyway..... (Sign....)
'
'           If the TCA tab Is Clicked On an attempt Is Made To pull In the Last TCA
'           If not found, user must click on the <New> button in FClinical. This loads the
'           providers combo with any providers linked to any of the patients health issues.
'           Alos when this combo is clicked, an instance of FTeamCareMembers is added to the
'           workspace with the providers name as the tab title. This instance has as its tag
'           the providers collection for that team member, to which is added at instantiation
'           a empty collection of additional_health_issues, family_members, graphs and documents
'           If the user selects any additional health issues, family member illnesses, graphs
'           or documents then these fill these collections. As information is added the 
'           LaTex of the TCA automatically updates to reflect the additions.
'------------------------------------------------------------------------------------------------
Private currentConsult As CConsult              'the main patient consult class - holds everything together
Private bExit As Boolean                        'used to exit subroutines to prevent triggering of stuff
Private bPrintAcceptanceForm As Boolean
Private bNewTCA As Boolean
Private bEditing As Boolean
Private bPreparingGPMP As Boolean               'true if user is preparing the GPMP
'Database keys
Private fk_gp_management_plan As Variant         'if non zero then plan has been saved
Private fk_team_care_arrangement As Variant      'if non zero the TCA has been saved
Private fk_document_gp_management_plan As Variant 'if non zero GPMP has been saved
Private fk_tca_progressnote As Variant               'key to clin_consult.progressnotes
Private fk_gpmp_progressnote As Variant          'key to clin_consult.progressnotes related to saving the GPMP
Private GPMP As Collection 
'Collections of stuff
Private Allied_Health_types As Collection       'populated and passedd to each embedded FTeamCareArrangement
Private usual_doctor As Collection
Public TCA As Collection                        'the Team Care Arrangement public as accessed from other forms
Public Team_Care_Members As Collection           'accessed by FTeamCareMember when it is deleted by the user from a workspace tab
Private Providers As Collection                  'All providers linked to patient's health issues - these are 'potential' team care members
Public Selected_provider As Collection
Private Providers_Problems As Collection         'the health issues to be included for a provider
Public Providers_Selected_For_TCA As Collection 
'Constants
Public Const cTab_HealthIssues As Integer = 0
Public Const cTab_GPMP As Integer = 1
Public Const cTab_TCA As Integer = 2
'integer's  used in subroutine TCA_Check_If_Due_For_New_One(,)
Public Const tca_cancel_generation As Integer = 0
Public Const new_tca As Integer = 1
Public Const tca_done_today As Integer = 2
Public Const tca_overdue As Integer = 3
Public Const tca_not_due As Integer = 4
Public Const tca_review As Integer = 5

Private GPMP_LaTex As String
Private TCA_Summary_HTML As String
Private Form_Health_Issues As FPastHistory
Private form_pdf As FPdf 

Static Private form_gpmp As FGPMPTCA

Public Sub Init(cons As CConsult) 
   'Set up the forms, get collections eg of providers for that persons health isues
   'show any existing GPMP if one exists or if not the latest health summary as a 
   'start point for a GPMP
   
   form_gpmp = Me                                                      'allow access of this form from anywhere by referencing FGPMPTCA
   tlNewPlan_Create_Text                                               'lots of text for the label
   With form_pdf = New FPdf(VBox_PDF)                                  'to show pdf of the latex generated
      .tbShowPDFText.Enabled = False 
   End With
   currentConsult = cons 
   lblmeasure.text = "Explained Preparation Process   "                'make all labels  in edit area the widest of the text we have
   With Form_Health_Issues = New FPastHistory(Vbox_HealthIssues)       'our own instance of health issues
      .Init(currentConsult)
   End With
   modEditAreaHelpers.Resize_labels(VBox_EditArea_GPMP, lblmeasure)    'resize labels on the GPMP tab
   modEditAreaHelpers.Resize_labels(VBox_EditArea_TCA, lblMeasure)     'and the TCA tab
   Providers_Selected_For_TCA = New Collection                         'will be those providers selected into the tCA
   Providers_Refresh                                                   'load combo for all the providers in the patient's Health Issues collection
   Allied_Health_Types = modUtil.Copy_Collection_Keyed_Sequentially(modPastHistoryDBI.Allied_Health_types_Get()) 'eg Dietitian, Podiatrist
   If Not IsNull(currentconsult!patient!fk_doctor) Then 
      usual_doctor = modAdminDBI.Preferred_Doctor_Get(currentconsult!patient!fk_doctor)
   End If   
   bPrintAcceptanceForm = modAdminDBI.Config_Get_Staff_Member("print-tca-consent-forms", False, Null, modDBConnect.currentUser!fk_clinic, modDBConnect.currentUser!fk_staff)
   TabStrip1.index = cTab_HealthIssues                                 'default to showing the Health Issues
   Settings_Load                                                       'configure splits/fonts
   FClinicalToolbar.Enable_Disable_ToolButtons("Care Planning")
   TabStrip1_Click()                                                   'the latest Health summary
   
End

Static Public Sub Team_Care_Member_Remove(fk_provider As Variant, Optional bRemoveTab As Boolean = False)
   '---------------------------------------------------------------------------------------------------------------
   'Called from FPastHistory with user deletes a provider who is associated with a team care members problem
   '  - when called from here bRemoveTab is true
   'Called from FTeamCareMember_close() in which case the window on the workspaceeditor is destroyed automatically
   '---------------------------------------------------------------------------------------------------------------   
   
   Try form_gpmp.TCA!team_care_members.Remove(fk_provider) 
   If bRemoveTab Then form_gpmp.WorkSpaceEditor_TCA_Remove_Invalid_Tabs
   
End

Static Public Sub GPMP_TCA_Reload_Latex()
   
   Select Case form_gpmp.TabStrip1.Index
      Case form_gpmp.cTab_GPMP
         form_gpmp.Health_Summary_Reload
      Case form_gpmp.cTab_TCA
         form_gpmp.TCA_Display_Latex(form_gpmp.Selected_provider)
   End Select
   
End

Static Public Sub GPMP_Update() 
   '-------------------------------------------------------------------
   'Updates the GPMP PDF when user has changed a health issue
   'Called from whatever forms need to do this
   'e.g Fallergies, FPsychosocialHistory, Fpasthistory. FMedicationList
   'FOccupation, FVaccinations, FRecalls, FFamilyHistory
   'FRecreationalDrugs
   '------------------------------------------------------------------- 
   
   form_gpmp.Providers_Refresh
   form_gpmp.Health_Summary_Reload
   form_gpmp.VBox_EditArea_GPMP_Outer.Padding = 1
   
End

Static Public Sub TCM_Providers_Update_Problems_Static()
   '------------------------------------------------------------------
   'If the user has changed the providers and associated health issues
   'update the team care members on this form
   '------------------------------------------------------------------- 
   
   form_gpmp.Team_Care_Members_Update_Problems_Associated_With
   
End

Static Public Sub TCA_Update() 
   
   form_gpmp.TCA_Display_Latex(form_gpmp.Selected_provider)
   
End

Static Public Sub Family_History_Update()
   '--------------------------------------------------------------------
   'updates the family history combo box on any embedded form_inclusions
   '--------------------------------------------------------------------
   
   form_gpmp.Family_History_Update_Combos()
   
End

Public Sub Team_Care_Members_Update_Problems_Associated_With()
   '----------------------------------------------------------------------------------------------- 
   'Called externally from FPasthistory if user has updated past history items or deleted providers
   'Static Public Sub Team_Care_Member_Remove(.) has already removed deleted providers if they
   'were a current team care member, and removed their tab if present
   'This routine, loops through all team care members, and checks if what particular past history
   'health issue they are associated with and re-does the gui on the team care members tab in the
   'workspace editor
   '--------------------------------------------------------------------------- -------------------
   
   Dim tcm As Collection
   Dim prov As Collection 
   Dim PH As Collection 
   Dim Selected_Provider_Problem_Involved As Collection
   
   currentconsult.Refresh("past_history")
   Providers_Refresh                                            'need to do this because FPasthistory could have deleted a provider
   For Each tcm In TCA!team_care_members                       
      tcm!team_care_form.lblProblems.text = ""
      tcm!providers_problems = New Collection 
      For Each PH In currentConsult!past_history
         If Not IsNull(ph!providersofcare) Then  
            For Each Prov In PH!providersofcare
               If prov!fk_person = tcm!fk_person And prov!fk_employee = tcm!fk_employee And Prov!fk_branch = tcm!fk_branch Then    
                  If tcm!team_care_form.lblProblems.text <> "" Then
                     tcm!team_care_form.lblProblems.text &= ", "
                  Endif
                  tcm!team_care_form.lblProblems.text &= LCase(PH!description)
                  Selected_Provider_Problem_Involved = modUtil.Copy_Collection(PH)
                  Selected_Provider_Problem_Involved!contribution_to_plan = Prov!contribution_to_plan 
                  tcm!providers_problems.Add(Selected_Provider_Problem_Involved, tcm!providers_problems.count)
               Endif
            Next
         End If      
      Next
   Next     
   WorkSpaceEditor_Activate()      're-show the latex for active tab
   
End

Public Sub Family_History_Update_Combos()
   
   Dim TCM As Collection
   
   For Each TCM In Team_care_members
      TCM!team_care_form.FamilyHistory_Load_Combo
   Next
   
End

Public Function Family_History_ReOrder_collection(members As Collection) As Collection 
   '---------------------------------------------------------------- 
   'As the family members can be picked at random from the combobox
   'the collection is all over the place, put it back together 
   'eg could be
   'mother - hypertension
   'father - diabetes
   'mother - diabetes 
   '-----------------------------------------------------------
   
   Dim member As Collection
   Dim relative_keys As New Variant[]
   Dim relative_key As Variant
   Dim members_reordered As New Collection
   
   For Each member In members
      If Not relative_keys.Exist(member!fk_relationship) Then relative_keys.Add(member!fk_relationship)
   Next
   ' Print relative_keys
   
   For Each relative_key In relative_keys
      For Each member In members
         If relative_key = member!fk_relationship Then
            members_reordered.Add(member, members_reordered.count)
         Endif
      Next
   Next
   
   Return members_reordered  
   
End

Public Sub Providers_Make_Latex_Table(templ As CTemplate)
   '--------------------------------------------------------
   'providers (other) and team care members listed
   'the collection team_care_members is global to this class
   '--------------------------------------------------------
   
   Dim sString As String
   Dim PH As Collection
   Dim bSkipProvider As Boolean
   Dim bHaveProviders As Boolean
   Dim TCM As Collection
   Dim comm As Collection
   Dim Comms As Collection
   Dim POC As Collection
   
   '-------------------------------------------------------------------------------------------------------
   'Firstly, generate a table of just the designated team care members starting with GP generating the plan
   '-------------------------------------------------------------------------------------------------------
   sstring = modDBConnect.currentUser!organisation
   If modDBConnect.currentUser!branch <> "HEAD OFFICE" Then 
      sstring &= " " & modDBConnect.currentUser!branch
   Endif
   sstring &= "\\\\"
   sstring &= Trim(modDBConnect.currentUser!street1 & " " & modDBConnect.currentUser!street2) & " " & modDBConnect.currentUser!town & " " & modDBConnect.currentUser!postcode
   If modDBConnect.currentUser!fk_role = const.StaffRole_Doctor Or modDBConnect.currentUser!fk_role = const.StaffRole_Practice_Principal Then
      templ.Row(modDBConnect.currentUser!title & " " & modDBConnect.currentUser!wholename, "General Practitioner", sSTring)  'create a row in the table
   Else
      templ.Row("<insert on completion>", "General Practitioner", sSTring)  'create a row in the table
   End If   
   comms = ModContactsDBI.Branch_Comms_Get(modDBConnect.currentUser!fk_branch) 
   For Each comm In comms                                                                                  'and put them in the table
      templ.Row("", "", comm!type & " " & comm!value)
   Next
   For Each TCM In TCA!team_care_members 
      sString = ""                                                                        'For each member of the team
      If Not IsNull(TCM!organisation) Then
         sString = TCM!organisation
         If TCM!branch <> "HEAD OFFICE" Then
            sString &= "\\\\" & TCM!branch 
         Endif
         sString &= "\\\\"
      Endif
      sString &= Trim(TCM!street1 & "\\\\ " & TCM!street2) & "\\\\" & TCM!town & " " & TCM!postcode
      templ.Row(modStrings.Capitalise_Words_In_String(TCM!wholename), modStrings.Capitalise_Words_In_String(TCM!occupation), sstring)  'create a row in the table
      If TCM!fk_branch Then
         comms = modContactsDBI.Branch_Comms_Get(TCM!fk_branch)    
      Else
         If TCM!fk_person Then
            comms = modContactsDBI.person_comms_get(TCM!fk_person)
         Endif
      Endif
      
      For Each comm In comms                                                                                  'and put them in the table
         templ.Row("", "", comm!type & " " & comm!value)
      Next
      templ.Row(" ", " ", " ")
   Next
   templ.Table("team-care-members-contact-list")                                                              'put the table into the template
   '-------------------------------------------------------------------------------------
   'Now, loop through all past history items and find the providers attached to problems
   'who are not included in the team care members list the user is generating
   '-------------------------------------------------------------------------------------
   For Each PH In currentconsult!past_history                                        'Loop through all health issue items               
      If Not IsNull(PH!providersofcare) Then                                         'If the health issue has providers of care
         For Each POC In PH!providersofcare                                          'for each of the providers of care for this particular health issue
            bSkipProvider = False                                                    
            For Each TCM In TCA!team_care_members                                        'check its not one we want to print under the team care members contact ist                 '
               If POC!fk_person = TCM!fk_person And POC!fk_branch = TCM!fk_branch And POC!fk_employee = TCM!fk_employee Then    
                  bSkipProvider = True                                               'it is? then skip this, don't put on the general providers list
                  Break
               Endif
            Next
            If Not bSkipProvider Then                                                'not part of the team care listing
               If Not InStr(sString, POC!wholename) Then                             'check not duplicated in another health issue
                  bHaveProviders = True  
                  sString = ""                                                                        'For each member of the team
                  If Not IsNull(POC!organisation) Then
                     sString = POC!organisation
                     If POC!branch <> "HEAD OFFICE" Then
                        sString &= "\\\\" & POC!branch 
                     Endif
                     sString &= "\\\\"
                  Endif
                  sString &= Trim(POC!street1 & "\\\\ " & POC!street2) & "\\\\" & POC!town & " " & POC!postcode
                  templ.Row(modStrings.Capitalise_Words_In_String(POC!wholename), modStrings.Capitalise_Words_In_String(POC!occupation), sstring)  'create a row in the table
                  
                  ' templ.Row(POC!wholename, modStrings.Capitalise_Words_In_String(POC!occupation), Address_Make_Latex(POC))  'create a row in the table
                  If POC!fk_branch Then
                     comms = modContactsDBI.Branch_Comms_Get(POC!fk_branch)    
                  Else
                     If POC!fk_person Then
                        comms = modContactsDBI.person_comms_get(POC!fk_person)
                     Endif
                  Endif
                  For Each comm In comms                                            'and put them in the table
                     templ.Row("", "", comm!type & " " & comm!value)
                  Next
                  sString &= POC!wholename & " "                                   'keep provider name so we can check it's not used again
                  templ.Row(" ", " ", " ")
               End If  
            End If
         Next
      Endif
   Next 
   If bHaveProviders Then 
      templ.subst("Other-Providers-Involved-In-Care", "Other Providers Involved In Care")
      templ.Table("other-providers-contact-list")
   Else
      Templ.Subst("other-providers-contact-list", "\\relax")
      templ.subst("Other-Providers-Involved-In-Care", "")
   End If   
   
End

Public Sub TCA_Setup_Data_Entry()
   'At this point, there is either nothing in the data entry area's
   'or, if the TCA was done today, all the data is being shown but the screen cannot be edited
   'Start either a new TCA or Edit and old one, do validation of dates etc first
   
   bNewTCA = True                                                    'Assume new
   If IsNull(GPMP) Then                                              'care planning button defaults to health issues, GPMP created if click on GPMP tab
      GPMP = modPastHistoryDBI.GP_Management_Plans_Get(currentconsult!patient!fk_patient, True)    'true = latest one
   End If 
   If Not Providers_Warn_If_None_Exist() Then                            'Check the past health issues have providers
      Return                                                         'without these we cannot to a TCA (no team!)
   Endif
   Select Case TCA_Check_If_Due_For_New_One(True)                    'check if valid to do new one, or need review etc
      Case new_tca                                               'do nothing, just setup for a new one - never ever done
         lblClaimDetails.text = "NO RECORD OF TEAM CARE ARRANGEMENT IN SYSTEM"
         lblTeamCareMembersAndArrangements.text = "Team Care Arrangements & Members (NEW)" 
      Case tca_overdue 
         lblClaimDetails.text = "OVERDUE LAST TCA done on " & Format(TCA!date_claimed, "dd/mm/yyyy")
         lblTeamCareMembersAndArrangements.text = "Team Care Arrangements & Members (NEW)" 
      Case tca_done_today                                            'can just edit the existing data on the screen
         Return                
      Case tca_not_due, tca_cancel_generation
         Return  
      Case tca_review                                                'review an existing TCA = new TCA with different labels
         lblClaimDetails.text = " EXISTING TCA " & Format(TCA!date_claimed, "dd/mm/yyyy") & " BEING REVIEWED"
         rbTCAReview.value = True   
         lblTeamCareMembersAndArrangements.text = "Team Care Arrangements & Members (REVIEW)" 
   End Select
   
   'From this point on the code sets up for a totally new Team Care arrangement, empty collections & GUI
   form_pdf.Load_pdf(modUtil.Find_File("templates/blank.pdf"),, True) 'blank pdf showing on right now
   bExit = True
   TextLabel2.Visible = False 
   VBox_Main.Visible = True                                          'the main box holding all the TCA GUI elements
   VBox_Main.Enabled = True   
   EditArea_Clear                                                    'remove any prior text from input areas
   WorkspaceEditor_Clear                                             'remove any tabs from the providers workspace                                           
   TCA = New Collection                                              'we want a totally new TCA 
   TCA!team_care_members = New Collection                            'must be lower case
   HBox_TCA_Prepared_By.Visible = False
   HBox_TCA_Date_Claimed.Visible = False 
   fk_team_care_arrangement = Null
   fk_tca_progressnote = Null
   txtTCAReviewDate.text = Format(DateAdd(currentconsult.GetConsultDate(), gb.month, 6), "dd/mm/yyyy")  
   VBox_EditArea_Outer_TCA.Enabled = True 
   Vbox_TCA.Enabled = True 
   VBox_EditArea_TCA.Enabled = True 
   EditArea_Notify_DataChange(False)
   lblHideWorkspace.Visible = False                                     'remove overlying transparent label to allow access to the workspace
   WorkspaceEditor.Enabled = True  
   bExit = False  
   
End

Public Sub TCA_Display()
   '-----------------------------------------------------------------------
   ' Display a TCA if it s < 24hrs since it was done, after that,  no point
   ' ----------------------------------------------------------------------   
   
   Dim TCM As Collection
   Dim bPreventAccess As Boolean 
   
   ' TCA_Reload
   If IsNull(TCA) Then TCA_Reload()
   If IsNull(TCA) Then 
      modUtilGUI.Blank_PDF_Display(form_pdf)
      lblClaimDetails.text = "No Team Care Arrangements Exist"
      Return
   Else
      If IsNull(TCA!team_care_members) Then
         modUtilGUI.Blank_PDF_Display(form_pdf)
      Endif
   Endif
   WorkspaceEditor_Clear                                                       'remove all existing FTeamCareMember forms in workspaceeditor                                                     
   If Not IsNull(TCA!date_claimed) Then
      Select Case TCA_Check_If_Due_For_New_One()
         Case 4 'already claimed, no edit
            bPreventAccess = True   
         Case 2  ' can edit today
            bPreventAccess = False   
            lblHideWorkspace.Visible = False  
         Case 3  'need a new one
            form_pdf.Load_pdf(modUtil.Find_File("templates/blank.pdf"),, True) 'blank pdf showing on right now
            bExit = True
            TextLabel2.Visible = False 
            VBox_Main.Visible = True                                          'the main box holding all the TCA GUI elements
            VBox_Main.Enabled = True   
            EditArea_Clear                                                    'remove any prior text from input areas
            WorkspaceEditor_Clear                                             'remove any tabs from the providers workspace                                           
            TCA = New Collection                                              'we want a totally new TCA 
            TCA!team_care_members = New Collection                            'must be lower case
            HBox_TCA_Prepared_By.Visible = False
            HBox_TCA_Date_Claimed.Visible = False 
            fk_team_care_arrangement = Null
            fk_tca_progressnote = Null
            txtTCAReviewDate.text = Format(DateAdd(currentconsult.GetConsultDate(), gb.month, 6), "dd/mm/yyyy")  
            VBox_EditArea_Outer_TCA.Enabled = True 
            Vbox_TCA.Enabled = True 
            VBox_EditArea_TCA.Enabled = True 
            EditArea_Notify_DataChange(False)
            lblHideWorkspace.Visible = False                                     'remove overlying transparent label to allow access to the workspace
            WorkspaceEditor.Enabled = True  
            bExit = False  
            Return
      End Select
   End If       
   WorkspaceEditor.Lock
   fk_team_care_arrangement = TCA!fk_team_care_arrangement
   fk_tca_progressnote = TCA!fk_progressnote
   If TCA!item_number = 723 Then 
      rbTCA.value = True
   End If   
   If TCA!item_number = 732 Then 
      rbTCAReview.value = True  
   End If   
   HBox_TCA_Date_Claimed.Visible = True
   If Not IsNull(TCA!date_claimed) Then
      txtTCADateClaimed.text = Format(TCA!date_claimed, "dd/mm/yyyy")
      lblClaimDetails.text = "Last TCA - Claimed on " & Format(TCA!date_claimed, "dd/mm/yyyy")
   Else
      lblClaimDetails.text = "TCA - In Preparation"
   End If   
   txtTCAPreparedBy.text = TCA!title & " " & TCA!wholename
   HBox_TCA_Prepared_By.Visible = True 
   chkTCAExplainedSteps.value = TCA!explained_steps_involved
   chkTCADiscussedProviders.value = TCA!discussed_providers
   If TCA!patient_agrees = True Then    
      rbTCAPatientAgreesYes.value = True
   Else
      rbTCAPatientAgreesNO.Value = True
   End If   
   txtTCAReviewDate.text = Format(TCA!review_date, "dd/mm/yyyy")
   chkTCACopyToPatient.value = TCA!copy_offered_to_patient
   If TCA!patient_permits_carer_to_have_copy = True Then   'fixme duplicate code in rbEditARea_Click factor out
      rbTCAPatientHasCarerYes.value = True
      chkTCAPatientAllowsCarerCopy.value = True
      lblCopyToCarerTCA.Foreground = Color.TextForeground
      lblPatientGivesPermissiontca.Foreground = Color.TextForeground
      Hbox_Copy_To_Carer_TCA.Enabled = True  
      chkTCACopyToCarer.Enabled = True 
      chkTCAPatientAllowsCarerCopy.Enabled = True   
      If TCA!copy_offered_to_carer = True Then
         chkTCACopyToCarer.value = True   
      Endif
   Else 'fixme duplicate code in rbEditARea_Click factor out
      rbTCAPatientHasCarerNo.value = True
      lblCopyToCarerTCA.Foreground = Color.LightForeground
      lblPatientGivesPermissiontca.Foreground = Color.LightForeground
      Hbox_Copy_To_Carer_TCA.Enabled = False   
      With chkTCACopyToCarer
         .Enabled = False   
         .value = False
      End With
      With chkTCAPatientAllowsCarerCopy
         .Enabled = False  
         .value = False 
      End With
   Endif
   chkTCACopyToProviders.value = TCA!copy_sent_to_providers
   '----------------------------------------------------------------------------
   'now create tabs for any providers in this TCA
   'this also creates the additional_health_issues and family_issues collections
   'need the bExit otherwise referencing the cmbProviders will trigger its 
   'click event and add the provider shown as a new team care member
   'We only want to get it to show the provider name
   '----------------------------------------------------------------------------
   For Each TCM In TCA!team_care_members
      bexit = True   
      cmbProviders.index = cmbProviders.Find(TCM!wholename)                                 'set combo to the TCM name
      bexit = False  
      TCA!team_care_members[TCM!fk_provider_of_care] = Team_Member_Reload(TCM, bPreventAccess)              'add new tab, repopulate the TCM with data
   Next 
   EditArea_Notify_DataChange(False)
   Wait
   If Not IsNull(Selected_provider) Then TCA_Display_Latex(Selected_provider)  'there may be not provider
   If bPreventAccess = False Then   
      VBox_EditArea_Outer_TCA.Enabled = True   
      VBox_TCA.Enabled = True
      VBox_EditArea_TCA.Enabled = True 
      VBox_Main.Enabled = True
   End If   
   WorkspaceEditor.Unlock
   With lblHideWorkspace
      .left = .Parent.Left
      .width = .Parent.width
      .Height = .Parent.height
      .Visible = False  
   End With
   bNewTCA = False  
   
Catch
   Return
   
End 

Public Function Address_Make_Latex(TCM_Prov As Collection) As String
   
   Dim sSTring As String
   Dim sAddress As String
   
   sAddress = Trim(TCM_Prov!street1 & " " & TCM_Prov!street2) & "\\\\" & TCM_Prov!town & " " & TCM_Prov!postcode
   If Not IsNull(TCM_Prov!fk_branch) Then
      sstring = TCM_Prov!organisation 
      If TCM_Prov!branch <> "HEAD OFFICE" Then
         sstring &= TCM_Prov!branch 
      Endif
      sstring &= "\\\\"
   Endif
   sstring &= sAddress 
   Return sstring
   
End

Public Function TCA_Check_If_Due_For_New_One(Optional bNewTCARequested As Boolean = False) As Integer
   'Check if we actually are due for a new Team Care Arrangement
   
   Dim sMsg As String
   Dim sLastClaimed As String
   Dim sNextDue As String
   Dim sClaimDetails As String
   
   If IsNull(TCA) Then Return new_tca                                               'never ever had a tCA done start a new one
   sLastClaimed = Format(TCA!date_claimed, "dd/mm/yyyy")
   sNextDue = Format(DateAdd(TCA!date_claimed, gb.Year, 2), "dd/mm/yyyy")
   sClaimDetails = "Existing TCA - last claimed: " & sLastClaimed & " next due:" & sNextDue
   lblTeamCareMembersAndArrangements.text = "Team Care Arrangements & Members (LAST DONE:" & sLastClaimed & ")" 
   If modUtil.IsSameDay(currentconsult.GetConsultDate(), TCA!date_claimed) Then     'can edit this if done today 
      lblClaimDetails.text = sClaimDetails
      Return tca_done_today 
   End If   
   If DateDiff(TCA!date_claimed, currentconsult.GetConsultDate(), gb.day) > 730 Then 'if claimed > 2 years ago tell them new one due
      If bNewTCARequested = False Then    
         SMsg = "It is over 2  years since this patient last had a Team Care Arrangement claimed."
         If Message.Question("Would you like to start a new TCA?", "Yes Start New TCA", "Cancel") = 2 Then Return  
         Return tca_overdue
      Else
         Return tca_cancel_generation
      End If   
   Else                                                                              'was claimed less than 2 years ago 
      If bNewTCARequested Then  
         Message.Title = "Care Planning"  
         sMsg = "<HTML><P><B>New Team Care Arrangements</B></P>"
         smsg &= "<P>The recommended interval for a Team Care Arrangement is once every two years which in theory will fall on or about " & sNextDue & "</P>"
         smsg &= "<P>A new TCA is not due unless there are exceptional circumstances.</P>"
         sMsg &= "<P>To review an existing TCA you will have to do the following:"
         sMsg &= "<UL>"
         sMsg &= "<LI>Go through the agreement steps again with the patient"
         sMsg &= "<LI>Review the health issues tab if you wish to update details or change providers"
         sMsg &= "<LI>Select again the providers from the combo box"
         sMsg &= "<LI>Enter some text about the progress made towards the goals of your TCA in the appropriate text box"
         sMsg &= "<UL></P><P>How would you like to proceed?</P>"
         Select Case Message.Question(sMsg, "New Team Care Arrangement", "Do a Team Care Arrangement Review", "Cancel")
            Case 1
               Return new_tca
            Case 2
               Return tca_review
            Case 3
               Return tca_cancel_generation
         End Select
      Else                                                                  
         sMsg &= "<P>The current Team Care Arrangement was claimed on " & sLastClaimed & ", you can only edit an existing TCA On the same Day it was created.</P>"                                                                                                       'TCA has been claimed"
         sMsg &= "<P>You can re-print the documents for each of the providers in this  Team Care Arrangement any time "
         smsg &= "by selecting the Plans Tab (on the  Tabbed Lists on the right hand side of the screen) and selecting the desired document.</P>"
         textlabel1.text = sMsg
         lblClaimDetails.text = sClaimDetails
         Return tca_not_due
      End If 
   End If   
   
End

Public Function Main_Instructions() As String
   
   Return ""
   "<P>Once saved <B><I>you can modify this TCA any time on the same date as it was claimed. </I></B> After that time, you may view the documents in the TCA (which are kept for  medicare audit purposes) in the Plans List.</P>"
   "<P>Remember that all the information for this TCA must be entered in the Past History section of the program or on the 'Manage Health Issues' tab before generating the TCA.</P>"
   "<P><B>NB: Read your completed document - as this is auto-generated from your Health Issues it may contact syntax errors which you will need to correct!</B></P>"
   
End

Public Sub TCA_Display_Latex(provider As Collection)
   
   Dim st As String
   Dim filename As String
   
   st = TCA_Create_LaTex(provider)
   filename = modPrinting.Latex_To_PDF(st)
   form_pdf.Load_pdf(filename, False, False) 'don't delete tempfile
Catch
   Return 
   
End

Public Function TCA_ProgressNotes_Create(bFinalClaim As Boolean) As String
   
   Dim sHtml As String
   Dim TCM As Collection 
   Dim sProgressTowardsGoals As String
   Dim PH As Collection
   Dim sHealth_Conditions As String
   Dim GoalsProgress As New String[]
   Dim sGoalsProgress As String
   Dim Health_Conditions As New String[]
   Dim x As Integer
   Dim HC As String
   Dim sPlanGoals As String                 'the goals of the plan
   
   sHtml = " <P><B>Team Care Arrangements "
   If rbTCA.value = True Then sHtml &= " Item 723"
   If rbTCAReview.Value = True Then sHtml &= " Review Item 732"
   If bFinalClaim Then 
      sHtml &= " (Claimed today)"
   Else
      sHtml &= " (Preparation work done today)"
      Return 
   Endif
   shtml &= "</B><P>The team care members are:</P>"
   sPlanGoals = "<UL>"
   sGoalsProgress = "<UL>"
   For Each TCM In TCA!team_care_members 
      sHtml &= "- " & modStrings.Capitalise_Words_In_String(TCM!wholename & " (" & TCM!occupation & ")") & "<BR>"
      For Each PH In TCM!providers_problems
         If Not InStr(Lower(sHealth_Conditions), Lower(Trim(PH!description))) Then
            Health_Conditions.Add(PH!description, Health_Conditions.count)
            sHealth_Conditions &= PH!description & " " 
            sPlanGoals &= "<LI>" & modUtil.Ucase_Word_First_Letter(PH!aim_of_plan)
         Endif
      Next
      sGoalsProgress &= "<LI>" & modUtil.Ucase_Word_First_Letter(TCM!progress_towards_goals) 
      GoalsProgress.Add(TCM!progress_towards_goals, GoalsProgress.count)
   Next
   sPlanGoals &= "</UL>"
   sGoalsProgress &= "</UL>"
   sHtml &= "<BR>"
   If bFinalClaim Then
      If rbTCAReview.value = True Then                                                    'claims for a review
         sHealth_Conditions = "The health conditions being cared for under this team care arrangement are "  
         Select Case Health_Conditions.Count
            Case 1
               sHealth_Conditions = "The health condition being cared for under this team care arrangement is " & Health_Conditions[0] & ". "
            Case 2
               sHealth_Conditions &= Health_Conditions[0] & " and " & Health_Conditions[1]
            Case Else
               For Each HC In Health_Conditions
                  If x = Health_Conditions.count - 1 Then   
                     sHealth_Conditions &= " and " & HC & ". "
                  Else
                     sHealth_Conditions &= HC & "," 
                  End If   
                  Inc x
               Next
         End Select
         shtml &= "<P><B>Progress towards goals</B></P>"
         Select Case GoalsProgress.Count
            Case 1
               sProgressTowardsGoals = "The goal of this team care arrangement are:" & sPlanGoals
               sProgressTowardsGoals &= "The progress towards achieving this goal has been: " & GoalsProgress[0] 
            Case Else
               sProgressTowardsGoals = "The goals of this team care arrangement are:" & sPlanGoals
               sProgressTowardsGoals &= "The progress towards achieving these goals has been: " & sGoalsProgress
         End Select
         shtml &= sHealth_Conditions & ". " & sProgressTowardsGoals & "<BR>"
         sHtml &= "A document has been prepared which is a review of the previous team care arrangements and describes:<BR>"
         shtml &= "<UL>"
         shtml &= "<LI>The treatment and service goals for the patient which have been modified where appropriate"
         shtml &= "<LI>The treatment and services including any changes from the previous plan that the collaborating providers will provide to the patient"
         shtml &= "<LI>Actions to be taken by the patient as a result of this review"
         shtml &= "</UL>"
         shtml &= "<P> This will be reviewed on " & txtTCAReviewDate.Text & "</P>"
         shtml &= "<UL>"
         shtml &= "<LI>The patient has agreed to the review and the update of the Team Care Arrangement"
         shtml &= "<LI>The steps involved in the development of the arrangements have been explained to the patient"
         shtml &= "<LI>The patient has been made aware of who the collaborating providers are and what they will do"
         shtml &= "<LI>Copies of the <I>relevant parts </I>of the updated document have been given to providers as part of continued two way communication"
         shtml &= "<LI>Patient has been given a copy of the document"
         shtml &= "<LI>Please look under the care plans tab to view documents related to the claim on this date"
         shtml &= "</UL>"
      Else                                                                   'this is a review of an existing TCA
         sHtml &= "A document has been prepared that describes:<BR>"
         shtml &= "<UL>"
         shtml &= "<LI>Treatment and service goals for the patient"
         shtml &= "<LI>Treatment and services the collaborating providers will provide to the patient"
         shtml &= "<LI>Actions to be taken by the patient"
         shtml &= "</UL>"
         shtml &= "<P> These will be reviewed on " & txtTCAReviewDate.Text & "</P>"
         shtml &= "<UL>"
         shtml &= "<LI>The patient has agreed to the development of the Team Care Arrangement"
         shtml &= "<LI>The steps involved in the development of the arrangements have been explained to the patient"
         shtml &= "<LI>The patient has been made aware of who the collaborating providers are and what they will do"
         shtml &= "<LI>Copies of the <I>relevant parts </I>of the document have been given to providers and two way communication established"
         shtml &= "<LI>Patient has been given a copy of the document"
         shtml &= "<LI>Please look under the care plans tab to view documents related to the claim on this date"
         shtml &= "</UL>"
      End If   
   End If   
   Return sHtml
   
End

Public Function TCA_Create_LaTex(provider As Collection) As String
   '----------------------------------------------------------------------------------------
   'Construsts the LaTex for the team care arrangement for one provider
   'If the provider is involved in >1  health issue they are included on same page
   'fixme alot of this code is duplicated in modProgressNotes.Health_Summary_Construct_Latex
   '----------------------------------------------------------------------------------------
   
   Dim Templ As New CTemplate("team-care-arrangements-multi-cols", "tex")
   Dim sstring As String
   Dim x As Integer
   Dim PH As Collection    'individual past history item
   Dim sNeeds As String
   Dim sGoals As String
   Dim sPatientRole As String
   Dim sGPRole As String
   Dim sProviderRole As String
   Dim sRelevantHistory As String
   Dim sHealthIssues As String  
   Dim reordered_family_history As Collection 
   
   Inc Application.Busy
   '-------------------------------------------------------------------
   'Put in headings, doctors name (if not being prepared by the nuser
   'patient and provider related details
   '-------------------------------------------------------------------
   
   sString = "TEAM CARE ARRANGEMENTS \\\\"
   If rbTCA.value = True Then
      sstring &= "NEW Item 723"
   Else
      sstring &= "REVIEW Item 732"
   End If
   templ.Subst("introductory-text", introductory_text())
   sstring &= "\\\\" 
   sString &= "\\\\USUAL GP: " 
   If modDBConnect.currentUser!fk_role = const.StaffRole_Doctor Or modDBConnect.currentUser!fk_role = const.StaffRole_Practice_Principal Then
      sstring &= modDBConnect.currentUser!title & " " & modDBConnect.currentUser!wholename & "\\\\"
   Else
      sString &= "<insert on completion>\\\\"
   End If   
   sString &= "Date claimed:" & Format(currentconsult.GetConsultDate(), "dd/mm/yyyy") & "\\\\"
   sString &= "Due for review on:" & txtTCAReviewDate.text & "\\\\"
   templ.Subst_common(currentconsult)
   templ.Subst("heading", sstring)
   TCA_Summary_HTML = Replace(sstring, "\\\\", "<BR>")
   templ.Subst("fname-provider", modStrings.Capitalise_Words_In_String(provider!firstname))
   templ.Subst("provider", Provider_Create_Name_Address_Latex_String(provider))
   templ.Subst("wholenametcmember", modStrings.Capitalise_Words_In_String(provider!wholename))
   If Not IsNull(provider!special_note) Then
      sstring = "\\\\" & modUtil.Ucase_Word_First_Letter(provider!special_note) & "\\\\"
      templ.Subst("team-member-extra-notes", sstring)
   Else
      templ.Subst("team-member-extra-notes", "\\relax")
   Endif
   If Not IsNull(provider!progress_towards_goals) Then
      sstring = "\\textbf{Progress Against Goals}\\\\" & modUtil.Ucase_Word_First_Letter(provider!progress_towards_goals) & "\\\\"
      templ.Subst("tca-progress", sstring)
   Else
      templ.Subst("tca-progress", "\\relax")
   Endif
   
   modProgressNotes.Medications_Make_Latex_Table(templ, currentConsult)   'medications generic/strength/instruction/why prescribed
   modProgressNotes.Allergies_Make_Latex(templ, currentconsult)           'unknown, nil or atc details
   modProgressNotes.Habits_Make_Latex_Rows(templ, currentconsult)         'construct alcohol & nicotine rows
   modProgressNotes.Measurements_Make_Latex_Rows(templ, currentConsult)   'basic measurements, egfr, hba1c
   templ.Table("habits-measurements")                                     'put these in the same table
   '---------------------------------------------------------------------------------------------------------
   'the provider!family_history collection is keyed according to the order in form_inclusion.lblfamilyhistory
   'As the order is random, it could be mother condition 1, father condition 1, mother condition 2 etc
   'but we want the family history to be grouped
   'we can't permanantly re-order the provider!family history collection otherwise if the user goes to
   'delete someone in the form_inclusion, the incorrect member of the underlying collection will be removed
   '---------------------------------------------------------------------------------------------------------
   reordered_family_history = Family_History_ReOrder_collection(provider!family_history) 'unmix random family members
   If reordered_family_history.count Then    
      templ.Subst("family-history", modProgressNotes.Family_History_Create_Latex(templ, reordered_family_history)) 
   Else
      templ.Subst("family-history", "Nil relevant to this TCA")
      ' Templ.subst("Family History", "")
   End If   
   '----------------------------------------------------------------------------------------------
   'For each health issue the provider is involved in, construct the text for the body of the plan
   '----------------------------------------------------------------------------------------------
   x = 0
   For Each PH In provider!providers_problems
      sHealthIssues &= PH!description & ", "
      sRelevantHistory &= PH!condition_summary & ", " 
      If x = 0 Then 
         If Not IsNull(PH!health_need) Then  
            sNeeds &= modUtil.Ucase_Word_First_Letter(PH!health_need) & ", "
         End If   
      Else
         If Not IsNull(PH!health_need) Then  
            sNeeds &= PH!health_need & ", "
         End If  
      End If   
      If x = 0 Then 
         If Not IsNull(PH!aim_of_plan) Then  
            sGoals &= modUtil.Ucase_Word_First_Letter(PH!aim_of_plan) & ", "
         End If   
      Else
         If Not IsNull(PH!aim_of_plan) Then    
            sGoals &= PH!aim_of_plan & ", "
         End If   
      End If   
      If x = 0 Then 
         If IsNull(PH!plan_contribution_patient) Then
            sPatientRole = "<missing contribution by patient>"
         Else
            sPatientRole &= currentConsult!patient!firstname & " will " 
         End If
      End If   
      If Not IsNull(PH!plan_contribution_patient) Then
         sPatientRole &= PH!plan_contribution_patient
         If Right(PH!plan_contribution_patient) <> "." Then sPatientRole &= ". "
      Endif
      If x = 0 Then sGPRole &= "The GP will "
      sGPRole &= PH!plan_contribution_gp & ". "
      If x = 0 Then
         If Not IsNull(PH!contribution_to_plan) Then
            sProviderRole &= modStrings.Capitalise_Words_In_String(provider!wholename) & " will "
            sProviderRole &= modUtilGui.lcase_Word_First_Letter(PH!contribution_to_plan)
            If Right(PH!contribution_to_plan) <> "." Then sProviderRole &= ". "
         End If 
      Else
         If Not IsNull(PH!contribution_to_plan) Then
            sProviderRole &= modUtil.Ucase_Word_First_Letter(PH!contribution_to_plan) & ". "
         End If 
      End If   
      Inc x
   Next
   templ.Subst("relevant-history", modUtilGUI.Strip_Last_Character(sRelevantHistory))
   templ.Subst("health-issue", modUtilGUI.Strip_Last_Character(sHealthIssues))
   templ.Subst("needs", modUtilGUI.Strip_Last_Character(sNeeds))
   templ.Subst("goals", modUtilGUI.Strip_Last_Character(sGoals))
   
   If modDBConnect.currentUser!fk_role = const.StaffRole_Doctor Or modDBConnect.currentUser!fk_role = const.StaffRole_Practice_Principal Then
      templ.Row("\\begin{center}\\textbf{" & currentConsult!patient!wholename & "}\\\\(Patient)\\end{center}", "\\begin{center}\\textbf{" & modDBConnect.currentUser!title & " " & modDBConnect.currentUser!wholename & "}\\\\(GP)\\end{center}}", "\\begin{center}\\textbf{" & provider!wholename & "}\\\\(" & provider!occupation & ")\\end{center}}")
      templ.Subst("claimed-by-name", modDBConnect.currentUser!title & " " & modDBConnect.currentUser!wholename)
   Else
      templ.Row("\\begin{center}\\textbf{" & currentConsult!patient!wholename & "}\\\\(Patient)\\end{center}", "\\begin{center}\\textbf{<insert on completion>}\\\\(GP)\\end{center}}", "\\begin{center}\\textbf{" & provider!wholename & "}\\\\(" & provider!occupation & ")\\end{center}}")
      templ.Subst("claimed-by-name", "<insert on completion>")
   End If   
   templ.Row(sPatientRole, sGPRole, sProviderRole)
   templ.Table("treatment-arrangements")
   modProgressNotes.Selected_Health_Issues_Make_Latex(templ, provider!additional_health_issues)  'Now add the text of any additional problems the user wants to include in the TCA
   
   If chkTCACopyToPatient.value = True Then
      templ.Checkbox("copy-offered-to-patient", True)
   Else
      templ.Checkbox("copy-offered-to-patient", False)
   Endif
   If rbTCAPatientHasCarerYes.value = True Then
      templ.Checkbox("patient-has-carer-checkbox", True)
   Else
      templ.Checkbox("patient-has-carer-checkbox", False)
   End If 
   If chkTCAPatientAllowsCarerCopy.value = True Then
      templ.Checkbox("copy-given-to-carer-checkbox", True)
   Else
      templ.Checkbox("copy-given-to-carer-checkbox", False)
   End If   
   If provider!include_gp_management_plan Then
      templ.Checkbox("include-gp-management-plan", True)
   Else
      templ.Checkbox("include-gp-management-plan", False)
   End If 
   templ.Row("", "Your Signature") 'fixme stupid way to right justify
   Templ.Row("", "")
   Templ.Row("", "")
   Templ.Row("", "Date")
   templ.Table("team-care-member-signature")
   '-------------------------------------------------------------------
   'Make list of team care members and other providers involved in care
   '------------------------------------------------------------------- 
   Providers_Make_Latex_Table(templ)
   '-----------------------------------------------------------------
   'when plan will be reviewed and create the pdf for viewing
   '-----------------------------------------------------------------
   templ.Subst("review-date", txtTCAReviewDate.Text)
   Dec Application.Busy
   Print templ.GetData()
   
   Return Templ.GetData()
Catch
   Dec Application.Busy 
   
End

Public Sub Print_Content()
   
   Dim sMsg As String
   
   Select Case TabStrip1.Index
      Case cTab_GPMP
         '-----------------------------------------------
         'don't allow printing of out-of-date information
         '-----------------------------------------------
         If Not modUtil.IsSameDay(GPMP!date_claimed, currentconsult.GetConsultDate()) Then  
            If GPMP!latex <> modProgressNotes.Health_Summary_Construct_LaTex(currentconsult, GPMP, team_care_members).GetData() Then
               Message.Title = "WARNING - OUTDATED INFORMATION"
               sMsg = "As indicated already, this GP Management Plan is out of date and you should not print it.\n\n"
               "Please re-read the explanatory text  on the GP Management Plans tab"
               Message.Warning(sMsg, "Ok")
               Return
            End If   
         End If  
      Case cTab_TCA
         '---------------------------------------------------------------
         'don't allow printing of team care arrangement if not on same day
         '----------------------------------------------------------------
         If Not modUtil.IsSameDay(TCA!date_claimed, currentconsult.GetConsultDate()) Then  
            Message.Title = "Printing completed TCA Documents"
            sMsg = "All the documents in this Team Care Arrangement can be re-printed from the Plans list of documents.\n\n"
            "You can select this list from the Tabbed Lists on the upper right hand side of the screen - last tab on the right labelled 'Plans'!"
            Message.Warning(sMsg, "Ok")
            Return
         Endif
   End Select
   
   form_pdf.Print_Content
   
End

Public Sub Edit()
   '----------------------------------------------------
   'Allow editing of the GPMP claim if it was done today
   '----------------------------------------------------
   
   Select Case TabStrip1.Index
      Case cTab_GPMP
         If modUtil.IsSameDay(currentconsult.GetConsultDate(), GPMP!date_claimed) Then
            VBox_EditArea_GPMP.Enabled = True  
            chkGPMPExplainedStepsInvolved.SetFocus
            bEditing = True   
            EditArea_Notify_DataChange(True)
         Else
            Message.Title = "GP Management Plan Claims"
            Message.Info("Sorry, you may not edit or change these details as the plan was not created today.")
         Endif
         
      Case cTab_TCA
         If Not IsNull(TCA) Then
            If modUtil.IsSameDay(currentconsult.GetConsultDate(), TCA!date_claimed) Then
            Else
               Message.Title = "Team Care Arrangements"
               Message.Info("Sorry, you may not edit or change these details as the team care arrangement was not created today.")
            Endif
         End If 
   End Select
   
End

Public Sub New_Entry() 
   '----------------------------------------------------------------------
   'Start a new GPMP or TCA
   '---------------------------------------------------------------------
   'Called from FClinicalToolbar, called this because can't use New() and
   'all across easyp this is the wording I've chosen
   'see FClinicalToolbar.MainToolbar_Click for details
   '---------------------------------------------------------------------- 
   
   Select Case TabStrip1.Index
      Case cTab_GPMP
         GPMP_New 
      Case cTab_TCA   
         TCA_Setup_Data_Entry
   End Select
   
End

Public Function Help_Regulatory_Notes() As String
   
   Dim sstring As String
   
   sstring = "<P><B>Regulatory requirements</B></P>"
   sstring &= "<P>Items 721, 723, 729, 731 and 732 provide rebates for gps to manage chronic or terminal medical conditions by preparing, " 
   sstring &= "coordinating, reviewing or contributing to chronic disease management(cdm)plans.</P>"
   sstring &= "<P>They apply for a patient who suffers from at least one medical condition that has been present( or is likely to be present) for at least six months "
   sstring &= "or Is Terminal."
   
End

Public Function GPMP_Preamble() As String
   
   Return ""
   "<P>Once you save this plan - <B><I>you can modify this copy any time on the same date as you have claimed Item 721. </I></B> After that time,  you may view this copy of the plan for medicare audit purposes via the patient's incoming correspondance list. The copy is not intended for distribution at a future date.</P>"
   "<P>At all other times, to print out or distribute an up-to-date copy of the GPMP  click on the 'Health Summary' button on the toolbar. Remember that the patient's medical record is a 'living document' which constantly changes. Every time you update the patient's Past History the plan will be automatically updated for you.</P>"
   ""
   "<P>To be a compliant plan, the patient must have at least one medical condition that:"
   "<UL>"
   "<LI>  has been (or is likely to be) present for at least six months or"
   "<LI>  is terminal."
   "</UL>"
   "</P>"
   "<P>The plan details should contain a summary of the history of the condition, the goals or aims of the plan, together with the actions and responsibilities of the plan members - the GP, the patient, and the one or more health providers with whom the patient will access the additional advice and services needed for their care.<P>"
   "<P>The plan shown in the pdf has been generated from all the information in the patient's Past History section of EasyGP, and all data entry for this plan is done there. </P>"
   "<P>If you need to update the plan now, you must return to that section, make modifications to a particular health issue, and then save your changes. After this the modifications will automatically appear in the pdf.<P>"
   "<B><UL>BEFORE SAVING THE PLAN PLEASE READ IT CAREFULLY AND ENSURE THE SENTENCES MAKE SENSE WHEN READ - IF NOT GO BACK TO THE HEALTH ISSUE AND MAKE ANY NECESSARY CORRECTIONS."
   "           IF YOU FIND IT A BIT HARD TO READ ON THIS SCREEN, CLICK ON THE 'Open in External Viewer' AND READ YOUR PLAN OUTSIDE OF EASYGP.</UL> "
   " <UL>Remember that many other health providers will see your plan, and the opinions your colleagues have of you and your practice will be a reflection of its quality and accuracy!!!!</UL> </B>"
   "<P>If the patient has a carer - the patient must give permission to allow the carer to be involved in the preparation of the plan and/or get a copy of the plan.</P>" 
   
End

Public Function Decision_Support_Text() As String ' (sMode As String) As String
   
   Dim sText As String
   Dim additional_text As String
   
   sText = ""
   "<P><B>Important</B><BR>"
   "<P>GPMPs And TCA are not designed simply as "
   "mechanisms to provide Medicare rebates for allied health "
   "services. They are tools to coordinate the care of people with "
   "chronic conditions and help to reduce the need for ad hoc "
   "consultations.</P>"
   "<P><B>Who Can Claim</B><BR>"
   "GPMP and TCAs should be undertaken by the patient’s "
   "usual GP. The patient’s usual GP is considered to be the GP, "
   "or a GP working in the medical practice, who has provided "
   "the majority of care to the patient over the previous 12 "
   "months and/or will be providing the majority of GP Services "
   "to the patient over the next 12 months.</P>"
   "<P><B>Claiming frequency</B><BR>"
   "The recommended frequency of GPMP or TCAs is once "
   "every two years, with regular reviews. "
   "A rebate will not be paid within twelve months of a previous claim for item 721, "
   "or within three months of a claim for item 732 (for a review of a GPMP), "
   "except where there are exceptional circumstances that require the preparation of a new GPMP.</P>" ""
   
   Select Case TabStrip1.Index
      Case cTab_GPMP
         additional_text = ""
         "<B>These conditions are not eligable for GPMP</B>"
         "<UL>"
         "<LI>alcohol or other substance abuse "
         "<LI>smoking obesity unspecified chronic pain"
         "<LI>hypertension, hypercholesterolemia, or syndrome X"
         "<LI>impaired fasting gycaemia or impaired glucose tolerance"
         "</UL>"
         "<P><B>GPMP (Item 721) Requirements</B><BR>"
         "<UL>"
         "<LI>Explain to your patient the steps involved in preparing "
         "the plan and record their agreement to proceed.<BR>"
         "<LI>Assess to identify and/or confirm the patient’s health "
         "care needs, health problems and relevant conditions.<BR>"
         "<LI>Agree management goals and identify actions to be "
         "taken with your patient.<BR>"
         "<LI>Identify treatment and services for your patient and "
         "make any necessary arrangements.<BR>"
         "<LI>The GPMP must be a comprehensive written plan "
         "describing the above.<BR>"
         "<LI>Offer a copy of the plan to your patient and add a copy "
         "to the patient’s medical record."
         "</UL></P>"
      Case cTab_TCA  
         additional_text = ""
         "<P><B>TCA (Item 723) Requirements</B><BR>"
         "When coordinating the development of Team Care Arrangements (TCAs), the medical practitioner must:<BR>"
         "(a)   consult with at least two collaborating providers, each of whom will provide a different kind of treatment or service to the patient,"
         " and one of whom may be another medical practitioner, when making arrangements for the multidisciplinary care of the patient; and<BR>"
         "(b)   prepare a document that describes:<BR>"
         "<UL>"
         "<LI>  i. treatment and service goals for the patient;<BR>"
         "<LI> ii. treatment and services that collaborating providers will provide to the patient; and<BR>"
         "<LI>iii. actions to be taken by the patient;<BR>"
         "<LI>iv. arrangements to review (i), (ii) and (iii) by a date specified in the document; and<BR>"
         "</UL>"
         "(c)   explain the steps involved in the development of the arrangements to the patient and the patient's carer "
         "(if any, and if the practitioner considers it appropriate and the patient agrees);<BR>"
         "(d)   discuss with the patient the collaborating providers who will contribute to the development of the TCAs and "
         "provide treatment and services to the patient under those arrangements; and<BR>"
         "(e)   record the patient's agreement to the development of TCAs;<BR>"
         "(f)    give copies of <B><I><U>the relevant parts of the document</B></I></U> to the collaborating providers;<BR>"
         "(g)   offer a <B><I><U>copy of the document</B></I></U> to the patient and the patient's carer (if any, and if the practitioner " 
         "considers it appropriate and the patient agrees); and<BR>"
         "(h)   add a copy of the document to the patient's medical records.<BR>"
      Case cTab_HealthIssues
         sText = "<P><B>The Health Issues or 'Past History' Section</B></P><P>This is the core of your medical record</P>"
         "<P>The term 'health issue' as used within the context of EasyGP constitutes any issue which when relevant to the patient, affects their overall management.</P>  "
         "<P>Apart from helping you organise your medical record, health issues will later appear on any management plans or team care arrangement documents "
         "which leave your surgery, and as such, the quality of information you record will be a reflection on you and the quality of your general practice.</P> "
         "<P>When adding a health issue aka traditionally as a problem - you should always keep in the back of your mind that the purpose is to ensure "
         "good patient care, and that it should contain enough historical and management information for any other doctor to take over the care of the patient "
         "should you not be present.</P>"
         "<B>Examples Of health issues could be:</B> "
         "<UL>"
         "<LI><B>Traditional medical diagnoses</B> - for example hypertension, diabetes, ischaemic heart disease, rheumatoid arthritis, depression"
         "<LI><B>Social diagnoses</B> - for example poor coping skills, socially disadvantaged"
         "<LI><B>Undefined problems</B> - for example Possible early memory loss or Increasing Infirmity"
         "<LI><B>A Patient Concerns</B> eg Worried about aging parents, i.e this may not be a medical issues but of great concern to the patient."
         "</UL>"
         "<P>To enter a new problem, click on the 'New' button located on the main clinical toolbar</P>"
         "<P>To save your work clicking on the Save button (or hit the F12 key) and EasyGP will save the new health issue to the database</P>"
         "<P>To edit an existing issue highlight the health issue in only of the lists at the bottom of the screen and right mouse click to bring up "
         "the menu, and select 'Edit' from the menu."
         "<P>To Delete an existing issue highlight the health issue in only of the lists at the bottom of the screen and right mouse click to bring up "
         "the menu, and select 'Delete' from the menu."
         
   End Select
   Return sText & additional_text
   
End

Public Sub form_Close()
   'note also closing this will trigger the close event in any embedded FTeamCareForms fixme
   'to see this, uncomment the message.info in those forms _Close event and run the code
   
   ' Settings_Save 
   
End

Public Sub Health_Summary_Reload()
   '---------------------------------------------
   'Display the health summary in form of a GPMP
   '---------------------------------------------
   
   Dim templ As CTemplate
   Dim GPMPTCA As New Collection    
   
   Select Case TabStrip1.Index
      Case cTab_HealthIssues
         templ = modProgressNotes.Health_Summary_Construct_LaTex(currentconsult)
         form_pdf.Load_pdf(modPrinting.Latex_To_PDF(templ.GetData()),, False)
      Case cTab_GPMP
         If IsNull(GPMP) Then   
            lblClaimDetails.text = "Current Health Summary"
            GPMP_Latex = modProgressNotes.Health_Summary_Construct_LaTex(currentconsult, GPMPTCA, Providers_Selected_For_TCA).GetData() 'true = bGPMP in that routine now true
         Else
            If Not IsNull(GPMP!date_claimed) Then
               lblClaimDetails.text = "Existing GPMP - Claimed on " & Format(GPMP!date_claimed)
            Else
               lblClaimDetails.text = "New GPMP"
            End If   
            GPMP_Latex = modProgressNotes.Health_Summary_Construct_LaTex(currentconsult, GPMP, Providers_Selected_For_TCA).GetData() 'true = bGPMP in that routine now true
         Endif
         GPMP_Display_Latex(GPMP_Latex)
   End Select
   
End

Public Function GPMP_ProgressNotes_Create(bFinalClaim As Boolean) As String
   '------------------------------------------------------
   'Create some progress notes for preparation of the GPMP
   '------------------------------------------------------   
   
   Dim sHtml As String
   Dim Provider As Collection 
   
   sHtml = " <P><B>GP Management Plan "
   If rbGPMP.value = True
      sHtml &= " Item 721"
   Else
      sHtml &= " Review Item 732"
   Endif
   If bFinalClaim Then 
      sHtml &= " (Claimed today)"
   Else
      sHtml &= " (Preparation work done today)"
   Endif
   
   shtml &= "</B><P>The providers of care are:</P>"
   If Not IsNull(usual_doctor) Then
      sHtml &= "- " & modStrings.Capitalise_Words_In_String(usual_doctor!title & " " & usual_doctor!wholename) & " (Usual Doctor)" 
   Else
      sHtml &= "- Dr ? (Usual doctor) - [can not be claimed yet]"
   Endif
   
   If Providers.count Then 
      shtml &= "<BR>"
      If Providers.count Then  
         For Each Provider In Providers
            sHtml &= "- " & modStrings.Capitalise_Words_In_String(Provider!wholename & " (" & modStrings.Capitalise_Words_In_String(Provider!occupation) & ")") & "<BR>"
         Next 
      Else
         sHtml &= "not entered at this point<BR>"
      End If
      shtml &= "<BR>"   
   End If   
   If bFinalClaim Then
      sHtml &= "A comprehensive  written plan has been prepared that identifies:<BR>"
      shtml &= "<UL>"
      shtml &= "<LI>Relevant health problems, health care needs and other relevant conditions"
      shtml &= "<LI>Management goals and actions to be undertaken by parties in the plan for the care of these problems"
      shtml &= "<LI>Treatment, services and arrangements which are needed"
      shtml &= "</UL>"
      shtml &= "<P> These will be reviewed on " & txtGPMPReviewDate.Text & "</P>"
      shtml &= "<UL>"
      shtml &= "<LI>The patient has agreed to the development of the GP Management Plan"
      shtml &= "<LI>The steps involved in the development of the plan have been explained to the patient" ' shtml &= "<LI>The patient has been made aware of who the collaborating providers are and what they will do"
      shtml &= "<LI>Patient has been given a copy of the document"
      shtml &= "<LI>Please look under the care plans tab to view documents related to the claim on this date"
      shtml &= "<UL>"
   Endif
   Return sHtml
   
End

Public Sub GPMP_Display_Latex(latex As String)
   
   Log.DebugMsg("Latex:" & latex)
   If TabStrip1.index = cTab_GPMP Then form_pdf.Load_pdf(modPrinting.Latex_To_PDF(LaTeX),, False)
   
End

Public Sub Providers_Refresh()
   '-------------------------------------------------------------
   'Load the combo with potential team care members aka providers
   'Names will appear on the list if they have been added in the
   'past history section for a particular health issue
   '-------------------------------------------------------------
   
   Dim PH As Collection
   Dim POC As Collection 
   Dim Msg As String
   
   cmbProviders.Clear 
   PRoviders = New Collection                        'of unique providers
   currentconsult.Refresh("past_history")
   For Each PH In currentconsult!past_history
      If Not IsNull(PH!providersofcare) Then
         For Each POC In PH!providersofcare
            If Not InStr(msg, POC!wholename) Then     'keep running talley, could have duplicate names
               msg &= POC!wholename & " " 
               Providers.Add(POC, cmbProviders.count)
               cmbProviders.Add(POC!wholename)
            End If   
         Next
      End If   
   Next
   cmbProviders.index = -1
   Print providers
   
End

Public Function introductory_text() As String
   'Introductory text will be different depending on whether this is a new TCA or a review   
   
   Dim sString As String
   
   If rbTCA.value = True Then 'it is a new one item 723
      sString = "Thank you for seeing !firstname age !age. I have developed Team Care Arrangements for !firstname "
      "and !he-she has given consent to include you as a member of the team. "
      "Below is a brief outline of my assessment and plan for on-going care including an outline of your role."
   Else
      sString = "Thank you for seeing !firstname age !age. I have reviewed the existing Team Care Arrangements for !firstname "
      "and !he-she has given consent to include you as an member of the team. "
      "Below is a brief outline of my assessment and plan for on-going care subsequent to the orginal team care arrangement, including an outline of your role "
      "and the progress we have made as we work towards the management goals which are listed below."
      
   End If  
   Return sString
   
End

Public Function Providers_Warn_If_None_Exist() As Boolean
   '-----------------------------------------------------------------
   'Returns True if user wants to cancel because of missing providers
   '-----------------------------------------------------------------
   
   Dim sMsg As String
   Dim sButtonText As String
   Dim sCommonText As String
   
   sCommonText = ""
   "<P>Perhaps you should review  to the patient's history on the Manage Health Issues tab in this section of EasyGP and update your data.</P>"
   "<P>You should to go through each active health issue and add the names of the the providers "
   "who are involved in the care of the patient. For example if the patient has heart disease, this could be the "
   "cardiologist who they see regularly.</P>"
   "<P>It would also be appropriate to record how you expect them to be involved in the patient's care, and this "
   "information will be necessary if you are intending to include the provider in a Team Care Arrangement document.</P>" 
   
   If cmbProviders.count = 0 Then
      Message.title = "Team Care Providers"
      sMsg = "<P><B>There are no providers linked to any of your patient's health issues.</B></P>"
      Select Case TabStrip1.Index
         Case cTab_GPMP
            sButtonText = "GPMP"
            sMsg &= "<P>If you really need to prepare a GP Management Plan this would be unsual.</P>"
            sMsg &= sCommonText & "<P>Having said all this - if is possible to formulate a GPMP without external providers, so - your choice.</P>"
         Case cTab_TCA
            sButtonText = "Team Care Arrangement"
            sMsg &= "<P>You cannot prepare a Team Care Arrangement without having providers linked to existing health issues "
            sMsg &= "otherwise the drop down combo box on this form, from which you select your team members will be empty "
            sMsg &= "i.e there will be no-one to choose to put on your team! </P>"
            sMsg &= sCommonText
            sMsg &= "<P>Whilst updating an health issue, think particularly about, and enter in the appropriate field, the needs you are trying to address by  "
            sMsg &= " involving other providers in this patient's care.</P>"
            sMsg &= "Having said all this, you can proceed and swap back to the 'Manage Health Issues' tab at any time and any changes "
            sMsg &= "you make there will automatically appear on this form, including an updated listing of providers in the drop down combo."
      End Select
      If Message.Warning(sMsg, "Proceed and prepare the " & sButtonText, "Cancel") = 2 Then Return 
      Return True 
   Else
      Return True
   Endif
   
End

Public Sub Providers_Update_Involvement()
   '-------------------------------------------------------------------------------
   'called from FPastHistory when data is updated
   '-------------------------------------------------------------------------------
   
   Dim PH As Collection
   Dim prov As Collection
   
   For Each PH In currentConsult!past_history
      If Not IsNull(ph!providersofcare) Then  
         For Each Prov In PH!providersofcare
            If prov!fk_person = Selected_provider!fk_person And prov!fk_employee = Selected_provider!fk_employee And Prov!fk_branch = Selected_provider!fk_branch Then    
               ' If .lblProblems.text <> "" Then
               '     .lblProblems.text &= ", "
               '   Endif
               '   .lblProblems.text &= LCase(PH!description)
               ' Selected_Provider_Problem_Involved = modUtil.Copy_Collection(PH)
               ' Selected_Provider_Problem_Involved!contribution_to_plan = Prov!contribution_to_plan 
               ' Providers_Problems.Add(Selected_Provider_Problem_Involved, Providers_Problems.count)
            Endif
         Next
      End If   
   Next
   
End

Public Sub cmbProviders_Click()
   '-----------------------------------------------------------------------------------------
   'User has clicked on the list of persons involved in their care
   'they can add two or more to the TCA
   'This sub creates a collection of all past history items in which the provider is involved
   'There is a bit of a fudge here in that as one or more providers may be involved in the
   'care of this problem, but in the TCA we want to 'sift out' just this provider
   'the PH item is copied into a new collection  Selected_Provider_Problem_Involved to which
   'is added the contribution_to_plan field. This collection is the one used in TCA_Get
   'to populate the LaTex3
   '------------------------------------------------------------------------------------------   
   
   If bexit Then Return
   If Not TCA!team_care_members.Exist(providers[cmbProviders.Index]!fk_provider_of_care) Then 
      Inc Application.Busy
      Team_Member_New                                  'add new instance of the FTeamCareMmber to workspace
      Dec Application.Busy
      TCA_Display_Latex(providers[cmbProviders.index])   'display the latex for the new team member
      cmbProviders.index = -1                            'hide from display the combo text
      EditArea_Notify_DataChange(True)                   'update change flags
   End If   
Catch
   Application.Busy = 0 
   
End   

Public Sub Team_Member_New()
   '-------------------------------------------------------------------
   'Adds a new tab to the workspace with an instance of FTeamCareMember
   'Called either when user clicks on cmbProviders or
   'cmbProviders index is set by  Reload() when reloading old data
   'changeable within the 24hr period of creation
   '-------------------------------------------------------------------  
   
   Dim form_inclusions As FTeamCareMember
   Dim PH As Collection
   Dim Prov As Collection 
   Dim Selected_Provider_Problem_Involved As Collection
   
   bExit = True   
   Providers_Problems = New Collection                                     'those problems the provider is involved with
   With form_inclusions = New FTeamCareMember
      .Title = cmbProviders.Text
      .tag = Providers[cmbProviders.index]
      '-------------------------------------------------------------------------------
      'now check all the past history items, the provider cold be in one TCA!team_care_members or more
      'and list these so the user can see which problems the provider is involved with
      '-------------------------------------------------------------------------------
      For Each PH In currentConsult!past_history
         If Not IsNull(ph!providersofcare) Then  
            For Each Prov In PH!providersofcare
               If prov!fk_person = Providers[cmbProviders.index]!fk_person And prov!fk_employee = Providers[cmbProviders.index]!fk_employee And Prov!fk_branch = Providers[cmbProviders.index]!fk_branch Then    
                  If .lblProblems.text <> "" Then
                     .lblProblems.text &= ", "
                  Endif
                  .lblProblems.text &= LCase(PH!description)
                  Selected_Provider_Problem_Involved = modUtil.Copy_Collection(PH)
                  Selected_Provider_Problem_Involved!contribution_to_plan = Prov!contribution_to_plan 
                  Providers_Problems.Add(Selected_Provider_Problem_Involved, Providers_Problems.count)
               Endif
            Next
         End If   
      Next
      .Init(currentconsult, providers[cmbProviders.index]!wholename, Allied_Health_Types, VBox_EditArea_Outer_TCA) 'currentConsult!past_history is keyed by the pk_pasthistory
   End With
   'the providers collection could contain unwanted data
   Try Providers[cmbProviders.index]!fk_team_care_member = Null
   Try Providers[cmbProviders.index]!fk_document_tca = Null
   Providers[cmbProviders.index]!providers_problems = Providers_Problems
   Providers[cmbProviders.index]!family_history = New Collection     'may be populated in  form_inclusions
   Providers[cmbProviders.index]!team_care_form = form_inclusions
   Providers[cmbProviders.index]!num_epc_sessions = Null
   Providers[cmbProviders.index]!special_note = Null
   Providers[cmbProviders.index]!progress_towards_goals = Null
   Providers[cmbProviders.index]!fk_lu_allied_health_care_type = Null
   Providers[cmbProviders.index]!fk_document_tca = Null 'added 04dec15
   Providers[cmbProviders.index]!fk_document_allied_health_form = Null
   Providers[cmbProviders.index]!additional_health_issues = New Collection
   Providers[cmbProviders.index]!family_history = New Collection
   TCA!team_care_members.Add(providers[cmbProviders.index], providers[cmbProviders.index]!fk_provider_of_care)
   Wait 
   bexit = False  
   WorkspaceEditor.Add(form_inclusions) 
   
End

Public Sub Team_Member_Reload(tcm As Collection, Optional bPreventAccess As Boolean = False) As Collection
   '------------------------------------------------------------------------------------------------------------
   'Creates a new tab in the workspaceeditor for an existing TCM when the TCA is reloaded, called by TCA_Display
   'The TCM collection retrieved from the backend is skeletal, and missing most of the provider information
   'the TCM passed to this collection is augmented and sent back
   '-------------------------------------------------------------------  
   
   Dim form_inclusions As FTeamCareMember
   Dim PH As Collection
   Dim Prov As Collection 
   Dim Selected_Provider_Problem_Involved As Collection
   Dim keys As Variant[]
   Dim key As Variant
   
   bExit = True   
   Providers_Problems = New Collection                                     'those problems the provider is involved with
   
   With form_inclusions = New FTeamCareMember
      .VBox_EditArea.Enabled = Not bPreventAccess 
      .Title = cmbProviders.Text
      .tag = providers[cmbProviders.index]
      '-------------------------------------------------------------------------------
      'now check all the past history items, the provider cold be in one TCA!team_care_members or more
      'and list these so the user can see which problems the provider is involved with
      '-------------------------------------------------------------------------------
      For Each PH In currentConsult!past_history
         If Not IsNull(ph!providersofcare) Then  
            For Each Prov In PH!providersofcare
               If prov!fk_person = Providers[cmbProviders.index]!fk_person And prov!fk_employee = Providers[cmbProviders.index]!fk_employee And Prov!fk_branch = Providers[cmbProviders.index]!fk_branch Then    
                  If .lblProblems.text <> "" Then
                     .lblProblems.text &= ", "
                  Endif
                  .lblProblems.text &= LCase(PH!description)
                  Selected_Provider_Problem_Involved = modUtil.Copy_Collection(PH)
                  Selected_Provider_Problem_Involved!contribution_to_plan = Prov!contribution_to_plan 
                  Providers_Problems.Add(Selected_Provider_Problem_Involved, Providers_Problems.count)
               Endif
            Next
         End If   
      Next
      .Init(currentconsult, providers[cmbProviders.index]!wholename, Allied_Health_Types, VBox_EditArea_Outer_TCA) 'currentConsult!past_history is keyed by the pk_pasthistory
      If rbTCAReview.value = True Then .HBox_TCAReview_Progress.visible = False  
   End With
   Providers[cmbProviders.index]!providers_problems = Providers_Problems
   '--------------------------------------------------------
   'Now reload (if any) family history user wants to include
   '--------------------------------------------------------
   Providers[cmbProviders.index]!family_history = New Collection  
   If Not IsNull(TCM!family_history_keys) Then
      keys = Split(TCM!family_history_keys, "|")
      For Each key In keys
         If currentConsult!family_history.Exist(key) Then
            form_inclusions.lvFamilyHistory.Add(currentConsult!family_history[key]!pk_view, currentConsult!family_history[key]!condition)
            form_inclusions.Family_History_To_Add.Add(currentConsult!family_history[key], currentConsult!family_history[key]!pk_view)
         End If   
      Next
      Providers[cmbProviders.index]!family_history = form_inclusions.Family_History_To_Add
   Endif
   Providers[cmbProviders.index]!fk_team_care_member = TCM!fk_team_care_member
   '-----------------------------------------------------------
   'Now reload (if any) health issues the user wants to include
   '-----------------------------------------------------------
   Providers[cmbProviders.index]!additional_health_issues = New Collection
   If Not IsNull(TCM!health_issue_keys) Then
      keys = Split(TCM!health_issue_keys, "|")
      For Each key In keys
         If currentConsult!past_history.Exist(key) Then
            form_inclusions.lvHealthIssues.Add(currentConsult!past_history[key]!pk_pasthistory, currentConsult!past_history[key]!description)
            form_inclusions.Health_Issues_To_Add.Add(currentConsult!past_history[key], currentConsult!past_history[key]!pk_pasthistory)
         End If   
      Next
      Providers[cmbProviders.index]!additional_health_issues = form_inclusions.Health_Issues_To_Add
   Endif
   Providers[cmbProviders.index]!team_care_form = form_inclusions
   If Not IsNull(TCM!num_epc_sessions) Then
      Providers[cmbProviders.index]!num_epc_sessions = TCM!num_epc_sessions
      form_inclusions.txtNumberOfSessions.text = TCM!num_epc_sessions
   End If  
   If Not IsNull(TCM!special_note) Then
      Providers[cmbProviders.index]!special_note = TCM!special_note
      form_inclusions.txtSpecialNote.text = TCM!special_note
      form_inclusions.Copy_Additional_Notes = TCM!special_note                      'see FTeamCareMembers.HBox_SpecialNote_Leave()
   Endif
   If Not IsNull(TCM!progress_towards_goals) Then
      Providers[cmbProviders.index]!progress_towards_goals = TCM!progress_towards_goals
      form_inclusions.txtProgressTowardsGoals.text = TCM!progress_towards_goals
      form_inclusions.copy_TCA_Progress_Against_Goals = TCM!progress_towards_goals  'see FTeamCareMembers.Hbox_TCA_Progress_Against_Goals_leave()
   Endif
   If Not IsNull(TCM!fk_document_gp_management_plan) Then
      form_inclusions.chkIncludeGPMP.value = True   
      TCM!include_gp_management_plan = True
   Else
      form_inclusions.chkIncludeGPMP.value = False 
      TCM!include_gp_management_plan = False 
   Endif
   If Not IsNull(TCM!filename) Then
      Providers[cmbProviders.index]!filename = TCM!filename
   Else
      Providers[cmbProviders.index]!filename = Null
   End If   
   If Not IsNull(TCM!fk_document_tca) Then
      Providers[cmbProviders.index]!fk_document_tca = TCM!fk_document_tca
   Else
      Providers[cmbProviders.index]!fk_document_tca = Null
   End If   
   If Not IsNull(TCM!fk_document_allied_health_form) Then
      Providers[cmbProviders.index]!fk_document_allied_health_form = TCM!fk_document_allied_health_form
   Else
      Providers[cmbProviders.index]!fk_document_allied_health_form = Null
   End If   
   If Not IsNull(TCM!fk_lu_allied_health_care_type) Then
      Providers[cmbProviders.index]!fk_lu_allied_health_care_type = TCM!fk_lu_allied_health_care_type
      form_inclusions.cmbAlliedHealthTypes.index = form_inclusions.cmbAlliedHealthTypes.Find(TCM!allied_health_care_type)
   End If   
   TCM = Providers[cmbProviders.index]   'swap for the original skeletal collection pulled from the back-end
   Wait 
   bexit = False  
   WorkspaceEditor.Add(form_inclusions) 
   Return Providers[cmbProviders.index]
   
End

Public Sub Save()
   
   If TabStrip1.index <> 0 Then
      If Not modAdminDBI.Has_User_Seen_Tip("FGPMPTCA.ViewInExternalViewer") Then 
         With FUsageTip
            .Init("Checking your GPMP or TCA", "FGPMPTCA.ViewInExternalViewer", External_Viewer_Tip())
            If Not (.ShowModal()) Then Return 
         End With  
      End If 
   End If  
   Select Case TabStrip1.Index
      Case cTab_HealthIssues
         Form_Health_Issues.Save 
      Case cTab_GPMP
         GPMP_Save
      Case cTab_TCA
         TCA_Save 
   End Select
   
End

Public Function External_Viewer_Tip() As String
   
   Dim sMsg As String
   
   sMsg = "<P>Its a good idea to thoroughly inspect your GPMP or TCA for errors before saving or printing</P>"  
   "<P>You will be able to view much more of your document if you click on the button on top of the pdf shown here which is labelled 'Open in External Viewer'</P>"
   "<P>Most modern Linux systems have a default pdf viewer, if yours does not then we suggest you install Okular.</P>"
   Return sMsg
   
End

Public Sub TCA_Save()
   '------------------------------------------------------------------------------ 
   ' Saves any Team Care Arrangements. Data validation not enforced until claimed
   ' If nurse works on this gets different save message to the doctor
   ' The LaTex of the team care arrangement is saved in the backend
   ' The Latex of the EPC forms (allied health care forms) is saved in backend
   ' and the pdf of this form saved into the filesystem
   '------------------------------------------------------------------------------
   ' CREATE TABLE clin_history.team_care_arrangements
   ' (
   '   pk serial NOT NULL,
   '   fk_consult integer NOT NULL,
   '   date_claimed timestamp without time zone, -- if is null, then the team care arrangement is prepared but not claimed.
   '   explained_steps_involved boolean DEFAULT false,
   '   discussed_providers boolean DEFAULT false, -- If True then the GP discussed with the patient who the providers on the team are and their responsibilities
   '   patient_agrees boolean DEFAULT false, -- If True the the patient agree's to their team care arrangements
   '   patient_has_carer boolean DEFAULT false,
   '   copy_offered_to_patient boolean DEFAULT false,
   '   patient_permits_carer_to_have_copy boolean DEFAULT false,
   '   copy_offered_to_carer boolean DEFAULT false,
   '   copy_sent_to_providers boolean DEFAULT false,
   '   review_date date,
   '   fk_progressnote integer NOT NULL,
   '   item_number integer default null, -- if not null either 723 (new) or 732 (review)
   '   CONSTRAINT team_care_arrangements_pkey PRIMARY KEY (pk ),
   '   CONSTRAINT team_care_arrangements_fk_consult_fkey FOREIGN KEY (fk_consult)
   '       REFERENCES clin_consult.consult (pk) MATCH SIMPLE
   '       ON USelect Case modDBConnect.currentUser!fk_role                    PDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT team_care_arrangements_fk_progressnote_fkey FOREIGN KEY (fk_prolatex_to_printgressnote)
   '       REFERENCES clin_consult.progressnotes (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION
   ' )
   ' WITH (
   '   OIDS=FALSE
   ' );
   ' -------------------------------------------------------------------------------
   
   Dim TCA_To_Save As CRow  
   Dim sMsg As String
   Dim Document_TCA As CRow  
   Dim Document_Allied_Health As CRow
   Dim Team_care_member As CRow
   Dim TM As Collection 
   Dim PH As Collection
   Dim FH As Collection    
   Dim keys As String
   Dim bClaimed As Boolean 
   Dim smsg1 As String
   Dim LaTexes_to_print As Collection   'of latex - if save successful we will print these
   Dim latex_to_print As String
   Dim item_number As Integer = 723     'default to new TCA
   
   If VBox_EditArea_Outer_TCA.padding = 0 Then Return     'nothing to save
   If rbTCAReview.value = True Then item_number = 732
   If Not TCA_Valid_Data() Then Return   
   If TCA!date_claimed = Null Then
      smsg1 = "<UL>"
      "<LI>The data you have entered will be saved to the database"
      "<LI>You may edit this Team Care Arrangement at any time until it is properly claimed by a medical practitioner"
      "<LI>The progress notes will reflect you were working on the team care arrangement"
      "</UL>"
      "How do you want to proceed?"
      '-----------------------------------------------------------------------
      'give them the spiel, different message for different roles
      'Inform who the team care members are, the selected num of epc sesssions
      '-----------------------------------------------------------------------
      sMsg = "<B>Your team care members are:</B><BR><BR>"
      If modDBConnect.currentUser!fk_role = const.StaffRole_Registered_Nurse Then
         sMsg &= "General Practitioner: <insert on completion>"
      Else
         sMsg &= "General Practitioner: " & modDBConnect.currentUser!title & " " & modDBConnect.currentUser!wholename
      End If   
      smsg &= "<BR>"
      For Each TM In TCA!team_care_members
         sMsg &= modStrings.Capitalise_Words_In_String(TM!occupation) & ": " & TM!wholename
         If Not IsNull(TM!num_epc_sessions) Then sMsg &= " - " & Str(TM!num_epc_sessions) & " epc allied health sessions"
         sMsg &= "<BR>"
      Next
      sMsg &= "<BR>"
      sMsg &= "<B>How to you want to action this team care arrangement</B>?<BR><BR>"
      Select Case modDBConnect.currentUser!fk_role
         Case const.StaffRole_Doctor, const.StaffRole_Practice_Principal
            If rbTCA.Value = True Then Message.title = "NEW Team Care Arrangements" 
            If rbTCAReview.value = True Then Message.Title = "REVIEW OF EXISTING Team Care Arrangements" 
            If TCA!team_care_members.count >= 2 Then  
               smsg &= "Save as claimed:"
               sMsg &= "<UL><LI>EasyGP will log that you have claimed this item number (" & Str(item_number) & ") today"
               "<LI>You may change this copy of the TCA any time today but after that it is not editable"
               "<LI>A permanant copy of this document will be saved into the documents list for the purposes of medicare audit which will never be able to be deleted."
               "<LI>The progress note entry will reflect these facts"
               "</UL>"
               " Save as prepared:"
               sMsg &= smsg1
               Select Case Message.Question(sMsg, "Save as Claimed", "Save as Prepared", "Cancel") 
                  Case 1
                     If Not GPMP_In_Date() Then Return
                     bClaimed = True
                  Case 2
                     bClaimed = False  
                  Case 3
                     Return
               End Select
            Else
               smsg &= "You  must have at least two team care members in addition to yourself to claim a TCA, so this will be saved as work in progress."
               sMsg &= smsg1
               Select Case Message.Question(sMsg, "Save as Prepared", "Cancel") 
                  Case 1
                     bClaimed = False  
                  Case 2 
                     Return
               End Select
            End If   
         Case const.StaffRole_Registered_Nurse
            Message.title = "Preparation of Team Care Arrangements" 
            sMsg = "As a nurse working on the prepartion of TCA you may not finalise the document.<BR>" & smsg1
            If Message.Question(sMsg, "Save as Prepared", "Cancel") = 2 Then 
               Return   
            Else
               bClaimed = False
            End If  
      End Select
   Else 'The TCA has already been claimed, user must be modifying this on the same day
      bClaimed = True  
   End If   
   '---------------------------------------------------------
   'next save the actual team care arrangement
   '---------------------------------------------------------
   ' CREATE TABLE clin_history.team_care_arrangements
   ' (
   '   pk serial NOT NULL,
   '   fk_consult integer NOT NULL,
   '   date_claimed timestamp without time zone, -- if is null, then the team care arrangment is prepared but not claimed.
   '   explained_steps_involved boolean DEFAULT false,
   '   discussed_providers boolean DEFAULT false, -- If True then the GP discussed with the patient who the providers on the team are and their responsibilities
   '   patient_agrees boolean DEFAULT false, -- If True the the patient agree's to their team care arrangements
   '   patient_has_carer boolean DEFAULT false,
   '   copy_offered_to_patient boolean DEFAULT false,
   '   patient_permits_carer_to_have_copy boolean DEFAULT false,
   '   copy_offered_to_carer boolean DEFAULT false,
   '   copy_sent_to_providers boolean DEFAULT false,
   '   review_date date,
   '   fk_progressnote integer NOT NULL,
   '   item_number integer NOT NULL, -- if not null is the item number claimed either 723 (new) or 732(review)
   '   CONSTRAINT team_care_arrangements_pkey PRIMARY KEY (pk),
   '   CONSTRAINT team_care_arrangements_fk_consult_fkey FOREIGN KEY (fk_consult)
   '       REFERENCES clin_consult.consult (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT team_care_arrangements_fk_progressnote_fkey FOREIGN KEY (fk_progressnote)
   '       REFERENCES clin_consult.progressnotes (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION
   ' )
   ' WITH (
   '   OIDS=FALSE
   ' );
   '---------------------------------------------------------
   TCA_To_Save = New CRow   
   If Not IsNull(fk_team_care_arrangement) Then
      TCA_To_Save.Put_unchanged(fk_team_care_arrangement, "fk_team_care_arrangement")
   End If   
   TCA_To_Save!fk_consult = currentConsult.GetPK()
   If bClaimed Then
      TCA_To_Save!date_claimed = currentconsult.GetConsultDate()                                              'claim today only
   Else
      TCA_To_Save!date_claimed = Null
   End If 
   If rbTCA.value = True Then TCA_To_Save!item_number = 723
   If rbTCAReview.value = True Then TCA_To_Save!item_number = 732
   TCA_To_Save!explained_steps_involved = True                                   'by defination as otherwise can't get to here
   TCA_To_Save!discussed_providers = True
   TCA_To_Save!patient_agrees = True                           'by defination as otherwise can't get to here
   TCA_To_Save!copy_offered_to_patient = True                                    'by defination as otherwise can't get to here
   If rbTCAPatientHasCarerYes.value = True Then                              'if patient has a carer:  
      TCA_To_Save!patient_has_carer = True                                      'then they have a carer!
      TCA_To_Save!patient_permits_carer_to_have_copy = CBool(chkTCAPatientAllowsCarerCopy.value)  'may/maynot have let carer have a copy
      If chkTCACopyToCarer.value = True Then                            'if they did offer copy to carer
         TCA_To_Save!copy_offered_to_carer = True
      Else
         TCA_To_Save!copy_offered_to_carer = False 
      Endif
   Else
      TCA_To_Save!patient_has_carer = False
      TCA_To_Save!patient_permits_carer_to_have_copy = False   
      TCA_To_Save!copy_offered_to_carer = False 
   End If   
   TCA_To_Save!copy_sent_to_providers = CBool(chkTCACopyToProviders.value)
   TCA_To_Save!review_date = Val(txtTCAReviewDate.text)
   TCA_To_Save!fk_progressnote = modConsultDBI.ProgressNote_Save(currentconsult, TCA_ProgressNotes_Create(bClaimed), const.cSection_CarePlan, fk_tca_progressnote, "Team Care Arrangements")
   TCA_To_Save.Save("clin_history.team_care_arrangements", "fk_team_care_arrangement")
   '-------------------------------------------------------------------------------------
   'For each team care member
   ' if bClaimed flag is true:
   ' Create an entry in document.documents table for document related to that team member
   ' (don't need all fields shown here)
   ' and an entry in the clin_history.team_members table which  links team members to
   ' the team_care_arrangement
   '-------------------------------------------------------------------------------------
   LaTexes_to_print = New Collection   
   For Each TM In TCA!team_care_members
      ' --------------------------------------------------------------------------------------------
      'First the Latex of the team care arrangement is saved into documents, no source file
      'when  re-displayed in Fclinical etc, the system detects it is latex, creates a pdf on the fly
      'This document is pure latex with no underlying pdf to print onto the top of
      '---------------------------------------------------------------------------------------------
      ' CREATE TABLE documents.documents
      ' (
      '   pk serial NOT NULL,
      '   source_file text,                           -- not needed here
      '   fk_sending_entity integer NOT NULL,         -- the practices's sending entity entry (see Init())
      '   imported_time timestamp without time zone NOT NULL DEFAULT now(),
      '   date_requested date,
      '   date_created date, -- date the document was created - ie the document was created or  the observation collected e.g blood
      '   fk_patient integer,
      '   fk_staff_filed_document integer, -- key to admin.staff table - who filed the document, may be null if auto-filed eg by the hl7 parser
      '   originator text,
      '   originator_reference text,
      '   provider_of_service_reference text,
      '   internal_reference text,
      '   copies_to text, -- Whoever gets a copy of the document - flaw should be keyed for multiple
      '   fk_staff_destination integer, -- if null, then documented sent to everyones inbox
      '   comment_on_document text, -- additional comment e.g NAD etc
      '   patient_access boolean DEFAULT false,
      '   concluded boolean DEFAULT false,
      '   deleted boolean DEFAULT false,
      '   fk_lu_urgency integer,
      '   tag text,
      '   md5sum text,
      '   fk_unmatched_staff integer,
      '   fk_unmatched_patient integer,
      '   fk_referral integer, -- If not null, linkt the document e.g incoming letter from specialist to a referral letter written...
      '   fk_request integer, -- If not null, links the document e.g incoming result form a path lab...
      '   html text, -- maybe temporary, but as most of the documents are html results, I have included this field
      '   tag_user text,
      '   copy_to text,
      '   staff_intended_for_unknown boolean DEFAULT false,
      '   fk_lu_display_as integer, -- How to display the document 1 as a result 2 as a letter
      '   fk_lu_request_type integer, -- - key to clin_requests.lu_request_type table which contains the types...
      '   incoming_referral boolean NOT NULL DEFAULT false,
      '   CONSTRAINT documents_pkey PRIMARY KEY (pk )
      ' )
      '------------------------------------------------------------------------------------------------------------------------------
      If bClaimed Then  
         Document_TCA = New CRow  
         If TM!fk_document_tca Then
            Document_TCA.put_unchanged(TM!fk_document_tca, "fk_document")
         End If   
         Document_TCA!fk_sending_entity = modInboxDBI.SendingEntity_GetPK(const.Document_Display_As_Letter, "", modDBConnect.currentUser!fk_branch)
         Document_TCA!fk_patient = currentconsult!patient!fk_patient 
         Document_TCA!source_file = Null
         Document_TCA!imported_time = currentconsult.GetConsultDate()
         Document_TCA!date_requested = currentconsult.GetConsultDate()
         Document_TCA!date_created = currentconsult.GetConsultDate()
         Document_TCA!fk_staff_filed_document = modDBConnect.currentUser!fk_staff  
         Document_TCA!originator_reference = "Team Care Arrangement"
         Document_TCA!originator = UCase(modDBConnect.currentUser!organisation) & "." & UCase(modDBConnect.currentUser!branch)
         Document_TCA!fk_staff_destination = modDBConnect.currentUser!fk_staff 
         Document_TCA!comment_on_document = "Preparation of Team Care Arrangements"
         Document_TCA!patient_access = True
         Document_TCA!concluded = True 
         Document_TCA!deleted = False
         Document_TCA!fk_lu_urgency = const.UrgencyLevelRoutine
         Document_TCA!tag = "TCA Item " & Str(item_number) & " " & TM!wholename
         Document_TCA!tag_user = "TCA Item " & Str(item_number) & " " & TM!wholename
         Document_TCA!md5sum = Null
         Document_TCA!fk_lu_display_as = const.Document_Display_As_Team_Care_Arrangement
         Document_TCA!fk_lu_request_type = Null
         Document_TCA!incoming_referral = False
         Document_TCA!data = TCA_Create_LaTex(TM)                              'the non overpic plain latex for the TCA
         Document_TCA!fk_lu_data_content_type = const.cData_Type_Latex
         Document_TCA!protected = True                                         'as an audit document, users cannot remove this, needed for medicare
         Document_TCA.Save("documents.documents", "fk_document")
         LaTexes_to_print.Add(Document_TCA!data, LaTexes_to_print.Count)
         '-----------------------------------------------------------------------
         'If the team care member has been allocated sessions (up to 5):
         'now the EPC allied health form with the referral for number of sessions
         '-----------------------------------------------------------------------
         If Not IsNull(TM!num_epc_sessions) Then
            Document_Allied_Health = New CRow  
            If TM!fk_document_allied_health_form Then
               Document_Allied_Health.put_unchanged(TM!fk_document_allied_health_form, "fk_document")
            Endif
            Document_Allied_Health!fk_sending_entity = modInboxDBI.SendingEntity_GetPK(const.Document_Display_As_Letter, "", modDBConnect.currentUser!fk_branch)
            Document_Allied_Health!fk_patient = currentconsult!patient!fk_patient 
            Document_Allied_Health!imported_time = currentconsult.GetConsultDate()
            Document_Allied_Health!date_requested = currentconsult.GetConsultDate()
            Document_Allied_Health!date_created = currentconsult.GetConsultDate()
            Document_Allied_Health!fk_staff_filed_document = modDBConnect.currentUser!fk_staff  
            Document_Allied_Health!originator_reference = "Allied Health Referral " & modStrings.Capitalise_Words_In_String(TM!wholename)
            Document_Allied_Health!originator = UCase(modDBConnect.currentUser!organisation) & "." & UCase(modDBConnect.currentUser!branch)
            Document_Allied_Health!fk_staff_destination = modDBConnect.currentUser!fk_staff 
            Document_Allied_Health!comment_on_document = "Allied Health Referral " & TM!wholename
            Document_Allied_Health!patient_access = True
            Document_Allied_Health!concluded = True 
            Document_Allied_Health!deleted = False
            Document_Allied_Health!fk_lu_urgency = const.UrgencyLevelRoutine
            Document_Allied_Health!tag = "Allied Health Referral " & TM!wholename & " " & modStrings.Capitalise_Words_In_String(TM!occupation)
            Document_Allied_Health!tag_user = Document_Allied_Health!tag 
            Document_Allied_Health!fk_lu_display_as = const.Document_Display_As_Team_Care_Arrangement
            Document_Allied_Health!fk_lu_request_type = Null
            Document_Allied_Health!incoming_referral = False
            Document_Allied_Health!fk_lu_data_content_type = const.cData_Type_Latex
            Document_Allied_Health!data = Allied_Health_Referral_Make_Latex(TM)
            LaTexes_to_print.Add(Document_Allied_Health!data, LaTexes_to_print.Count)
            Document_Allied_Health!protected = True                                         'as an audit document, users cannot remove this, needed for medicare
            Document_Allied_Health.Save("documents.documents", "fk_document")
         End If 
         If bPrintAcceptanceForm And bClaimed Then LaTexes_to_print.Add(Team_Care_Consent_LaTex(TM), LaTexes_to_print.count)
      End If      
      '-------------------------------------------------------
      'Now save the team care members and link to the document
      ' CREATE TABLE clin_history.team_care_members
      ' (
      '   pk serial NOT NULL,
      '   fk_team_care_arrangement integer NOT NULL,
      '   fk_branch integer,
      '   fk_employee integer,
      '   fk_person integer,
      '   fk_document_tca integer, -- if not null, then the team_care_arrangement has been finalised and this points to a row in...
      '   health_issue_keys text, -- the keys of any health issues aka historically as past history or problems...
      '   family_history_keys text, -- the keys of any family members medical history i.e vwFamilyHistory.pk_view ...
      '   fk_provider_of_care integer NOT NULL,
      '   num_epc_sessions integer, -- The number of epc sessions out of 5 available allocated at time of completing the TCA....
      '   fk_lu_allied_health_care_type integer, -- key to clin_history.lu_allied_health_care_type
      '   fk_document_allied_health_form integer, -- key to document.documents where link to filename on the filesystem is used for display purposes
      '   latex_allied_health_form text, -- LaTex definition including overpic of the allied health form - kept as a backup as the important...
      '   fk_document_gp_management_plan integer, -- if not null, then the team care member was sent a copy of the gp management plan this field...
      '   special_note text, -- any extra comments or special notes user may want to convey to the team care member will be include  in the letter
      '   progress_towards_goals text default null,  -- if not null, then this is a TCA_Review and this is the progress
      '   CONSTRAINT team_care_members_pkey PRIMARY KEY (pk ),
      '   CONSTRAINT team_care_members_fk_document_allied_health_fkey FOREIGN KEY (fk_document_allied_health_form)
      '       REFERENCES documents.documents (pk) MATCH SIMPLE
      '       ON UPDATE NO ACTION ON DELETE NO ACTION,
      '   CONSTRAINT team_care_members_fk_lu_allied_health_service_type_fkey FOREIGN KEY (fk_lu_allied_health_care_type)
      '       REFERENCES clin_history.lu_allied_health_care_types (pk) MATCH SIMPLE
      '       ON UPDATE NO ACTION ON DELETE NO ACTION,
      '   CONSTRAINT team_care_members_fk_provider_of_care_fkey FOREIGN KEY (fk_provider_of_care)
      '       REFERENCES clin_history.link_pasthistory_providers (pk) MATCH SIMPLE
      '       ON UPDATE NO ACTION ON DELETE NO ACTION
      ' )
      ' WITH (
      '   OIDS=FALSE
      ' );
      '-------------------------------------------------------
      Team_care_member = New CRow
      If TM!fk_team_care_member Then
         Team_care_member.Put_unchanged(TM!fk_team_care_member, "fk_team_care_member")
      Endif
      Team_care_member!fk_team_care_arrangement = TCA_To_Save!fk_team_care_arrangement
      Team_care_member!fk_branch = TM!fk_branch
      Team_care_member!fk_employee = TM!fk_employee
      Team_care_member!fk_person = TM!fk_person
      If Not IsNull(TM!num_epc_sessions) Then
         Team_care_member!num_epc_sessions = TM!num_epc_sessions
      Else
         Team_care_member!num_epc_sessions = Null
      End If  
      If Not IsNull(TM!special_note) Then
         Team_care_member!special_note = TM!special_note
      Else
         Team_care_member!special_note = Null
      End If   
      If Not IsNull(TM!progress_towards_goals) Then
         Team_care_member!progress_towards_goals = TM!progress_towards_goals
      Else
         Team_care_member!progress_towards_goals = Null
      End If   
      
      If bClaimed Then 
         Team_care_member!fk_document_tca = Document_TCA!fk_document                          'the document which is latex of the team care arrangement
         '-----------------------------------------------------------------------
         'if a allied health referral form was generated
         'save the over_pic definition with path = {!pdf-path:epc-referral.pdf}.
         ' If later needed replace !pdf-path with the template path on your system.
         '-------------------------------------------------------------------------  
         If TM!num_epc_sessions Then 
            Team_care_member!fk_document_allied_health_form = Document_Allied_Health!fk_document 'the document with is pdf or the over-pic form
            Team_care_member!latex_allied_health_form = Document_Allied_Health!data
         Else
            team_care_member!fk_document_allied_health_form = Null
            Team_care_member!latex_allied_health_form = Null
         End If   
      Else
         Team_care_member!fk_document_allied_health_form = Null
      End If   
      keys = ""
      If TM!additional_health_issues.count Then             'these keys to clin_history.past_history reused when TCA edited
         For Each PH In TM!additional_health_issues
            keys &= PH!pk_pasthistory & "|"
         Next
         keys = modUtilGUI.Strip_Last_Character(keys)
         Team_care_member!health_issue_keys = keys
      Else
         Team_care_member!health_issue_keys = Null
      Endif
      keys = ""
      If TM!family_history.count Then             'these keys to clin_history.past_history reused when TCA edited
         For Each FH In TM!family_history
            keys &= FH!pk_view & "|"
         Next
         keys = modUtilGUI.Strip_Last_Character(keys)
         Team_care_member!family_history_keys = keys
      Else
         Team_care_member!family_history_keys = Null
      End If  
      Team_care_member!fk_provider_of_care = TM!fk_provider_of_care
      
      If Not IsNull(TM!fk_lu_allied_health_care_type) Then
         Team_care_member!fk_lu_allied_health_care_type = TM!fk_lu_allied_health_care_type
      Else
         Team_care_member!fk_lu_allied_health_care_type = Null
      Endif
      If TM!include_gp_management_plan Then
         Team_care_member!fk_document_gp_management_plan = GPMP!fk_document
      Else
         Team_care_member!fk_document_gp_management_plan = Null
      Endif
      Team_care_member.Save("Clin_history.team_care_members", "fk_team_care_member")
   Next
   '--------------------------------------------------------------------------------------------------------
   'Now if TCA already saved - a final cleanup 
   'It is possible that if the team care arrangement has been saved/edited etc on the same day that the user
   'may have for example printed out a TCA, gone back, deleted a member, added a different one etc
   'This could mean we now have incorrect documents in document.documents or what will be 'orphened' files
   'in the documents/filed directory, so fix this
   '--------------------------------------------------------------------------------------------------------
   If Not IsNull(TCA!fk_team_care_arrangement) Then modPastHistoryDBI.Team_Care_Members_Cleanup(TCA) 
   modDBConnect.CommitTrans()
   '-----------------------------------------------------------------------------------------------------------------
   'finally print out the documents
   'Don't ask me, fix it  yourself, I don't understand why I need to treat the over-pic differently usuing a .ps file
   'when saved, it contains the .pdf file reference and this prints internally in EasyGP ok, but in this sub
   'won't print. Go figure
   '------------------------------------------------------------------------------------------------------------------
   For Each latex_to_print In LaTexes_to_print
      If Not InStr(latex_to_print, "overpic") Then
         modPrinting.Print_latex(latex_to_print)
      Else
         modPrinting.Print_latex_PDF(Document_Allied_Health!data)      'uses overpic
      Endif
   Next
   FClinical.Refresh_Section(const.cSection_Lists_GPMP_TCA)
   bNewTCA = False 
   WorkspaceEditor_Clear 'removes all existing tabs
   TCA_Reload
   TCA_Display
   EditArea_Notify_DataChange(False)
   Return
   
Doc_Error:
   Message.Info("An error occurred trying to save the Team Care Arrangements")
   Return
Catch
   modDBConnect.RollBack()
   Goto doc_error
   
End

Public Function Allied_Health_Referral_Make_Latex(TCM As Collection) As String
   '---------------------------------------------------------------------------------
   'returns the latex tof the allied health form
   '--------------------------------------------------------------------------------
   
   Dim templ As New CTemplate("epc-form", "tex")
   Dim x As Integer
   
   Print modUtil.Find_File("templates" &/ "epc-referral.pdf")
   templ.subst_common(currentconsult)
   templ.Subst("postcode", "\\relax")
   templ.Subst("patient-has-gpmp-and-tca", "X")
   templ.Subst("residential-facility-plan", "\\relax")
   templ.Subst("pdf-path", modUtil.Find_File("templates" &/ "epc-referral.pdf"))
   For x = 1 To 22                                  ' the provider number for the doctor
      If x < 10 Then
         templ.Subst("provider-number0" & Str(x), Mid$(modDBConnect.currentUser!provider_number, x, 1))
      Else
         templ.Subst("provider-number" & Str(x), "")
      Endif
   Next
   For x = 1 To Len(modDBConnect.currentUser!provider_number)
      If x < 10 Then
         templ.Subst("provider-number0" & Str(x), "")
      Else
         templ.Subst("provider-number" & Str(x), "")
      End If
   Next
   templ.Subst("MA1", Mid$(currentconsult!patient!medicare_number, 1, 1))  'patient medicare number
   templ.Subst("MA2", Mid$(currentconsult!patient!medicare_number, 2, 1))
   templ.Subst("MA3", Mid$(currentconsult!patient!medicare_number, 3, 1))
   templ.Subst("MA4", Mid$(currentconsult!patient!medicare_number, 4, 1))
   templ.Subst("MA5", Mid$(currentconsult!patient!medicare_number, 5, 1))
   templ.Subst("MA6", Mid$(currentconsult!patient!medicare_number, 6, 1))
   templ.Subst("MA7", Mid$(currentconsult!patient!medicare_number, 7, 1))
   templ.Subst("MA8", Mid$(currentconsult!patient!medicare_number, 8, 1))
   templ.Subst("MA9", Mid$(currentconsult!patient!medicare_number, 9, 1))
   templ.Subst("MA0", Mid$(currentconsult!patient!medicare_number, 10, 1))
   templ.Subst("health-care-provider-name", TCM!wholename)
   templ.Subst("health-care-provider-address", Trim(TCM!street1 & " " & TCM!street2) & " " & TCM!town & " " & TCM!postcode)
   Select Case TCM!fk_lu_allied_health_care_type
      Case 1, 2, 3, 4, 5, 6, 7, 8, 9
         templ.Subst("a" & Str(TCM!fk_lu_allied_health_care_type), TCM!num_epc_sessions)
      Case 10, 11, 12, 13
         templ.Subst("b" & Str(TCM!fk_lu_allied_health_care_type), TCM!num_epc_sessions)
   End Select
   For x = 1 To 13
      If x < 10 Then templ.Subst("a" & Str(x), "\\relax")
      If x > 9 Then templ.Subst("b" & Str(x), "\\relax")
   Next
   templ.Subst("date-claimed", Format(currentconsult.GetConsultDate(), "dd/mm/yyyy"))
   Print templ.GetData()
   Return templ.GetData()
   
End

Public Sub GPMP_New()
   '---------------------------------------
   'User has requested  to enter a new GPMP
   '---------------------------------------
   
   Dim sMsg As String
   Dim i As Integer
   
   If Not Providers_Warn_If_None_Exist() Then Return                                       'allow user to cancel if no providers yet entered in FPastHistory
   If Not IsNull(GPMP) Then                                                            'A GPMP already exists
      If DateDiff(GPMP!date_claimed, Now(), gb.Month) > 12 Then
         ' If DateDiff(GPMP!date_claimed, GPMP!review_date, gb.month) > -1 Then             'check it is at least 12 months since last plan
         sMsg = "It has been less than the 2 year period allowed to create a new GPMP.\n\n"
         sMsg &= "You can still create a new plan if there are exceptional circumstances. "
         sMsg &= "If you wish to proceed, these must be listed and will be saved along with the new plan.\n\n"
         sMsg &= "Otherwise you may do a GP Management Plan Review."
         Message.Title = "GP Management Plans"
         i = Message.Question(smsg, "New Plan or Review", "New Plan Exceptional Circumstances", "Cancel")
         Select Case i
            Case 2
               HBox_Exceptional_Circumstance.Visible = True  
            Case 4
               Return 
         End Select
         ' If Message.Question(smsg, "Proceed with new plan", "Cancel") = 2 Then Return  'User wants to cancel? 
         ' HBox_Exceptional_Circumstance.Visible = True                                  'User wants to proceed, expose the txtGPMPExceptionalCircumstances texbox
      End If 
   Else
      Health_Summary_Reload  
   Endif
   bPreparingGPMP = True
   bEditing = False  
   EditArea_Clear                                                                       'clear appropriate edit area as per tabindex
   GPMP = New Collection
   fk_document_gp_management_plan = Null
   fk_gp_management_plan = Null
   fk_gpmp_progressnote = Null
   VBox_EditArea_GPMP.Enabled = True  
   rbGPMP.value = True
   lblClaimDetails.text = "New GP Management Plan"
   Hbox_Prepared_BY.Visible = False 
   Hbox_Date_Claimed.Visible = False   
   txtGPMPReviewDate.text = Format(DateAdd(currentconsult.GetConsultDate(), gb.month, 6), "dd/mm/yyyy")
   If HBox_Exceptional_Circumstance.Visible Then
      txtGPMPExceptionalCircumstances.SetFocus()
   Else
      chkGPMPExplainedStepsInvolved.SetFocus
   Endif
   Health_Summary_Reload                                                                'load the medical record data for the GPMP
   VBox_EditArea_GPMP_Outer.Visible = True   
   tlNewPlan.Visible = False  
   
End

Public Sub GPMP_Save()
   '------------------------------------------------------------------ 
   ' Saves the GP Management Plan 
   ' If nurse works on this gets different save message to the doctor
   ' The LaTex of the team care arrangement is saved in the backend
   '-----------------------------------------------------------------
   ' CREATE TABLE clin_history.gp_management_plans
   ' (
   '   pk serial NOT NULL,
   '   fk_consult integer NOT NULL, -- key to cin_consult.consult points to the fk_patient and fk_staff who signed off...
   '   date_claimed timestamp without time zone NOT NULL, -- the actual date the item number claimed
   '   explained_steps_involved boolean DEFAULT false,
   '   patient_agrees_to_plan_and_goals boolean DEFAULT false,
   '   patient_has_carer boolean DEFAULT false,
   '   copy_offered_to_patient boolean DEFAULT false,
   '   patient_permits_carer_to_have_copy boolean DEFAULT false,
   '   copy_offered_to_carer boolean DEFAULT false,
   '   review_date date NOT NULL,
   '   fk_document integer N"Save as Claimed", OT NULL, -- When a General Practitioner management plan is saved, a copy of the LaTeX is kept as...
   '   latex text NOT NULL, -- copy of the LaTeX of the plan
   '   deleted boolean DEFAULT false,
   '   exceptional_circumstances_reason text, -- if not null, then the reason the plan is being done within 12 months must be documented
   '   CONSTRAINT gp_management_plans_pkey PRIMARY KEY (pk ),
   '   CONSTRAINT gp_management_plans_fk_consult_fkey FOREIGN KEY (fk_consult)
   '       REFERENCES clin_consult.consult (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT gp_management_plans_fk_document_fkey FOREIGN KEY (fk_document)
   '       REFERENCES documents.documents (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION
   ' )
   ' WITH (
   '   OIDS=FALSE
   ' );
   '-------------------------------------------------------
   
   Dim GPMP_To_Save As CRow  
   Dim sMsg As String
   Dim Document As CRow 
   Dim progressnote As CRow
   Dim bClaimed As Boolean 
   Dim smsg1 As String
   Dim provider As Collection
   
   If VBox_EditArea_GPMP_Outer.padding = 0 Then Return 'nothing to save
   '-----------------------------------------------------------
   'If not already saved, different message for different roles
   '-----------------------------------------------------------
   If IsNull(fk_gp_management_plan) Then                                                      'not as yet prepared or saved
      Message.title = "Actioning of the GP Management Plan"  
      smsg1 = "<UL>"
      "<LI>The data you have entered will be saved to the database"
      "<LI>You may edit this GP Management Plan at any time until it is properly claimed by the patients usual doctor."
      "<LI>If  you do not claim this plan today the progress notes will reflect you were working on preparing this plan."
      "</UL>"
      sMsg &= "The following providers are part of the GPMP:<BR><BR>"                    'give save option of
      If Not IsNull(usual_doctor) Then                                                   'first list the usual doctor
         smsg &= " - " & usual_doctor!title & " " & usual_doctor!wholename & " (Usual doctor)<BR>"
      Else
         modPatientWarnings.Usual_Doctor_InForm_Missing
         smsg &= " - usual doctor: unknown [claim not possible]<BR>"
      End If 
      If providers.count Then                                                            'next list providers involved                                                      
         For Each provider In Providers                                               
            smsg &= " - " & provider!wholename & " (" & provider!occupation & ")<BR>"   
         Next
         sMsg &= "<BR><BR>"
      Else
         sMsg &= "<BR>"
      End If       
      If modDBConnect.currentUser!fk_role = const.StaffRole_Doctor Or modDBConnect.currentUser!fk_role = const.StaffRole_Practice_Principal Then   'If a doctor then can save claim this 
         smsg &= "If you save this as prepared:"
         sMsg &= sMsg1
         If Not IsNull(usual_doctor) Then   
            smsg &= "If you save this as claimed:"
            sMsg &= "<UL>"
            "<LI > EasyGP will Log that you have claimed this item number (721) today"
            "<LI>You may change this copy of the GPMP any time today but after that it is not editable"
            "<LI>A permanant copy of this document will be saved into the plans list for the purposes of medicare audit which will never be able to be deleted."
            "<LI>The progress note entry will reflect these facts"
            "</UL>"
         End If   
      Else        'a nurse 
         sMsg &= sMsg1
      Endif
      Select Case modDBConnect.currentUser!fk_role                                   'only a doctor can finalise
         Case const.StaffRole_Doctor, const.StaffRole_Practice_Principal
            If Not IsNull(usual_doctor) Then 
               Select Case Message.Question(sMsg, "Save as Claimed", "Save as Prepared", "Cancel") 
                  Case 1
                     bClaimed = True
                     If Not GPMP_Valid() Then Return   
                  Case 2
                     bClaimed = False  
                  Case 3
                     Return
               End Select
            Else         'no usual doctor
               Select Case Message.Question(sMsg, "Save as Prepared", "Cancel")
                  Case 1
                     bClaimed = False  
                  Case 2
                     Return  
               End Select
            End If   
         Case const.StaffRole_Registered_Nurse
            sMsg = "As a nurse working on the prepartion of a GPMP you may not finalise the document.<BR>" & smsg1
            If Message.Question(sMsg, "Save as Prepared", "Cancel") = 2 Then 
               Return   
            Else
               bClaimed = False
            End If  
      End Select   
   Else                                           'previously claimed but need to check still valid
      If Not GPMP_Valid() Then Return        'no valid data existing plan > out of here
      bClaimed = True   
   End If 
   GPMP_To_Save = New CRow   
   If Not IsNull(fk_gp_management_plan) Then
      GPMP_To_Save.Put_unchanged(fk_gp_management_plan, "fk_gp_management_plan")
   End If   
   GPMP_To_Save!fk_consult = currentConsult.GetPK()
   GPMP_To_Save!date_claimed = currentconsult.GetConsultDate()                                              'claim today only
   GPMP_To_Save!explained_steps_involved = True                                   'by defination as otherwise can't get to here
   GPMP_To_Save!patient_agrees_to_plan_and_goals = True                           'by defination as otherwise can't get to here
   GPMP_To_Save!copy_offered_to_patient = True                                    'by defination as otherwise can't get to here
   If rbPatientHasCarerYes.value = True Then                                   
      GPMP_To_Save!patient_has_carer = True                                      
      GPMP_To_Save!patient_permits_carer_to_have_copy = CBool(chkGPMPPatientAllowsCarerCopy.value)  'may/maynot have let carer have a copy
      If chkGPMPCopyToCarer.value = True Then                         
         GPMP_To_Save!copy_offered_to_carer = True
      Else
         GPMP_To_Save!copy_offered_to_carer = False 
      Endif
   Else
      GPMP_To_Save!patient_has_carer = False
      GPMP_To_Save!patient_permits_carer_to_have_copy = False   
      GPMP_To_Save!copy_offered_to_carer = False 
   End If   
   If rbGPMP.value = True Then GPMP_To_Save!item_number = 721
   If rbGPMPReview.value = True Then GPMP_To_Save!item_number = 732
   GPMP_To_Save!review_date = Val(txtGPMPReviewDate.text)
   GPMP_To_Save!fk_progressnote = modConsultDBI.ProgressNote_Save(currentconsult, GPMP_ProgressNotes_Create(bClaimed), const.cSection_CarePlan, fk_gpmp_progressnote, "GP Management Plan")
   GPMP_To_Save!latex = modProgressNotes.Health_Summary_Construct_LaTex(currentconsult, GPMP_To_Save, Providers_Selected_For_TCA).GetData() 'true = bGPMP in that routine now true
   If Trim(txtGPMPExceptionalCircumstances.text) <> "" Then 
      GPMP_To_Save!exceptional_circumstances_reason = Trim(txtGPMPExceptionalCircumstances.text)
   Else
      GPMP_To_Save!exceptional_circumstances_reason = Null
   End If   
   '-------------------------------------------------------------------------------
   ' Create an entry in document.documents table (don't need all fields shown here)
   ' -------------------------------------------------------------------------------
   ' CREATE TABLE documents.documents
   ' (
   '   pk serial NOT NULL,
   '   source_file text,                           -- not needed here
   '   fk_sending_entity integer NOT NULL,         -- the practices's sending entity entry (see Init())
   '   imported_time timestamp without time zone NOT NULL DEFAULT now(),
   '   date_requested date,
   '   date_created date, -- date the document was created - ie the document was created or  the observation collected e.g blood
   '   fk_patient integer,
   '   fk_staff_filed_document integer, -- key to admin.staff table - who filed the document, may be null if auto-filed eg by the hl7 parser
   '   originator text,
   '   originator_reference text,
   '   provider_of_service_reference text,
   '   internal_reference text,
   '   copies_to text, -- Whoever gets a copy of the document - flaw should be keyed for multiple
   '   fk_staff_destination integer, -- if null, then documented sent to everyones inbox
   '   comment_on_document text, -- additional comment e.g NAD etc
   '   patient_access boolean DEFAULT false,
   '   concluded boolean DEFAULT false,
   '   deleted boolean DEFAULT false,
   '   fk_lu_urgency integer,
   '   tag text,
   '   md5sum text,
   '   fk_unmatched_staff integer,
   '   fk_unmatched_patient integer,
   '   fk_referral integer, -- If not null, linkt the document e.g incoming letter from specialist to a referral letter written...
   '   fk_request integer, -- If not null, links the document e.g incoming result form a path lab...
   '   html text, -- maybe temporary, but as most of the documents are html results, I have included this field
   '   tag_user text,
   '   copy_to text,
   '   staff_intended_for_unknown boolean DEFAULT false, -- Sometimes despite all efforts it is not possible to determine from the hl7 who the message was...
   '   fk_lu_display_as integer, -- How to display the document 1 as a result 2 as a letter
   '   fk_lu_request_type integer, -- - key to clin_requests.lu_request_type table which contains the types...
   '   incoming_referral boolean NOT NULL DEFAULT false,
   '   CONSTRAINT documents_pkey PRIMARY KEY (pk )
   ' )
   '----------------------------------------------------------------------------------------------------------------
   document = New CRow  
   If Not IsNull(fk_document_gp_management_plan) Then
      Document.put_unchanged(fk_document_gp_management_plan, "fk_document")
   Endif
   Document!fk_sending_entity = modInboxDBI.SendingEntity_GetPK(const.Document_Display_As_Letter, "", modDBConnect.currentUser!fk_branch)
   Document!fk_patient = currentconsult!patient!fk_patient 
   Document!imported_time = currentconsult.GetConsultDate()
   Document!date_requested = currentconsult.GetConsultDate()
   Document!date_created = currentconsult.GetConsultDate()
   Document!fk_staff_filed_document = modDBConnect.currentUser!fk_staff  
   Document!originator_reference = "GP Management Plan"
   Document!originator = UCase(modDBConnect.currentUser!organisation) & "." & UCase(modDBConnect.currentUser!branch)
   Document!fk_staff_destination = modDBConnect.currentUser!fk_staff 
   Document!comment_on_document = "Preparation of GP Management Plan"
   Document!patient_access = True
   Document!concluded = True 
   Document!deleted = False
   Document!fk_lu_urgency = const.UrgencyLevelRoutine
   If GPMP_To_Save!item_number = 721 Then
      Document!tag = "Audit Use Only - GP Management Plan"
      Document!tag_user = "Audit Use Only - GP Management Plan"
   Else
      Document!tag = "Audit Use Only - GP Management Plan Review"
      Document!tag_user = "Audit Use Only - GP Management Plan Review"
   End If
   Document!md5sum = Null
   Document!fk_lu_display_as = const.Document_Display_As_GP_Management_Plan
   Document!fk_lu_request_type = Null
   Document!incoming_referral = False
   Document!data = GPMP_To_Save!latex       'fix this ?add Latex field to documents
   Document!fk_lu_data_content_type = const.cData_Type_Latex
   Document!protected = True                                         'as an audit document, users cannot remove this, needed for medicare
   Document.Save("documents.documents", "fk_document")
   GPMP_To_Save!fk_document = Document!fk_document
   '----------------------------------------------------------------------
   'Finally save the GPMP and if succeed in the transaction print the plan
   '----------------------------------------------------------------------
   GPMP_To_Save.Save("clin_history.gp_management_plans", "fk_gp_management_plan")
   modPrinting.Print_latex(GPMP_To_Save!latex)
   modDBConnect.CommitTrans()
   Hbox_GPMP_Text.Visible = False 'remove the strongly worded text of GPMP has changed
   EditArea_Notify_DataChange(False)
   FClinicalToolbar.GPMP_Reload_External
   FClinical.Refresh_Section(const.cSection_Lists_GPMP_TCA)
   GPMP_Display  'refetch from back-end, regenerates the keys
Catch
   modDBConnect.RollBack()
   
End

Public Sub Decision_Support()
   '-------------------------------------------------------------
   ' Display decisison support on the extreme right of the screen
   ' ------------------------------------------------------------   
   
   Dim sHtml As String
   Dim sSupportHeading As String
   
   sHtml = Decision_Support_Text()
   Select Case TabStrip1.Index
      Case cTab_HealthIssues
         If Form_Health_Issues.Vbox_EditArea.enabled = True Then
            Form_Health_Issues.Decision_Support
            Return
         Else
            sSupportHeading = "Health Issues"
         Endif
         Return
      Case cTab_GPMP 
         sSupportHeading = "GP Management Plans"
      Case cTab_TCA
         sSupportHeading = "Team Care Arrangements"
   End Select
  ' If modAdminDBI.Has_User_Seen_Tip("FGPMPTCA." & sSupportHeading) Then Return
   modUtilGUI.Decision_Support_Help_Show(sHtml, sSupportHeading, "FGPMPTCA." & sSupportHeading)
   
End

Public Sub GPMP_Get()
   '-----------------------------------------------------------------------------
   'Get GPMP from backend
   '-----------------------------------------------------------------------------
   
   GPMP = modPastHistoryDBI.GP_Management_Plans_Get(currentconsult!patient!fk_patient, True) 'true = latest one
   
End

Public Sub TCA_Reload()
   '------------------------------------------------------------
   'Get the last Team Care Arrangement if it exsits
   'i.e the single latest TCA (Item 721 (intial) or  732 (review)
   'the collection looks like this
   'TCA!team_care_members
   '    each team_care_member in TCA!team_care_members has
   '                                     health_issue_keys
   '                                     family_history_keys etc
   '------------------------------------------------------------   
   
   TCA = modPastHistoryDBI.TCA_Get(currentconsult!patient!fk_patient)         'fetch the latest TCA from the backend
   If IsNull(TCA) Then                                                        'Non exist
      VBox_Main.Visible = False                                               'contains all the gui for display/input of a TCA
      With TextLabel2                                                         'put up explanatory note to the user
         .text = TCA_None_Done()                                              'create message explaining how to start a TCA
         .Visible = True  
      End With
   Else                                                                       'Found one?
      TextLabel2.Visible = False                                              'make sure the explanatory message not visible
      VBox_Main.Visible = True                                                'make the  gui for display/input of a TCA visible
   Endif
   EditArea_Notify_DataChange(False)
   
End

Public Function TCA_None_Done() As String
   
   Dim txt As String
   
   txt = ""
   "<B> No Team Care Arrangements Recorded</B>"
   "<p>To create a team care arrangement you should click on the 'New' button on the main clinical toolbar.</P>"
   "<P>The decision support panel to the right will give you guidelines to enable you to comply with medicare requirements. "
   "Should you have already dismissed this panel, you can bring it back again by clicking on the 'Support' button the main toolbar.</P>"
   "<P>Remember that all the data necessary to create the Team Care Arrangement, must be entered and be completed in the "
   "Health Issues section of the program, so if  you've not done that you should do that now before attempting to generate a TCA document.</P>"
   "<p> If you are a practice nurse,and you are working on the team care arrangement prior to it being signed off by the doctor "
   "you can still save the information, but it will not create a document in the documents list." 
   Return txt
   
End

Public Function GPMP_In_Date() As Boolean
   '--------------------------------------------------------------------------------
   'Check if we have a GPMP, could have been done on paper so take that into account
   '--------------------------------------------------------------------------------  
   
   Dim sMsg As String
   
   If IsNull(GPMP) Then                                      'none ever done or not loaded
      GPMP = modPastHistoryDBI.GP_Management_Plans_Get(currentconsult!patient!fk_patient, True)    'true = latest one
      If IsNull(GPMP) Then
         sMsg = "There are no existing electonic completed GP Management Plans in EasyGP"
         sMsg = "You cannot claim a TCA without having first claimed a GPMP.\n\n"
         "As you may have done one within the last two years on a paper based system you can over-ride this "
         "warning and proceed with your Team Care Arrangement if you wish."
         Message.Title = "No GP Management Plan Detected"
         If Message.Warning(sMsg, "Proceed and claim TCA", "Cancel") = 2 Then Return   
         Return True
      End If   
   Else                                                     'has been one at least done
      If IsNull(GPMP!date_claimed) Then                     'if not yet claimed
         Message.Title = "Incomplete GP Management Plan Detected" 
         sMsg = "A GPMP is in preparation but has not been claimed.\n\n"
         "You should complete the plan, then claim your TCA"
         Message.info(smsg)
         Return
      Else                                                   'has been claimed ?in date                                                 
         If DateDiff(GPMP!date_claimed, currentconsult.GetConsultDate(), gb.year) > 2 Then
            Message.Title = "New GPMP Needed"
            smsg = "The last electronic GPMP detected written in EasyGP was on "
            sMsg &= Format(GPMP!date_claimed, "dd/mmm/yyyy") & ".\n\n"
            smsg &= "If you have a copy of a current GPMP for this patient, you may over-ride "
            sMsg &= "this warning and proceed with your Team Care Arrangement if you wish."
            If Message.Warning(sMsg, "Proceed and claim TCA", "Cancel") = 2 Then Return   
            Return True  
         Else
            Return True 'its within date   
         Endif
      Endif
   End If   
   
End

Public Sub GPMP_Display()
   '--------------------------------------------------------------------------------
   'Display the GP management plan retrieved from the back-end
   'a GPMP is never 'created' in this module except as when saved
   'As need to include any team care members in this, try getting the last TCA
   'If the GPMP already claimed, warn user they can't edit this is not claimed today
   'Otherwise, allow editing and build the latest latex
   '--------------------------------------------------------------------------------   
   
   Dim existing_team_care_members As New Collection
   
   GPMP = modPastHistoryDBI.GP_Management_Plans_Get(currentconsult!patient!fk_patient, True)    'true = latest one
   If IsNull(GPMP) Then 
      modUtilGUI.Blank_PDF_Display(form_pdf)            'there is no existing GPMP 'PDF is a blank form
      VBox_EditArea_GPMP_Outer.Visible = False
      Return
   End If   
   If IsNull(TCA) Then TCA = modPastHistoryDBI.TCA_Get(currentconsult!patient!fk_patient)     'need TCA if exists to get any team care members    
   If IsNull(TCA) Then    
      existing_team_care_members = Null
   Else
      existing_team_care_members = TCA!team_care_members
   End If   
   bExit = True 
   bEditing = False    
   If GPMP!item_number = 721 Then rbGPMP.value = True
   If GPMP!item_number = 732 Then rbGPMPReview.value = True 
   Hbox_Date_Claimed.Visible = True
   Hbox_Prepared_BY.Visible = True   
   fk_document_gp_management_plan = GPMP!fk_document
   fk_gpmp_progressnote = GPMP!fk_progressnote
   fk_gp_management_plan = GPMP!fk_gp_management_plan
   txtGPMPPreparedBy.text = GPMP!staff_wholename
   txtGPMPDateClaimed.text = Format(GPMP!date_claimed, "dd/mm/yyyy")
   lblClaimDetails.text = "Existing GPMP - Claimed on " & txtGPMPDateClaimed.Text
   If Not IsNull(GPMP!date_claimed) Then  
      If Not modUtil.IsSameDay(GPMP!date_claimed, currentconsult.GetConsultDate()) Then  
         If GPMP!latex <> modProgressNotes.Health_Summary_Construct_LaTex(currentconsult, GPMP, existing_team_care_members).GetData() Then
            TLEXISTINGGPMPWARNING.TEXT = "<P ALIGN=CENTER><FONT COLOR='#FF0000'><B>NOTE: THIS GPMP  IS NOW OUT OF DATE - CLAIMED ON " & Format(GPMP!date_claimed, "dd/mm/yyyy") & "</P></P>"
            tlExistingGPMPWarning.text &= "<P><FONT COLOR= #000000'>Any summary of a patient's medical record should be regarded as a 'snapshot in time'.</P>"
            tlExistingGPMPWarning.text &= "<P><FONT COLOR='#000000'>EasyGP has detected that since the preparation of this GPMP some details contained in the document have changed.</P>" 
            tlExistingGPMPWarning.text &= "<P><FONT COLOR='#000000'>If you wish to distribute an up-to-date health record or GPMP  click on the View GPMP on the main toolbar which will print out an updated version "
            tlExistingGPMPWarning.text &= "containing anything that has changed since this plan was prepared."
            tlNewPlan.Visible = False  
            tlExistingGPMPWarning.Visible = True   
         End If  
         bPreparingGPMP = False  
      Else   'done today, user could have re-opened this module having modified the health care stuff
         tlExistingGPMPWarning.text = "<P><FONT COLOR= #000000'><B>This GPMP was created and claimed today</B></P>"
         tlExistingGPMPWarning.text &= "<P><FONT COLOR= #000000'>You may modify this by clicking the 'Edit' button on the main toolbar,  and re-save any time today, after which time it will not be accessible for editing."
         tlNewPlan.Visible = False  
         tlExistingGPMPWarning.Visible = True   
         bPreparingGPMP = True 
         GPMP_Latex = modProgressNotes.Health_Summary_Construct_LaTex(currentconsult, GPMP, Providers_Selected_For_TCA).GetData() 'true = bGPMP in that routine now true
         If GPMP_Latex <> GPMP!latex Then
            Message.Warning("Since you saved this GPMP Today, the medical record has changed, you should re-save this GPMP again now")
            Edit  'set up for edit and sets  bEditing = True
         Endif
         GPMP!latex = GPMP_Latex  
      End If 
   Else
      tlExistingGPMPWarning.Visible = False   
      tlNewPlan.Visible = True   
   End If 
   chkGPMPExplainedStepsInvolved.value = GPMP!explained_steps_involved
   If GPMP!patient_agrees_to_plan_and_goals = True Then
      rbGPMPPatientAgreesYes.value = True
   Else
      rbGPMPPatientAgreesNo.value = True
   Endif
   If GPMP!patient_has_carer = True Then
      rbPatientHasCarerYes.value = True
      Hbox_Copy_To_Carer.Enabled = True    'fixme factor out shared with rbEditarea_click
      lblPatientGivesPermission.Foreground = Color.TextForeground
      lblCopyToCarer.Foreground = Color.TextForeground
      lblPatientGivesPermission.Foreground = Color.TextForeground
   Else
      rbPatientHasCarerNo.value = True
      Hbox_Copy_To_Carer.Enabled = False  
      lblPatientGivesPermission.Foreground = Color.LightForeground
      lblCopyToCarer.Foreground = Color.LightForeground
      lblPatientGivesPermission.Foreground = Color.LightForeground
      chkGPMPCopyToCarer.value = False
      chkGPMPPatientAllowsCarerCopy.value = False  
   Endif
   chkGPMPCopyToPatient.value = True 'will always be true
   chkGPMPPatientAllowsCarerCopy.Value = GPMP!patient_permits_carer_to_have_copy
   chkGPMPCopyToCarer.value = GPMP!copy_offered_to_carer 
   txtGPMPReviewDate.text = Format(GPMP!review_date, "dd/mm/yyyy")
   GPMP_Latex = GPMP!latex                                  'do not delete this global variable, used in save 'the existing latex
   GPMP_Display_Latex(GPMP_Latex)                            'display the current version (i.e that which was saved')
   bExit = False  
   If bEditing Then EditArea_Notify_DataChange(True)
   
End

Private Sub Settings_Load()
   
   Try Vsplit_TCA.layout = Settings["FGPMPTCA/VSplit_TCA.layout", modUtilGUI.VSplit([2, 3])]
   Try HSplit_GPMP.Layout = Settings["FGPMPTCA/Health_Issues_HSplit_GPMP.layout"]
   
End

Public Sub zoom_in()
   
   form_pdf.zoom_in
   
End

Public Sub zoom_out()
   
   form_pdf.zoom_out
   
End

Public Sub TCA_Providers_Click()
   
   If Last.value = True Then
      Providers_Selected_For_TCA.Add(Last.tag, Last.tag!fk_provider_of_care)
   Endif
   
End

Public Function TCA_Valid_Data() As Boolean
   '---------------------------
   'Checks enough data for save
   '---------------------------
   
   Dim sMsg As String
   Dim TCM As Collection
   Dim total_epc_sessions As Integer
   Dim PH As Collection
   Dim sSessionInfo As String
   Dim Missing_Needs As New Collection 
   Dim missing_need As Collection 
   
   Message.Title = "EasyGP Team Care Arrangements"
   If rbTCA.value = False And rbTCAReview.Value = False Then
      smsg = "Please select the item number for this Team Care Arrangement"
      Message.Info(sMsg, "Ok")
      Return
   Endif
   If TCA!team_care_members.count < 2 Then    
      sMsg = "<P>To qualify for team care arrangements, you must select at least two providers in addition to yourself, "
      "one of whom must be an allied health person, one of whom can be another doctor or another allied health professional.<P>"
      "<P>This information must of course have been entered as part of the patients past history - of health issues. "
      "If you have not already done this, you should go to the Health Issues or Past History section of EasyGP and enter the health issues "  
      "that are being cared for by the team involved. For each of these issues you must include information on:"
      "<UL><LI>The clinical goals you are trying to achieve"
      "<LI>The history of this issue and the plan of how you are going to achieve these clinical outcomes"
      "<LI>The reason you need to do a team care arrangement for this health issue"
      "<LI>Which member of the team will do what, including the GP, the Patient, and one or more team members who will be "
      "looking after the patient for the particuilar issue</UL> Once this is done, you can select the team members name from "
      "the combo box on this screen, and optionally allocate a special note, or a number of allied health sessions and type."
      Message.Info(sMsg)
      cmbProviders.SetFocus
      Return   
   Endif
   If chkTCAExplainedSteps.value = False Then
      sMsg = "Please indicate that you have explained the  steps involved in the preparation of the Team Care Arrangements to the patient." 
      Message.Info(sMsg)
      chkTCAExplainedSteps.SetFocus
      Return 
   Endif
   If chkTCADiscussedProviders.value = False Then
      sMsg = "You must explain to the patient who will be the team care members and what their role will be in the team who will be looking after the patient."
      Message.Info(sMsg)
      chkTCADiscussedProviders.SetFocus
      Return 
   Endif
   If rbTCAPatientAgreesNO.value = True Or rbTCAPatientAgreesYes.value = False Then
      sMsg = "Without the patient agreeing to the arrangements and the goals, the Team Care Arrangements cannot be claimed."
      Message.Info(sMsg)
      rbTCAPatientAgreesYes.SetFocus
      Return   
   Endif
   If chkTCACopyToPatient.value = False Then
      sMsg = "Please indicate whether a copy of the Team Care Arrangements has been offered to the patient.\n\n"
      "They do not have to take a copy, but  you must offer one."
      Message.Info(sMsg)
      chkTCACopyToPatient.SetFocus
      Return 
   Endif
   If chkGPMPPatientAllowsCarerCopy.Value = True Then                                      'patient will allow carer a copy
      If chkGPMPCopyToCarer.value = False Then                                             'no indication that they did
         sMsg = "The patient agree's to a carer getting a copy of the Team Care Arrangements - do you want to  offer a this to the carer?"
         If Message.Question(smsg, "Yes", "No") = 1 Then 
            chkGPMPCopyToCarer.value = True
            Return
         Endif
      End If
   Endif
   If chkTCACopyToCarer.value = True And chkTCAPatientAllowsCarerCopy.value = False Then
      sMsg = "If you are going to give the carer a copy of the Team Care Arrangements then you must record that the patient agrees to this"
      Message.Info(sMsg)
      chkTCAPatientAllowsCarerCopy.SetFocus
      Return   
   Endif
   If rbTCAPatientHasCarerYes.Value = True Then   'patient has a carer
      If chkTCACopyToCarer.value = True And chkTCAPatientAllowsCarerCopy.value = False Then
         sMsg = "If you are going to give the carer a copy, you must indicate that the patient has agreed to this."
         Message.Info(sMsg)
         chkTCAPatientAllowsCarerCopy.SetFocus
         Return   
      Endif
   Endif
   If chkTCACopyToProviders.value = False Then
      sMsg = "Please indicate if the relevant part of the documentation for the Team Care Arrangements has been "
      "sent to the individual providers and that two way communication has been established."
      Message.Info(sMsg)
      chkTCACopyToProviders.SetFocus
      Return          
   Endif
   If Not IsDate(txtTCAReviewDate.text) Then
      sMsg = "Please enter a valid date for review of the Team Care Arrangements"
      Message.Info(sMsg)
      With txtTCAReviewDate
         .text = ""
         .BackGround = Color.rgb(95, 255, 175)
         .SetFocus
      End With
      Return  
   End If    
   For Each TCM In TCA!team_care_members
      If Not IsNull(TCM!num_epc_sessions) Then
         total_epc_sessions += TCM!num_epc_sessions
         sSessionInfo &= "  - " & Str(TCM!num_epc_sessions) & " to " & TCM!wholename & "\n"
         If total_epc_sessions > 5 Then
            Message.info("There are " & Str(total_epc_sessions) & " epc sessions allocated in this Team Care Arrangement.\n\n" & sSessionInfo & "\nThis exceeds the permissible number of 5, you should fix this before saving.")
            Return 
         Endif
         If IsNull(TCM!fk_lu_allied_health_care_type) Then
            Message.info("You have allocated " & Str(TCM!num_epc_sessions) & " EPC sessions to " & TCM!wholename & " but you have not indicated the type of session to be printed on the EPC form.")
            Return
         Endif
         If TCA!item_number = "732" Then
            If IsNull(TCM!progress_towards_goals) Then
               sMsg = "You have not written anything about the progress this patient is making "
               sMsg &= "under the care of yourself and " & TCM!wholename & " (" & TCM!occupation & ") "
               sMsg &= "towards the goals you have set for the management of "
               If TCM!providers_problems.count > 1 Then
                  smsg &= "these health issues"
               Else
                  sMsg &= "this health issue"
               Endif
               smsg &= ":\n\n"
               For Each PH In TCM!providers_problems
                  sMsg &= PH!description & "\n" 
               Next
               sMsg &= "\nPlease fix this before saving."
               Message.Info(sMsg)
               Return 
            Endif
         Endif
      Endif
      sMsg = ""
      For Each PH In TCM!providers_problems
         If IsNull(PH!health_need) Then
            If Not Missing_Needs.Exist(PH!description) Then  
               Missing_Needs.Add(["need": PH!description], PH!description)
            End If   
         Endif
      Next
      
      For Each PH In TCM!providers_problems
         Message.title = "Missing Data"
         sMsg = ""
         If IsNull(PH!aim_of_plan) Then
            sMsg &= "<LI><P><B>The aim or goals </B> is missing.</P>"
         Endif
         If IsNull(PH!plan_contribution_patient) Then
            sMsg &= "<LI><P><B>The patient contribution</B> or what the patient will do to action the needs and achieve the goal  is missing</P>" 
         Endif
         If IsNull(PH!plan_contribution_others) Then
            sMsg &= "<LI><P><B>The contribution of involved providers or what the providers will do to action the needs and achieve the goal  is missing</B></P>" 
         Endif
         If sMsg <> "" Then
            sMsg = "<P><B>Data is missing for the health issue: " & UCase(PH!description) & "</B></P>" & sMsg 
            sMsg &= "<P>You should ensure all appropriate fields are completed in the Health Issues section before proceeding, for all  conditions involved with this Team Care Arrangement.</P>"
            Message.Warning(smsg)
            Return 
         Endif
      Next
      If rbTCAReview.vAlue = True Then
         Message.Title = "Team Care Arrangement Review"
         If TCM!progress_towards_goals = "" Then
            sMsg = "<B>Team Member: </B>" & TCM!wholename & "<BR>"
            If TCM!providers_problems.count > 1 Then
               smsg &= "<B>Conditions: </B><BR><BR>"
            Else
               smsg &= "<P><B>Condition: </B><BR><BR>"
            Endif
            For Each PH In TCM!providers_problems
               sMsg &= PH!description & "<BR>"
            Next
            smsg &= "<P>As you are reviewing a team care arrangement you should probably write something about "
            "the progress the members of the team are making towards achieving the goals of the TCA for "
            If TCM!providers_problems.count > 1 Then 
               sMsg &= "these conditions."
            Else 
               smsg &= "this condition."
            End If 
            sMsg &= "</P>" 
            Message.Warning(smsg, "Ok")
            Return
         Endif
      Endif
   Next
   If Missing_Needs.count Then
      Message.Title = "NEED FOR THE TCA IS MISSING"
      sMsg = "<P><b>There must be a reason or need which prompted you to prepare this Team Care Arrangement</B></P>"
      sMsg &= "<P>Your team care members are involved with the health issue"
      If Missing_Needs.count > 1 Then
         sMsg &= "s"
      End If   
      sMsg &= ":</P><P><B>"
      For Each missing_need In Missing_Needs
         smsg &= UCase(missing_need!need) & "<BR>"
      Next
      sMsg &= "</P><P> and there is no reason stated as to why  you need providers to assist in looking after "
      If Missing_Needs.count > 1 Then
         sMsg &= "these conditions."
      Else
         smsg &= "this condition."
      End If
      sMsg &= "</P>"
      sMsg &= "<P>The Medicare documentation explicity states the following:</P><P><I>\"GPMPs And TCA are not designed simply as mechanisms to provide Medicare rebates for allied health services. They are tools to coordinate the care of people with chronic conditions and help to reduce the need for ad hoc consultations.\"</I></p>"
      sMsg &= "<P>As a very concrete example consider this:</P>"
      sMsg &= "<P> If the patient was diabetic, had a poor understanding of carbohydrate intake, and their poor glycaemic control had lead to peripheral neuropathy and ischaemia in their feet, then the need for the allied health professionals to be involved could be articulated as:"
      sMsg &= "<UL><LI>poor diabetic control<LI>lack of understanding of carbohydrate metabolism<LI>inadequate nail care leading to recurrent infections of the toes</UL></P>"
      sMsg &= "<P>You should return to the Health Issues section of EasyGP and enter the reason or need for their involvement, and save this information before claiming the TCA.</P>"
      Message.Warning(sMsg)
      Return
   Endif
   
   If total_epc_sessions = 0 Then
      sMsg = "You have not allocated any allied health sessions to any of the team care members.\n\n"
      "Please correct this before claiming the item number."
      Goto show_message
   Else
      If total_epc_sessions < 5 Then    
         sMsg = "You allocated a total of " & Str(total_epc_sessions) & " allied health sessions out of the available total of 5 " 
         sMsg &= "available to be distributed amongst the team care members.\n\n"
         "Do you want to continue and claim this TCA?"
         If Message.Question(sMsg, "Yes - Claim the TCA", "Cancel") = 2 Then Return
      End If  
   End If       
   If currentConsult!allergies.count = 0 Then
      Allergies_Missing_Reminder 
      Return
   Endif 
   Return True   'Ah!! success
   
show_message:
   Dec Application.Busy
   Message.Title = "Missing Data"
   Message.Info(sMsg)
   
End

Public Function TCA_Needs_Goals_Who_Does_What(providers_problems As Collection) As Collection
   ' 
   
   Dim PH As Collection 
   Dim x As Integer
   Dim NGWDW As New Collection
   Dim sGoals As String
   Dim sNeeds As String
   Dim sProviderRole As String
   Dim sPatientRole As String
   Dim sGPRole As String
   
   For Each PH In providers_problems
      If x = 0 Then 
         If Not IsNull(PH!health_need) Then  
            sNeeds &= modUtil.Ucase_Word_First_Letter(PH!health_need) & ", "
         End If   
      Else
         If Not IsNull(PH!health_need) Then  
            sNeeds &= PH!health_need & ", "
         End If  
      End If   
      If x = 0 Then 
         If Not IsNull(PH!aim_of_plan) Then  
            sGoals &= modUtil.Ucase_Word_First_Letter(PH!aim_of_plan) & ", "
         End If   
      Else
         If Not IsNull(PH!aim_of_plan) Then    
            sGoals &= PH!aim_of_plan & ", "
         End If   
      End If   
      If x = 0 Then 
         If IsNull(PH!plan_contribution_patient) Then
            sPatientRole = "<missing contribution by patient>"
         Else
            sPatientRole &= currentConsult!patient!firstname & " will " 
         End If
      End If   
      If Not IsNull(PH!plan_contribution_patient) Then
         sPatientRole &= PH!plan_contribution_patient
         If Right(PH!plan_contribution_patient) <> "." Then sPatientRole &= ". "
      Endif
      If x = 0 Then sGPRole &= "The gp will "
      sGPRole &= PH!plan_contribution_gp & ". "
   Next
   NGWDW.Add(sNeeds, "needs")
   NGWDW.Add(sGoals, "goals")
   NGWDW.Add(sProviderRole, "provider role")
   NGWDW.Add(sGPRole, "gp role")
   NGWDW.Add(sPatientRole, "patient role")
   Return NGWDW
   
End

Public Function GPMP_Valid() As Boolean
   '---------------------------
   'Checks enough data for save
   '---------------------------
   
   Dim sMsg As String
   
   Message.Title = "EasyGP GP Management Plans"
   If IsNull(currentconsult!patient!fk_doctor) Then
      modPatientWarnings.Usual_Doctor_InForm_Missing
      Return
   Endif
   If chkGPMPExplainedStepsInvolved.value = False Then
      sMsg = "Please indicate that you have explained the  steps involved in the preparation of the GP Management Plan to the patient" 
      Goto show_message 
      chkGPMPExplainedStepsInvolved.SetFocus
      Return 
   Endif
   
   If rbGPMPPatientAgreesNo.value = True Or rbGPMPPatientAgreesYes.value = False Then
      sMsg = "Without the patient agreeing to the plan and the goals, the GP Management Plan cannot be claimed"
      Goto show_message 
      rbGPMPPatientAgreesYes.SetFocus
      Return   
   Endif
   If chkGPMPCopyToPatient.value = False Then
      sMsg = "Please indicate whether a copy of the GP Management Plan has been offered to the patient.\n\n"
      "They do not have to take a copy, but  you must offer one."
      Goto show_message 
      chkGPMPCopyToPatient.SetFocus
      Return 
   Endif
   If chkGPMPPatientAllowsCarerCopy.Value = True Then                                      'patient will allow carer a copy
      If chkGPMPCopyToCarer.value = False Then                                             'no indication that they did
         sMsg = "The patient agree's to a carer getting a copy of the GP Management Plan - do you want to  offer a this to the carer?"
         If Message.Question(smsg, "Yes", "No") = 1 Then 
            chkGPMPCopyToCarer.value = True
            Return
         Endif
      End If
   Endif
   If chkGPMPCopyToCarer.value = True And chkGPMPPatientAllowsCarerCopy.value = False Then
      sMsg = "If you are going to give the carer a copy of the GP Management Plan then you must record that the patient agrees to this"
      Goto show_message
      chkGPMPPatientAllowsCarerCopy.SetFocus
      Return   
   Endif
   
   If Not IsDate(txtGPMPReviewDate.text) Then
      sMsg = "Please enter a valid date for review of the GP Management Plan"
      Goto show_message
      With txtGPMPReviewDate
         .text = ""
         .BackGround = Color.rgb(95, 255, 175)
         .SetFocus
      End With
      Return  
   End If    
   If currentConsult!allergies.count = 0 Then
      Allergies_Missing_Reminder
      Return
   Endif
   Return True 
show_message:
   Dec Application.Busy
   Message.Title = "Missing Data"
   Message.Info(sMsg)
   
End

Public Sub Allergies_Missing_Reminder()
   
   Message.Title = "MISSING ALLERGY DATA"
   Message.Warning("There is no record the patient has been asked about allergies.\n\nYou should enter this information before proceeding.")
   Allergy_Data_Missing_Show_Tip
   
End

Public Function Team_Care_Consent_LaTex(provider As Collection) As String
   '------------------------------------------------------------------------------------------------------------
   ' if modAdminDBI.Config_Get_Staff_Member("print-tca-consent-forms" etc) true then print a consent form to fax
   ' -----------------------------------------------------------------------------------------------------------
   
   Dim templ As New CTemplate("team-care-consent", "tex")
   
   templ.Subst_common(currentconsult)
   templ.Subst("date", Format(Now, "dd/mm/yyyy"))
   templ.Subst("fname-provider", modStrings.Capitalise_Words_In_String(provider!firstname)) 
   templ.Subst("provider", Provider_Create_Name_Address_Latex_String(provider))
   Print templ.GetData()
   Return templ.GetData()
   
End

Public Function Provider_Create_Name_Address_Latex_String(provider As Collection) As String
   '-----------------------------------------------
   'Returns a string like this of a provider or TCM
   'name\\
   'address\\
   'comms
   '-----------------------------------------------
   
   Dim sstring As String
   Dim comm As Collection
   Dim provider_comms As Collection
   
   If Not IsNull(provider!organisation) Then
      sstring = provider!organisation
      If provider!branch <> "HEAD OFFICE" Then
         SSTRING &= "\\\\" & provider!branch & "\\\\"
      Endif
   Endif
   sstring = modStrings.Capitalise_Words_In_String(provider!wholename) & "\\\\" & modStrings.Capitalise_Words_In_String(provider!occupation) & "\\\\" & provider!street1 & "\\\\"
   If Not IsNull(provider!street2) Then
      sstring &= provider!street2 & "\\\\"
   Endif
   sstring &= provider!town & " " & provider!postcode & "\\\\"
   If provider!fk_branch Then
      provider_comms = modContactsDBI.Branch_Comms_Get(provider!fk_branch)    
   Else
      If provider!fk_person Then
         provider_comms = modContactsDBI.person_comms_get(provider!fk_person)
      Endif
   Endif
   If provider_comms.count Then
      For Each comm In provider_comms
         If comm!fk_type = const.CommModalityPhone Or comm!fk_type = const.CommModalityPhone Then
            sstring &= "Phone:" & comm!value & "\\\\"
         Endif                              
         If comm!fk_type = const.CommModalityFax Then
            sstring &= "Fax:" & comm!value & "\\\\"
         Endif                              
      Next
   Endif
   Print sstring
   Return sString
   
End

Public Sub Allergy_Data_Missing_Show_Tip()
   
   Dim sMsg As String
   
   If Not modAdminDBI.Has_User_Seen_Tip("FClinical.QuickAllergyEntry") Then 
      sMsg = "<P>There is a really quick way to record that you have asked the patient about allergies and that they are not allergic to anything.</P>"
      "<P>Just right mouse click underneath the red Allergies/Sensitivities Label at the top of the clinical tool bar and select "
      "'Mark no Allergies or Sensitivities' from the popup menu.</P>"
      "</P>Of course, if they have a true allergy or sensitivity you will have to enter this in the Allergies module.</P>"
      With FUsageTip
         .Init("Entering Patient Allergies", "FClinical.QuickAllergyEntry", sMsg)
         .ShowModal()
      End With  
   End If
   
End 

Public Function EditArea_TxtBox_ExcludeKeys(keycode As Integer, tag As String) As Boolean
   '----------------------------------
   'valid keypress for e.g date format
   '----------------------------------   
   
   Select Case tag
      Case "gpmp review date", "tca review date"
         Return modUtilGUI.AllowKeys(Const.AllowKeys_Date_DWMY, keycode) 'can type date or eg 12M
      Case Else
         Return True
   End Select
   
End

Public Sub EditArea_TxtBox_KeyPress()
   
   If Not EditArea_TxtBox_ExcludeKeys(key.code, Last.tag) Then    'validate key input first
      Stop Event                                                  'no good? don't show key output
      Return
   End If
   If (Last.tag = "tca review date" Or "gpmp review date") And Key.code = Key.return Then
      modEditAreaHelpers.Calculate_Date_From_Interval(Last, currentConsult.GetConsultDate())
   Endif
   
End

Public Sub TCA_Setup_For_Review(bflag As Boolean)
   
   Selected_provider!team_care_form.HBox_TCAReview_Progress.Visible = bflag
   If Not bflag Then
      Selected_provider!team_care_form.txtProgressTowardsGoals.text = ""
   End If   
   Try TCA_Display_Latex(Selected_provider)
   
End

Public Sub rbEditArea_Click()
   
   If bExit Then Return    
   
   Select Case Last.tag
      Case "tca item 723"
         lblTeamCareMembersAndArrangements.text = "Team Care Arrangements & Members (NEW)"
         Try TCA_Setup_For_Review(False) 'try because selected provider may be null
      Case "tca review item 732"
         Try TCA_Setup_For_Review(True)
         lblTeamCareMembersAndArrangements.text = "Team Care Arrangements & Members (REVIEW)" 
      Case "tca carer yes"
         lblCopyToCarerTCA.Foreground = Color.TextForeground
         lblPatientGivesPermissiontca.Foreground = Color.TextForeground
         Hbox_Copy_To_Carer_TCA.Enabled = True  
         chkTCACopyToCarer.Enabled = True 
         chkTCAPatientAllowsCarerCopy.Enabled = True  
      Case "tca carer no"
         lblCopyToCarerTCA.Foreground = Color.LightForeground
         lblPatientGivesPermissiontca.Foreground = Color.LightForeground
         Hbox_Copy_To_Carer_TCA.Enabled = False   
         With chkTCACopyToCarer
            .Enabled = False   
            .value = False
         End With
         With chkTCAPatientAllowsCarerCopy
            .Enabled = False  
            .value = False 
         End With
         
      Case "gpmp carer no"
         Hbox_Copy_To_Carer.Enabled = False  
         lblPatientGivesPermission.Foreground = Color.LightForeground
         lblCopyToCarer.Foreground = Color.LightForeground
         lblPatientGivesPermission.Foreground = Color.LightForeground
         chkGPMPCopyToCarer.value = False
         chkGPMPPatientAllowsCarerCopy.value = False  
         '  GPMP!patient_has_carer = False  
      Case "gpmp carer yes"  
         Hbox_Copy_To_Carer.Enabled = True  
         lblPatientGivesPermission.Foreground = Color.TextForeground
         lblCopyToCarer.Foreground = Color.TextForeground
         lblPatientGivesPermission.Foreground = Color.TextForeground
         '  GPMP!patient_has_carer = True  
         
   End Select
   EditArea_Notify_DataChange(True) 
   
End

Public Sub Review_Date_Calculate()
   'Calculates the review date if  user typed in e.g 6M   
   ' If UCase(Right(Trim(txt.text), 1)) = "M" Then
   '    '---------------------------------------------------------------------------
   '    'Try and convert the rest of the string (ie left part which should be number
   '    'to a number, if error, pop up invalid date and return
   '    'Remember that  bkeyvalid = EditArea_TxtBox_ExcludeKeys(key.code) has
   '    'only allowed numbers or mM or Yy for this textbox, but some idiot could
   '    'have tried out patience by typing in e.g 10m10M or something
   '    '---------------------------------------------------------------------------
   '    Try iNumberOfMonths = Val(Left(txt.text, Len(Trim(txt.text)) - 1))
   '    If Error Then
   '       txtDate.text = ""
   '       Return
   '    End If
   '    If txt.tag = "interval" Then
   '       fk_interval_unit = const.Units_month
   '       interval = iNumberOfMonths
   '    Else
   '       fk_default_interval_unit = const.Units_month
   '       default_interval = iNumberOfMonths
   '       If Trim(txtInterval.text) = "" Then
   '          fk_interval_unit = const.Units_month
   '          interval = iNumberOfMonths
   '          txtInterval.text = txtDefaultInterval.Text
   '       End If
   '    Endif
   '    txtDate.text = Format(DateAdd(Now, gb.Month, iNumberOfMonths), "dd/mm/yyyy") 
   
End

Public Sub EditArea_TxtBox_Gotfocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   
End

Public Sub EditArea_TxtBox_LostFocus()
   
   If Last.tag = "gpmp review date" Or Last.tag = "tca review date" Then
      If Not IsDate(Last.text) Then
         Message.title = "EasyGP"
         Message.Info("Please enter a valid review date")
         Last.text = ""
      Endif
   Endif
   Last.Background = Color.White
   
End

Public Sub EditArea_TxtBox_Change()
   
   If bExit Then Return    
   EditArea_Notify_DataChange(True)
   
End

Public Sub EditArea_Clear()
   
   If TabStrip1.index = cTab_GPMP Then
      modEditAreaHelpers.EditArea_Clear(VBox_EditArea_GPMP)
      Hbox_GPMP_Text.Visible = False   
   Else
      modEditAreaHelpers.EditArea_Clear(VBox_EditArea_TCA)
   End If  
   EditArea_Notify_DataChange(False)
   
End

Public Sub EditArea_Notify_DataChange(flag As Boolean)
   '--------------------------------------------------
   'Adds or removes padding around edit area and lists
   'to indicate if data is changed and unsaved
   '--------------------------------------------------
   
   If Bexit Then Return    
   Select Case TabStrip1.Index
      Case cTab_GPMP
         If flag Then
            VBox_EditArea_GPMP_Outer.Padding = 1
         Else
            VBox_EditArea_GPMP_Outer.Padding = 0
         End If
      Case cTab_TCA
         If flag Then
            VBox_EditArea_Outer_TCA.Padding = 1
         Else
            VBox_EditArea_Outer_TCA.Padding = 0
         End If
   End Select
   
End

Public Sub chkEditArea_Click()
   
   If bexit Then 
      Return
   End If   
   Select Case Last.tag
      Case "gpmp copy to patient"
         If chkGPMPCopyToPatient.value = True Then  
            '   GPMP!copy_offered_to_patient = True
         Else
            '  GPMP!copy_offered_to_patient = False
         End If  
      Case "gpmp patient allows carer copy"
         If chkGPMPPatientAllowsCarerCopy.value = True Then
            If chkGPMPPatientAllowsCarerCopy.value = True Then
               '   GPMP!copy_offered_to_carer = True  
            Else
               '    GPMP!chkGPMPCopyToCarer = False 
            End If  
         Else
            ' GPMP!copy_offered_to_carer = False  
            chkGPMPCopyToCarer.value = False 
         Endif
      Case "gpmp copy to carer"
         If chkGPMPCopyToCarer.value = False Then
            '   GPMP!copy_offered_to_carer = False
         Else
            bexit = True  
            If chkGPMPPatientAllowsCarerCopy.value = False Then
               chkGPMPCopyToCarer.value = False 'reset to false, not allowed
               '    GPMP!copy_offered_to_carer = False
            Else
               '    GPMP!copy_offered_to_carer = True   
            Endif
            bexit = False
         Endif
   End Select
   EditArea_Notify_DataChange(True)   
   
End

Public Sub TabStrip1_Click()
   '--------------------------------------------------------
   'User has clicked on either health issues gpmp or tca tab
   'tab index 0 = health issues = no pdf showing on the right
   'tab index 1 = gpmp
   'tab index 2= TCA
   '--------------------------------------------------------   
   
   Decision_Support()                                                                   'unless user has said not do display again, show decision support
   Select Case TabStrip1.Index
      Case cTab_GPMP
         VBox_Plan_PDF.Visible = True                                                   
         If Not bPreparingGPMP Then    
            GPMP_Display
         Else
            Health_Summary_Reload
         End If  
      Case cTab_TCA
         VBox_Plan_PDF.Visible = True                                                   'Show pdf to the right 
         If IsNull(TCA) Then                                                            'No TCA Yet this instance of the form?                                         
            TCA_Reload()                                                                'try and get a TCA
            Try HSplit_GPMP.layout = Settings["FGPMPTCA/GPMPTCA_HSplit_GPMP.layout"] 
         End If  
         If Not bNewTCA And WorkspaceEditor.Windows.count = 0 Then 
            TCA_Display    
         Else
            Try lblClaimDetails.text = "TCA - Claimed on " & Format(TCA!date_claimed, "dd/mm/yyyy")
            WorkSpaceEditor_Activate           
         End If   
      Case cTab_HealthIssues
         VBox_Plan_PDF.Visible = False 
   End Select  
   
End

Public Sub chkGPMP_Click()
   '----------------------------------------------------------------------------
   'User has clicked on either the GPMP checkbox or the review of GPMP checkbox
   '---------------------------------------------------------------------------
   
   If Bexit Then Return
   Select Case Last.tag
      Case "gpmp"
         If Last.value = True Then Health_Summary_Reload()
      Case "gpmp review"
   End Select
   
End

Public Sub WorkSpaceEditor_TCA_Remove_Invalid_Tabs()
   '--------------------------------------------------------------------------
   'If user has deleted a provider in the health issues module and the provider
   'has already been allocated to the TCA and is on a tab, remove that tab
   '--------------------------------------------------------------------------- 
   
   Dim win As Window
   Dim TCM As Collection
   Dim bNameValid As Boolean 
   Dim x As Integer
   Dim form_team_Care_member As FTeamCareMember
   
   For Each win In WorkspaceEditor.windows
      bNameValid = False   
      For Each TCM In TCA!team_care_members
         If TCM!wholename = win.title Then
            bNameValid = True 
            Break
         Endif
      Next
      If Not bNameValid Then
         form_team_Care_member = WorkspaceEditor.Windows[x]
         With form_team_Care_member
            .bexit = True    'normally the close event on this removes the team member
            .Close
         End With
      Endif
      Inc x
   Next
   
End

Public Sub WorkspaceEditor_Clear()
   'Purpose: removes all existing child tabs from the workspace editor
   
   Dim hWindow As Window
   
   bexit = True   
   WorkspaceEditor.Lock()
   For Each hWindow In WorkspaceEditor.Windows
      hWindow.Close()
   Next
   WorkspaceEditor.Unlock()
   bExit = False  
   
End

Public Sub WorkSpaceEditor_Activate()
   '-------------------------------------------------------------------------------
   ' show the latex for the currently selected tab
   ' there is a half-baked bit of code here to remove a TCM
   ' if the user closes their tab however this only works if the tab is on the end
   ' FIXME - can't find a workspace event to allow me to do this
   ' ------------------------------------------------------------------------------  
   
   If bexit Then Return
   If TabStrip1.index <> cTab_TCA Then Return 
   If Not IsNull(WorkspaceEditor.ActiveWindow) Then 
      If Not IsNull(WorkspaceEditor.ActiveWindow.Tag) Then
         Selected_provider = WorkspaceEditor.ActiveWindow.Tag
         TCA_Setup_For_Review(rbTCAReview.Value)  'show goals textbox if a review
         TCA_Display_Latex(Selected_provider)
      Endif
   End If   
   
End

Public Sub HSplit_GPMP_Resize()
   
   If bexit Then Return
   Select Case TabStrip1.Index
      Case cTab_HealthIssues
         Settings["FGPMPTCA/Health_Issues_HSplit_GPMP.layout"] = HSplit_GPMP.layout
      Case cTab_GPMP, cTab_TCA
         Settings["FGPMPTCA/GPMPTCA_HSplit_GPMP.layout"] = HSplit_GPMP.layout
   End Select
   
End

Public Sub VBox_EditArea_GPMP_Leave()
   '---------------------------------------------------------------------
   'Update the GPMP Latex, e.g  user could have clickecd on copy to carer
   '---------------------------------------------------------------------
   
   If VBox_EditArea_GPMP_Outer.padding Then Health_Summary_Reload
   
End

Public Sub tlNewPlan_Create_Text()
   
   tlNewPlan.text = ""
   "<P><B>Creating a new GP Management Plan</B></P>"
   "<P> If you are happy the entire medical record is up to date, click on the 'New' Button on the main toolbar "
   " and the plan will be automatically generated. Aside from verifying the details of the claim, there is no data entry " 
   "for the plan done here.</P><P>To be a compliant plan, the patient must have at least one medical condition that "
   "has been (or is likely to be) present for at least six months or is terminal. </P>"
   "<P>The plan details should contain a summary of the history of the condition, the goals or aims of the plan, "
   "together with the actions and responsibilities of the plan members - the GP, the patient, and, if applicable, "
   "other health providers with whom the patient will access additional advice and services needed for their care.<P>"
   "<P>If you need to update any aspect of the plan now, you must do so in the appropriate sections of EasyGP "
   "and save your changes. These modifications will automatically appear in the pdf displayed here.</P>"
   "<P>Once you save this plan - <B><I><U>you can modify this copy any time on the same date as you have claimed Item 721.</U></I></B> " 
   "After that time, you may view this copy of the plan for medicare audit purposes via the tab labelled 'Plans' which is located "
   "on the upper right side of the main clinical screen on the multi-tabbed control. <B><I>The copy is not intended for distribution "
   "at a future date - it is only a 'snapshot' in time and will quickly be out of date.</P>"
   "<P>Fortunately, EasyGP will automatically create an up-to-date GPMP every time  change any apsect of the medical record. "
   "To print out or distribute an up-to-date copy of the GPMP  click on the 'View GPMP' button on the toolbar and then the 'Print' button</P> "
   "<HR>"
   "<P><B>BEFORE SAVING THE PLAN PLEASE READ IT CAREFULLY AND ENSURE THE SENTENCES MAKE SENSE WHEN READ - IF NOT GO BACK TO THE "
   "MEDICAL RECORD AND MAKE ANY NECESSARY CORRECTIONS. IF YOU FIND IT A BIT HARD TO READ ON THIS SCREEN, CLICK ON THE "
   "'Open in External Viewer' BUTTON LOCATED ABOVE THE PDF OF THE PLAN AND READ YOUR PLAN OUTSIDE OF EASYGP OR PRINT IT OUT.</B></P> "
   " <P><B><U>Remember that many other health providers will see your plan, and the opinions your colleagues have of you "
   "and your practice will be a reflection of its quality and accuracy!!!!<U></B></P><HR>" 
   
End
