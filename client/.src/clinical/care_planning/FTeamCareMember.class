' Gambas class file

' Copyright (C) 2014 Dr. Richard Terry
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'---------------------------------------------------------------------------------------------
'PURPOSE A Form to allow users to designate what clinical information will be
'       provided to team care members
'       Instances created in FGPMP.cmbProviders_Click() ie when new provider added to the team
'NOTE   the terms 'Health Issue' and "Past History' are  used interchangeably
'       sloppy I know but historically Horst/Ian didn't like the term heatlh issues
'       saying that GP's though in terms of 'Past History' so the backend tables
'       are named clin_history.past_history, whereas I tend to think in terms of
'       health issues. Sorry............ for the confusion should you read the code
'---------------------------------------------------------------------------------------------

Public Active_Health_Issues As Collection                          'the patient's active health issues
Private Health_Issue_Provider_Linked_To As Collection               'those health items associated with a particular providers
Public Health_Issues_To_Add As Collection                          'additional problems to include in the TCA
Public Family_History_To_Add As Collection                         'any family history user wants to add to the TCA
Public Graphs_To_Add As Collection                                 'any graphs to add to the TCA
Public Family_History As Collection                                'the family history collection (all) 
Private currentconsult As CConsult
Private lvHealthIssues_key As Integer                                   'lvwproblems.item.key
Private lvDocuments_Key As Integer                                   'lvDocuments.item.key
Private lvGraphs_Key As Integer                                     'lvGraphs.item.key
Private lvFamilyHistory_key As Integer                              'lvFamilyHistory.item.key                                 
Private Allied_Health_Types As Collection                           'e.g dietitian, aboriginal health worker
Private parent_Vbox_Edit_Area As VBox
Private team_care_member_name As String
Public bExit As Boolean
Public Copy_Additional_Notes As String                             'set by FGPMPTCA when loading this form

Public Sub Init(cons As CConsult, tcmn As String, aht As Collection, vbea As Vbox)
   '-------------------------------------------------------------------------------------------
   'Load the combo of available health issues to include details of
   'The default health issues the provider is already associated of will be shown automatically
   '-------------------------------------------------------------------------------------------  
   
   Dim HI As Collection
   
   team_care_member_name = tcmn
   parent_Vbox_Edit_Area = vbea
   currentconsult = cons
   lblMeasure.text = "Include Details For   "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea, lblMeasure)                   'make gui labels all same width as maximum one
   Health_Issues_To_Add = New Collection 
   Family_History_To_Add = New Collection
   Graphs_To_Add = New Collection   
   Active_Health_Issues = New Collection   
   For Each HI In currentconsult!past_history                                          'look through all past history or health issues
      If HI!active = True Then                                                   'and if an active problem
         If HI!confidential = False Then                                         'and not confidential
            Active_Health_Issues.Add(HI, cmbIncludeHealthIssue.count)              'add it to collection of active health issues
            If Not InStr(lblProblems.text, Lower(HI!description)) Then    
               cmbIncludeHealthIssue.Add(HI!description, cmbIncludeHealthIssue.count)     'and display in the combo
            End If   
         End If   
      End If  
   Next
   Allied_Health_Types = aht  
   modUtilGUI.LoadCombo(cmbAlliedHealthTypes, Allied_Health_Types, "type")
   With cmbAlliedHealthTypes
      .index = -1
      .Enabled = False  
   End With
   cmbIncludeHealthIssue.index = -1
 '  Vbox_EditArea.Enabled = True  
   FamilyHistory_Load_Combo()
   
End

Public Sub EditArea_Notify_Data_change(bflag As Boolean)
   
   If bflag Then 
      parent_Vbox_Edit_Area.Padding = 1
   Else
      parent_Vbox_Edit_Area.Padding = 0
   End If  
   
End

Public Sub FamilyHistory_Load_Combo()
   '-----------------------------------------------------------------------------
   'Called from this form and from FFamilyHistory > GPMPlan.Family_History_Update
   'FIXME GPMPlan has become a misnomer should be GPMP_TCA.form/class
   'As the family history can have been changed after the user has selected a FH
   'item to put onto the Team Care Arrangement, have to re-order the underlying
   'colleciton representing this
   '-----------------------------------------------------------------------------
   
   Dim FH As Collection
   Dim fk_relationship As Integer
   Dim sstring As String
   Dim temp_fh_to_add As Collection
   Dim temp_fh As Collection
   Dim x As Integer
   
   currentconsult.Refresh("family_history")   'update collection, user could have added more via FFamilyhistory
   Family_History = modUtil.Copy_Collection_Keyed_Sequentially(currentconsult!family_history)
   For Each FH In Family_History
      If fk_relationship <> FH!fk_member Then
         sstring = FH!relationship & " " & FH!condition
         fk_relationship = FH!fk_relationship
      Else
         sstring = Space$(Len(Fh!relationship)) & " " & FH!condition
      Endif
      cmbIncludeFamilyHistory.Add(sString)
      ' cmbRemoveFH.Add(sstring)
   Next
   If Family_History_To_Add.count Then                    'the existing collection of what user wants on TCA form
      temp_fh_to_add = New Collection
      For Each temp_fh In Family_History_To_Add           'for each already selected family history to print in TCA
         For Each FH In Family_History                    'check the updated list and get the key to match the combo
            If FH!pk_view = temp_fh!pk_view Then          'if new FH collection member = one of those user has selected
               temp_fh_to_add.Add(temp_fh, x)             'copy into a new collection with the new index where it will sit in combo
               Break
            End If  
         Next
         Inc x
      Next
      Family_History_To_Add = modUtil.Copy_Collection_Keyed_Sequentially(temp_fh_to_add)
   Endif
   cmbIncludeFamilyHistory.Index = -1
   
End

Public Sub TCA_Update()
   
   Me.Tag!additional_health_issues = Health_Issues_To_Add
   Me.Tag!family_history = Family_History_To_Add
   FGPMPTCA.TCA_Update  
   
End

Public Sub cmbIncludeHealthIssue_Click()
   '------------------------------------------------------------------------------
   'User wants to include clinical notes on some additional health issues/problems
   'end up with label.text like hypertension, obesity, fatty liver
   'add to list and update the LaTex
   '------------------------------------------------------------------------------      
   
   Wait
   If Health_Issues_To_Add.Exist(Active_Health_Issues[cmbIncludeHealthIssue.index]!pk_pasthistory) Then 
      Return
   Endif
   Health_Issues_To_Add.Add(Active_Health_Issues[cmbIncludeHealthIssue.index], Active_Health_Issues[cmbIncludeHealthIssue.index]!pk_pasthistory)
   lvHealthIssues.Add(Active_Health_Issues[cmbIncludeHealthIssue.index]!pk_pasthistory, cmbIncludeHealthIssue.text)
   Me.Tag!additional_health_issues = Health_Issues_To_Add
   cmbIncludeHealthIssue.Index = -1
   FGPMPTCA.TCA_Update
   EditArea_Notify_Data_change(True)
   
End

Public Sub txtNumberOfSessions_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   
End

Public Sub txtNumberOfSessions_LostFocus()
   
   Last.background = Color.White   
   
End

Public Sub cmbIncludeFamilyHistory_Click()
   '------------------------------------------------------------
   'User wants to include some family history problems on the TA
   'Increment the height of the text label Parent.Parent to 
   'ensure they are all visible on the screen
   '------------------------------------------------------------
   
   Wait
   If Family_History_To_Add.Exist(family_history[cmbIncludeFamilyHistory.index]!pk_view) Then
      Return   
   Endif
   Family_History_To_Add.Add(family_history[cmbIncludeFamilyHistory.index], family_history[cmbIncludeFamilyHistory.index]!pk_view)
   lvFamilyHistory.Add(family_history[cmbIncludeFamilyHistory.index]!pk_view, cmbIncludeFamilyHistory.text)
   cmbIncludeFamilyHistory.Index = -1
   TCA_Update  
   EditArea_Notify_Data_change(True)
   
End

Public Sub lvGraphs_select()
   
   lvGraphs.MoveCurrent
   lvGraphs_Key = lvGraphs.Item.Key
   
End

Public Sub lvGraphs_Menu()
   
   If Last.count Then mnuGraphs.popup
   
End

Public Sub mnuGraphs_Click()
   
   Select Case Last.Tag
      Case "delete"
      Case "font"
      Case "help"
         
   End Select
   
End

Public Sub lvHealthIssues_Select()
   
   lvHealthIssues.MoveCurrent
   lvHealthIssues_key = lvHealthIssues.Item.Key
   
End

Public Sub lvHealthIssues_Menu()
   
   If Last.count Then mnuHealthIssues.Popup
   
End

Public Sub mnuHealthIssues_Click()
   
   Select Case Last.Tag
      Case "delete"
         Health_Issues_To_Add.Remove(lvHealthIssues_key)
         lvHealthIssues.Remove(lvHealthIssues_key)
         TCA_Update
         EditArea_Notify_Data_change(True)
      Case "font"
         
      Case "help"
         modUtilGUI.NotImplemented("Help for health issues")
   End Select  
Catch
   Return
   
End

Public Sub lvFamilyHistory_Select()
   
   lvFamilyHistory.MoveCurrent
   lvFamilyHistory_key = lvFamilyHistory.Item.Key
   
End

Public Sub lvFamilyHistory_Menu()
   
   If lvFamilyHistory_key = 0 Then lvFamilyHistory_Select()
   If lvFamilyHistory.count Then mnuFamilyHistory.popup
   
End

Public Sub mnuFamilyHistory_Click()
   
   Select Case Last.Tag
      Case "delete"
         Family_History_To_Add.Remove(lvFamilyHistory_key)
         lvFamilyHistory.Remove(lvFamilyHistory_key)
         TCA_Update
         EditArea_Notify_Data_change(True)
      Case "font"
         modUtilGUI.Listview_SetFont(lvFamilyHistory, "GPMPTCA")
      Case "help"
         modUtil.NotImplemented
   End Select
Catch
   Return 'because sometimes clicking on menu key doesn't set
   
End

Public Sub lvDocuments_Select()
   
   lvDocuments.MoveCurrent 
   lvDocuments_Key = lvDocuments.Item.Key
   
End

Public Sub lvDocuments_Menu()
   
   If Last.count Then mnuDocuments.popup
   
End

Public Sub mnuDocuments_Click()
   '--------------------
   'Delete the docuement
   '-------------------- 
   
   Select Case Last.Tag
      Case "delete"
      Case "font"
      Case "help"
         
   End Select
   
End

Public Sub txtSpecialNote_Change()
   '---------------------------------------------------------------------
   'Any special notes the user want's to include in the letter to the TCM
   '---------------------------------------------------------------------

   If Trim(txtSpecialNote.text) <> "" Then    
      Me.Tag!special_note = txtSpecialNote.text 
   Else
      Me.Tag!special_note = Null
   End If 


End

Public Sub txtNumberOfSessions_Change()
   
   If Trim(txtNumberOfSessions.text) <> "" Then    
      Me.Tag!num_epc_sessions = Val(txtNumberOfSessions.text) 
      With cmbAlliedHealthTypes
         .Enabled = True     
      End With
      lblAlliedHealthType.Foreground = Color.TextForeground
   Else
      Me.Tag!num_epc_sessions = Null
      Me.Tag!fk_lu_allied_health_care_type = Null
      With cmbAlliedHealthTypes
         .Enabled = False   
         .index = -1
      End With
      lblAlliedHealthType.Foreground = Color.LightForeground
   End If   
   EditArea_Notify_Data_change(True)
   
End

Public Sub txtNumberOfSessions_KeyPress()
   
   If Not (Key.code = Key.Return Or Key.code = Key.BackSpace Or Key.code = Key.Delete Or (Key.code > 48 And Key.code < 54)) Then 
      Stop Event
      Return
   End If
   
End

Public Sub cmbAlliedHealthTypes_Click()
   
   Me.Tag!fk_lu_allied_health_care_type = Allied_Health_Types[cmbAlliedHealthTypes.index]!pk  
   EditArea_Notify_Data_change(True)
   
End

Public Sub Form_Close()
   '----------------------------------------------------------------------
   'Called - if in FGPMPTCA the user has closed a tab on the workspaceeditor
   '         i.e they have removed a team care member
   '       - if code from FPastHistory.ProviderOfCare_Delete() has instructed
   '         FCPMPTCA to delete a workspace editor tab in which case that
   '         tiggers this forms close event. As we don't want to execute the
   '         code after bExit.
   '----------------------------------------------------------------------  
   
   If bExit Then Return 
 '  FGPMPTCA.team_care_member_remove(team_care_member_name, False) '[fixme convert To keys
   FGPMPTCA.team_care_member_remove(Me.Tag!fk_provider_of_care, False)
End

Public Sub chkIncludeGPMP_Click()
   '-----------------------------------------------------------------------------   
   'If True then the provider will be given/sent a copy of the GP Management Plan
   '-----------------------------------------------------------------------------
   
   If Last.value = True Then
      Me.Tag!include_gp_management_plan = True
   Else
      Me.Tag!include_gp_management_plan = False
   Endif
   
End

Public Sub lvHealthIssues_LostFocus()
   
   lvHealthIssues.UnselectAll
   
End

Public Sub lvGraphs_LostFocus()
   
   lvGraphs.UnselectAll
   
End

Public Sub lvFamilyHistory_LostFocus()
   
   lvFamilyHistory.UnselectAll
   
End

Public Sub lvDocuments_LostFocus()
   
   lvDocuments.UnselectAll
   
End



Public Sub HBox_SpecialNote_Leave()
   '-------------------------------------------------------------
   'Force an update on the Latex showing for the team care member
   'User has at least had the cursor over the special notes text
   'if they have changed it > update the latex
   '-------------------------------------------------------------
   If VBox_EditArea.Enabled = False Then Return
   
   If Lower(Copy_Additional_Notes) <> Lower(Trim(txtSpecialNote.text)) Then 
      FGPMPTCA.TCA_Update
      EditArea_Notify_Data_change(True)
   End If   

End

Public Sub txtSpecialNote_GotFocus()

   Last.BackGround = Color.rgb(95, 255, 175)

End

Public Sub txtSpecialNote_LostFocus()

   Last.background = Color.White

End
