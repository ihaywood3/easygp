' Gambas module file

' Copyright (C) 2008-2016 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
' PURPOSE      Database access for certificates (non workcover)
'----------------------------------------------------------------------

Public Function Certificates_Miscellaneous(fk_patient As Variant, Optional sort_order As String = "desc") As Collection 
   '--------------------------------------------------------------------------------------------------------------
   'a temporary sub 12aug15 as proper implementation of certificates (bar workcover/medical) which were scanned in
   'was never completed. Yet staff could allocate a document as a certificate - it could be filed by the user
   'but was effectively 'lost' as not displayed anywhere
   'I will be (richard) rectifiying this over the coming months when this sub will disappear
   '--------------------------------------------------------------------------------------------------------------- 
   
   Dim sql As String
   
   sql = "Select * from documents.vwDocuments where fk_patient= " & fk_patient
   sql &= " AND fk_lu_display_as = " & const.Document_Display_As_Certificate
   sql &= " AND deleted = false ORDER BY " 
   sql &= "date_created " & sort_order
   Return modDBConnect.exec_query_collection(sql)
   
End

Public Function CentreLinkCertificates_Get(fk_patient As Variant) As Collection
   
   Dim certificates As New Collection
   Dim certificate As Collection
   Dim sql As String
   Dim Diagnoses As Collection                    'all associated diagnoses with this certificate, primary or secondary
   Dim Diagnosis As Collection 
   
   certificates = modDBConnect.exec_query_collection("Select * from clin_certificates.vwCentreLInkCertificates where fk_patient = " & fk_patient & " AND deleted = false")
   For Each certificate In Certificates
      'get the all associated diseases
      sql = "Select * From clin_certificates.vwCentreLinkdiagnoses where fk_centrelink_certificate = " & certificate!pk_certificate
      sql &= "AND diagnosis_deleted is false"
      Diagnoses = modDBConnect.exec_query_collection(sql)
      'will only ever be one primary diagnosis for each  clin_certificates.centrelink_medical_certificates.pk
      For Each Diagnosis In Diagnoses
         If Diagnosis!fk_lu_centrelink_diagnosis_type = const.centrelink_diagnosis_type_primary Then
            certificate!primary_diagnosis = Diagnosis
         Else
            If IsNull(certificate!secondary_diagnoses) Then certificate!secondary_diagnoses = New Collection   
            certificate!secondary_diagnoses.Add(Diagnosis, Diagnosis!fk_pasthistory) 'the secondary_diagnoses colleciton on FCentreLinkCondition is keyed to this
         Endif
      Next
   Next
   Return certificates
   
End

Public Function MedicalCertificates_Get(fk_patient As Variant) As Collection
   '-----------------------------------------------
   'Returns collection of the patients certificates
   '-----------------------------------------------
   
   Return modDBConnect.exec_query_collection("Select * from clin_certificates.vwMedicalCertificates where fk_patient = " & fk_patient & " AND deleted = false")
   
End

Public Function MedicalCertificates_Get_Deleted(fk_consult As Variant) As Collection
   '-----------------------------------------------------------------------------
   'Used in FMedicalCertificate.Init() to retrieve any certificates deleted today
   '-----------------------------------------------------------------------------   
   
   Return modDBConnect.exec_query_collection("Select * from clin_certificates.vwMedicalCertificates where fk_consult = " & fk_consult & " AND deleted = True") 
   
End

Public Function MedicalCertificates_Delete(currentconsult As CConsult, certificate As Collection) As Boolean
   '------------------------------------------------------ 
   'Deletes a medical certificate, returns true if succeed
   '------------------------------------------------------ 
   
   Dim audit_notes As String
   Dim sProgressNote As String
   Dim ProgressNote As Collection
   
   Message.Title = "Delete Medical Certificate"
   If Message.Question("Are you sure you want to delete the medical certificate", "Yes", "No") = 2 Then Return
   Print certificate
   If modUtil.IsSameDay(certificate!consult_date, currentconsult.GetConsultDate()) Then  'deleting a certificate on same day, just delete it, no audit trail
      modDBConnect.update("clin_certificates.medical_certificates", Null, ["pk": certificate!pk_medicalcertificate, "deleted": True])
      modDBConnect.update("clin_consult.progressnotes", Null, ["pk": certificate!fk_progressnote, "deleted": True])
      
   Else                  'not written on the same day, strike through the progress notes and lay down audit trail
      modDBConnect.update("clin_certificates.medical_certificates", Null, ["pk": certificate!pk_medicalcertificate, "deleted": True])
      For Each progressnote In currentconsult!progress_notes
         If progressnote!pk_progressnote = certificate!fk_progressnote Then
            sProgressNote = "<STRIKE><P><FONT COLOR='#b3b3b3'>" & progressnote!notes & "</STRIKE></P>"
            sProgressNote &= "<P><I>This certificate was deleted by " & modDBConnect.currentUser!wholename & " on " & Format(Now, "dd/mm/yyyy")
            sProgressNote &= " please consult the audit trail for details</I></P>"
            Print sProgressNote
            currentconsult!progress_notes[progressnote!pk_progressnote] = sProgressNote
            modDBConnect.update("clin_consult.progressnotes", Null, ["pk": certificate!fk_progressnote, "notes": sProgressNote])
            Break
         Endif
      Next
        
      audit_notes = "The medical certificate issued by " & Trim(certificate!staff_title & " " & certificate!staff_wholename)
      audit_notes &= " dated " & Format(certificate!certificate_date, "dd/mm/yyyy")
      audit_notes &= " for the reason '" & certificate!reason & "' - where the patient was stated to be "
      audit_notes &= certificate!fitness & " from " & Format(certificate!from_date, "dd/mm/yyyy") 
      If Not IsNull(certificate!to_date) Then
         audit_notes &= " to " & Format(certificate!to_date, "dd/mm/yyyy")
      End If   
      If certificate!print_notes Then
         audit_notes &= " and which had these notes printed on it: '" & certificate!notes & "'"
      End If
      audit_notes &= " has been deleted."
      
      If Not modAudit.MakeAudit(currentconsult, "mark deleted", "clin_certificates.medical_certificates", certificate!pk_medicalcertificate, const.cSection_MedicalCertificates, audit_notes) Then
         modDBConnect.RollBack
      End If   
   End If   
   modDBConnect.CommitTrans
   Return True
   
Catch
   modDBConnect.RollBack
   Return 
   
End

Public Function Centrelink_Medical_Certificate_Delete(currentconsult As CConsult, certificate As Collection) As Boolean
   '------------------------------------------------------ 
   'Deletes a medical certificate, returns true if succeed
   '------------------------------------------------------ 
   
   Dim audit_notes As String
   Dim pn As String
   
   Message.Title = "Delete Centrelink Medical Certificate"
   If Message.Question("Are you sure you want to delete the centrelink medical certificate", "Yes", "No") = 2 Then Return
   Print certificate
   pn = certificate!progress_notes   
   pn = Replace(pn, "<P>", "<del><P>")
   pn = Replace(pn, "<UL>", "<DEL><UL>")
   pn = Replace(pn, "</UL>", "</DEL></UL>")
   'First strikethrough the exsiting progress note
   pn = "<P>This certifcate was deleted by " & certificate!staff_title & " " & certificate!staff_wholename & " on " & Format(Now(), "dd/mm/yyyy") & " please refer to the audit trail for details</P>" & pn
   Print pn
   modDBConnect.update("clin_consult.progressnotes", Null, ["pk": certificate!fk_progressnote, "notes": pn])
   modDBConnect.update("clin_certificates.centrelink_medical_certificates", Null, ["pk": certificate!pk_certificate, "deleted": True])
   audit_notes = "The centre medical certificate issued by " & Trim(certificate!staff_title & " " & certificate!staff_wholename)
   audit_notes &= " dated " & Format(certificate!consult_date, "dd/mm/yyyy")
   audit_notes &= " with the major reason for illness being '" & certificate!primary_diagnosis!description & "' - where the patient was stated to be "
   audit_notes &= "Unfit from " & Format(certificate!unfit_from, "dd/mm/yyyy") & " to " & Format(certificate!unfit_to, "dd/mm/yyyy")
   audit_notes &= " has been deleted."
   If Not modAudit.MakeAudit(currentconsult, "mark deleted", "clin_certificates.centrelink_medical_certificates", certificate!pk_certificate, const.cSection_Centrelink_MedicalCertificates, audit_notes) Then
      modDBConnect.RollBack
   Else
      modDBConnect.CommitTrans
      Return True
   Endif
Catch
   modDBConnect.RollBack
   Return 
   
End

Public Function MedicalCertificates_Save(old_data As Collection, pk_view As Variant, new_data As Collection) As Variant
   '---------------------------------------------------------------------------------------------
   'Saves or updates a medical certificate, for the moment I'm keeping the reason as text in the
   'medical_certificate table, and only using the fk_reason as a lookup for the gui
   'to normalis the certificate_reasons table, I'd need another table 
   'e.g link_staff_reason with fk_staff, fk_reason.
   '--------------------------------------------------------------------------------------------
   
   Dim reason As New Collection
   '--------------------------------------------------------------------------------------------
   'Keep reason just for prompting in the gui, so don't need fk_reason - see explanation above
   'slack, but just test if we already have this reason (certificates dosn't kept the key anyway)
   '--------------------------------------------------------------------------------------------
   If modDBConnect.exec_query("Select * from clin_certificates.certificate_reasons where reason ILIKE $$" & new_data!reason & "$$").count = 0 Then
      reason!reason = new_data!reason
      reason!fk_staff = modDBConnect.currentUser!fk_staff
      new_data!fk_reason = modDBConnect.insert("clin_certificates.certificate_reasons", reason)
   Endif
   new_data.remove("fk_reason")
   If IsNull(new_data!pk_medicalcertificate) Then
      new_data!pk_medicalcertificate = modDBConnect.insert("clin_certificates.medical_certificates", new_data)
   Else
      modDBConnect.update("clin_certificates.medical_certificates", old_data[pk_view], new_data, "pk_medicalcertificate")
   Endif
   Return new_data!pk_medicalcertificate
   
End

Public Function Reasons_Get(txt As String) As Collection
   '---------------------------------------------------------------------  
   'Get list of reasons for issuing the certificate - just to save typing
   '---------------------------------------------------------------------
   
   Dim sql As String = "Select * from clin_certificates.certificate_reasons where reason ILIKE $$%" & txt & "%$$ "
   
   sql &= "AND fk_staff = " & modDBConnect.currentUser!fk_staff & " ORDER BY reason LIMIT 20"
   Return modDBConnect.exec_query_collection(sql)
   
End
