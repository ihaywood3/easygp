' Gambas module file

' Copyright (C) 2008-2013 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
' PURPOSE      Database access for certificates (non workcover)
'----------------------------------------------------------------------

Public Function MedicalCertificates_Get(fk_patient As Integer) As Collection
  '-----------------------------------------------
  'Returns collection of the patients certificates
  '-----------------------------------------------
  Return modDBConnect.exec_query_collection("Select * from clin_certificates.vwMedicalCertificates where fk_patient = " & fk_patient & " AND deleted = false")
  
End

Public Function MedicalCertificates_Get_Deleted(fk_consult As Integer) As Collection
   '-----------------------------------------------------------------------------
   'Used in FMedicalCertificate.Init() to retrieve any certificates deleted today
   '-----------------------------------------------------------------------------   
  Return modDBConnect.exec_query_collection("Select * from clin_certificates.vwMedicalCertificates where fk_consult = " & fk_consult & " AND deleted = True") 
   
End

Public Function MedicalCertificates_Save(old_data As Collection, pk_view As Integer, new_data As Collection) As Integer
  '---------------------------------------------------------------------------------------------
  'Saves or updates a medical certificate, for the moment I'm keeping the reason as text in the
  'medical_certificate table, and only using the fk_reason as a lookup for the gui
  'to normalis the certificate_reasons table, I'd need another table 
  'e.g link_staff_reason with fk_staff, fk_reason.
  '--------------------------------------------------------------------------------------------
  Dim reason As New Collection
   '--------------------------------------------------------------------------------------------
  'Keep reason just for prompting in the gui, so don't need fk_reason - see explanation above
  'slack, but just test if we already have this reason (certificates dosn't kept the key anyway)
  '--------------------------------------------------------------------------------------------
  If modDBConnect.exec_query("Select * from clin_certificates.certificate_reasons where reason ILIKE $$" & new_data!reason & "$$").count = 0 Then
     reason!reason = new_data!reason
     reason!fk_staff = modDBConnect.currentUser!fk_staff
     new_data!fk_reason = modDBConnect.insert("clin_certificates.certificate_reasons", reason)
  Endif
  new_data.remove("fk_reason")
  If IsNull(new_data!pk_medicalcertificate) Then
     new_data!pk_medicalcertificate = modDBConnect.insert("clin_certificates.medical_certificates", new_data)
  Else
    modDBConnect.update("clin_certificates.medical_certificates", old_data[pk_view], new_data, "pk_medicalcertificate")
  Endif
  Return new_data!pk_medicalcertificate
End

Public Function Reasons_Get(txt As String) As Collection
   '---------------------------------------------------------------------  
   'Get list of reasons for issuing the certificate - just to save typing
   '---------------------------------------------------------------------
   Dim sql As String = "Select * from clin_certificates.certificate_reasons where reason ILIKE $$%" & txt & "%$$ "
   
   sql &= "AND fk_staff = " & modDBConnect.currentUser!fk_staff & " ORDER BY reason LIMIT 20"
   Return modDBConnect.exec_query_collection(sql)
  
End
