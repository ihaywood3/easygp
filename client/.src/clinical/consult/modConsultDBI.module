' Gambas module file

' Copyright (C) 2008-2011 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Public $Result As Result
Public $Trans As Result
Public $dataset As Result
Public sSubroutineName As String

Public Function ProgressNote_Save(currentconsult As Cconsult, notes As String, fk_section As Integer, pk_progressnote As Integer, problem As String, pk_problem As Integer, Optional parse_html As Boolean = True) As Integer
   '----------------------------------------------------------------
   'Save progress notes as second attempt with Ians code
   'using the new smart method of comparing new/old 
   'Sample contents - but we don't need the html headings or endings
   '  <html><head><meta name="qrichtext" content="1" /></head><body
   '   style = "font-size:8pt;font-family:Airial">
   '  <p>testing</p>
   '  </body></html>
   'so remove those, need smarter way
   'Get a consult.pk if it dosn't exist whilst building the query
   'TODO: re-implement parsing for measurements.
   '      remove the \n's somehow generated in removing the headers
   'default to parsing html to strip out unwanted stuff
   '---------------------------------------------------------------

   Dim newnote As New Collection
   
   ' it is possible notes = "", because this record
   'could be being changed - notes could have been saved and now being set
   'back to an empty string 
   ' FIXME: ?should I just delete empty notes?
   '--------------------------------------------------------------------
   'First fix html to make it display properly
   If notes <> "" And parse_html = True Then 
      ' re = New Regexp(Notes, "<body [^>]+>")
      ' re = New Regexp(Notes, "<p [^>]+>")
      ' FIXME: more complex fixing will be required for lists
      notes = Replace$(notes, "font-weight: 600", "font-weight: bold")
      notes = Replace$(notes, "-qt-paragraph-type:empty; margin-top:0px;", "")
   End If  
   '--------------------------------------------------
   'If notes have images in there, this routine will
   'save them to postres and put a placer in the html
   'which is the key to clin_consult.images
   '-------------------------------------------------
   
   newnote!notes = Notes_Parse_For_Images(notes, currentconsult) 
   '--------------------------------------------------
   'If measurements exist parse them out
   '-------------------------------------------------
   modMeasurementsDBI.ProgressNote_Parse_For_Measurement(currentconsult, notes)
   
   If pk_progressnote < 0 Then
      '-------------------------------------------
      'If an entirely new note,insert a new record
      '-------------------------------------------
      newnote!fk_consult = currentconsult.GetPK()
      newnote!fk_section = fk_section 
      newnote!problem = problem 
      newnote!fk_problem = pk_problem
      newnote!fk_audit_action = const.cAuditAction_Insert
      
      newnote!pk_progressnote = modDBConnect.insert("clin_consult.progressnotes", newnote) ' saves the row and loads back the pk
      newnote!consult_date = Now() '?given that this has time is the data added in consult the same?
      currentconsult!progress_notes.Add(newnote, newnote!pk_progressnote)
      pk_progressnote = newnote!pk_progressnote
   Else
      '-----------------------------------------------------------------------------------
      'Not a new note, edit the record
      'Unfortunately in gambas if say something in a collection  ="" its the same as null
      '-----------------------------------------------------------------------------------
      If notes = "" Then
         newnote.Add("", "notes")
      End If
      newnote!pk_progressnote = pk_progressnote ' visit!fk_progressnote = modConsultDBI.ProgressNote_Save(currentconsult, sProgressNotes, const.cSection_Workcover, fk_progressnote, "workcover", 0, False)
      
      newnote!fk_audit_action = const.cAuditAction_Edit
      modDBConnect.update("clin_consult.progressnotes", currentconsult!progress_notes[pk_progressnote], newnote, "pk_progressnote") ' save to backend and update the collection in RAM too
   End If
   ' modDBConnect.CommitTrans()
   Return pk_progressnote
   
End

Public Function Get_Section_Name(section As Integer) As String
   
   Dim section_name As String
   
   Select Case section
      Case const.cSection_AnnualCheckup
         section_name = "Annual Checkup"
      Case const.cSection_FamilyHistory
         section_name = "Family History"
      Case const.cSection_GeneralNotes
         section_name = "General Notes"
      Case const.cSection_Inbox
         section_name = "Inbox"
      Case const.cSection_Measurement
         section_name = "Measurement"
      Case const.cSection_MentalHealth
         section_name = "Mental Health"
      Case const.cSection_OccupationalHistory
         section_name = "Occupational History"
      Case const.cSection_PastHistory
         section_name = "Past History"
      Case const.cSection_Prescriptions
         section_name = "Prescriptions"
      Case const.cSection_Recalls
         section_name = "Recalls"
      Case const.cSection_ReferralLetter
         section_name = "Referral Letter"
      Case const.cSection_Referrals
         section_name = "Referrals"
      Case const.cSection_Requests
         section_name = "Requests"
      Case const.cSection_ScratchPad
         section_name = "Scratchpad"
      Case const.cSection_SocialHistory
         section_name = "Social History"
      Case const.cSection_Travel
         section_name = "Travel"
      Case const.cSection_Vaccination
         section_name = "Vaccination"
      Case const.cSection_Workcover
         section_name = "WorkCover"
   End Select
   Return section_name
   
End

Public Function Consult_Create(pk_patient As Integer, fk_type As Integer, summary As String) As Collection
   '------------------------------------------------------------------------
   'Currently this only creates an entry in clin_consult.consult to register
   'that a consult has been created. Later FIXME So that at routine of this
   'name saves the entire consult/data etc.
   'DATE STUFF IS WRONG and must be fixed.
   '--------------------------------------------------------------
   'creates entry in clin_consult.consult table, returns the key
   'note that there is no 'summary' created/enforced as yet
   'though I think there should be - so FIXME
   '
   'pk_patient = key to key to clerical.data_patients table
   'fk_staff = key to admin.stat table
   'fk_type = key to consult.lu_consult_type table eg 'in surgery"
   'summary could be 'Abdominal pain for investigation' for e.g
   'FIXME - IF WE ARE GOING TO HAVE A 'CONSULT SUMMARY' THEN
   'THIS NEEDS TO EDIT THE FIELD AS WELL.
   '--------------------------------------------------------------
   
   Dim sql As String
   
   sql = "set datestyle = 'iso,dmy'" ' FIXME: what is this for?
   modDBConnect.exec_query(sql) 
   sql = "insert into clin_consult.consult "
   "(consult_date, fk_patient, fk_staff, fk_type, summary) "
   "VALUES (now(),"
   sql &= pk_patient & ","
   sql &= modDBConnect.currentUser!fk_staff & ","
   sql &= fk_type & ","
   sql &= "$$" & summary & "$$) returning consult_date, pk"
   Return modDBConnect.exec_query_first(sql)
   
End

Public Function ProgressNotes_Save(consult As Cconsult)
   'Saves just the progress notes on the tabs
   
   Dim x As Integer
   Dim sql As String
   
   For x = 0 To consult.ProgressNotes.count - 1
      If consult.ProgressNotes[x].pk_progressnote Then 
      Else 
         'is a new progress note
         sql = "INSERT into clin_consult.progressnotes "
         "(fk_consult, notes, problem) "
         "VALUES ("
         sql &= consult.pk_consult & ",$$" & consult.ProgressNotes[x].notes & "$$,$$"
         sql &= consult.ProgressNotes[x].problem & "$$)"
         $Result = modDBConnect.exec_query(sql)
      End If
   Next
   
End

Public Function ProgressNotes_Edit(progressnotes As Collection, pk_problem As Integer)
   'used in auditing.
   'user has elected for some reason to modify the progress note, eg could be an audit
   'action like deleting say a past history item, hence strike through all associated notes
   'fix me to allow actual editing whilst retaining the original in place
   'along with annotations as to date/who etc.
   'currently set to modify just for a particular problem
   'just first pass attempt. FIXME
   
   Dim progressnote As Collection 
   Dim sql As String
   
   '  $Result = modDBConnect.exec_query("BEGIN") 
   For Each progressnote In progressnotes
      If progressnote!fk_problem = pk_problem Then 
         sql = "UPDATE clin_consult.progressnotes SET notes = $$" & progressnote!notes & "$$ "
         sql &= "WHERE pk = " & progressnote!pk_progressnote
         modDBConnect.exec_query(sql)
      End If
   Next 
   
End

Public Function Image_Save(ImagePath As String, fk_consult As Integer, md5sum As String, Optional fk_image As Integer = 0) As Integer
   
   Dim data As New Collection
   
   data!image = "BLOB:" & ImagePath
   data!md5sum = md5sum
   If fk_consult Then   
      data!fk_consult = fk_consult
   End If   
   If fk_image = 0 Then
      Return modDBConnect.insert("blobs.images", data)
   Else
      data!pk = fk_image
      modDBConnect.update("blobs.images", Null, data, "pk")
      Return fk_image
   Endif
   
End

Public Function Notes_Parse_For_Images(Notes As String, currentconsult As CConsult) As String
   '-------------------------------------------------------------------------------------------------
   'Expects string representing the html of clinical notes
   'which could contain images, line drawings/photos eg of a skin
   'lesion, and parses out the temporary file references to these
   'e.g src=/tmp/gambas.1000/3562/2.tmp.png
   'and substitutes the clin_consult.images.pk value after src=
   'when the clinical notes are re-loaded, then another temporary
   'file will be created and its path re-inserted into the notes
   '<img align=LEFT border=0 height=208 name=graphics src=/tmp/gambas.1000/6301/5.tmp.png width=181 >
   'There's a problem with this:
   'the user can save a progress note many times during a consulation, so each time any images in the
   'notes will be re-saved, again and again and again, so we use the md5sum to stop this until
   'Ian figures out if there is a better way.
   'Also if new images are added, then need to refresh the images collection in Fclinical
   '-------------------------------------------------------------------------------------------------
   
   Dim afile As String
   Dim someFiles As String[]
   Dim image_pk As Integer
   Dim re As New Regexp
   Dim sHtml As String
   Dim fk_consult As Integer
   Dim sql As String
   Dim R As Result
   Dim md5sum As String
   Dim md5sum_images_this_consult As Collection
   Dim iNewImages As Integer                       'incremented if new images in current progress note page
   fk_consult = currentconsult.GetPK()
   '-----------------------------------------------------------------------------
   'First, extract all the filenames of the temporary files in this progress note
   '-----------------------------------------------------------------------------
   someFiles = New String[]
   sHtml = notes
   re.Compile("src=\"([^\"]+\\.png)")
   re.Exec(sHtml)
   Do While re.Offset <> -1
      someFiles.Add(re.SubMatches[0].Text)
      sHtml = Right$(sHtml, - (re.Offset + Len(re.Text)))
      re.Exec(sHtml)
   Loop
   For Each afile In someFiles
      '--------------------------------------------------------- 
      'Has this image been saved before?, if yes, re-use the key
      '--------------------------------------------------------- 
      md5sum = modUtil.Calc_md5sum_File(Right$(afile, -5)) 'chopped of the src=\ from the string
      R = modDBConnect.exec_query("Select * from Blobs.vwPatientImages where md5sum = $$" & md5sum & "$$")
      If R.count = 0 Then 
         image_pk = Image_Save(afile, fk_consult, md5sum)
         Inc iNewImages
      Else
         image_pk = R!pk
      End If 
      Notes = Replace$(Notes, afile & "\"", "pk_image=" & Str$(image_pk)) 'temporary
   Next
 '  If iNewImages Then FClinical.RefreshExternal_ImageList()
   Return Notes
   
End

Public Function Staff_member_Get() As Collection
   '---------------------------------------------------------
   ' retrieves the associated demographic data for the currently logged in user
   '---------------------------------------------------------
   
   Dim sql As String
   Dim user As Collection
   
   sql = "Select * from admin.vwStaffinclinics where logon_name = current_user"
   user = modDBConnect.exec_query_first(sql)
   If Not IsNull(user) Then
      user!comms = modContactsDBI.Branch_Comms_Get(user!fk_branch) 
   Endif
   Return user
   
End

Public Sub consult_get_types() As Collection 
   '-------------------------------------------------------------------------------
   'Gets a list of types of consulation eg 'In consulting rooms', or 'By Telephone'
   '-------------------------------------------------------------------------------
   
   Return modDBConnect.exec_query_collection("SELECT * FROM clin_consult.lu_consult_type where pk <" & const.ConsultType_DataImport & " ORDER by type")
   
End

Public Function progressnotes_get(fk_patient As Integer, Optional single_day As String = "", Optional bInclude_audit As Boolean = False, bInclude_Deleted As Boolean = False) As Collection
   
   '--------------------------------------------------------------------
   'gets progressnotes for patient, either as a single day or everything
   'Can includethe audit-trail if bInclude_audit is true
   '--------------------------------------------------------------------
   Dim sql As String
   
   sql = "SELECT * FROM clin_consult.vwProgressNotes where fk_patient =" & fk_patient
   If single_day <> "" Then
      sql &= " AND  to_char(consult_date,'DD/MM/YYYY')=$$" & single_day & "$$ "
      '     sql &= " AND consult_date = '" & single_day & "'"
   End If
   sql &= " AND fk_audit_action <> " & const.cAuditAction_Reversal ' OR DELETE?
   If bInclude_audit = False Then
      sql &= " AND linked_table is null " 
   Endif
   If bInclude_Deleted = False Then
      sql &= " AND deleted = False" 
   Endif
   
   sql &= " ORDER BY consult_date, fk_staff,fk_section"
   
   Return modDBConnect.exec_query_collection(sql)
   
End

Public Function Image_get(pk_image As Integer, Optional bHas_MD5Sum As Boolean = False) As String
   '--------------------------------------------------------------------------------
   'Gets an image from the backend
   'all progress note/procedures images will have an md5sum, not so patient pictures
   '--------------------------------------------------------------------------------   
   Dim $Result As Result
   Dim tempFile As String
   Dim tempPicture As Variant
   Dim sql As String = "Select * from blobs.images WHERE pk=" & pk_image
   
   If bHas_MD5Sum Then
      sql &= "  AND md5sum is not null" 
   Endif
   $Result = modDBConnect.exec_query(sql)
   If $Result.count Then
      tempFile = Temp() & ".png"
      tempPicture = $Result!image
      If tempPicture.data Then 
         File.Save(tempFile, tempPicture.data)
      End If
   End If
   Return tempFile
   
End

Public Sub Run_Image_Fix_md5sum()
   'temporary fixme remove me
   'add an md5sum to all images in the database which are in the progress notes.
   'we can later remove all images not with an md5sum
   
   Dim sql As String
   Dim Progressnotes As Collection
   Dim progressnote As Collection
   Dim sMsg As String
   
   Progressnotes = modDBConnect.exec_query_collection("Select * from clin_consult.vwProgressNotes")  ' get all progress notes
   sMsg = "You have " & Str(progressnotes.count)
   sMsg &= " progress note entries to correct \n\nThis could take some time\n\n Continue?"
   
   If Message.Question(sMsg, "Yes", "No") = 2 Then Return 
   Inc Application.Busy
   
   For Each progressnote In progressnotes
      ImageFix_Add_MD5Sum_Blobs(progressnote!notes) 
   Next
   Dec Application.Busy
   modDBConnect.CommitTrans()
   
End

Public Sub ImageFix_Add_MD5Sum_Blobs(notes As String)
   'fixme remove me, 
   'adds md5sum but only for those blobs.images records which correspond to pk_image in progress note

   Dim tempFile As String
   Dim tempPicture As Variant
   Dim sql As String
   Dim charpos As Integer = -1
   Dim NAMEPOS As Integer
   Dim number_string As String
   Dim afile As String
   Dim pk_images As Integer[]
   Dim x As Integer
   Dim sHtml As String
   Dim pk_image As Integer
   Dim placeholder As String
   Dim R As Result
   Dim md5Output As String
   Dim Img As Collection
  
   'Get all the pk_images from the progress notes
   sHtml = notes
   pk_images = New Integer[]
   Do Until charpos = 0
      charpos = InStr(shtml, "pk_image=")
      If charpos Then
         shtml = Right(shtml, Len(shtml) - charpos - 8) 'now looks like eg 30 NAME.....
         charpos = InStr(shtml, " ")
         pk_images.Add(CInt(Left(shtml, charpos - 1)))
         sHtml = Right(shtml, Len(shtml) - charpos - 1)
      End If
   Loop 
   For Each pk_image In pk_images
      R = modDBConnect.exec_query("Select * from blobs.images where pk=" & pk_image)
      If R.count Then
         tempFile = Temp() & ".png"
         tempPicture = R!image
         If tempPicture.data Then 
            File.Save(tempFile, tempPicture.data)
         End If
         
         Exec ["/usr/bin/md5sum", tempFile] To md5Output
         modDBConnect.exec_query("Update blobs.images set md5sum =$$" & Left(md5Output, InStr(md5Output, " ") - 1) & "$$ WHERE pk=" & pk_image)
       
      Endif
   Next 
   Return 
Catch

Message.Error(Error.Text, "Ok")

End

Public Sub ImageFix_Add_MD5Sum_temp(notes As String)
   'fixme remove me, 
   'adds md5sum but only for those blobs.images records which correspond to pk_image in progress note

   Dim tempFile As String
   Dim tempPicture As Variant
   Dim sql As String
   Dim charpos As Integer = -1
   Dim NAMEPOS As Integer
   Dim number_string As String
   Dim afile As String
   Dim pk_images As Integer[]
   Dim x As Integer
   Dim sHtml As String
   Dim pk_image As Integer
   Dim placeholder As String
   Dim R As Result
   Dim md5Output As String
   Dim Img As Collection
  
   'Get all the pk_images from the progress notes
   sHtml = notes
   pk_images = New Integer[]
   Do Until charpos = 0
      charpos = InStr(shtml, "pk_image=")
      If charpos Then
         shtml = Right(shtml, Len(shtml) - charpos - 8) 'now looks like eg 30 NAME.....
         charpos = InStr(shtml, " ")
         pk_images.Add(CInt(Left(shtml, charpos - 1)))
         sHtml = Right(shtml, Len(shtml) - charpos - 1)
      End If
   Loop 
   For Each pk_image In pk_images
      R = modDBConnect.exec_query("Select * from blobs.images where pk=" & pk_image)
      If R.count Then
         tempFile = Temp() & ".png"
         tempPicture = R!image
         If tempPicture.data Then 
            File.Save(tempFile, tempPicture.data)
         End If
         
         Exec ["/usr/bin/md5sum", tempFile] To md5Output
         modDBConnect.exec_query("Update blobs.images set md5sum =$$" & Left(md5Output, InStr(md5Output, " ") - 1) & "$$ WHERE pk=" & pk_image)
       
      Endif
   Next 
   Return 
Catch

Message.Error(Error.Text, "Ok")

End


Public Sub Run_Image_Fix()
   'please do not remove this.
   'find all the images in all the notes and put a fk_consult in blobs.images

   Dim sql As String
   Dim Progressnotes As Collection
   Dim progressnote As Collection
   Dim sMsg As String
   
   Progressnotes = modDBConnect.exec_query_collection("Select * from clin_consult.vwProgressNotes")
   sMsg = "You have " & Str(progressnotes.count)
   sMsg &= " progress note entries to correct \n\nThis could take some time\n\n Continue?"
   
   If Message.Question(sMsg, "Yes", "No") = 2 Then Return 
   Inc Application.Busy
   
   For Each progressnote In progressnotes
      ImageFix(progressnote!notes, progressnote!fk_consult) 
   Next
   Dec Application.Busy
   
End

Public Sub ImageFix(notes As String, fk_consult As Integer)
   'fixme remove me, just leaving this in to "repair" all the images I've got on the database
   'as I changed the table structure and most of the pk's are 'hidden' in html in progressnotes!note

   Dim tempFile As String
   Dim tempPicture As Variant
   Dim sql As String
   Dim charpos As Integer = -1
   Dim NAMEPOS As Integer
   Dim number_string As String
   Dim afile As String
   Dim pk_images As Integer[]
   Dim x As Integer
   Dim sHtml As String
   Dim pk_image As Integer
   Dim placeholder As String
   Dim R As Result
   
   sHtml = notes
   pk_images = New Integer[]
   Do Until charpos = 0
      charpos = InStr(shtml, "pk_image=")
      If charpos Then
         shtml = Right(shtml, Len(shtml) - charpos - 8) 'now looks like eg 30 NAME.....
         charpos = InStr(shtml, " ")
         pk_images.Add(CInt(Left(shtml, charpos - 1)))
         sHtml = Right(shtml, Len(shtml) - charpos - 1)
      End If
   Loop 
   For Each pk_image In pk_images
      R = modDBConnect.exec_query("Select * from blobs.images where pk=" & pk_image)
      If R.count Then
          Try Print "fk_consult:", R!fk_consult
            If IsNull(R!fk_consult) Then
            modDBConnect.exec_query("Update blobs.images set fk_consult=" & fk_consult & " WHERE pk=" & pk_image)
            modDBConnect.CommitTrans()
         Endif
      Endif
   Next  
   
End

Public Function Images_Get(notes As String) As String
   '----------------------------------------------------------------------------
   'Now retrieve any linked images and create temporary files on the hard drive
   '<IMG pk_image=30  NAME=graphics
   '----------------------------------------------------------------------------

   Dim tempFile As String
   Dim tempPicture As Variant
   Dim sql As String
   Dim charpos As Integer = -1
   Dim NAMEPOS As Integer
   Dim number_string As String
   Dim afile As String
   Dim pk_images As Integer[]
   Dim x As Integer
   Dim sHtml As String
   Dim pk_image As Integer
   Dim placeholder As String
   
   sHtml = notes
   pk_images = New Integer[]
   Do Until charpos = 0
      charpos = InStr(shtml, "pk_image=")
      If charpos Then
         shtml = Right(shtml, Len(shtml) - charpos - 8) 'now looks like eg 30 NAME.....
         charpos = InStr(shtml, " ")
         pk_images.Add(CInt(Left(shtml, charpos - 1)))
         sHtml = Right(shtml, Len(shtml) - charpos - 1)
      End If
   Loop 
   For Each pk_image In pk_images
      'Now fetch the images, and put a temporary file name into the notes strin
      Tempfile = Image_get(pk_image, True) 'progress note image must have an md5sum
      Notes = Replace$(Notes, "pk_image=" & pk_image, "src='file://" & Tempfile & "'")
   Next
   Return Notes
   
End

Public Function ProgressNotes_GetFor_fk_Consult(fk_consult As Integer, Optional problem As String = "New General Notes", Optional fk_section As Integer = const.cSection_GeneralNotes) As Result
   '--------------------------------------------------------------------------------
   'Gets all the progress notes just for a single fk_consult and an optional problem.
   'FIXME this is bound to fail, I've just used problem tonight (14July) whilst
   'developing this as I only want to load back in general notes.
   'used to allow continuation of progress notes on the same day if desired
   '---------------------------------------------------------------------------------
   Dim sql As String
   Return modDBConnect.exec_query("SELECT * FROM clin_consult.vwProgressNotes where fk_consult= " & fk_consult & " AND problem =$$" & problem & "$$")
   
End

Public Function progressnotes_get_for_condition(pk_patient As Integer, fk_problem As Integer) As Result
   
   Dim sql As String
   
   sql = "SELECT * FROM clin_consult.vwProgressNotes where fk_patient = " & pk_patient
   sql &= " AND fk_problem = " & fk_problem & " ORDER BY  consult_date"
   $Result = modDBConnect.exec_query(sql)
   Return $Result
   
End

Public Function staff_member_by_surname(surname As String) As Collection
   
   Dim sql As String
   
   sql = "Select * from admin.vwStaffInClinics WHERE surname ILIKE $$"
   sql = sql & Trim(surname) & "%$$ ORDER BY surname LIMIT 10"
   Return modDBConnect.exec_query_collection(sql)
   
End

Public Function Consult_Update(pk_consult As Integer, fk_type As Integer, summary As String)
   
   Dim sql As String
   
   sql = "Update clin_consult.consult set fk_type= " & fk_type
   sql &= ",  summary=$$" & summary & "$$ "
   sql &= "WHERE pk= " & pk_consult
   modDBConnect.exec_query(sql)
   
End
