' Gambas module file
' Copyright (C) 2008-2011 Dr. Richard Terry Dr. Ian Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
' PURPOSE      Provide some minimal decision support
'----------------------------------------------------------------------

Public Function BMI_DecSupp(Weight As Variant, height As Variant) As String
   
   Dim range As String 
   Dim sMsgOverweight As String = " the patient is in overweight range of BMI"
   Dim sMsgObese As String = " the patient is in obese range of BMI"
   Dim sMsgUnderweight As String = " patient is in the underweight range of BMI"
   Dim sWeightMessage As String  
   Dim BMI As Float
   Dim max_ideal_weight As Variant
   Dim min_ideal_weight As Variant
   Dim sWeight_range As String 
   
   BMI = Format((weight / (height ^ 2)) * 10000, "##.#")
   Try max_ideal_weight = 25 * (height / 100) * (height / 100)
   Try min_ideal_weight = 20 * (height / 100) * (height / 100)
   sWeight_range = "- ideal weight range:" & Format(min_ideal_weight, "##") & "-" & Format(max_ideal_weight, "##") & "Kg<BR>"
   
   If BMI > 20 And BMI < 25 Then range = "normal" 
   If BMI > 25 And BMI < 30 Then range = "overweight"
   If BMI > 30 Then range = "obese" 
   If BMI < 20 Then range = "underweight"
   Select Case range
      Case "underweight"
         sWeightMessage = sMsgUnderweight & " i.e " & Format(min_ideal_weight - weight, "##") & "-" & Format(max_ideal_weight - weight, "##") & "Kg underweight"
      Case "overweight"
         sWeightMessage = sMsgOverweight & " i.e " & Format(weight - max_ideal_weight, "##") & "Kg overweight" '&nbsp;&nbsp;
      Case "obese"
         sWeightMessage = sMsgObese & " i.e " & Format(weight - max_ideal_weight, "##") & "Kg overweight"
   End Select
   
   sWeightMessage &= ", the ideal weight range being " & Format(min_ideal_weight, " ##") & " - " & Format(max_ideal_weight, " ##") & " Kg."
   Return sWeightMessage
   
End
