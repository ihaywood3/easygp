' Gambas class file

' Gambas class file

' Gambas class file
' Copyright (C) 2008-2014 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'------------------------------------------------------------------------------------------------
' PURPOSE         A form for the Australian General Practice Diabetes Annual Cycle of Care
'                 Also provides a 'snapshot' of up-to-date-ness of diabetic parameters.
' HOW THIS WORKS  EasyGP attempts to pull as much information from the backend
'                    - e.g letters from category like ophth* and occupations like the same
'                    - occupation or categories like opt%(metrist(s))
'                    - pulls in latest blood tests and measurements if they exist
'                    - this data cannot be entered manually on this screen
'                    - if newer BP, weight etc needed must be entered on progress note page
'                    - user prompted if validation fails on save.
'
' TODO
'                 - backend and include skin, pulses and sensation check by checking podiatrists
'                 - currently none of the saves linked to a diabetic PH item, are just in 'general'
'                 - implement the 'don't bug me with this again in Valid_data
'                 - Edit() "delete the DACC'
'                 - put in hyperlink from eye/podiatrist document to the document
'                 - Implement a combo box up top in place of label, with dates previous DACCs
'                 - implement if FClinical updates bp/weight > then update in the DACC
'                 - decide about "old DACCS" e.g should they be on a list, or should they
'                   just end up as a document in the documents list? (probably not -too many over the years
'
' > Aspirin is indicated for men >50  and women >60 with more than one other
' > risk factors from Dyslipidaemia or Hypertension. Patients who already
' > have evidence of small vessel disease (nephropathy, retinopathy) or
' > known CV events (coronary or cerebral) should be aspirin anyway. There
' > should be a data field to check for aspirin or other antiplatelet or
' > warfarin.
'
' > Would be easier to pick up the abnormals if we can code red colour for
' > overdue tests and abnormal results (not on target)

'                 - when recall is saved, this is not being stated so in the progress notes.
' BUGS            Please report to rterry@pacific.net.au
'                 If your microalbumin seems not to come  up - different Loinc - notify me
'-----------------------------------------------------------------------------------------------

Private bExit As Boolean                        'Stop re-entry into subroutines
Private currentconsult As CConsult
Private fk_pasthistory As Integer
Private fk_consult As Integer
Private fk_patient As Integer                   'from currentconsult to save typing ( see Init)
Private pk_view As String                       'Key to DACCS = current DACC being accessed
Private DACCS As Collection                     'All previous Diabetic Annual Cycle of Care's
Private DACC As Collection
Private date_last_Claimed As Date               'date of last DACC mediDACCcare billing
Private date_completed As Date                  'date the DACC was completed
Private date_saved As Date                      'date the DACC was saved may <> date_completed which can be  null
Private fk_diabetes_annual_cycle_of_care As Integer
Private fk_progressnote_components As Integer     'if not 0 = key to clin_consult.progressnotes = the components table as html
Private fk_progressnote_comments As Integer       'if not 0 = key to clin_consult.progressnotes = any notes on the DACC
Private NextTextBoxDetails As TextEdit
Private NextTextBoxLast As TextEdit
Private NextTextboxDue As TextEdit
Private sDecisionSupportComments As String     'created on fly from analysing patients results
Private bPreventSave As Boolean                'true if template is missing

Public Sub Init(cons As CConsult)
   '------------------------------------------------------------------------
   'Housekeeping FIXME
   'currently I've change FProgresNoteEditor just for DACC, must be fixed
   'I added a listcontainer in there to show previous notes as list entries
   '------------------------------------------------------------------------
   
   currentconsult = cons
   Try Settings_Load()
   fk_patient = currentconsult!patient!fk_patient
   lblNextDue.width = TextLabel12.width
   Reload()    'loads any current DACCS and displays the most recent.
   
End

Public Sub DACC_Template_Missing() 
   
   Dim sMsg As String

   sMsg = "The template necessary To generate the Diabetes Cycle Of Care Is missing.\n\n"
   "You will not be able to save this cycle of care.\n\n"
   "You should speak to the sysadmin to resolve this issue"
   Message.Warning(sMsg) 
   
End

Public Sub Recall_Log()
   '----------------------------------------------------
   'Auto-logs a recall for the DACC if DACC is completed
   'If a recall already exists uses that preferentially
   'and adjusts the date due
   'FIXME: currently not linked to a diabetic problem
   '----------------------------------------------------
   
   Dim sql As String
   Dim R As Result
   Dim recall As Collection
   Dim bRecallExists As Boolean
   Dim sProgressNote As String
   Dim fk_progressnote As Integer
   Dim pk_recall As Integer = -1
   
   '-----------------------------------------------------------------------------------
   'Firstly, is a recall for DACC already lodged?, if so get its key and the reason key
   '-----------------------------------------------------------------------------------
   sql = "Select * from clin_recalls.vwrecalls where fk_patient = " & fk_patient & " AND reason ILIKE '%Diabetes Annual Cycle of Care%' AND deleted = False LIMIT 1"
   recall = modDBConnect.exec_query_first(sql)  'returns null if no rows
   If IsNull(recall) Then
      '------------------------------------------------------------------------------------
      'Not already logged, so just get the fk_reason, or if dosn't already exist, create it
      '------------------------------------------------------------------------------------
      Recall = New Collection
      R = modDBConnect.exec_query("Select * from clin_recalls.lu_reasons where reason ILIKE 'Diabetes Annual Cycle of Care%'")
      If R.count Then
         recall!fk_reason = R!pk
      Else
         recall!fk_reason = 0
         recall!reason = "Diabetes Annual Cycle of Care (DACC)"
      Endif
      recall!fk_urgency = const.UrgencyLevelRoutine
      recall!default_interval = 1
      recall!fk_default_interval_unit = const.Units_year
      recall!fk_interval_unit = const.Units_year
      recall!interval = 1
      ' recall!due = DateAdd(Now, gb.Year, 1)
      recall!due = DateAdd(currentconsult.GetConsultDate(), gb.Year, 1)
      recall!fk_contact_method = const.ContactMethodLetter  'fixme read the combo
      recall!fk_appointment_length = const.AppointmentLengthLong
      recall!active = True  'fixme ?delete this field and just use the deleted field default ?why active in first place
      recall!fk_staff = modDBConnect.currentUser!fk_staff
      recall!additional_text = "If your diabetic eye check is due please ensure you arrange this before seeing us."
      sProgressNote = "<B> Recall logged:</B> for Diabetic Annual Cycle of Care due on " & Format(recall!due, "dd/mm/yyyy")
      recall!fk_progressnote = modConsultDBI.ProgressNote_Save(currentconsult, sProgressNote, const.cSection_GeneralNotes, fk_progressNote, "General Notes", fk_pasthistory, False)
      recall!pk_recall = modRecallsDBI.Save(currentconsult, pk_recall, recall)
      FClinical.Refresh_Section(const.cSection_Recalls)
   Else
      '-------------------------------------------------------------------------------------------------
      'Exists, just reload this for 12 months
      'str$(here) because uses the same module called from Fclinical dealing with the popup recalls menu
      'over the recalls list, and some tags = strings, some are numbers , all kept as strings
      '-------------------------------------------------------------------------------------------------
      bRecallExists = True
      modRecallsMenu.Process(recall, Str$(const.cAuditAction_CompletedRepeatSameInterval), currentconsult)  'fixme shouldn't be general notes
   End If
   
End

Public Function Valid_Data() As Boolean
   '------------------------------------------------
   'Checks for valid input and returns true if valid
   '------------------------------------------------
   
   Dim hCtrl As Control
   Dim HB As HBox
   Dim VB As Vbox
   Dim TE As TextEdit
   Dim bits As String[]
   Dim bit As String
   '---------------------------------------------------------------
   'First, is this DACC being claimed within 12/12 of the last one?
   '----------------------------------------------------------------
   If Not IsNull(date_last_Claimed) Then
      ' If DateDiff(date_last_Claimed, Now, gb.day) < 366 Then
      '
      '    sMsg = "The DACC item number may have been claimed on " & Format(date_last_Claimed, "dd/mm/yyyy")
      '    sMsg &= ".\n\nIt is not due until " & Format(DateAdd(date_last_Claimed, gb.year, 1))
      '    sMsg &= ". \n\nThis DACC may not be claimable.\n\nContinue?"
      '    If Message.Question(sMsg, "Yes", "No") = 2 Then Return
      ' Endif
   End If
   '----------------------------------------------------------------------------
   'Check all the textboxes in the editing area, if should have a date, validate
   '----------------------------------------------------------------------------
   For Each hctrl In Vbox_EditArea_Inner.Children
      If hctrl.tag <> "skip" Then                   'Hbox's without appropriate contents have this tag
         HB = hctrl
         For Each hCtrl In HB.Children
            '-------------------------------------------------------------------
            'look at all child controls In Each HBox
            'if it should contain a date or columnized dates eg for h,w,bmi
            'check date valid
            '---------------------------------------------
            If InStr(Lower(hctrl.name), "due") Or InStr(Lower(hctrl.name), "last")
               TE = hctrl
               If Trim(Te.text) <> "" And Not IsDate(Te.text) Then 'its its not blank or columized dates which though individual dates ok Val(txt)<> date
                  bits = Split(Trim(Te.text), "\n", "", True)      'check if it is 'OVERDUE or stacked dates
                  For Each bit In bits
                     If Not IsDate(bit) Then  'some textboxes have multiple dates
                        TE.SetFocus()
                        Return
                     End If
                  Next
               Endif
            Else
               '---------------------------------------------------------------------------
               'Note a textedit containing date(s), if empty, should have some sort of data
               '---------------------------------------------------------------------------
               If hctrl Is TextEdit Then
                  TE = hctrl
                  If Trim(TE.text) = "" Then
                     TE.SetFocus()
                     Return
                  Endif
               Else
                  If hctrl Is Vbox Then   'The text controls for height/weight/BMI are stacked into vboxes
                     VB = hctrl
                     For Each hCtrl In VB.Children
                        If InStr(Lower(hctrl.name), "due") Or InStr(Lower(hctrl.name), "last")
                           TE = hctrl
                           If Trim(Te.text) <> "" And Not IsDate(Te.text) Or Trim(Te.text) <> "" And Trim(Te.text) <> "N/A" Then 'its its not blank or columized dates which though individual dates ok Val(txt)<> date
                              bits = Split(Trim(Te.text), "\n", "", True)      'check if it is 'OVERDUE or stacked dates
                              For Each bit In bits
                                 If Not IsDate(bit) Then  'some textboxes have multiple dates
                                    TE.SetFocus()
                                    Return
                                 End If
                              Next
                           End If
                        Endif
                     Next
                  End If
               Endif
            End If
         Next
      Endif
      
   Next
   
   Return True
   
End

Public Sub EditArea_NotifyData_Change(flag As Boolean)
   '----------------------------------------------
   'If data has changed, edit area outlined in red
   'for visual notification
   '----------------------------------------------
   
   If Flag Then
      Vbox_EditArea.Padding = 1
   Else
      Vbox_EditArea.Padding = 0
   Endif
   
End

Public Sub EditArea_Clear()
   
   bExit = True
   modEditAreaHelpers.EditArea_Clear(Vbox_EditArea_Inner)
   bExit = False
   
End

Public Sub Refresh()
   '-------------------------------------------------------
   'User to refresh the components, get as much as possible
   '-------------------------------------------------------
   
   Inc Application.Busy
   sDecisionSupportComments = ""
   bExit = True
   Try Last_Hbaic()
   Try Last_BMI()
   Try Last_Eye_Review()
   Try Last_BP()
   Try Last_Microalbumin()
   Try Last_RenalFunction()
   sDecisionSupportComments &= "<P><B>Aspirin</B></P>Provided there is no history of allergy to Aspirin or related compounds, "
   "Aspirin is indicated for men &gt;50  and women &gt;60 with more than one other "
   "risk factor - for example high cholesterol or hypertension. Patients who already "
   "have evidence of small vessel disease (nephropathy, retinopathy) or who have had "
   "known Cardiovascular events (coronary or cerebral) should be given Aspirin</P> "
   Last_Diet()
   Last_Smoking()
   Last_Education()
   Last_Activity()
   Last_Medication()
   Last_Foot_Check()
   Last_Lipids()
   teNotesMedication.text = ""
   MedicationList_Insert()
   Vbox_EditArea_Inner.Enabled = True
   teComments.RichText = sDecisionSupportComments
   Dec Application.Busy
   bExit = False
   EditArea_NotifyData_Change(True)
   
End

Public Sub MedicationList_Insert()
   '---------------------------------------------------------------
   'Insert the medication list, can't use the teNotes_DACC_Change()
   '---------------------------------------------------------------
   
   Dim medlist As Collection
   Dim med As Collection
   
   medlist = modPrescribingDBI.active_medication_list(currentconsult)
   For Each med In medlist
      teNotesMedication.text &= med!generic & " " & med!display_strength & " " & med!instruction & "\n"
   Next
   teNotesMedication.pos = 0
   ' teNotesMedicationLast.text = Format(Now, "dd/mm/yyyy")
   'teNotesMedicationDue.text = Format(DateAdd(Now, gb.year, 1), "dd/mm/yyyy")
   teNotesMedicationLast.text = Format(currentconsult.GetConsultDate(), "dd/mm/yyyy")
   teNotesMedicationDue.text = Format(DateAdd(currentconsult.GetConsultDate(), gb.year, 1), "dd/mm/yyyy")
   
End

Public Sub Form_Show()
   
End

Public Sub Form_Close()
   'this causes a Sig11 ?why
   ' If Vbox_EditArea.Padding = 1 Then
   '    If Valid_Data() Then
   '       If Message.Question("Do you want to save this Diabetes Cycle of Care before closing the form?", "Yes", "No") = 1 Then
   '         Save()
   '       End If
   '    Endif
   ' Endif
   '
   
End

Public Sub Save()
   '---------------------------------------------------------------------------------------------------------
   ' Save the annual cycle of care, refreshes the data and progress notes in FClinical
   '
   '   pk serial NOT NULL,
   '   fk_consult integer NOT NULL,
   '   date_completed date,
   '   hba1c_date date, -- date of last hba1c could be null if not yet completed but DACC saved...
   '   hba1c_date_due date,
   '   hba1c_details text,
   '   eyes_date date, -- Date the eye check was done, may be entered without paperwork to verify
   '   eyes_date_due date,
   '   eyes_details text, -- Whoever checked the eyes, could be person or entity, but hopefully in most cases...
   '   bp_date date,
   '   bp_date_due date,
   '   bp_details text,
   '   bmi_date date,
   '   bmi_date_due date,
   '   bmi_details text,
   '   feet_date date,
   '   feet_date_due date,
   '   feet_details text,
   '   lipids_date date,
   '   lipids_date_due date,
   '   lipids_details text,
   '   microalbumin_date date,
   '   microalbumin_date_due date,
   '   microalbumin_details text,
   '   renalfunction_date date,If Not Valid_Data()
   '   renalfunction_date_due date,
   '   renalfunction_details text,
   '   education_date date,
   '   education_date_due date,
   '   education_details text,
   '   diet_date date,
   '   diet_date_due date,
   '   diet_details text,
   '   exercise_date date,
   '   exercise_date_due date,
   '   exercise_details text,DACC
   '   smoking_date date,
   '   smoking_date_due date,
   '   smoking_details text,
   '   medication_review_date date,
   '   medication_review_date_due date,
   '   medication_review_details text,
   '   deleted boolean DEFAULT false,
   '   fk_progressnote_components integer
   '   latex text
   ' ----------------------------------------------------------------------------------------
   
   Dim sProgressNotes_Components As String            '=the tabulated DACC plus any clinical notes for this section
   
   If Vbox_EditArea.Padding = 0 Then Return        'no changes to main DACC
   
   If Not Valid_Data() Then Return
   If bPreventSave Then  ' set in Init if main template is missing
      DACC_Template_Missing
      Return   
   Endif
   DACC = New Collection
   DACC!date_completed = Val(Format(currentconsult.GetConsultDate(), "dd/mm/yyyy"))  'can only be completed today and edited today
   DACC!fk_consult = currentconsult.GetPK()
   DACC!hba1c_date = Val(teNotesHBA1cLast.text)
   DACC!hba1c_date_due = Val(teNotesHBA1cDue.text)
   DACC!hba1c_details = teNotesHBA1C.text
   DACC!eyes_date = Val(teNotesEyesLast.text)
   DACC!eyes_date_due = Val(teNotesEyesDue.text)
   DACC!eyes_details = teNotesEyes.text
   DACC!bp_date = Val(teNotesBPLast.text)
   DACC!bp_date_due = Val(teNotesBPDue.text)
   DACC!bp_details = teNotesBP.Text
   DACC!bmi_date = Val(teNotesBMILast.Text)
   DACC!bmi_date_due = Val(teNotesBMIDue.text)
   DACC!bmi_details = Replace(teNotesBMI.Text, "\n\n", "\n")
   DACC!feet_date = Val(teNotesFeetLast.text)
   DACC!feet_date_due = Val(teNotesFeetDue.text)
   DACC!feet_details = teNotesFeet.text
   DACC!lipids_date = Val(teNotesHDLLast.text)
   DACC!lipids_date_due = Val(teNotesHDLDue.text)
   DACC!lipids_details = teNotesHDL.text
   DACC!microalbumin_date = Val(teNotesMicroalbuminLast.text)
   DACC!microalbumin_date_due = Val(teNotesMicroalbuminDue.text)
   DACC!microalbumin_details = teNotesMicroalbumin.Text
   DACC!renalfunction_date = Val(teNotesRenalFunctionLast.text)
   DACC!renalfunction_date_due = Val(teNotesRenalFunctionLast.text)
   DACC!renalfunction_details = teNotesRenalFunction.Text
   DACC!education_date = Val(teNotesEducationLast.text)
   DACC!education_date_due = Val(teNotesEducationDue.text)
   DACC!education_details = teNotesEducation.text
   DACC!diet_date = Val(teNotesDietLast.text)
   DACC!diet_date_due = Val(teNotesDietDue.text)
   DACC!diet_details = teNotesDiet.Text
   DACC!exercise_date = Val(teNotesActivityLast.text)
   DACC!exercise_date_due = Val(teNotesActivityDue.text)
   DACC!exercise_details = teNotesActivity.Text
   DACC!smoking_date = Val(teNotesSmokingLast.text)
   DACC!smoking_date_due = Val(teNotesSmokingDue.text)
   DACC!smoking_details = c.text
   DACC!medication_review_date = Val(teNotesMedicationLast.text)
   DACC!medication_review_date_due = Val(teNotesMedicationDue.text)
   DACC!medication_review_details = teNotesMedication.Text
   sProgressNotes_Components = Progress_note_create_HTML(DACC).GetData()
   DACC!latex = DACC_LaTex_Construct(DACC).GetData()
   DACC!fk_progressnote_components = modConsultDBI.ProgressNote_Save(currentconsult, sProgressNotes_Components, const.cSection_GeneralNotes, fk_progressnote_components, "diabetes", 0, True) 'true=parse the html see the routine
   modDACCDBI.Save_DACC(DACCS, pk_view, DACC, fk_progressnote_comments)
   Recall_Log()
   modDBConnect.CommitTrans()
   ' lblLastClaimed.text = Format(Now, "dd/mm/yyyy") 'really sloppy quick for for top lines of code in DACC_PRINT   'fixme.
   lblLastClaimed.text = Format(currentconsult.GetConsultDate(), "dd/mm/yyyy") 
   DACC_Print(DACC)
   FClinical.Refresh_AllPreviousNotes()
   
   Reload()
   
End

Public Sub Last_Hbaic()
   '-----------------------------------------------------------------
   'Attempts to get the last hba1c, if within the minimum time period
   'shows a compeleted icon, otherwise say its due now.
   '-----------------------------------------------------------------
   
   Dim bCompleted As Boolean
   Dim sString As String
   Dim HBA1c As Result
   Dim refRange As String
   
   teNotesHBA1c.RichText = "placeholder"
   hba1c = modMeasurementsDBI.Get_Loinc_Value(fk_patient, const.loinc_hba1c, 1, "DESC") 'Last hba1c by date
   If hba1c.count Then
      RefRange = hba1c!reference_range
      RefRange = Replace(RefRange, "(", "")
      RefRange = Replace(RefRange, ")", "")
      RefRange = Replace(RefRange, "<", "&lt;")
      
      sString = "<B>HBA1c:</B> " & hba1c!value_numeric & " (" & RefRange & ")"    'display the value
      teNotesHBA1cLast.text = Format(hba1c!observation_date, "dd/mm/yyyy")                      'and when done
      '   If DateDiff(Now, DateAdd(hba1c!observation_date, gb.Month, 12), gb.day) <= 0 Then
      If DateDiff(currentconsult.GetConsultDate(), DateAdd(hba1c!observation_date, gb.Month, 12), gb.day) <= 0 Then
         teNotesBPDue.text = "OVERDUE"
      Else
         teNotesHBA1cDue.text = Format(DateAdd(hba1c!observation_date, gb.Month, 6), "dd/mm/yyyy")
         bCompleted = True
      End If
   Else
      teNotesHBA1cDue.text = "OVERDUE"
      bCompleted = False
   End If
   teNotesHBA1c.richtext = Replace(teNotesHBA1c.richtext, "placeholder", sString)
   If hba1c!value_numeric > 7 Then
      sDecisionSupportComments &= "<P><B>Haemoglobin A1c</B></P>"
      Select Case currentconsult!patient!sex
         Case "M"
            sDecisionSupportComments &= "<P>His "
         Case "F"
            sDecisionSupportComments &= "<P>Her "
      End Select
      sDecisionSupportComments &= "hba1c is: " & hba1c!value_numeric & "(" & refRange & ").<BR> "
      sDecisionSupportComments &= "A value of &gt; 7 indicates suboptimal control<P>"
   End If
   
End

Public Sub Last_Foot_Check()
   
   If teNotesFeetLast.text = "" Then
      teNotesFeetDue.text = "OVERDUE"
   Endif
   
End

Public Sub Last_Education()
   
   If teNotesEducationLast.text = "" Then
      teNotesEducationDue.text = "OVERDUE"
   Endif
   
End

Public Sub Last_Activity()
   
   If teNotesActivityLast.text = "" Then
      teNotesActivityDue.text = "OVERDUE"
   Endif
   
End

Public Sub Last_Medication()
   
   If teNotesMedicationLast.text = "" Then
      teNotesMedicationDue.text = "OVERDUE"
   Endif
   
End

Public Sub Last_Diet()
   
   If teNotesDietLast.text = "" Then
      teNotesDietDue.text = "OVERDUE"
   Endif
   
End

Public Sub Last_Smoking()
   
   If teNotesSmokingLast.text = "" Then
      teNotesSmokingDue.text = "OVERDUE"
   Endif
   
End

Public Sub Last_RenalFunction()
   
   Dim R As Result
   Dim sRange As String
   Dim sQualifier As String
   
   R = modMeasurementsDBI.Get_Loinc_Value(fk_patient, const.Loinc_EGFR, 1, "DESC") 'Last R by date
   If R.count Then
      sRange = R!reference_range
      sRange = Replace(sRange, "(", "")
      sRange = Replace(sRange, ")", "")
      sRange = Replace$(sRange, "<", "&lt;")
      sRange = Replace$(sRange, ">", "&gt;")
      teNotesRenalFunction.Richtext = "<B>Egfr:</B>"
      If Not IsNull(R!value_numeric_qualifier) Then
         sQualifier = R!value_numeric_qualifier
         sQualifier = Replace(sQualifier, "<", "&lt;")
         sQualifier = Replace(sQualifier, ">", "&gt;")
         If InStr(sQualifier, "^") Then
            sQualifier = Replace(sQualifier, "^", "")
         Endif
      End If
      teNotesRenalFunction.Richtext &= sQualifier & R!value_numeric & " (" & sRange & ")"
      teNotesRenalFunctionLast.text = Format(R!observation_date, "dd/mm/yyyy")
      If R!abnormal = "*" Then
         sDecisionSupportComments &= "<P><B>Renal Function</B> is impaired</P><BR>"
      End If
      ' If DateDiff(Now, DateAdd(R!observation_date, gb.Month, 12), gb.day) <= 0 Then
      If DateDiff(currentconsult.GetConsultDate(), DateAdd(R!observation_date, gb.Month, 12), gb.day) <= 0 Then
         teNotesRenalFunctionDue = "OVERDUE"
      Else
         teNotesRenalFunctionDue.text = Format(DateAdd(R!observation_date, gb.Year, 1), "dd/mm/yyyy")
      End If
   Else
      teNotesRenalFunctionDue.text = "OVERDUE"
   End If
   
End

Public Function Last_Microalbumin() As String
   '----------------------------------------------------------
   'Microalbumin, currently only works for  Const.
   ' Loinc_Spot_RUAlbCreatRatio As String = "14959-1"
   ' Loinc_Spot_Urine_Albumin As String = "14957-5"
   ' loinc_Timed_UrineAlbumin_Excretion As String = "14956-7"
   ' Loinc_Spot_ProtCreatRatio as string = "2890-2"
   'Seems a lot of different codes used by Labs ?whats correct
   '----------------------------------------------------------
   
   Dim R As Result
   Dim test_result As String
   Dim sRange As String
   
   teNotesMicroalbumin.RichText = "not found"
   '---------------------------------------------------------------------------------
   'Mmm...........difficult - seems many different LOINC's for this
   'First the least likely - HAPS (Hunter Area Pathology Service) seem to do this one
   '---------------------------------------------------------------------------------
   R = modMeasurementsDBI.Get_Albumin_Creatinine(fk_patient)
   If R.count = 0 Then ' Neither Spot nor timed, tell user its overdue
      teNotesMicroalbuminDue.text = "OVERDUE"
      teNotesMicroalbumin.richtext = Replace(teNotesMicroalbumin.richtext, "not found", "")
   Else
      sRange = R!reference_range
      sRange = Replace(sRange, "(", "")
      sRange = Replace(sRange, ")", "")
      sRange = Replace$(sRange, "<", "&lt;")
      sRange = Replace$(sRange, ">", "&gt;")
      
      teNotesMicroalbuminLast.text = Format(R!observation_date, "dd/mm/yyyy")
      ' If DateDiff(Now, DateAdd(R!observation_date, gb.Month, 12), gb.day) <= 0 Then
      If DateDiff(currentconsult.GetConsultDate(), DateAdd(R!observation_date, gb.Month, 12), gb.day) <= 0 Then
         teNotesMicroalbuminDue.text = "OVERDUE"
      Else
         teNotesMicroalbuminDue.text = Format(DateAdd(R!observation_date, gb.Year, 1), "dd/mm/yyyy")
      End If
      test_result = "<B>" & R!identifier & "</B>: " & R!value_numeric & " " & R!units & " (" & sRange & ")<BR>"
      If R!abnormal = "*" Then
         test_result &= " - this Is an abnormal result"
         If InStr(Lower(R!identifier), "timed") Then
            microalbuminuria_update_decision_support("timed")
         Else
            microalbuminuria_update_decision_support("spot")
         Endif
      Endif
      Print test_result
      teNotesMicroalbumin.richtext = Replace(teNotesMicroalbumin.richtext, "not found", test_result)
   End If
   
End

Public Sub microalbuminuria_update_decision_support(stestType As String)
   '------------------------------------------
   'Add a message to the decision support text
   '------------------------------------------
   
   sDecisionSupportComments &= "<P><B>Microalbuminuria</B></P>"
   sDecisionSupportComments &= "Microalbuminuria noted. "
   If stestType <> "timed" Then
      sDecisionSupportComments &= "You should probably do a timed overnight urine collection to confirm this.<BR>"
   End If
   
End

Public Sub Last_Lipids()
   '----------------------------------------------------------------
   'Unfortunately, quite complex, eg someone could have just ordered
   'cholesterol as the latest, or triglycerides, we can't mix results
   'from different labs/dates so this only allows lipids done on the
   'latest date - not foolproof but generally ok. FIXME PUT IN LAB
   'VALIDATION TO MAKE SURE NOT MIXING RESULTS
   '----------------------------------------------------------------=
   
   Dim R As Result
   Dim last_date As String
   Dim sstring As String
   
   teNotesHDL.Clear()
   teNotesHDL.richtext = "placeholder"
   
   R = modMeasurementsDBI.Get_Lipids(fk_patient)
   
   If R.count Then
      For Each R
         If last_date = "" Then
            last_date = Format(R!observation_date, "dd/mm/yyyy")
         End If
         If Format(R!observation_date, "dd/mm/yyyy") = last_date Then
            sString &= Lipid_Get_Component(R)   '& "<BR>"
         Endif
      Next
   Else
      sSTring = ""
   End If
   teNotesHDL.richtext = Replace(teNotesHDL.richtext, "placeholder", sString)
   teNotesHDL.pos = 1
   
End

Public Sub Lipid_Get_Component(R As Result) As String
   '------------------------------------------------
   'given a lipid component returns formatted string
   '------------------------------------------------
   
   Dim RefRange As String
   Dim bCompleted As Boolean
   Dim sString As String
   
   'Now, due to HAPS being fuckwits, they send their range bracketed
   RefRange = R!reference_range
   RefRange = Replace(RefRange, "(", "")
   RefRange = Replace(RefRange, ")", "")
   RefRange = Replace(RefRange, "<", "&lt;")
   sString &= "<B>" & R!identifier & "</B> " & Format(R!value_numeric, "###.##") & "(" & RefRange & ")<BR>"
   teNotesHDLLast.text = Format(R!observation_date, "dd/mm/yyyy")
   If DateDiff(currentconsult.GetConsultDate(), DateAdd(R!observation_date, gb.Month, 12), gb.day) <= 0 Then
      teNotesHDLDue.text = "OVERDUE"
   Else
      teNotesHDLDue.text = Format(DateAdd(R!observation_date, gb.Year, 1), "dd/mm/yyyy")
      bCompleted = True
   End If
   If R!loinc = const.Loinc_TotalCholesterol Then
      If R!value_numeric > 3.5 Then
         sDecisionSupportComments &= "<P><B>Serum Lipids</B><P>"
         sDecisionSupportComments &= "The total cholesterol of " & R!value_numeric & " elevated - aim for TC &lt;3.5 and LDL &lt;2.0)."
      Endif
   Endif
   Return sString
   
End

Public Function Progress_note_create_HTML(DACC As Collection) As CTemplate
   '----------------------------------------------------------------
   'Creates a table akin to what is seen on the screen, as a summary
   'for the progress notes
   '-----------------------------------------------------------------
   
   Dim templ As CTemplate
   
   templ = New CTemplate(modHTML.Diabetes_Annual_Cycle_Of_Care_HTML())
   templ.Subst_common(currentconsult)
   templ.Subst("data_hba1c", DACC!hba1c_details)
   templ.Subst("last_hba1c", Format(DACC!hba1c_date, "dd/mm/yyyy"))
   templ.Subst("due_hba1c", Format(DACC!hba1c_date_due, "dd/mm/yyyy"))
   
   templ.Subst("data_eyes", DACC!eyes_details)
   templ.Subst("last_eyes", Format(DACC!eyes_date, "dd/mm/yyyy"))
   templ.Subst("due_eyes", Format(DACC!eyes_date_due, "dd/mm/yyyy"))
   
   templ.Subst("data_bp", DACC!bp_details)
   templ.Subst("last_bp", Format(DACC!bp_date, "dd/mm/yyyy"))
   templ.Subst("due_bp", Format(DACC!bp_date_due, "dd/mm/yyyy"))
   
   templ.Subst("data_bmi", DACC!bmi_details)
   templ.Subst("last_bmi", Format(DACC!bmi_date, "dd/mm/yyyy"))
   templ.Subst("due_bmi", Format(DACC!bmi_date_due, "dd/mm/yyyy"))
   
   templ.Subst("data_feet", DACC!feet_details)
   templ.Subst("last_feet", Format(DACC!feet_date, "dd/mm/yyyy"))
   templ.Subst("due_feet", Format(DACC!feet_date_due, "dd/mm/yyyy"))
   
   templ.Subst("data_lipids", DACC!lipids_details)
   templ.Subst("last_lipids", Format(DACC!lipids_date, "dd/mm/yyyy"))
   templ.Subst("due_lipids", Format(DACC!lipids_date_due, "dd/mm/yyyy"))
   
   templ.Subst("data_microalbumin", DACC!microalbumin_details)
   templ.Subst("last_microalbumin", Format(DACC!microalbumin_date, "dd/mm/yyyy"))
   templ.Subst("due_microalbumin", Format(DACC!microalbumin_date_due, "dd/mm/yyyy"))
   'some orginal daccs missing renal function ?still need this
   If Not IsNull(DACC!renalfunction_date) Then
      templ.Subst("data_renalfunction", DACC!renalfunction_details)
      templ.Subst("last_renalfunction", Format(DACC!renalfunction_date, "dd/mm/yyyy"))
      templ.Subst("due_renalfunction", Format(DACC!renalfunction_date_due, "dd/mm/yyyy"))
   Else
      templ.Subst("data_renalfunction", "\\relax")
      templ.Subst("last_renalfunction", "\\relax")
      templ.Subst("due_renalfunction", "\\relax")
   End If
   
   templ.Subst("data_education", DACC!education_details)
   templ.Subst("last_education", Format(DACC!education_date, "dd/mm/yyyy"))
   templ.Subst("due_education", Format(DACC!education_date_due, "dd/mm/yyyy"))
   
   templ.Subst("data_diet", DACC!diet_details)
   templ.Subst("last_diet", Format(DACC!diet_date, "dd/mm/yyyy"))
   templ.Subst("due_diet", Format(DACC!diet_date_due, "dd/mm/yyyy"))
   
   templ.Subst("data_exercise", DACC!exercise_details)
   templ.Subst("last_exercise", Format(DACC!exercise_date, "dd/mm/yyyy"))
   templ.Subst("due_exercise", Format(DACC!exercise_date_due, "dd/mm/yyyy"))
   
   templ.Subst("data_smoking", DACC!smoking_details)
   templ.Subst("last_smoking", Format(DACC!smoking_date, "dd/mm/yyyy"))
   templ.Subst("due_smoking", Format(DACC!smoking_date_due, "dd/mm/yyyy"))
   
   templ.Subst("data_medication_review", DACC!medication_review_details)
   templ.Subst("last_medication_review", Format(DACC!medication_review_date, "dd/mm/yyyy"))
   templ.Subst("due_medication_review", Format(DACC!medication_review_date_due, "dd/mm/yyyy"))
   Print DateAdd(DACC!date_completed, gb.year, 1)
   
   templ.Subst("next_due", Format(DateAdd(DACC!date_completed, gb.year, 1), "dd/mm/yyyy"))
   
   Return templ
   
End

Public Sub Last_BMI()
   '------------------------------------------------
   'Calculate last BMI, assumes height dosn't change
   'Last weight must be within the 6M period
   '------------------------------------------------
   
   Dim m As Collection
   Dim weight As Variant
   Dim height As Variant
   Dim BMI As Float
   Dim bHaveHeight As Boolean
   Dim bHaveWeight As Boolean
   Dim bCompleted As Boolean
   Dim strHeightWeight As String
   '-------------------------------------------
   'Get height as a delimted string:height|date
   '-------------------------------------------
   currentconsult.Refresh("measurements")
   m = modMeasurementsDBI.Measurement_Get_Latest(currentconsult!measurements, const.Measurement_Height)
   If m Then
      height = m!data
      teNotesHeight.text = "Height=" & m!data               'show height eg 179cm
      teNotesHeight.Foreground = Color.black
      teNotesHeightLast.text = m!date              'show date last height
      teNotesHeightLast.Foreground = Color.Black
      teNotesHeightDue.Text = "N/A"
      teNotesHeightDue.Foreground = Color.Black
      bHaveHeight = True
      strHeightWeight = "H=" & m!data
      
   Else
      teNotesHeight.text = "Height?"
      strHeightWeight = "Height?"
   Endif
   '----------------------------------------------------------------------------------------
   'Ditto for weight, but if weight taken > 6 months ago, prompt that measurement is overdue
   '----------------------------------------------------------------------------------------
   m = modMeasurementsDBI.Measurement_Get_Latest(currentconsult!measurements, const.Measurement_Weight)
   If m Then
      weight = m!data
      ' If DateDiff(Now, DateAdd(Val(m!date), gb.month, 6), gb.month) > 0 Then
      If DateDiff(currentconsult.GetConsultDate(), DateAdd(Val(m!date), gb.month, 6), gb.month) > 0 Then
         bHaveWeight = True
         teNotesWeight.text = "Weight=" & m!data            'show weight eg 100Kg
         teNotesWeight.Foreground = Color.Black
         strHeightWeight &= " W=" & m!data
      Else
         teNotesWeight.Text = "Weight?"
         strHeightWeight &= " W=?"
      End If
      teNotesWeightLast.text = m!date                 'show date last weight
      teNotesWeightDue.text = Format(DateAdd(Val(m!date), gb.Month, 6), "dd/mm/yyyy")
      
   Else
      teNotesWeight.text = "Weight?"
      strHeightWeight &= " W=?"
   End If
   '------------------------------------------------------------
   'if have enough data, calculate BMI, if not prompt as overdue
   'or - if weight out of date, prompt as overdue
   '------------------------------------------------------------
   If bHaveHeight And bHaveWeight Then                               'have height and weight, and in date
      Try BMI = Format((weight / (height ^ 2)) * 10000, "##.#")
      If Not Error Then
         bCompleted = True
         teNotesBMIDue.text = Format(DateAdd(Val(m!date), gb.Month, 6), "dd/mm/yyyy")
         sDecisionSupportComments &= "<P><B>Weight and BMI</B></P>"
         sDecisionSupportComments &= "<P>With a weight of " & weight & " and BMI of " & BMI & modDecisionSupport.BMI_DecSupp(weight, height) & "</P>"
         
         ' teNotesBMILast.text = Format(Now, "dd/mm/yyyy")
         teNotesBMILast.text = Format(currentconsult.GetConsultDate(), "dd/mm/yyyy")
         teNotesBMI.text = strHeightWeight & " BMI=" & Str(BMI)
         teNotesBMI.Foreground = Color.black
      Else
         teNotesBMIDue.text = "OVERDUE"
      Endif
   Else
      teNotesBMI.text = strHeightWeight & " BMI?"
      If bHaveHeight = False Then
         teNotesHeightDue.text = "OVERDUE"
         teNotesHeightDue.Foreground = Color.Red
      Endif
      If bHaveWeight = False Then
         teNotesWeightDue.text = "OVERDUE"
         teNotesWeightDue.Foreground = Color.Red
      End If
      teNotesBMIDue.Text = "OVERDUE"
      teNotesBMIDue.Foreground = Color.red
   End If
   
End

Public Sub Last_BP()
   '------------------------------------------------------------
   'Display last recorded BP, if not in date, completion = false
   '------------------------------------------------------------
   
   Dim m As Collection
   Dim bCompleted As Boolean
   Dim sString As String
   Dim BPBits As String[]
   Dim BpNotAtTarget As Boolean
   
   teNotesBP.RichText = "placeholder"
   m = modMeasurementsDBI.Measurement_Get_Latest(currentconsult!measurements, const.Measurement_BP)
   If Not IsNull(m) Then
      sString = "<B>BP</B>=" & m!data
      teNotesBPLast.text = m!date
      'If DateDiff(Now, DateAdd(Val(m!date), gb.Month, 12), gb.day) <= 0 Then
      If DateDiff(currentconsult.GetConsultDate(), DateAdd(Val(m!date), gb.Month, 12), gb.day) <= 0 Then
         teNotesBPDue.text = "OVERDUE"
      Else
         teNotesBPDue.text = Format(DateAdd(Val(m!date), gb.Month, 6), "dd/mm/yyyy")
         bCompleted = True
      End If
   Else
      teNotesBPDue.text = "OVERDUE"
   End If
   teNotesBP.richtext = Replace(teNotesBP.richtext, "placeholder", sString)
   BPBits = Split(m!data, "/")
   If Val(BPBits[0]) > 135 Then
      sDecisionSupportComments &= "<P><B>Blood Pressure</B></P><P>"
      sDecisionSupportComments &= "The systolic pressure is above target at " & BPBits[0] & ".<BR> "
      BpNotAtTarget = True
   End If
   If Val(BPBits[1]) > 80 Then
      sDecisionSupportComments &= "The diastolic pressure is above target at " & BPBits[1] & ".<BR>"
      BpNotAtTarget = True
   End If
   If BpNotAtTarget Then
      sDecisionSupportComments &= "The recommended target BP level is &lt; 130/80 for diabetic.</P>"
   End If
   
End

Public Sub Last_Eye_Review()
   '------------------------------------------------------------------------
   'Attempts to find if someone has written to us with an eye review, either
   'ophthalmologist or optomotrist and displays who if found
   'the texteditor needs a 'place holder' to be replaced with the text you
   'want to show. My intention with this HREF is that at some point
   'clicking on the link will show the letter FIXME
   '-------------------------------------------------------------------------
   
   Dim bCompleted As Boolean
   Dim strinsert As String
   Dim EyeReview As Result
   
   EyeReview = modDACCDBI.Last_Eye_Review(fk_patient, 1, "DESC")
   If EyeReview.count Then
      teNotesEyes.richtext = "place"
      strinsert = "<A HREF='" & Str$(EyeReview!pk_document) & "'>"
      If Not IsNull(EyeReview!organisation_category) Then
         strinsert &= EyeReview!organisation
      Else
         strinsert &= EyeReview!originator
      Endif
      strinsert &= "</A><BR>" & EyeReview!tag_user & "<BR>"
      teNotesEyes.richtext = Replace(teNotesEyes.richtext, "place", strinsert)
      teNotesEyesLast.text = Format(EyeReview!date_created, "dd/mm/yyyy")
      '  If DateDiff(Now, DateAdd(EyeReview!date_created, gb.Year, 2), gb.day) <= 0 Then
      If DateDiff(currentconsult.GetConsultDate(), DateAdd(EyeReview!date_created, gb.Year, 2), gb.day) <= 0 Then
         teNotesEyesDue.text = "OVERDUE"
      Else
         teNotesEyesDue.text = Format(DateAdd(EyeReview!date_created, gb.Year, 2), "dd/mm/yyyy")
         bCompleted = True
      End If
   Else
      '-----------------------------------------------------------------
      'no document in database, however user may have typed in something
      '-----------------------------------------------------------------
      If teNotesEyes.text = "" Then
         teNotesEyesDue.text = "OVERDUE"
      End If
   Endif
   
End

Private Sub Settings_Load()
   
   ' Try VSplit_DecSupport_Notes.layout = Settings["DACC/VSplit_DecSupport_Notes.layout"]
   
End

Public Sub print_content()
   '----------------------------------------------------------------------------
   'So named like all forms as called from FClinical Toolbar
   'if there is a completed DACC showing, i.e the last one done then re-print it
   '----------------------------------------------------------------------------
   
   If Not IsNull(DACC) Then DACC_Print(DACC)
   
End

Public Sub New_Entry()
   '--------------------------------------------------------------------------------------------------------
   'New Dacc this routine is  so-named in all edit area forms as called from toolbutton in FClinical toolbar
   '--------------------------------------------------------------------------------------------------------
   
   DACC_New()
   
End

Public Sub DACC_New()
   
   If IsNull(modUtil.Find_File("templates/diabetes_cycle_care.tex")) Then   
      DACC_Template_Missing
      bPreventSave = True  
   Endif
   EditArea_Clear()  'Clear entry area and refresh as many components as possible
   Reset_Keys()
   With lblLastClaimed
      .Foreground = Color.Red
      .Font.Bold = True
      .text = "NEW DACC"
   End With
   lblNextDue.text = ""
   Refresh()
   Vbox_EditArea_Inner.Enabled = True
   VBox99.SetFocus
   
End

Public Sub Edit()
   '--------------------------------------
   'Called from the main Fclinical toolbar
   '--------------------------------------
   
   If Not IsNull(DACC) Then
     If Format(DACC!date_completed, "dd/mm/yyyy") = Format(currentconsult.GetConsultDate(), "dd/mm/yyyy") Then
         DACC_Edit()
      Endif
   End If
   
End

Public Sub DACC_Edit()
   '----------------------------------------------------------------------
   'Can only be edited on the day (the only day the edit button is enabled
   '----------------------------------------------------------------------
   
   Vbox_EditArea_Inner.Enabled = True
   
End

Public Sub Reset_Keys()
   
   fk_progressnote_comments = -1  'for historical (no real reason) i chose -1 = no notes, most flags now 0 but never changed this as is across many modules
   fk_progressnote_components = -1
   fk_diabetes_annual_cycle_of_care = 0
   pk_view = ""
   fk_consult = 0
   date_completed = Null
   date_saved = Null
   sDecisionSupportComments = ""
   
End

Public Sub teDue_LostFocus()
   
   Last.background = Color.White
   
End

Public Sub teDue_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   
End

Public Sub teDone_LostFocus()
   
   Last.background = Color.White
   
End

Public Sub teDone_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   
End

Public Sub teNotesDACC_LostFocus()
   
   Last.pos = 1
   Last.BackGround = Color.white
   
End

Public Sub teNotesDACC_gotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   Select Case Last.tag
      Case "hba1c"
         NextTextBoxDetails = teNotesEyes
         NextTextBoxLast = teNotesHBA1cLast
         NextTextboxDue = teNotesHBA1cDue
      Case "eyes"
         NextTextBoxDetails = teNotesBP
         NextTextBoxLast = teNotesEyesLast
         NextTextboxDue = teNotesEyesDue
         
      Case "bp"
         NextTextBoxDetails = teNotesBMI
         NextTextBoxLast = teNotesBPLast
         NextTextboxDue = teNotesBPDue
         
      Case "bmi"
         NextTextBoxDetails = teNotesFeet
         NextTextBoxLast = teNotesHeightLast
         NextTextboxDue = teNotesBMIDue
         
      Case "feet"
         NextTextBoxDetails = teNotesHDL
         NextTextBoxLast = teNotesFeetLast
         NextTextboxDue = teNotesFeetDue
         
      Case "hdl"
         NextTextBoxDetails = teNotesMicroalbumin
         NextTextBoxLast = teNotesHDLLast
         NextTextboxDue = teNotesHDLDue
         
      Case "microalbumin"
         NextTextBoxDetails = teNotesRenalFunction
         NextTextBoxLast = teNotesMicroalbuminLast
         NextTextboxDue = teNotesMicroalbuminDue
         
      Case "renal function"
         NextTextBoxDetails = teNotesEducation
         NextTextBoxLast = teNotesRenalFunctionLast
         NextTextboxDue = teNotesRenalFunctionDue
         
      Case "education"
         NextTextBoxDetails = teNotesDiet
         NextTextBoxLast = teNotesEducationLast
         NextTextboxDue = teNotesEducationDue
         
      Case "diet"
         NextTextBoxLast = teNotesDietLast
         NextTextBoxDetails = teNotesActivitY
         NextTextboxDue = teNotesDietDue
         
      Case "activity"
         NextTextBoxDetails = c
         NextTextBoxLast = teNotesActivityLast
         NextTextboxDue = teNotesActivityDue
         
      Case "smoking"
         NextTextBoxDetails = teNotesMedication
         NextTextBoxLast = teNotesSmokingLast
         NextTextboxDue = teNotesSmokingDue
         
      Case "medication"
         NextTextBoxLast = teNotesMedicationLast
         NextTextboxDue = teNotesMedicationDue
         
   End Select
   
End

Public Sub teNotesDACC_Change()
   '--------------------------------------------------------------
   'As the text in the details of the activity column changes,
   'if no last done or due dates exist, calculate these on the
   'basis of the tag on the parental HBOX 'fixme this should come
   'pre-configured from a database table
   'if enter pressed twice, move onto the next textbox
   '--------------------------------------------------------------
   
   If bexit Then Return
   
   If Trim(Last.text) <> "" Then
      If Trim(NextTextBoxLast.Text) = "" Then
         ' NextTextBoxLast.text = Format(Now, "dd/mm/yyyy")
         '  NextTextboxDue.text = Format(DateAdd(Now, gb.month, Val(Last.Parent.tag)), "dd/mm/yyyy")
         NextTextBoxLast.text = Format(currentconsult.GetConsultDate(), "dd/mm/yyyy")
         NextTextboxDue.text = Format(DateAdd(currentconsult.GetConsultDate(), gb.month, Val(Last.Parent.tag)), "dd/mm/yyyy")
      Endif
   Else
      NextTextBoxLast.text = ""
      NextTextboxDue.text = "OVERDUE"
   Endif
   If Last.pos > 0 And InStr(Last.text, "\n\n") Then
      Select Case Last.tag
         Case "bp", "bmi", "hdl", "microalbumin"
            
         Case Else
            Last.text = Replace(Last.text, "\n\n", "\n")
            If Right(Last.text, 2) = "\n" Then
               bexit = True
               Last.text = Left(Last.text, Len(Last.text) - 2)
               Last.pos = 0
               bExit = False
            Endif
            
      End Select
      NextTextBoxDetails.SetFocus()
      NextTextBoxDetails.Pos = Len(NextTextBoxDetails.Text)
   End If
   EditArea_NotifyData_Change(True)
   
End

Public Sub Reload()
   
   '------------------------------------------------------------
   'Refreshes any existing DACC data
   'Previous DACC's may (if I do it later) be able to be edited
   'currently only the latest one can
   'the columnview is now not visible
   '-----------------------------------------------------------
   currentconsult.Refresh("diabetes_annual_cycle_of_care")  'get last 5 DACC most recent first
   DACCS = currentconsult!diabetes_annual_cycle_of_care
   If DACCS.count = 0 Then                            'No DACC's then is overdue!
      lblLastClaimed.text = "Overdue"
      lblNextDue.text = ""
      New_Entry()
   Else
      With lblLastClaimed
         .text = ""
         .Font.bold = False
         .Foreground = Color.DarkBlue
      End With
      
      For Each DACC In DACCS                          'sorted DESC so ist always latest
         If lblLastClaimed.text = "" Then
            '----------------------------------------------------
            'Appropriate message for completed or incomplete DACC
            '----------------------------------------------------
            If Not IsNull(DACC!date_completed) Then   'should never be null except for bad historical coding reasons in my database
               date_last_Claimed = DACC!date_completed
               lblLastClaimed.text = "Last Claim: " & Format(DACC!date_completed, "dd/mm/yyyy")
               lblNextDue.text = "Next Due: " & Format(DateAdd(DACC!date_completed, gb.year, 1), "dd/mm/yyyy")
            Else
               lblLastClaimed.text = "Unfinished: " & Format(DACC!consult_date, "dd/mm/yyyy") 'should have only ever happended in my database
            End If
            ' If Format(DACC!date_completed, "dd/mm/yyyy") = Format(Now, "dd/mm/yyyy") Then
            ' tbEdit.Visible = True
            FClinical.Enable_Edit_Button(True)
            '   Else
            FClinical.Enable_Edit_Button(False)
            'tbEdit.Visible = False
            ' Endif
            DACC_Display(DACC)
            Break
         End If
      Next
      
   End If
   EditArea_NotifyData_Change(False)
   Vbox_EditArea_Inner.Enabled = False
   VBox99.SetFocus() 'something on the form (this is the outer box) otherwise after a print FClinical.TxtPatient can get focus > removes patients record.
   
End

Public Sub DACC_Display(DACC As Collection)
   '------------------------------------------------------------------
   'Displays the last DACC saved which may/may not have been completed
   'Hence all the Try's in this subroutine.
   '------------------------------------------------------------------
   
   EditArea_Clear()
   bExit = True
   fk_consult = DACC!fk_consult                             'consult DACC last worked on or finished
   fk_diabetes_annual_cycle_of_care = DACC!fk_diabetes_annual_cycle_of_care                 'key to  chronic_disease_management.diabetes_annual_cycle_of_care
   pk_view = DACC!pk_view
   date_completed = DACC!date_completed                     'can be null if an interim unclaimed DACC
   date_saved = DACC!consult_date                           'will never be null
   fk_progressnote_components = DACC!fk_progressnote_components    'never null, but may not be the table of DACC but comment partially completed
   Try fk_progressnote_comments = DACC!fk_progressnote_comments  'may be null if no associated progress notes for the DACC added.
   teNotesHBA1C.text = DACC!hba1c_details
   Try teNotesHBA1CLast.text = Format(DACC!hba1c_date, "dd/mm/yyyy")
   Try teNotesHBA1CDue.text = Format(DACC!hba1c_date_due, "dd/mm/yyyy")
   teNotesEyes.text = DACC!eyes_details
   teNotesEyes.pos = 0
   Try teNotesEyesLast.text = Format(DACC!eyes_date, "dd/mm/yyyy")
   Try teNotesEyesDue.text = Format(DACC!eyes_date_due, "dd/mm/yyyy")
   teNotesBP.text = DACC!bp_details
   teNotesBP.pos = 0
   Try teNotesBPLast.text = Format(DACC!bp_date, "dd/mm/yyyy")
   Try teNotesBPDue.text = Format(DACC!bp_date_due, "dd/mm/yyyy")
   teNotesBMI.text = DACC!bmi_details
   teNotesBMI.Pos = 0
   Try teNotesBMILast.text = Format(DACC!bmi_date, "dd/mm/yyyy")
   If IsNull(DACC!bmi_date_due) Then
      teNotesBMIDue.text = "OVERDUE"
   Else
      teNotesBMIDue.text = Format(DACC!bmi_date_due, "dd/mm/yyyy")
   End If
   teNotesFeet.text = DACC!feet_details
   teNotesFeet.pos = 0
   Try teNotesFeetLast.text = Format(DACC!feet_date, "dd/mm/yyyy")
   Try teNotesFeetDue.text = Format(DACC!feet_date_due, "dd/mm/yyyy")
   teNotesHDL.text = DACC!lipids_details
   teNotesHDL.pos = 0
   Try teNotesHDLLast.text = Format(DACC!lipids_date, "dd/mm/yyyy")
   Try teNotesHDLDue.text = Format(DACC!lipids_date_due, "dd/mm/yyyy")
   teNotesMicroalbumin.text = DACC!microalbumin_details
   teNotesMicroalbumin.pos = 0
   Try teNotesMicroalbuminLast.text = Format(DACC!microalbumin_date, "dd/mm/yyyy")
   Try teNotesMicroalbuminDue.text = Format(DACC!microalbumin_date_due, "dd/mm/yyyy")
   teNotesRenalFunction.text = DACC!renalfunction_details
   teNotesRenalFunction.pos = 0
   Try teNotesRenalFunctionLast.text = Format(DACC!renalfunction_date, "dd/mm/yyyy")
   Try teNotesRenalFunctionDue.text = Format(DACC!renalfunction_date_due, "dd/mm/yyyy")
   teNotesEducation.text = DACC!education_details
   teNotesEducation.pos = 0
   Try teNotesEducationLast.text = Format(DACC!education_date, "dd/mm/yyyy")
   Try teNotesEducationDue.text = Format(DACC!education_date_due, "dd/mm/yyyy")
   teNotesDiet.text = DACC!diet_details
   teNotesDiet.pos = 0
   Try teNotesDietLast.text = Format(DACC!diet_date, "dd/mm/yyyy")
   Try teNotesDietDue.text = Format(DACC!diet_date_due, "dd/mm/yyyy")
   teNotesActivity.text = DACC!exercise_details
   teNotesActivity.pos = 0
   Try teNotesActivityLast.text = Format(DACC!exercise_date, "dd/mm/yyyy")
   Try teNotesActivityDue.text = Format(DACC!exercise_date_due, "dd/mm/yyyy")
   c.text = DACC!smoking_details
   c.pos = 0
   Try teNotesSmokingLast.text = Format(DACC!smoking_date, "dd/mm/yyyy")
   Try teNotesSmokingDue.text = Format(DACC!smoking_date_due, "dd/mm/yyyy")
   teNotesMedication.text = DACC!medication_review_details
   teNotesMedication.pos = 0
   Try teNotesMedicationLast.text = Format(DACC!medication_review_date, "dd/mm/yyyy")
   Try teNotesMedicationDue.text = Format(DACC!medication_review_date_due, "dd/mm/yyyy")
   bExit = False
   Vbox_EditArea_Inner.Enabled = False
   
End

Public Sub teDue_Change()
   
   If Last.text = "OVERDUE" Then
      Last.Foreground = Color.Red
   Else
      Last.Foreground = Color.Black
   End If
   EditArea_NotifyData_Change(True)
   
End

Public Sub EditArea_Buttons_KeyPress()
   
   If Key.code = Key.Return Then
      Save()
   Endif
   
End

Public Sub Preview()
   
   Dacc_Preview()
   
End

Public Sub Dacc_Preview()
   
   If Not IsNull(DACC) Then
      Try FClinical.Editor_ShowPage_External("pdf file", "DACC Summary", modPrinting.Latex_To_PDF(DACC_LaTex_Construct(DACC).GetData()))
   End If
   
End

Public Sub DACC_Print(DACC As Collection)
   '----------------------------------------------------------------------------
   'Prints out the DACC using LaTex, cTemplate = Null pre latex template days
   'This should only ever happen to me
   '----------------------------------------------------------------------------
   
   Dim sMsg As String
   
   If lblLastClaimed.text = "NEW DACC" Then
      Return                                        'don't print if in process of doing a new one.
   End If
   Inc Application.Busy
   If Not IsNull(DACC!latex) Then                   'should never be null, expect for my system when I didn't save latex
      modPrinting.Print_latex(DACC!latex, const.Paper_Plain, 1)
   Else
      If Valid_Data() Then
         modPrinting.Print_latex(DACC_LaTex_Construct(DACC).GetData(), const.Paper_Plain, 1)
      End If
   End If
   Dec Application.Busy
   VBox99.SetFocus 'otherwise if nothing has focus can end up with txtSearch in Fclinical being the next in line > removes the patient.
Catch
   Message.title = "DACC"
   sMsg = "An error occurred whilst attempting to prepare this DACC for printing, possibly some of the data is missing, or you have not yet saved this DACC."
   "\n\nIf you are sure all the fields are completed, and  you have already saved this DACC, try clicking the Rrefresh button, then try to print again"
   Dec Application.Busy
   Message.Info(sMsg)
   Return
   
End

Public Sub DACC_LaTex_Construct(DACC As Collection) As CTemplate
   '---------------------------------------------------------
   'Makes appropriate substitutions in the LaTex template
   'returns null if an error occurs
   'FIXME: perhaps allow printing of partially completed DACC
   '---------------------------------------------------------
   
   Dim templ As CTemplate
   Dim iIncomplete As Integer
   Dim sMissing As String = "**missing**"
   
   Try Templ = New CTemplate("diabetes_cycle_care", "tex")
   If Error Then
      modUtilGUI.Template_Missing("diabetes_cycle_care")
      Return Null
   Endif
   templ.Subst_common(currentconsult)
   If Not IsNull(DACC!date_completed) Then
      templ.Subst("due_on", Format(DateAdd(DACC!date_completed, gb.year, 1), "dd/mm/yyyy"))
      templ.Subst("date_completed", Format(DACC!date_completed, "dd/mm/yyyy"))
   Else
      Inc iIncomplete
      templ.Subst("due_on", sMissing)
      templ.Subst("date_completed", sMissing)
   End If
   templ.Subst("hba1c_details", DACC!hba1c_details)
   If Not IsNull(DACC!hba1c_details) Then
      templ.Subst("hba1c_date", Format(DACC!hba1c_date, "dd/mm/yyyy"))
      templ.Subst("hba1c_due", Format(DACC!hba1c_date_due, "dd/mm/yyyy")) 'cannot use hba1c_date_due as the previous will wipe it
   Else
      templ.Subst("hba1c_date", "NOT DONE")
      templ.Subst("hba1c_due", "\\relax")
   Endif
   
   templ.Subst("eyes_details", DACC!eyes_details)
   templ.Subst("eyes_date", Format(DACC!eyes_date, "dd/mm/yyyy"))
   templ.Subst("eyes_due", Format(DACC!eyes_date_due, "dd/mm/yyyy")) 'cannot use eyes_date_due as the previous will wipe it
   templ.Subst("bp_details", DACC!bp_details)
   templ.Subst("bp_date", Format(DACC!bp_date, "dd/mm/yyyy"))
   templ.Subst("bp_due", Format(DACC!bp_date_due, "dd/mm/yyyy"))
   templ.Subst("bmi_details", DACC!bmi_details)
   templ.Subst("bmi_date", Format(DACC!bmi_date, "dd/mm/yyyy"))
   templ.Subst("bmi_due", Format(DACC!bmi_date_due, "dd/mm/yyyy"))
   templ.Subst("feet_details", DACC!feet_details)
   templ.Subst("feet_date", Format(DACC!feet_date, "dd/mm/yyyy"))
   templ.Subst("feet_due", Format(DACC!feet_date_due, "dd/mm/yyyy")) 'cannot use feet_date_due as the previous will wipe it
   templ.Subst("lipids_details", DACC!lipids_details)
   templ.Subst("lipids_date", Format(DACC!lipids_date, "dd/mm/yyyy"))
   templ.Subst("lipids_due", Format(DACC!lipids_date_due, "dd/mm/yyyy")) 'cannot use lipids_date_due as the previous will wipe it
   templ.Subst("microalbumin_details", DACC!microalbumin_details)
   templ.Subst("microalbumin_date", Format(DACC!microalbumin_date, "dd/mm/yyyy"))
   templ.Subst("microalbumin_due", Format(DACC!microalbumin_date_due, "dd/mm/yyyy")) 'cannot use microalbumin_date_due as the previous will wipe it
   'Due to this field being added after some initial DACC's were saved:
   If Not IsNull(DACC!renalfunction_date) Then
      templ.Subst("renalfunction_details", DACC!renalfunction_details)
      templ.Subst("renalfunction_date", Format(DACC!renalfunction_date, "dd/mm/yyyy"))
      templ.Subst("renalfunction_due", Format(DACC!renalfunction_date_due, "dd/mm/yyyy"))
   Else
      templ.Subst("renalfunction_details", "\\relax")
      templ.Subst("renalfunction_date", "\\relax")
      templ.Subst("renalfunction_due", "\\relax")
   End If
   
   templ.Subst("education_details", DACC!education_details)
   templ.Subst("education_date", Format(DACC!education_date, "dd/mm/yyyy"))
   templ.Subst("education_due", Format(DACC!education_date_due, "dd/mm/yyyy")) 'cannot use education_date_due as the previous will wipe it
   templ.Subst("diet_details", DACC!diet_details)
   templ.Subst("diet_date", Format(DACC!diet_date, "dd/mm/yyyy"))
   templ.Subst("diet_due", Format(DACC!diet_date_due, "dd/mm/yyyy")) 'cannot use diet_date_due as the previous will wipe it
   templ.Subst("smoking_details", DACC!smoking_details)
   templ.Subst("smoking_date", Format(DACC!smoking_date, "dd/mm/yyyy"))
   templ.Subst("smoking_due", Format(DACC!smoking_date_due, "dd/mm/yyyy")) 'cannot use smoking_date_due as the previous will wipe it
   templ.Subst("exercise_details", DACC!exercise_details)
   templ.Subst("exercise_date", Format(DACC!exercise_date, "dd/mm/yyyy"))
   templ.Subst("exercise_due", Format(DACC!exercise_date_due, "dd/mm/yyyy")) 'cannot use exercise_date_due as the previous will wipe it
   templ.Subst("medication_details", DACC!medication_review_details)
   templ.Subst("medication_date", Format(DACC!medication_review_date, "dd/mm/yyyy"))
   templ.Subst("medication_due", Format(DACC!medication_review_date_due, "dd/mm/yyyy")) 'cannot use medication_date_due as the previous will wipe it
   If Trim(sDecisionSupportComments) <> "" Then
      templ.Subst_HTML("decision_support_comments", sDecisionSupportComments)
   Else
      templ.Subst("decision_support_comments", "\\relax")
   End If
   If iIncomplete Then
      templ.Subst("incomplete dacc", "INCOMPLETE")
   Else
      templ.Subst("incomplete dacc", "\\relax")
   Endif
   Return templ
   
Catch
   Return Null
   
End

Public Sub EditArea_Buttons_Click()
   
   DACC_Edit()
   
End

Public Sub Form_Resize()
   
   TextLabel12.width = textlabel11.Width
   '   VBox_Medications.width = textlabel27.width + teNotesSmokingDue.Width
   
End
