' Gambas class file

' Gambas class file
' Copyright (C) 2008-2011 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'-----------------------------------------------------------------------------------------
' PURPOSE         A form for the Australian General Practice Diabetes Annual Cycle of Care
' HOW THIS WORKS  
' TODO
' BUGS            Please report to rterry@pacific.net.au
'-----------------------------------------------------------------------------------------
Private Activity As String[]
Private currentconsult As CConsult
Private HBA1c As Result 
Private EyeReview As Result
Private fk_patient As Integer
Private LastBP As String 'of BP|date
Private LastRUAlbCreatRatio As Result
Private DACCS As Collection
Private currentDACC As Collection
Private pk_view As Integer
Private fk_dacc As Integer    
Private bCompleted As Boolean

Public Sub Init(cons As CConsult)
   
   currentconsult = cons
   Settings_Load()
   fk_patient = currentconsult!patient!fk_patient
   Try Last_Hbaic()
   Try Last_BMI()
   Try Last_Eye_Review()
   Try Last_BP()
   Try Last_Microalbumin()
   Last_Diet()
   Last_Smoking()
   Last_Education()
   Last_Activity()
   Last_Medication()
   Last_Foot_Check()
End

Public Function Valid_Data() As Boolean
   '------------------------------------------------
   'Checks for valid input and returns true if valid
   '------------------------------------------------
   Dim bInvalid As Boolean
   Dim hCtrl As Control
   Dim HB As HBox
   Dim TE As TextEdit
   Dim bits As String[]
   Dim bit As String
   bcompleted = True   
   '----------------------------------------------------------------------------
   'Check all the textboxes in the editing area, if should have a date, validate
   '----------------------------------------------------------------------------
   For Each hctrl In VBox_EditArea.Children
     If hctrl.tag <> "skip" Then                   'Hbox's without appropriate contents
         HB = hctrl
         For Each hCtrl In HB.Children
           If InStr(Lower(hctrl.name), "due") Or InStr(Lower(hctrl.name), "last")
               TE = hctrl
               If Te.text <> "" And Not IsDate(Te.text) Then
                 bits = Split(Te.text, "\n", "", True)
                 For Each bit In bits
                    Print bit
                   If Not IsDate(bit) And bit <> "OVERDUE" Then 
                     TE.SetFocus()
                     Return
                   End If
                 Next
                 
                 ' Print te.text 
                 ' TE.SetFocus()
                 ' Return
               Endif
           Else
              If hctrl Is TextEdit Then
                 TE = hctrl
                 If TE.text = "" Then
                    bcompleted = False
                    rbCompleteYes.value = True
                 Endif
              Endif
           End If
         Next
     Endif
   Next
   
   Return True 
End
Public Sub New_DACC()
  
  
  
End

Public Sub Save()
   '---------------------------------------------------------------------------------------------------------
   ' Save the annual cycle of care
   '  pk serial NOT NULL,
   '   fk_consult integer NOT NULL,
   '   date_completed date,
   '   hba1c_date date, -- date of last hba1c could be null if not yet completed but DACC saved...
   '   hba1c_date_due date,
   '   hba1c_details text,
   '   eyes_date date, -- Date the eye check was done, may be entered without paperwork to verify
   '   eyes_date_due date,
   '   eyes_details text, -- Whoever checked the eyes, could be person or entity, but hopefully in most cases...
   '   bp_date date,
   '   bp_date_due date,
   '   bp_details text,
   '   bmi_date date,
   '   bmi_date_due date,
   '   bmi_text text,
   '   feet_date date,
   '   feet_date_due date,
   '   feet_text text,
   '   lipids_date date,
   '   lipids_date_due date,
   '   lipids_details text,
   '   microalbumin_date date,
   '   microalbumin_date_due date,
   '   microalbumin_details text,
   '   education_date date,
   '   education_date_due date,
   '   education_details text,
   '   diet_date date,
   '   diet_date_due date,
   '   diet_details text,
   '   exercise_date date,
   '   exercise_date_due date,
   '   exercise_details text,
   '   smoking_date date,
   '   smoking_date_due date,
   '   smoking_details text,
   '   medication_review date,
   '   medication_review_date_due date,
   '   medication_review_details text,
   ' ----------------------------------------------------------------------------------------
   Dim DACC As New Collection
   
   If Not Valid_Data() Then Return
   If fk_dacc Then
      DACC!fk_dacc = fk_dacc
   Endif
   DACC!fk_consult = currentconsult.GetPK()
   If rbCompleteYes.value = True Then
      DACC!data_completed = Now()
   Endif
   DACC!hba1c_date = Val(teNotesHBA1cLast.text)
   DACC!hba1c_date_due = Val(teNotesHBA1cDue.text)
   DACC!hba1c_details = teNotesHBA1C.text
   DACC!eyes_date = Val(teNotesEyesLast.text)
   DACC!eyes_date_due = Val(teNotesEyesDue.text)
   DACC!eyes_details = teNotesEyes.text
   DACC!bp_date = Val(teNotesBPLast.text)
   DACC!bp_date_due = Val(teNotesBPDue.text)
   DACC!bp_details = teNotesBP
   DACC!bmi_date = Val(teNotesBMILast.text)
   DACC!bmi_date_due = Val(teNotesBMIDue.text)
   DACC!bmi_details = teNotesBMI
   DACC!feet_date = Val(teNotesFeetLast.text)
   DACC!feet_date_due = Val(teNotesFeetDue.text)
   DACC!feet_details = teNotesFeet.text
   DACC!lipids_date = Val(teNotesHDLLast.text)
   DACC!lipids_date_due = Val(teNotesHDLDue.text)
   DACC!lipids_details = teNotesHDL.text
   DACC!microalbumin_date = Val(teNotesMicroalbuminLast.text)
   DACC!microalbumin_date_due = Val(teNotesMicroalbuminDue.text)
   DACC!microalbumin_details = teNotesMicroalbumin.Text
   DACC!education_date = Val(teNotesEducationLast.text)
   DACC!education_date_due = Val(teNotesEducationDue.text)
   DACC!education_details = teNotesEducationDue.text
   DACC!diet_date = Val(teNotesDietLast.text)
   DACC!diet_date_due = Val(teNotesDietDue.text)
   DACC!diet_details = teNotesDiet.Text
   DACC!exercise_date = Val(teNotesActivityLast.text)
   DACC!exercise_date_due = Val(teNotesActivityDue.text)
   DACC!exercise_details = teNotesActivity
   DACC!smoking_date = Val(teNotesSmokingLast.text)
   DACC!smoking_date_due = Val(teNotesSmokingDue.text)
   DACC!smoking_details = teNotesSmoking.text
   DACC!medication_review_date = Val(teNotesMedicationLast.text)
   DACC!medication_review_date_due = Val(teNotesMedicationDue.text)
   DACC!medication_review_details = teNotesMedication.Text
   Print DACC
End

Public Sub Form_Open()

   ' TextLabel1.text = "HBa1c" 
   ' TextLabel2.text = "Eye examination"
   ' TextLabel3.text = "Blood Pressure"
   ' TextLabel4.text = "Weight, height and BMI"
   ' TextLabel5.text = "Examine Feet"
   ' TextLabel6.text = "TC, Triglycerides & HDL"
   ' TextLabel7.text = "Microalbumin"
   ' TextLabel8.text = "Provide self care education"
   ' TextLabel9.text = "Review Diet"
   ' TextLabel10.text = "Physical activity"
   ' TextLabel11.text = "Check smoking status"
   ' TextLabel12.text = "Review of medication"
   
End

Public Sub Last_Hbaic()
   '-----------------------------------------------------------------
   'Attempts to get the last hba1c, if within the minimum time period
   'shows a compeleted icon, otherwise say its due now.
   '-----------------------------------------------------------------

   Dim bCompleted As Boolean
   
   hba1c = modMeasurementsDBI.Get_Loinc_Value(fk_patient, const.loinc_hba1c, 1, "DESC") 'Last hba1c by date
   If hba1c.count Then  
     teNotesHBA1C.Richtext = hba1c!value_numeric & " (" & hba1c!reference_range & ")"          'display the value
      teNotesHBA1cLast.text = Format(hba1c!observation_date, "dd/mm/yyyy")                      'and when done
      If DateDiff(Now, DateAdd(hba1c!observation_date, gb.Month, 12), gb.Month) < 0 Then
          teNotesBPDue.text = "OVERDUE"
      Else
         teNotesHBA1cDue.text = Format(DateAdd(hba1c!observation_date, gb.Year, 2), "dd/mm/yyyy") 
         bCompleted = True 
      End If   
   Else
      teNotesHBA1cDue.text = "OVERDUE"
      bCompleted = False   
   End If   
   Display_Completion_Status(Hbox_Hba1c, bCompleted)

End

Public Sub Last_Foot_Check()
   'TODO implement backend and include skin, pulses and sensation check
  Dim bCompleted As Boolean
  
  If teNotesFeetLast.text = "" Then
      teNotesFeetDue.text = "OVERDUE"
      Display_Completion_Status(Hbox_Feet, bCompleted)
  Endif
  
End


Public Sub Last_Education()
   'TODO implement backend and include skin, pulses and sensation check
  Dim bCompleted As Boolean
  
  If teNotesEducationLast.text = "" Then
       teNotesEducationDue.text = "OVERDUE"
      Display_Completion_Status(Hbox_SelfCare, bCompleted)
  Endif
  
End

Public Sub Last_Activity()
   'TODO implement backend and include skin, pulses and sensation check
  Dim bCompleted As Boolean
  
  If teNotesActivityLast.text = "" Then
      teNotesActivityDue.text = "OVERDUE"
      Display_Completion_Status(Hbox_Activity, bCompleted)
  Endif
  
End


Public Sub Last_Medication()
   'TODO implement backend and include skin, pulses and sensation check
  Dim bCompleted As Boolean
  
  If teNotesMedicationLast.text = "" Then
     teNotesMedicationDue.text = "OVERDUE"
      Display_Completion_Status(Hbox_Medication, bCompleted)
  Endif
  
End

Public Sub Last_Diet()
   'TODO implement backend and include skin, pulses and sensation check
  Dim bCompleted As Boolean
  
  If teNotesDietLast.text = "" Then
       teNotesDietDue.text = "OVERDUE"
      Display_Completion_Status(HBox_Diet, bCompleted)
  Endif
  
End

Public Sub Last_Smoking()
   'TODO implement backend and include skin, pulses and sensation check
  Dim bCompleted As Boolean
  
  If teNotesSmokingLast.text = "" Then
       teNotesSmokingDue.text = "OVERDUE"
      Display_Completion_Status(HBox_Smoking, bCompleted)
  Endif
  
End

Public Sub Last_Microalbumin()
   '------------------------------------------------
   'Microalbumin, currently only works for the ratio
   'not the timed overnight
   '------------------------------------------------

   Dim bCompleted As Boolean
   
   LastRUAlbCreatRatio = modMeasurementsDBI.Get_Loinc_Value(fk_patient, const.loinc_RUAlbCreatRatio, 1, "DESC") 'Last LastRUAlbCreatRatio by date
   If LastRUAlbCreatRatio.count Then  
      teNotesMicroalbumin.text = LastRUAlbCreatRatio!value_numeric & " (" & LastRUAlbCreatRatio!reference_range & ")" 
      teNotesMicroalbuminLast.text = Format(LastRUAlbCreatRatio!observation_date, "dd/mm/yyyy") 
      If DateDiff(Now, DateAdd(LastRUAlbCreatRatio!observation_date, gb.Month, 12), gb.Month) < 0 Then
         teNotesMicroalbuminDue.text = "OVERDUE"
      Else
         teNotesMicroalbuminDue.text = Format(DateAdd(LastRUAlbCreatRatio!observation_date, gb.Year, 1), "dd/mm/yyyy") 
         bCompleted = True 
      End If
    Else
      teNotesMicroalbuminDue.text = "OVERDUE"
      bCompleted = False   
   End If  
    
   Display_Completion_Status(Hbox_Microalbumin, bCompleted)
 
End 

Public Sub Last_BMI()

   Dim sData As String[]
   Dim weight As Variant
   Dim height As Integer
   Dim BMI As Variant
   Dim bHaveHeight As Boolean
   Dim bHaveWeight As Boolean
   Dim bCompleted As Boolean
   
   SData = Split(modMeasurementsDBI.Measurement_Get_Latest(currentconsult!measurements, const.Measurement_Height), "|")
   If sData.count Then
      teNotesBMI.Richtext = "Height=" & sData[0] & "<BR>"
      height = sData[0]
      teNotesBMILast.Richtext = sData[1] & "<BR>"
      bHaveHeight = True   
   Endif
   SData = Split(modMeasurementsDBI.Measurement_Get_Latest(currentconsult!measurements, const.Measurement_Weight), "|")
   If SData.Count Then
      weight = sData[0]
      teNotesBMI.richtext &= "Weight=" & weight
      teNotesBMILast.Richtext &= sData[1] & "<BR>"
      bHaveWeight = True
   End If   
   Try BMI = Format((weight / (height ^ 2)) * 10000, "##.#")
   If Not Error Then
      bCompleted = True 
      teNotesBMI.richtext &= "BMI=" & BMI
   Else
     teNotesBMIDue.text = "OVERDUE"
   Endif
   Display_Completion_Status(Hbox_BMI, bCompleted)
End 

Public Sub Last_BP() 
   '------------------------------------------------------------
   'Display last recorded BP, if not in date, completion = false
   '------------------------------------------------------------

   Dim bits As New String[]
   Dim bCompleted As Boolean
   
   lastbp = modMeasurementsDBI.Measurement_Get_Latest(currentconsult!measurements, const.Measurement_BP)
   bits = Split(modMeasurementsDBI.Measurement_Get_Latest(currentconsult!measurements, const.Measurement_BP), "|")
   If bits.count Then
      teNotesBP.text = bits[0]
      teNotesBPLast.text = bits[1]
  '    If DateDiff(DateAdd(Val(bits[1]), gb.Month, 6), Now, gb.month) > 6 Then
      If DateDiff(Now, DateAdd(Val(bits[1]), gb.Month, 12), gb.Month) < 0 Then
         teNotesBPDue.text = "OVERDUE"
      Else
         teNotesBPDue.text = Format(DateAdd(Val(bits[1]), gb.MOnth, 6), "dd/mm/yyyy")
         bCompleted = True   
      End If  
   Else
     teNotesBPDue.text = "OVERDUE"
   End If 
   Display_Completion_Status(Hbox_BP, bCompleted)

End 

Public Sub Last_Eye_Review()
   Dim bCompleted As Boolean
   Dim strinsert As String
   
   EyeReview = modDACCDBI.Last_Eye_Review(fk_patient, 1, "DESC")
   If EyeReview.count Then 
     ' teNotesEyes.RichText = "<A HREF='" & Str$(EyeReview!pk_document) & "'>"
      teNotesEyes.richtext = "place"
      strinsert = "<A HREF='" & Str$(EyeReview!pk_document) & "'>"
      If Not IsNull(EyeReview!organisation_category) Then
       ' teNotesEyes.RichText &= EyeReview!organisation 
         strinsert &= EyeReview!organisation
      Else
      '   teNotesEyes.RichText &= EyeReview!originator
         strinsert &= EyeReview!originator
      Endif
     ' teNotesEyes.RichText &= "</A><BR>"
       strinsert &= "</A><BR>"
      Print teNotesEyes.RichText
      teNotesEyes.richtext = Replace(teNotesEyes.richtext, "place", strinsert)
      teNotesEyesLast.text = Format(EyeReview!date_created, "dd/mm/yyyy")
      If DateDiff(Now, DateAdd(EyeReview!date_created, gb.Year, 2), gb.year) < 0 Then
         teNotesEyesDue.text = "OVERDUE"
      Else
         teNotesEyesDue.text = Format(DateAdd(EyeReview!date_created, gb.Year, 2), "dd/mm/yyyy")
         bCompleted = True    
      End If  
   Else
      teNotesEyesDue.text = "OVERDUE"
   Endif
   Print teNotesEyes.RichText
    Display_Completion_Status(Hbox_Eyes, bCompleted)
End

Public Sub Display_Completion_Status(HB As HBox, bCompleted As Boolean)
   '--------------------------------------------------------------
   'Gives visual display to indicate state of component completion
   'by putting up either a tick or a red dot next to the row
   '---------------------------------------------------------------

   Dim hctrl As Control
   Dim vb As VBox
   Dim pb As PictureBox

   For Each hctrl In HB.children
      If hctrl Is VBox Then
         vb = hctrl
         For Each hctrl In VB.children
            If hctrl Is PictureBox Then
               pb = hctrl  
               If bCompleted Then
                  pb.Picture = Picture.Load("icons/12/green_dot.png")
                  
               Else
             '     pb.Picture = Picture.Load("icons/12/red_dot.png")
                  pb.Picture = Null
               Endif
            Endif
         Next
      Endif
   Next
   
End

Private Sub Settings_Load()
  
 Try VSplit_DACC.Layout = Settings["DACC/VSplit_DACC.layout"] 
  
End
Public Sub Settings_Save()
  
    Settings["DACC/VSplit_DACC.layout"] = VSplit_DACC.Layout
  
End

Public Sub EditArea_Buttons_Click()

  Select Case Last.tag
    Case "save"
      Save()
    Case "new"
      New_DACC()
  End Select

End

Public Sub teDue_LostFocus()

   Last.background = Color.White

End

Public Sub teDue_GotFocus()

   Last.BackGround = Color.rgb(95, 255, 175)

End

Public Sub teDone_LostFocus()
  
   Last.background = Color.White
  
End

Public Sub teDone_GotFocus()

   Last.BackGround = Color.rgb(95, 255, 175)

End
