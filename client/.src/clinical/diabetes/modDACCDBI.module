' Gambas module file
' Gambas class file

' Gambas class file
' Copyright (C) 2008-2011 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
' PURPOSE Database accessing routines for Diabetes Annual Cycle of Care
'----------------------------------------------------------------------

Public Function Last_Eye_Review(fk_patient As Integer, Optional limit As Integer = 0, sort As String = "ASC") As Result
   '--------------------------------------------------------------------------
   'Atempts by reading the documents table and categories to see when the last
   'recorded review by an optomotrist or an opthalmologist (or get all)
   '--------------------------------------------------------------------------
   Dim sql As String 
   sql = "Select * from documents.vwDocuments where (person_category ILIKE '%ophthal%' or organisation_category ILIKE '%ophthal%'"
         "or person_category ILIKE '%optom%' or organisation_category ILIKE '%optom%') AND fk_patient = "
   sql &= fk_patient & " ORDER BY date_created " & sort
   If limit Then
      sql &= " LIMIT " & limit 
   Endif

   Return modDBConnect.exec_query(sql)
End

Public Function Save_DACC(old_data As Collection, pk_view As String, new_data As Collection, fk_progressnote_comments As Integer) As Boolean
   Dim dac_comments As Collection
   
   If pk_view = "" Then
     '------------------------------------------------------------------------- 
     'First save dacc, retrieve key, then save comments if any
     'there can/will be 1 to many relationship between dacc and comments tables
     '-------------------------------------------------------------------------
    
     If fk_progressnote_comments Then
        dac_comments = New Collection
        dac_comments!fk_progressnote = fk_progressnote_comments
        dac_comments!fk_diabetes_annual_cycle_of_care = modDBConnect.insert("chronic_disease_management.diabetes_annual_cycle_of_care", new_data)
      Else
        modDBConnect.insert("chronic_disease_management.diabetes_annual_cycle_of_care_notes", dac_comments) 
     End If
   Else
      '------------------------------------------------ 
      'Saving an existing DACC, but comments may be new
      '------------------------------------------------
      If old_data[pk_view]!fk_progressnote_comments <> fk_progressnote_comments Then
        dac_comments = New Collection
        dac_comments!fk_progressnote = fk_progressnote_comments
        dac_comments!fk_diabetes_annual_cycle_of_care = old_data[pk_view]!fk_diabetes_annual_cycle_of_care
        dac_comments!pk = modDBConnect.insert("chronic_disease_management.diabetes_annual_cycle_of_care_notes", dac_comments) 
      End If   
      modDBConnect.update("chronic_disease_management.diabetes_annual_cycle_of_care", old_data[pk_view], new_data, "fk_diabetes_annual_cycle_of_care")
   Endif
   Return True 'fixme
   
  
End
Public Function Save_DACC_old(old_data As Collection, fk_dacc As Integer, new_data As Collection) As Boolean
  
   If fk_dacc = 0 Then
      new_data!fk_dacc = modDBConnect.insert("chronic_disease_management.diabetes_annual_cycle_of_care", new_data)
   Else
      modDBConnect.update("chronic_disease_management.diabetes_annual_cycle_of_care", old_data[fk_dacc], new_data, "pk")
   Endif
   Return True 'fixme
   
  
End
Public Function DACCs_Get(fk_patient As Integer) As Collection
   '--------------------------------------------------
   'Get previous DACCs - diabetes annual cycle of care
   'may not be complete, limit to the last few
   '---------------------------------------------------
   Dim sql As String
   sql = "Select * from chronic_disease_management.vwDiabetesCycleOfCare WHERE fk_patient = " & fk_patient
   sql &= " AND deleted = false order by fk_consult DESC LIMIT 5"
   Return modDBConnect.exec_query_collection(sql)
  
  
End
