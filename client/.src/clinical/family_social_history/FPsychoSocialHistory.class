' Gambas class file

' Copyright (C) 2008-2013 Dr. Richard Terry
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' ---------------------------------------------------------------------------
' PURPOSE     - A pretty rudimentry module to allow entering social history
'             - As per the name it needs the 'psycho' part done
' NOTES       - As we often won't know exactly where a relative lives
'               the backend allows free text for the suburb so oversea;s
'               addresses can be kept
'               in Clin_History.vwSocialHistory if fk_responsible_person
'               is not null, then the responsible person exists in our DB
'               then the corresponding fields are person_responsible
'               otherwise the resonsible_person fields contain text
' BUGS        - probably - just mail me rterry@internode.on.net
' --------------------------------------------------------------------------
Private currentConsult As CConsult
Private bExit As Boolean
Private pk_socialhistory As Integer
Private responsible_persons As Collection
Private responsible_person As Collection
Private fk_responsible_person As Integer
Private pk_view_responsible_persons As String '(pk_person-pk_adress)-
Private Towns As Collection
Private Countries As Collection 
Private town As Collection
Private fk_town As Integer
Private timer_count As Integer
Private country_code As String
Private fk_consult As Integer

Public Sub Init(cons As CConsult)
   
   currentConsult = cons
   timer1.Enabled = True   
   timer1.stop
   lblMeasure.text = "Search Patient Database   "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea_Inner, lblMeasure)
   modEditAreaHelpers.Resize_labels(Vbox_ResponsiblePerson, lblMeasure)
   Reload()
   
End

Public Sub EditArea_Notify_Data_Change(flag As Boolean)
   
   If flag Then
      Vbox_EditArea.Padding = 1
      tbSave.Foreground = Color.Red
   Else
      Vbox_EditArea.Padding = 0
      tbSave.Foreground = Color.Black
      
   Endif
   
End

Public Sub Save()
   '-----------------------------------------------------------------------
   'Save components of psycho-social history, currently there is no psycho!
     'responsible person stuff arbitrary at the moment
   'basically if user has found the responsible person from the patient's list then
   'the patient pk is kept as fk_responsible patient
   'if not, then the name/adress are just kept in text fields

   '   pk serial NOT NULL,
   '   fk_consult integer NOT NULL,
   '   history text,
   '   deleted boolean DEFAULT false,
   '   fk_responsible_person integer, -- if not null this is the key to  clerical.data_patients table
   '   responsible_person text, -- if not null and fk_patient is null then this is used as name as responsible person
   '   responsible_person_street1 text, -- if not null is the street of responsible person who is not in patients database
   '   responsible_person_street2 text, -- if not null is the street2 of responsible person who is not in patients database
   '   responsible_person_town text, -- if not null is the fk_town of responsible person who is not in patients database
   '   responsible_person_contacts text, -- one or more types of contact
   '   country_code character(2) NOT NULL,
   '   responsible_person_notes text,
   '-----------------------------------------------------------------------
   
   Dim socialhistory As CRow
   
   If Vbox_EditArea.padding = 0 Then Return 
   If Not Valid_Responsible_person() Then Return
   
   socialhistory = New CRow
   If pk_socialhistory <> 0 Then         'if is =-1 then is a new record
      socialhistory.put_unchanged(pk_socialhistory, "pk_socialhistory")
   End If
   If fk_consult = 0 Then
       socialhistory!fk_consult = currentconsult.GetPK()
   Else
       socialhistory!fk_consult = fk_consult 
   Endif
   socialhistory!history = Trim(teSocialHistory.text)
   If fk_responsible_person Then                                   'if non zero, have retreived from the backend
      socialhistory!fk_responsible_person = fk_responsible_person
      socialhistory!responsible_person = ""                         
   Else
      socialhistory!fk_responsible_person = 0                      'may have been removed
      socialhistory!responsible_person = Trim(txtResponsiblePerson.Text)
      socialhistory!responsible_person_street1 = Trim(txtStreet1.text)
      socialhistory!responsible_person_street2 = Trim(txtStreet2.text)
      socialhistory!responsible_person_town = Trim(txtTown.text)
      socialhistory!responsible_person_state = Trim(txtState.text)  
      socialhistory!responsible_person_postcode = Trim(txtPostcode.text)
      socialhistory!country_code = country_code                    'defaults to 'AU' in backend
   Endif
   socialhistory!responsible_person_notes = Trim(teResponsiblePersonNotes.text)
   socialhistory!responsible_person_contacts = Trim(txtContactNumber.text)
   socialhistory.Save("clin_history.social_history", "pk_socialhistory")
   modDBConnect.CommitTrans()                  
   FClinical.Refresh_Section(const.cSection_HealthSummary)    'check if health summary showing, if so update it
  
   Reload()  
   
End




Public Sub Fesponsible_Person_Save()
   
   If Not Valid_Responsible_person() Then Return
   
End

Public Function Valid_Responsible_person() As Boolean
   '--------------------------------------------------------
   'Accept at minimum a name, anything else is up for grabs
   'hopefully they will have used contacts, if not we may
   'save the persons details and put in contacts?
   '--------------------------------------------------------   
   
   Return True
   
End

Public Function Valid_SocialHistory() As Boolean
   '------------------------------------------------------
   'Validate there is at least some social history
   'pretty rare that one would be deleting all the history
   'Return True if valid
   '------------------------------------------------------
   
   If pk_socialhistory = 0 Then                    'no social history ever
      If Trim(teSocialHistory.text) = "" Then      'none to save  
         Return False
      Endif
   Endif
   Return True
   
End

Public Sub Reload()
   '-----------------------------------------------
   'Reloads the psycho-social history no psycho yet
   '----------------------------------------------- 
   
   Dim SH As Collection
   
   currentconsult.Refresh("social_history")  
  
   EditArea_Clear()
   bExit = True   
   For Each SH In currentconsult!social_history             'there is only one
      pk_socialhistory = SH!pk_socialhistory
      fk_responsible_person = SH!fk_responsible_person
      fk_consult = SH!fk_consult 
      If fk_responsible_person <> 0 Then
         txtResponsiblePerson.text = SH!person_responsible_title & " " & SH!person_responsible_firstname & " " & SH!person_responsible_surname
         txtStreet1.text = SH!person_responsible_street1
         txtStreet2.text = SH!person_responsible_street2
         txtTown.text = SH!person_responsible_town
         txtState.text = SH!person_responsible_state
         txtPostcode.text = SH!person_responsible_postcode
      Else    
         txtResponsiblePerson.text = SH!responsible_person
         country_code = SH!country_code
         txtResponsiblePerson.text = SH!responsible_person
         txtStreet1.text = SH!responsible_person_street1
         txtStreet2.text = SH!responsible_person_street2
         txtTown.text = SH!responsible_person_town
         txtState.text = SH!responsible_person_state
         txtPostcode.text = SH!responsible_person_postcode
      End If  
      teResponsiblePersonNotes.text = SH!responsible_person_notes  
      teSocialHistory.text = SH!history
      txtContactNumber.text = SH!responsible_person_contacts
   Next
   bExit = False
   
End

Public Sub responsible_person_Find()
   '-----------------------------------------------------------------------
   'Search for (amongst the patients) a person who will be the next of kin
   'aka, now-a-days as the 'responsible person
   '---------------------------------------------------------------------- 
   
   If Trim(txtSearch.text) = "" Then Return
   timer1.Stop()
   With columnview1
      .Visible = False  
      .clear()
   End With
   Inc Application.Busy
   Responsible_Persons = modContactsDBI.Person_Get(Trim(txtSearch.text), const.contacttype_PersonsAndPatients)
   Responsible_Persons.Remove("sql_in_english")
   If responsible_persons.count Then
      For Each responsible_person In Responsible_Persons
         columnview1.Add(responsible_person!pk_view, 0)
         columnview1[responsible_person!pk_view][0] = responsible_person!surname & " " & responsible_person!firstname & " " & Trim(responsible_person!street1 & " " & responsible_person!street2) & " " & responsible_person!town
      Next
      With columnview1
         .Visible = True   
         .Raise
      End With
   Endif
   Dec Application.Busy
    
End

Public Sub Responsible_Person_Select()
   '-----------------------------------------------------------------------------
   'User has clicked on a name in the list, accept this as the responsible person
   '-----------------------------------------------------------------------------  
   timer1.stop
   columnview1.MoveCurrent
   pk_view_responsible_persons = columnview1.Item.key
   bexit = True
   txtSearch.text = ""
   txtResponsiblePerson.text = responsible_persons[pk_view_responsible_persons]!wholename
   txtStreet1.text = responsible_persons[pk_view_responsible_persons]!street1
   txtStreet2.text = responsible_persons[pk_view_responsible_persons]!street2
   txtTown.text = responsible_persons[pk_view_responsible_persons]!town
   txtState.text = responsible_persons[pk_view_responsible_persons]!state
   txtPostcode.text = responsible_persons[pk_view_responsible_persons]!postcode
   columnview1.Visible = False 
   fk_responsible_person = responsible_persons[pk_view_responsible_persons]!fk_person
   bexit = False  
   txtContactNumber.SetFocus()
  
   
End

Public Sub Columnview1_KeyPress()

   If Key.code = Key.Return Then 
      Columnview1_DblClick
   End If
End
Public Sub Columnview1_DblClick()
   Select Case Last.tag.tag
      Case "search"
         Responsible_Person_Select()
   End Select
   
   
End

Public Sub ListView1_KeyPress()
   '------------------------------------------------------------------
   'User has scrolled onto the popup list and his a key, allow <enter>
   'to accept the line contents to the edit area
   '------------------------------------------------------------------
   
   If Key.code = Key.Return Then 
      listview1_DblClick
   End If
   
End

Public Sub listview1_DblClick()
   
   Select Case Last.tag.tag
      Case "search"
         Responsible_Person_Select()
         txtCountry.SetFocus()
      Case "suburb"
         Suburb_Select()
         txtCountry.SetFocus
      Case "country"
         Country_Select() 
         txtContactNumber.SetFocus()   
   End Select
   
End

Public Sub EditArea_Clear()
 
   bExit = True 
   modEditAreaHelpers.EditArea_Clear(Vbox_EditArea_inner)
   fk_responsible_person = 0  'defaults 
   pk_socialhistory = 0
   fk_consult = 0
   country_code = "AU"         'the default
   bExit = False  
   EditArea_Notify_Data_Change(False)
   
End

Public Sub EditArea_TextBox_KeyRelease()
 
   Select Case Last.tag
      Case "search"
       timer_count = 0 
        timer1.Start()
      Case "suburb"
         Suburb_get()
      Case "country"
         Country_Find() 
   End Select
   
End

Public Sub Timer1_Timer()
   
   Inc timer_count          'constantly being zero'd by editarea_keypress until user pauses typign
   If timer_count > 3 Then  'arbitary should be user configured depending on typing speed FIXME
      responsible_person_Find()
   End If 
   
End

Public Sub EditArea_TextBox_KeyPress()
   
   Select Case key.code
      Case key.Down
         If Listview1.Visible Then
            ListView1.MoveFirst
            Listview1.SetFocus()
            Listview1.Item.Selected = True   
         Endif
         If columnview1.Visible Then
            columnview1.MoveFirst
            columnview1.SetFocus()
            columnview1.Item.Selected = True   
         Endif
     
      Case key.return, key.Tab
         Select Case Last.tag
               
            Case "social history"
               txtSearch.SetFocus()
            Case "name"
               If txtStreet1.text = "" Then  
                  txtStreet1.SetFocus
               End If   
            Case "street1"
               txtTown.SetFocus() 'skip street2, usually don't have one.
            Case "street2"
            Case "suburb"
               txtContactNumber.SetFocus  
            Case "contact number"
               teResponsiblePersonNotes.SetFocus()
            Case "responsible person notes"
               tbSave.SetFocus() 
         End Select
   End Select
   
End

Public Sub Responsible_Person_Remove()
   'Fixme - some sort of prompt + remove if key in database 
   
   fk_responsible_person = 0
   bExit = True
   modEditAreaHelpers.EditArea_Clear(VBox_ResponsiblePerson)
   bExit = False  
   
End

Public Sub EditArea_TextBox_Change()
   
   If Bexit Then Return 
   EditArea_Notify_Data_Change(True)
   Select Case Last.tag
      Case "name", "search"                                             'no name = no keys or data
         If Trim(Last.text) = "" Then 
            Responsible_Person_Remove()
            listview1.Visible = False  
         End If  
   End Select
   If Last.tag = "search" Then
      timer_count = 0 'once count = 3 then timer1_timer fires , ie user stopped typing
   Endif
   
End                          

Public Sub EditArea_TextBox_Lostfocus()
   
   Last.BackGround = Color.white
   timer1.Stop()
End

Public Sub EditArea_TextBox_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   Select Case Last.tag
      Case "search", "country", "suburb"
         With ListView1
            .top = Last.Parent.Parent.top + Last.Parent.height
            .left = Last.Parent.Left
            .width = Last.width
            .Raise
            .tag = Last 
         End With
         With columnview1
            .top = Last.Parent.Parent.top + Last.Parent.height
            .left = Last.Parent.Left
            .width = Last.width
            .Raise
            .tag = Last 
         End With
   End Select
  
   
End

Public Sub Suburb_Select()
   
   listview1.MoveCurrent()             'match internal cursor to marquee
   bExit = True
   txtTown.text = Towns[listview1.Item.key]!town
   txtState.text = Towns[listview1.Item.key]!state 
   txtPostcode.text = Towns[listview1.Item.key]!postcode
   fk_town = Towns[listview1.Item.key]!pk
   listview1.Visible = False  
   bExit = False  
   
End

Public Sub Suburb_get() 
   
   Dim iMatched As Boolean
   Dim x As Integer
   
   If Trim$(txtTown.text) = "" Then Return
   listview1.Visible = False  
   Towns = modContactsDBI.Get_Town(Lower(Trim$(txtTown.text)))
   listview1.Clear
   If Towns.count Then 
      For Each town In Towns
         listview1.Add(town!pk, town!town & " " & town!state & " " & town!postcode)
      Next 
      If Towns.count = 1 Then 
         Suburb_Select()
      Else 
         listview1.Visible = True
         listview1.Raise
         listview1.tag = txtTown
      End If
   End If
   
End

Public Sub Country_Find()                                      
   '----------------------------------------------------------
   'Allocate country if the default Australia is not acceptable
   '-----------------------------------------------------------
   
   Dim country As Collection
   
   listview1.Visible = False   
   If Trim$(txtCountry.text) = "" Then Return 
   countries = modContactsDBI.country_get(Lower(Trim$(txtCountry.text)))
   listview1.Clear
   If countries.count Then 
      For Each country In countries
         listview1.Add(country!pk, country!country)
      Next 
      If countries.count = 1 Then 
         Country_Select
      Else 
         listview1.Visible = True
         listview1.Raise
         listview1.tag = txtCountry
      End If
   Else
      listview1.Visible = False  
   End If  
   
End

Public Sub Country_Select()
   '--------------------------------------------
   'User selecting a country from the popup list   
   '--------------------------------------------
   
   bExit = True
   Listview1.MoveCurrent()
   txtCountry.text = Countries[Listview1.Item.key]!country
   country_code = Countries[Listview1.Item.key]!country_code
   Listview1.Visible = False  
   bExit = False    
   
End

   ' 
   ' PastHistory = New CRow
   ' If pk_pasthistory <> 0 Then 
   '    PastHistory.put_unchanged(pk_pasthistory, "pk_pasthistory")
   ' End If   
   ' If fk_consult <> 0 Then
   '    PastHistory!fk_consult = fk_consult
   ' Else
   '    PastHistory!fk_consult = currentconsult.GetPK()
   ' End If 
   ' PastHistory!age_onset = Val(txtAgeOnset.text) 'CHECK THIS IS VALIDATED ABOVE
   ' PastHistory!age_onset_units = iAgeOnsetUnits
   ' PastHistory!description = modUtil.Ucase_Words_First_Letter(Trim(txtCondition.text))
   ' PastHistory!fk_laterality = fk_laterality
   ' PastHistory!year_onset = Trim(txtYearOnset.text) 'eg could be 1993 or 08/1993 
   ' Select Case fk_significance
   '    Case const.healthIssue_Major
   '       PastHistory!major = True
   '    Case const.healthIssue_Significant
   '       PastHistory!active = True
   '    Case Else
   '       PastHistory!major = False 'yes, the backend would default but sProgressNote code more difficult
   ' End Select
   ' If chkOperation.Value = True Then 
   '    PastHistory!operation = True
   ' Else
   '    PastHistory!operation = False
   ' End If
   ' If chkCauseOfDeath.Value = True Then
   '    PastHistory!cause_of_death = True
   ' Else
   '    PastHistory!cause_of_death = False
   ' Endif 
   ' If rbConfidentialYes.value Then 
   '    PastHistory!confidential = True
   ' Else
   '    PastHistory!confidential = False
   ' End If
   ' PastHistory!management_summary = Trim(txtManagementSummary.text)     
   ' PastHistory!condition_summary = Trim(txtHistoricalSummary.text) 
   ' If chkRiskFactor.value = True Then 
   '    PastHistory!risk_factor = True
   ' Else
   '    PastHistory!risk_factor = False
   ' End If    
   ' PastHistory!aim_of_plan = Trim(txtAim.text)
   ' PastHistory!fk_coding_system = fk_coding_system
   ' PastHistory!fk_code = fk_code
   ' sProgressNotes = ProgressNotes_Summary(PastHistory)     
   ' modDBConnect.BeginTrans()
   ' PastHistory.Save("clin_history.past_history", "pk_pasthistory")
   ' '----------------------
   ' 'Save the progress note
   ' '----------------------
   ' ProgressNote = New CRow 
   ' If fk_progressnote Then
   '    ProgressNote.put_unchanged(fk_progressnote, "fk_progressnote")
   ' Endif
   ' ProgressNote!fk_consult = PastHistory!fk_consult 
   ' ProgressNote!notes = sProgressNotes
   ' ProgressNote!fk_section = const.cSection_Pasthistory 
   ' '  ProgressNote!fk_code = fk_code  FIXME Fix THE VWPROGRESSNOTES And UNCOMMENT THIS Line
   ' ProgressNote!problem = "Past History"
   ' ProgressNote!fk_problem = PastHistory!pk_pasthistory
   ' ProgressNote!fk_audit_action = const.cAuditAction_Insert
   ' ProgressNote.Save("clin_consult.progressnotes", "fk_progressnote")
   ' '-----------------------------------------------------------------------------------------------
   ' 'difficult - the fk_progressnote can't exist until this is saved as it needs the pk_past history
   ' 'so as an interim stupid solution I've re-saved it after the progress note is saved.
   ' '-----------------------------------------------------------------------------------------------
   ' modPastHistoryDBI.Link_To_ProgressNote(PastHistory!pk_pasthistory, ProgressNote!fk_progressnote)
   ' modDBConnect.CommitTrans()
   ' FClinical.Refresh_AllPreviousNotes()
   ' FClinical.Refresh_Section(const.cSection_HealthSummary)    'check if health summary showing, if so update it as it has occupations on it
   ' Reload()
   

Public Sub Form_Leave()

   timer1.Enabled = False  

End
