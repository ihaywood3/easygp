' Gambas module file

' Copyright (C) 2008-2014 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Public Sub FamilyHistory_Get_Relationship(relationship As String) As Result
   
   '----------------------------------------------------
   'Gets a list of relationships eg Brother, Husband etc
   '----------------------------------------------------
   Dim sql As String
   Dim $Result As Result
   
   sql = "SELECT * FROM common.lu_family_relationships where Lower(relationship) LIKE $$%"
   sql &= Lower(relationship) & "%$$"
   $Result = modDBConnect.exec_query(sql)
   Return $Result
   
End

Public Function FamilyHistory_Get_Relationships() As Collection
   
   Return modDBConnect.exec_query_collection("Select * from common.lu_family_relationships ORDER BY relationship")
   
End

Public Function FamilyHistory_Get(pk_patient As Integer) As Collection
   '-------------------------------------------------------------------------
   'Selects all this patients family members and their conditions from a view
   'the only unique row identifier from the view is the condition_pk
   'There could 1 or many rows per person
   'i.e           person1      condition 1
   '              person1      condition 2
   '              person2      condition 1
   '-------------------------------------------------------------------------
   
   Dim sql As String
   
   sql = "SELECT * FROM clin_history.vwFamilyHistory "
   sql &= "WHERE fk_patient =" & pk_patient & " AND link_deleted = FALSE AND condition_Deleted = FALSE"
   Return modDBConnect.exec_query_collection(sql)
   
End

Public Function Member_Delete(currentconsult As CConsult, member As Collection) As Boolean
   '-------------------------------------------------- 
   'Deletes the family member and all their conditions
   '--------------------------------------------------
   
   Dim audit_summary As String
   Dim audit_action As String
   
   Print member
   audit_summary = "The family member " & modStrings.Capitalise_Words_In_String(member!relationship) & " was deleted along with all of their associated medical conditions."
   If currentconsult.GetPK() <> member!fk_consult_condition Then
      audit_action = "mark deleted" 'force popup reason for the deletion
   Else
      audit_action = "reversal"
   Endif
   modDBConnect.exec_query("Update clin_history.family_members set deleted = True WHERE pk = " & member!fk_member)
   modDBConnect.exec_query("update clin_history.family_links set deleted = True where fk_member = " & member!fk_member)
   If modAudit.MakeAudit(currentconsult, audit_action, "clin_history.family_members", member!fk_member, const.cSection_FamilyHistory, audit_summary) Then
      modDBConnect.CommitTrans
      Return True 
   Else
      Message.info("An error occurred trying to delete a family member")
      Return 
   Endif
   
End

Public Function Condition_Delete(currentconsult As CConsult, condition As Collection) As Boolean
   '---------------------------------------------------
   'Deletes a single condition for a family member
   'returns True if deletion was a success
   'clin_history.data_FH_Conditions contains conditions
   'for a particular family member which could be
   'shared over any number of patient records where
   'they share that family member.
   'Under the current database structure if you mark
   'a condition for the family member deleted
   'it will disappear from ALL OTHER FAMILY MEMBER
   'RECORDS. This is fixable in the future if necessary
   '---------------------------------------------------

   Dim audit_summary As String
   Dim audit_action As String
   
   Audit_Summary = condition!relationship & " - "
   Audit_Summary &= condition!condition
   'bugfixes for richard's badly imported data
   If Not IsNull(condition!age_of_onset) And Not IsNull(condition!cause_of_death) And Not IsNull(condition!notes) Then    
      If condition!age_of_onset Or condition!cause_of_death Then
         Audit_Summary &= " - "
         If condition!age_of_onset Then
            Audit_Summary &= "first noted at " & condition!age_of_onset & " yrs "
         End If
         If condition!cause_of_death Then
            Audit_Summary &= "(caused death)"
         End If
         Audit_Summary &= "<BR>"
      End If
      If condition!notes Then
         Audit_Summary &= "notes -" & condition!notes & "<BR>"
      End If
   End If  
   If condition!fk_consult_condition = currentconsult.GetPK() Then 'was added this consult, just delete it without fuss
      audit_action = "reversal"
   Else
      audit_action = "mark deleted"
   End If   
   modDBConnect.exec_query("Update clin_history.family_conditions SET deleted = TRUE where pk = " & condition!fk_condition)
   If modAudit.MakeAudit(currentconsult, audit_action, "clin_history.family_conditions", condition!fk_condition, const.cSection_FamilyHistory, audit_summary) Then
      modDBConnect.CommitTrans()
      Return True
   Else
      Message.Info("An error occurred and the family members's condition could not be deleted")
      Return 
   Endif
   
End

' Public Function FamilyHistory_Member_Delete(member As cFamilyMember) As Boolean
'    '----------------------------------------------------
'    'currently marks a link record as deleted, may change
'    'need to fix up a proper mechanism of return
'    'for when the transaction fails.
'    'old routines to be updated
'    '----------------------------------------------------
'    Dim sql As String
'
'    sql = "Update clin_history.data_fh_links "
'    sql &= "SET deleted = TRUE "
'    sql &= "WHERE pk = " & member.fk_link
'    modDbConnect.BeginTrans()
'    modDBConnect.exec_query(sql)
'    Return modDBConnect.CommitTrans_new()
' End
