' Gambas module file

' Gambas class file
' Copyright (C) 2012-2014 Dr Richard Terry
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
'A Module to load/save icons representing warnings about the patient
'e.g pregnant/breast feeding/alcoholic/drug user/anger issues etc
'----------------------------------------------------------------------

Public Function Usual_Doctor_InForm_Missing(currentconsult As CConsult)
   '------------------------------------------------
   'used in this module Health_summary_Prepare_latex
   'and elsewhere
   '------------------------------------------------

   Dim sMsg As String
   
   Message.title = "Missing Data"
   sMsg = "There is no record of the patient's usual doctor.\n\n"
   "It is important to add this, for example GPMP + TCA should only be done by the patient's usual doctor and this must be printed in the documentation when you claim these item numbers. "
   "Also, it helps other health care providers contact the correct doctor if they need to.\n\n"
   "This can be added either via the Patients module, or by the staff on the main billing screen, or now if you are that doctor"
   If modDBConnect.currentUser!fk_role = const.StaffRole_Doctor Or modDBConnect.currentUser!fk_role = const.StaffRole_Practice_Principal Then  
      If Message.Warning(sMsg, "Make me the usual doctor", "Ok") = 1 Then
         modDBConnect.update("clerical.data_patients", Null, ["pk": currentconsult!patient!fk_patient, "fk_doctor": modDBConnect.currentUser!fk_staff])
         modDBConnect.CommitTrans()
      End If  
   Else
      Message.Warning(SMsg)
   End If   
   
End

Public Function Available_Warning_Icons_Get() As Collection
   '-----------------------------------------------
   'Returns collection of names of clinical modules
   'e.g Allergies, Past History, Workcover etc
   '-----------------------------------------------
   
   Return modDBConnect.exec_query_collection("Select * from admin.lu_patient_warnings where in_use is True order by name")
   
End

Public Function Warning_Icons_Get_For_Patient(fk_patient As Integer) As Collection
   '-----------------------------------------------------------------
   'returns list of warning icons doctor has selected for the patient
   '-----------------------------------------------------------------

   Return modDBConnect.exec_query_collection("Select * from admin.Vwpatientwarnings where fk_patient =" & fk_patient & "And deleted Is Not True") 
   
End

Public Function Warning_icon_Remove(fk_lu_patient_warning As Integer, fk_patient As Integer)
   
   modDBConnect.exec_query("Update admin.patient_warnings set deleted = True where fk_lu_patient_warning=" & fk_lu_patient_warning & " AND fk_patient=" & fk_patient)
   modDBConnect.CommitTrans()
   
End
