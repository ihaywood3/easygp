' Gambas class file

' Copyright (C) 2008-2011 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
Public bExit As Boolean
Public iZoom As Integer
Private Graph_Data As Collection 
Public default_Zoom As Integer
Private currentconsult As Cconsult 
Private HealthIssue As Collection 
Public Notes_Editor As FProgressNoteEditor
Public pk_progressnote As Integer  
Private fk_section As Integer '  see clin_consult.lu_progressnotes_sections
Private todays_notes As String 'the notes written today
Private pk_pasthistory As Integer
Private measurement_defaults As Collection 
Private iCurrentMeasurement_type As Integer
Private Copy_of_editor_notes As Integer
Public FPast_History As FPastHistory
Private FPreviewNotes As FHtmlViewer
Public bCancelSave As Boolean
Private measurement_types As Collection
Private bAllowTransactionCompletion As Boolean = True
Public HSplit1_Layout As Integer[] 'allows embedded forms to reset the layout

Public Sub Set_ExternalTransaction()

   bAllowTransactionCompletion = False   

End

Public Function HealthIssue_GetName() As String 

   Return healthissue!description 

End  

Public Function Refresh_HealthIssue()
   '-------------------------------------
   'refreshes the past history collection
   '-------------------------------------
   
   Dim PH As Collection

   For Each PH In currentconsult!past_history
      If PH!pk_pasthistory = pk_pasthistory Then
         HealthIssue = PH
         Break
      End If
   Next
   
End

Public Function set_pk_pasthistory(pk As Integer) As Integer
   '------------------------------------------
   'Returns the pk_past_history
   'e.g used in FClincial.workSpaceActivate()
   '-----------------------------------------

   pk_pasthistory = pk

End

Public Function Get_pk_pasthistory() As Integer
   '------------------------------------------
   'Returns the pk_past_history
   'e.g used in FClincial.workSpaceActivate()
   '-----------------------------------------

   Return pk_pasthistory

End

Public Function Get_pk_progressNote() As Integer
   
   Return pk_progressnote

End

Public Sub SetPK(pk As Integer)
   '-------------------------------------------------
   'Sets the primary key of the current progress note
   'FIXME FIX MY NAME EVERYWHERE USED TO Set_pk_progressnote
   'to make more sense
   '-------------------------------------------------

   pk_progressnote = pk

End

Public Sub Set_fk_section(fk As Integer)
   '-------------------------------------------------
   'Sets the primary key of the current progress note
   '-------------------------------------------------

   fk_section = fk

End

Public Sub Save()
   
   '----------------------------------------------------------
   'Saves the contents of the editor page if data has changed
   'in the text editor. If this is the first time this consult
   'then the clin_consult.pk is returned as pk_progress note
   'to allow appropriate editing. Rediplay the changed notes
   'If nothing to save, or no change, or bCancelSave then exit
   'Special note on bCancelSave:
   '  Imagine this scenario:
   '     User is entering progress notes on a problem in the
   '     editor, then realises that they have incorrectly put
   '     in this problem (eg wrong patient) and then have opened the past history/health issue
   '     section, and deleted the health item. So, we have to close the editor page which is 
   '     now both open and invalid, however normally, closing the editor page will auto-save
   '     any changes to both the progress notes and the past history/health issue (which now
   '     does not exist, so just cancel the save
   '-----------------------------------------------------------
   
   If bCancelSave Then Return
   '--------------------------------------------------------------------------------------
   'Save any changes to the embedded health issue (past history) form and re-load its data
   'Refresh any past history tab which contains the same past history item as use is
   'adding progress notes to
   '--------------------------------------------------------------------------------------
   
   If pk_pasthistory <> 0 Then
      FPast_History.Save()
      Health_Issue_Reload()
      FClinical.Refresh_PastHistory(Trim(teHealthIssueSummary.text), Trim(teHealthIssuePlan.text), pk_pasthistory) 
   End If   
   '-----------------------------------------------------------------------------------------
   'Have to handle these sorts of scenarios - user adds some notes during consult, but then
   'totally deletes the notes. As these notes have been previously saved, need to resave the
   'editor even when it is empty but only if th copy of what was in there is not "" ie don't
   'save just an empty editor. At moment I  just re-save but save an empty string
   '-----------------------------------------------------------------------------------------
   If (Trim(Notes_Editor.teNotes.text) = "" And Notes_Editor.Get_copy_of_editor_text() = "") Or Not Notes_Editor.get_data_changed() Then
      Return 
   End If
  
   modDBConnect.BeginTrans()
   pk_progressnote = modConsultDBI.ProgressNote_Save(currentconsult, Notes_Editor.teNotes.RichText, fk_section, pk_progressnote, lblNotesFor.text, pk_pasthistory)   
   'Sometimes the save routine is called from a form
   'which wants to encapsulate its own transaction
   'so the commit trans is done from the calling form
   If bAllowTransactionCompletion Then 
      modDBConnect.CommitTrans()
      Notes_Editor.Set_Copy_of_Editor_text(Notes_Editor.teNotes.text) 'save copy of what is in the editor for later comparison.
      Notes_Editor.DataChange_Update_Indicators(False)
      FClinical.Refresh_AllPreviousNotes()
   
   End If

End

Public Sub DataChange_Update_Indicators(flag As Integer)
   '------------------------------------------
   'Removes Or sets the red border To indicate
   'if data is changed 
   '------------------------------------------

   If flag Then 
      Vbox_Summary.Padding = 1
      Vbox_Plan.Padding = 1 
   Else
      
      Vbox_Summary.Padding = 0
      Vbox_Plan.Padding = 0
      
   End If

End 

Public Sub Refresh_Measurements()
   
   ' If sidepanelmeasurements.Hidden = False Then
   '    lvwAvailableMeasurements_Click()
   ' End If    
   ' 
   
End

Public Sub Init(Cons As CConsult)
   '-----------------------------------------------------------
   'PURPOSE    Do all the form initialisation stuff
   'NOTE:      pk_pasthistory = Me.tag
   '           fk_section
   '           healthissue collection
   '           set by the calling routine
   '           Fclinical.Editor_ShowPage() for general notes or
   '           Fclinical.Editor_ShowPastHistory() for specific 
   '           past history item.
   '------------------------------------------------------------

   currentconsult = Cons
   
   Notes_Editor = New FProgressNoteEditor(Vbox_ProgressNoteEditor)
   Notes_Editor.Init(currentconsult)
   FPreviewNotes = New FHtmlViewer(Vbox_PreviousNotes)
   FPreviewNotes.HBox30.Visible = False   
   FPreviewNotes.HBox34.Visible = False   
   Notes_Editor.DataChange_Update_Indicators(False)
   If Not IsNull(Me.tag) Then
      '--------------------------------------------------------------
      'If we are adding notes to a past history item or health issue,
      'load the past history form, but only shown the care plan part
      '--------------------------------------------------------------
      pk_pasthistory = Me.Tag
      FPast_History = New FPastHistory(HBox_HealthIssue)
      HBox_HealthIssue.Visible = True    
      FPast_History.HBox_Heading.Visible = False
      FPast_History.Vbox_EditingArea.Visible = False
      FPast_History.HBox_ProblemLists.Visible = False
      FPast_History.HBox_Buttons.Visible = False  
      FPast_History.set_embedded(True, "notes")
      FPast_History.Init(currentconsult)
      Health_Issue_Reload()
   Else
      pk_pasthistory = 0
      HBox_HealthIssue.Visible = False  
   End If   
   '----------------------------------------------------------
   'General notes has no health issues so hide these textboxes
   'otherwise Display health issue summary and management plan
   'for the past history item being used.
   '----------------------------------------------------------
   If pk_pasthistory = 0 Then
      VSplit_Summary_Plan.Visible = False 
   Else
      Refresh_HealthIssue()
      Display_Health_Issue()                
   End If 
   Try Settings_Load() 
   '------------------------------------------------------------------------------------------ 
   'Display any existing progress notes for either general notes or specific past history item
   '------------------------------------------------------------------------------------------
   Display_Existing_Notes()            
   
   pk_progressnote = -1                      '-1 = no progress notes yet today
   Notes_Editor.teNotes.SetFocus()
   
End

Public Sub Display_Existing_Notes()
   '----------------------------------------------------------------
   'Display any existing progress notes for the problem on this page
   'FIXME: THE PATH HERE
   'Ian I've just put this back in, sorry, change if appropriate
   '----------------------------------------------------------------

   Dim sHtml As String

   sHtml = modProgressNotes.ConstructHTML_SingleProblem(currentconsult, pk_pasthistory, fk_section)
   FPreviewNotes.WebView1.HTML = sHtml
   FPreviewNotes.lblHtmlViewerHeading.Text = "Previous Notes"

End

Public Sub Reload()
   '----------------------
   'IAN CHECK ME FIX ME
   'Reload data once saved
   'is this reload too 'broad', does that matter
   '----------------------  
   ' currentconsult.Refresh("progress_notes")
   ' Display_Existing_Notes()

End

Private Sub Settings_Save()
   
   Settings["Consult Notes/Hsplit"] = HSplit1.Layout
   '   Settings["Consult Notes/default_zoom"] = WebBrowser1.Zoom
   Settings["Consult Notes/VSplit_Summary_Plan"] = VSplit_Summary_Plan.Layout
   '  Settings["Consult Notes/HSplit_Measurements.Layout"] = HSplit_Measurements.Layout
   
   If HBox_HealthIssue.visible Then
      Settings["Consult Notes/VSplit_CarePlanning_PlanShowing"] = VSplit_CarePlanning.Layout
   Else
      Settings["Consult Notes/VSplit_CarePlanning_PlanNotShowing"] = VSplit_CarePlanning.Layout
   End If
   
End

Private Sub Settings_Load()
   
   Try Vsplit_Right.Layout = "60,40"
   
   Try HSplit1.Layout = Settings["Consult Notes/Hsplit"]
   If HBox_HealthIssue.visible Then
      Try VSplit_CarePlanning.Layout = Settings["Consult Notes/VSplit_CarePlanning_PlanShowing"]
   Else
      Try VSplit_CarePlanning.Layout = Settings["Consult Notes/VSplit_CarePlanning_PlanNotShowing"]
   End If

End

Public Sub Form_Close()
   
   Me.Save()
   Settings_Save()
   
End

Public Function Display_Health_Issue() 

   If IsNull(HealthIssue) Then Return
   bExit = True
   Refresh_HealthIssue()
   lblNotesFor.text = HealthIssue!description 
   
   FPast_History.lblCarePlanning.text = "Care planning for " & HealthIssue!description
   bExit = False  

End

Public Sub HealthIssue_Change()
   '--------------------------------------------------
   'Shows the health issues current historical summary
   'and managment plan
   'if updated, will update the past history tab if
   'opened to that health issue
   'and visa-versa (when I get around to doing it
   '--------------------------------------------------
   ' If Bexit Then Return
   '  If IsNull(HealthIssue) Then Return
   ' Select Case Last.tag
   ' Case "summary"
   '  '  Healthissue!condition_summary = Trim(teHealthIssueSummary.text)
   '   ' Healthissue!data_changed = True
   '    Vbox_Summary.Padding = 1
   ' Case "plan"
   '   ' Healthissue!management_summary = Trim(teHealthIssuePlan.text)
   '    Vbox_Plan.padding = 1
   '   ' Healthissue!data_changed = True
   ' End Select

End

Public Sub Health_Issue_Reload()

   FPast_History.iProblemKey = pk_pasthistory
   FPast_History.HealthIssue_Display
   FPast_History.EditArea_Notify_DataChange(False)
   FPast_History.VBox_CarePlan.Padding = 0  

End

Public Sub PictureBox2_MouseDrag()

   If Not IsNull(Last.picture) Then
      Drag.Icon = Last.Picture
      Last.Drag(Last.Picture.Image)
   End If
   
End

Public Sub HSplit1_Resize()
   '-----------------------------------------------------------------------------
   'User is resizing the main split (Left = previous notes, right = today's notes
   'this integer[] will be used by any forms embedded in Notes_Editor
   'e.g the draw editor or medical certificate
   '-----------------------------------------------------------------------------
   HSplit1_Layout = HSplit1.Layout
   
End
