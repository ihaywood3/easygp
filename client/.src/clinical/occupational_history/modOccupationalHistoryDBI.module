' Gambas module file

' DATABASE routines so load and save patients occupations data
'
' Copyright (C) 2008-2016 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------


Public Sub Exposure_Mark_Deleted(currentconsult As CConsult, exposure As Collection)
   '----------------------------------------------------------------------------------------
   'Marks a workplace exposure as deleted from patients record does not delete the exposure.
   'Exposure dates of entry are not kept currently
   '-----------------------------------------------------------------------------------------
   
   Dim audit As New Collection
   Dim sql As String
   Dim iAuditAction As Integer
   
   exposure!tablename = "occupations_exposures" 'so audit knows which table to display
   sql = "UPDATE clin_history.occupations_exposures  SET  deleted = True WHERE pk = "
   sql &= exposure!fk_occupations_exposures
   
   audit!fk_row = exposure!pk_occupations_exposures
   audit!fk_consult = currentconsult.GetPK()
   audit!fk_section = const.cSection_OccupationalHistory
   audit!fk_action = const.cAuditAction_Delete
   
   audit!data_summary = exposure!exposure
   iAuditAction = const.cAuditAction_MarkDeleted
   
   '-------------------------------------------------------------------------------------------------
   ' occupational exposure could be deleted either during consulation (ie mistake in the first place)
   'in which case don't need FAudit to popup and get the reason as we are allowed to change out mind
   'within the consultation.
   '--------------------------------------------------------------------
   FAudit.Init(Exposure, Const.cSection_OccupationalHistory, iAuditAction, currentconsult)
   If Not FAudit.ShowModal() Then Return 
   audit!reason = Last.tag & ":<BR> - " & Lower(const.globalstring)
   '----------------------------------------
   'Ok, delete and and create an audit trail
   '----------------------------------------
   modDBConnect.exec_query(sql)                                                 'mark the occupation as deleted
   Message.Info("Richard - stop program and check here")
   
End

Public Function Patient_Occupation_Is_It_Recorded(fk_patient As Variant, fk_occupation As Variant) As Boolean
   '------------------------------------------------------------------------------------------ 
   'checks to see if the patient's occupation is recorded in clin_history.occupational_history
   'This is only used if the clerical staff enter the patient's occupation
   'Returns True if the occupation is recorded
   '------------------------------------------------------------------------------------------ 
   
   Dim sql As String
   Dim R As Result
   
   sql = "Select * from clin_history.vwOccupationalHistory where fk_patient=" & fk_patient & " AND fk_occupation=" & fk_occupation
   R = modDBConnect.exec_query(sql)
   If R.count Then 'patient has not got this occupation recorded
      Return True  
   End If
   Return 
   
End




Public Function Exposures_Get(exposure As String) As Result
   '------------------------------------------------------------
   'Gets a list of things the worker  could have been exposed to
   'returns collection which could be empty
   '------------------------------------------------------------
   
   Dim sql As String
   
   sql = "SELECT * FROM clin_history.lu_occupational_exposures WHERE lower (exposure) ILIKE $$" 
   sql &= Lower(exposure) & "%$$ and deleted is false  LIMIT 20"
   Return modDBConnect.exec_query(sql)
   
End

Public Function Exposure_Save(exposure As Collection) As Variant
   '-----------------------------------------------------------
   'Inserts a new exposure into clin_history.lu_exposures table
   'returns the primary key
   'FIXME
   '-----------------------------------------------------------
   
   Dim sql As String
   
   sql = "insert into clin_history.lu_exposures (exposure)  VALUES($$"
   sql &= exposure!exposure & "$$) returning pk"
   Return modDBConnect.exec_query(sql)!pk
   
End


Public Sub OccupationalHistory_Get(fk_patient As Variant) As Collection
   '-----------------------------------------------------
   'returns a collection of occupational histories ordered by occupation
   'hence the collection will look like this:
   '  occupation1 exposure1
   ' AS of 12/2015: can only save 1 exposure till I fix it
   '  occupation1 exposure2
   '  occupation2 exposure1
   ' or 
   '  occupation3  (nil exposure)
   '-----------------------------------------------------
   
   Dim sql As String
   
   sql = "Select * from clin_history.vwOccupationalHistory where fk_patient = " & fk_patient & " And " 
   SQL &= "occupational_history_deleted = False and exposure_deleted is not true" 'can be null or false
   SQL &= " ORDER BY fk_occupation"
   Return modDBConnect.exec_query_collection(sql)
   
End

Public Sub Patient_Occupation_Make_Current_And_Main(fk_occupational_history As Variant)
   '---------------------------------------------------------------------------------- 
   'Makes the occupation pointed to by the key the  key the main and active occupation
   '----------------------------------------------------------------------------------
   
   modDBConnect.update("Clin_history.occupational_history", Null, ["pk": fk_occupational_history, "current": True])
   modDBConnect.update("Clin_history.occupational_history", Null, ["pk": fk_occupational_history, "main_occupation": True])
   
End

Public Sub Patient_Occupations_Mark_NotCurrentOrMain(currentconsult As CConsult)
   '-----------------------------------------------------------------------------------------
   'Mark all occupations in their occupational history as not current and not main occupation
   'Called in two occasions in Fclinical.Occupation_Save which itself is called when the
   'user has typed in the occupation textbox on the main toolbar. (just a quick way for the
   'user to update the occupation without loading the FOccupationalHistory module
   '-----------------------------------------------------------------------------------------
   
   Dim C As Collection
   Dim occupationalhistory As CRow
   
   For Each C In currentconsult!occupational_history
      occupationalhistory = New CRow
      occupationalhistory.put_unchanged(C!fk_occupational_history, "fk_occupational_history")
      occupationalhistory!fk_consult = C!fk_consult          'not null field, re-use old fk_consult, it doesn't matter
      occupationalhistory!fk_occupation = C!fk_occupation    'not null field,
      occupationalhistory!main_occupation = False  
      occupationalhistory!current = False  
      occupationalhistory.Save("Clin_history.occupational_history", "fk_occupational_history")
   Next 
   
End

Public Sub Patient_Occupations_Mark_NotMain(currentconsult As CConsult)
   '-----------------------------------------------------------------------------------------
   'Mark all occupations in their occupational history as not  main occupation
   'Called in from FOccupation.Save()
   '-----------------------------------------------------------------------------------------
   
   Dim C As Collection
   Dim occupationalhistory As CRow
   
   For Each C In currentconsult!occupational_history
      occupationalhistory = New CRow
      occupationalhistory.put_unchanged(C!fk_occupational_history, "fk_occupational_history")
      occupationalhistory!fk_consult = C!fk_consult          'not null field, re-use old fk_consult, it doesn't matter
      occupationalhistory!fk_occupation = C!fk_occupation    'not null field,
      occupationalhistory!main_occupation = False  
      occupationalhistory.Save("Clin_history.occupational_history", "fk_occupational_history")
   Next 
   
End
