' Gambas class file

' Copyright (C) 2008-2013 Dr. Richard Terry
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' ---------------------------------------------------------------------------------------------------
' PURPOSE     - A module to allow entry of persons recreational drug use
' FIXME:      -
' NOTES       -
'             -
' BUGS        -
'----------------------------------------------------------------------------------------------------

Private currentconsult As CConsult
Private substances As Collection
Private substance As Collection
Private common_lu_route_administration_keys As String[] 'only use a few match these to the cmbRouteTaken
Private fk_recreationaldrug As Integer
Private RecreationalDrugs As Collection
Private bExit As Boolean
Private bIniting As Boolean
Private fk_progressnote As Integer
Private bEditing As Boolean

Public Sub Init(cons As CConsult)
   
   currentconsult = cons
   lblmeasure.text = " Authority Approval No.  "  'to keep all edit area's left width the same the script one is the widest
   modEditAreaHelpers.Resize_labels(Vbox_EditArea, lblMeasure)
   substances = modUtil.LoadCombo(cmbSubstances, modUtil.Copy_Collection_Keyed_Sequentially(modRecreationalDrugs.Recreational_Drugs_Get()), "drug")
   cmbRouteTaken.Add("inhaled", 0)
   cmbRouteTaken.Add("intramuscular", 1)
   cmbRouteTaken.Add("intranasal", 2)
   cmbRouteTaken.Add("intravenous", 3)
   cmbRouteTaken.Add("oral", 4)
   cmbRouteTaken.Add("subcutaneous", 5)
   cmbRouteTaken.Add("topical", 6)
   common_lu_route_administration_keys = New String[7]
   common_lu_route_administration_keys[0] = const.route_administration_inhaled
   common_lu_route_administration_keys[1] = const.route_administration_intramuscular
   common_lu_route_administration_keys[2] = const.route_administration_intranasal
   common_lu_route_administration_keys[3] = const.route_administration_intravenous
   common_lu_route_administration_keys[4] = const.route_administration_oral
   common_lu_route_administration_keys[5] = const.route_administration_subcutaneous
   common_lu_route_administration_keys[6] = const.route_administration_topical
   With cvwRecreationalDrugs
      .Columns.count = 6
      .Columns[0].text = "Substance"
      .Columns[1].text = "Route"
      .Columns[2].text = "Age Details"
      .Columns[3].text = "Amount"
      .Columns[4].text = ""
      .Columns[5].text = "Notes"
   End With
   bIniting = True
   cmbSubstances_Click()
   Try Settings_Load
   Reload()
   bIniting = False
   EditArea_Notify_DataChange(False)
   
End

Public Sub Save()
   '---------------------------------------------------------------------------------------------------------------------
   'Save the recreational drug
   '
   ' CREATE TABLE clin_history.recreational_drugs
   ' (
   '   pk serial NOT NULL,
   '   fk_consult integer NOT NULL,
   '   fk_lu_recreational_drug integer NOT NULL, -- foreign key to common.lu_recreational_drugs
   '   age_started integer, -- the age the patient first used this drug
   '   age_last_used integer, -- the age the patient last used or stopped using the drug
   '   substance_amount integer, -- the quantity of the substance e.g 10 if say 10gm of alcohol per day see lu_substance_frequency
   '   fk_substance_unit_amount integer, -- the units for the substance amount eg gm key to common.lu_units (to be restricted in the front end
   '   fk_lu_substance_frequency integer, -- foreign key to common.lu_units but front end will allow on day/week/month/year
   '   fk_lu_route_administration integer, -- keyColor.rgb(95, 255, 175) to common.lu_route_administration
   '   notes text, -- any qualifying information about the drug eg, 'used intermittently 20-30, stopped in 30's, started again in 40's
   '   deleted boolean,
   '   CONSTRAINT recreational_drugs_pkey PRIMARY KEY (pk),
   '   CONSTRAINT data_recreational_drugs_fk_consult FOREIGN KEY (fk_consult)
   '       REFERENCES clin_consult.consult (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,NotificationFlag
   '   CONSTRAINT data_recreational_drugs_fk_lu_recreational_drug FOREIGN KEY (fk_lu_recreational_drug)
   '       REFERENCES common.lu_recreational_drugs (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION
   ' )
   ' WITH (bstance!drug & ".\n\n"
   '   OIDS=FALSE
   ' );
   '-----------------------------------------------------------------------------------------------------------------------
   
   Dim recreationalDrug As CRow
   Dim ProgressNote As CRow
   Dim sProgressNotes As String
   Dim NotificationFlag As Integer = const.cSmokerUnknown
   
   If HBox_EditArea.Padding = 0 Then Return
   If Not RecreationalDrug_Valid() Then Return
   HBox_EditArea.Enabled = False
   
   recreationalDrug = New CRow
   If fk_recreationaldrug <> 0 Then
      recreationalDrug.put_unchanged(fk_recreationaldrug, "fk_recreationaldrug")
   Endif
   recreationalDrug!fk_consult = currentconsult.GetPK()
   recreationalDrug!fk_lu_recreational_drug = substances[cmbSubstances.index]!pk
   recreationalDrug!age_started = Val(Trim(txtAgeStarted.text))
   recreationalDrug!age_last_used = Val(Trim(txtAgeLastUsed.text))
   recreationalDrug!substance_amount = Val(Trim(txtQuantity.text))
   If rbMonth.Value = True Then
      recreationalDrug!fk_lu_substance_frequency = const.Units_month
   Endif
   If rbDay.Value = True Then
      recreationalDrug!fk_lu_substance_frequency = const.Units_day
   Endif
   If rbWeek.Value = True Then
      recreationalDrug!fk_lu_substance_frequency = const.Units_week
   Endif
   recreationalDrug!fk_lu_route_administration = common_lu_route_administration_keys[cmbRouteTaken.index]
   recreationalDrug!notes = Trim(txtNotes.text)
   recreationalDrug!cumulative_amount = Trim(txtPackYears.Text)
   recreationalDrug!never_used_drug = CBool(chkNeverUsedDrug.value)
   ProgressNote = New CRow
   ProgressNote!notes = ProgressNotes_Create(fk_progressnote)
   If fk_progressnote Then
      ProgressNote.put_unchanged(fk_progressnote, "fk_progressnote")            'am editing todays progress note
   End If
   If fk_recreationaldrug <> 0 Then
      ProgressNote!fk_audit_action = const.cAuditAction_Edit
   Else
       ProgressNote!fk_audit_action = const.cAuditAction_Insert                  'is an insert
   Endif
   ProgressNote!fk_consult = recreationalDrug!fk_consult
   ProgressNote!fk_section = const.cSection_RecreationalDrugs
   ProgressNote!problem = "Recreational Drugs"
   ProgressNote.Save("clin_consult.progressnotes", "fk_progressnote")
   recreationalDrug!fk_progressnote = progressnote!fk_progressnote
   recreationalDrug.Save("clin_history.recreational_drugs", "fk_recreationaldrug")
   modDBConnect.CommitTrans()
   EditArea_Notify_DataChange(False)
   HBox_EditArea.Enabled = False
   If recreationalDrug!fk_lu_recreational_drug = const.cRecreational_Drug_Nicotine Then
      If recreationalDrug!never_used_drug Then
         NotificationFlag = const.cSmokerNever
      Else
         If Not IsNull(recreationalDrug!age_last_used) Then
            NotificationFlag = const.cSmokerPast
         Else
            NotificationFlag = const.cSmokerCurrent
         End If
      End If
      If FClinical.IsSamePatient(currentconsult!patient!fk_patient) Then             'if the form is not embedded update fclinical FIXME the summary is not updated
         FClinical.Refresh_AllPreviousNotes()                                        'refresh the progress notes
         FClinical.Refresh_Section(const.cSection_HealthSummary)
         If Not IsNull(recreationalDrug!cumulative_amount) Then
            FClinical.Smoking_Nofication_Update(NotificationFlag, Str(recreationalDrug!cumulative_amount) & " Pack Years")
         Else
            '   FClinical.Smoking_Nofication_Update(NotificationFlag, recreationalDrug!quantification)
            FClinical.Smoking_Nofication_Update(NotificationFlag, "")
         End If
      End If
   Endif
   Reload()
   
End

Public Sub ProgressNotes_Create(fk_progressnote As Integer) As String
   '-----------------------------------------------------------------
   'Create a progress note entry for the substance along the lines of
   'current smoker 10/day or ex-smoker 15/day from age 23 to 50
   '-----------------------------------------------------------------
   
   Dim sPN As String
   
   sPN = "<B> " & cmbSubstances.text
   If fk_recreationaldrug Then
      sPN &= " details updated:</B> "
   Else
      sPN &= " details added:</B> "
   End If
   If chkNeverUsedDrug.value = True Then
      Select Case cmbSubstances.text
         Case "nicotine"
            sPn &= "never smoked."
         Case "alcohol"
            sPn &= "never drunk alcohol."
      End Select
      Return sPN
   End If
   '----------------------------------------
   'ok, they have used the drug in some form
   '----------------------------------------
   Select Case cmbSubstances.text
      Case "nicotine"
         If Trim(txtAgeLastUsed.text) = "" Then
            sPn &= "currently smokes "
         Else
            sPn &= "ex smoker "
         End If
         If txtQuantity.text <> "" Then
            sPn &= txtQuantity.text & " per "
         Else
            sPn &= "? per "
         Endif
         If rbDay.Value = True Then
            sPn &= "day "
         Endif
         If rbWeek.Value = True Then
            sPn &= "week "
         Endif
         If Not rbWeek.value And Not rbDay.value Then
            sPn &= " ?day ?week "
         Endif
      Case "alcohol"
         If Trim(txtAgeLastUsed.text) = "" Then
            sPn &= "currently drinks "
         Else
            sPn &= "ex-drinker"
         End If
         If txtQuantity.text <> "" Then
            sPn &= txtQuantity.text & "gms per "
         Else
            sPn &= "?gms per "
         End If
         If rbDay.Value = True Then
            sPn &= "day "
         Endif
         If rbWeek.Value = True Then
            sPn &= "week "
         Endif
   End Select
   
   sPN &= "from age "
   If Trim(txtAgeStarted.text) <> "" Then
      sPN &= txtAgeStarted.text & " yrs "
   Else
      sPN &= " ? "
   Endif
   If Trim(txtAgeLastUsed.text) <> "" Then
      sPN &= " to age " & txtAgeLastUsed.Text
   Endif
   Print sPN
   Return sPN
   
End

Public Sub Reload()
   '----------------------------------
   'Reload the users recreational drugs
   'fixme remove NotificationFlag
   '-----------------------------------
   
   Dim recreationalDrug As Collection
   Dim sString As String
   Dim NotificationFlag As Integer = const.cSmokerUnknown 'the default.
   '  Dim col_widths As New Integer[5]
   Dim x As Integer
   
   EditArea_Clear()
   cvwRecreationalDrugs.clear()
   currentconsult.Refresh("recreationaldrugs")                    'force reload from back end
   RecreationalDrugs = modUtil.Copy_Collection_Keyed_Sequentially(currentconsult!recreationaldrugs)
   For Each recreationalDrug In RecreationalDrugs
      cvwRecreationalDrugs.Add(x, 0)
      cvwRecreationalDrugs[x][0] = recreationalDrug!drug
      cvwRecreationalDrugs[x][1] = recreationalDrug!route
      If recreationalDrug!never_used_drug = False Then                         'the user has taken a history and never used the drug
         sString = "Age started:"
         If Not IsNull(recreationalDrug!age_started) Then
            sString &= recreationalDrug!age_started
         Else
            sSTring &= "?"
         Endif
         If IsNull(recreationalDrug!age_last_used) Then
            sSTring &= " " & recreationalDrug!age_last_used
            cvwRecreationalDrugs[x][4] = " Current "
            NotificationFlag = const.cSmokerCurrent
         Else
            cvwRecreationalDrugs[x][4] = " Has Quit "
            sString &= " to " & recreationalDrug!age_last_used
            NotificationFlag = const.cSmokerPast
         Endif
         cvwRecreationalDrugs[x][2] = sString
         If Not IsNull(recreationalDrug!substance_amount) Then
            sString = "Quantity " & recreationalDrug!substance_amount & " " & recreationalDrug!quantification
            Select Case recreationalDrug!fk_lu_substance_frequency
               Case const.Units_day
                  sString &= " per day "
               Case const.Units_week
                  sString &= " per week "
               Case const.Units_month
                  sString &= " per month "
            End Select
            cvwRecreationalDrugs[x][3] = sString
         Endif
         cvwRecreationalDrugs[x][5] = recreationalDrug!notes
      Else
         NotificationFlag = const.cSmokerNever
         cvwRecreationalDrugs[x][5] = "NEVER USED THIS DRUG"
      End If
      Inc x
   Next
   modUtil.Columnview_Columns_Set_Size(cvwRecreationalDrugs, lblMeasure)
   lblSubstance.SetFocus()
   
End

Public Sub mnuRecreationalDrugs_Click()
   '-----------------------------------------------------------
   'User has clicked on one of the menu items on the popup menu
   'over cvwRecreationalDrugs
   '-----------------------------------------------------------
   
   Select Case Last.tag
      Case "edit"
         RecreationalDrug_Edit
      Case "delete"
         RecreationalDrug_Delete
      Case "font"
         modUtil.Columnview_SetFont(cvwRecreationalDrugs, "FRecreationalDrugs")
      Case "help"
         modUtil.NotImplemented("Help")
   End Select
   
End

Public Sub cvwRecreationalDrugs_Select()
   
   RecreationalDrug_Display
   
End

Public Sub cvwRecreationalDrugs_Menu()
   
   If cvwRecreationalDrugs.count Then
      mnuRecreationalDrugs.popup()
   Endif
   
End

Public Sub New_Entry()
   
   RecreationalDrug_New()
   
End

Public Sub RecreationalDrug_Edit()
   
   HBox_EditArea.Enabled = True
   bEditing = True
   
End

Public Sub RecreationalDrug_New()
   '--------------------------------------------------------
   'Clear the edit area for input of a new recreational drug
   '--------------------------------------------------------
   
   EditArea_Clear()
   HBox_EditArea.Enabled = True
   cmbSubstances.SetFocus()
   
End

Public Sub RecreationalDrug_Delete()
   
   Dim sMsg As String
   
   cvwRecreationalDrugs.MoveCurrent
   SMsg = "Are you sure you want to delete this drug?\n\n"
   sMsg = RecreationalDrugs[cvwRecreationalDrugs.Item.key]!drug
   If Message.Question(sMsg, "Yes - Delete Drug", "No") = 2 Then Return
   modDBConnect.update("clin_history.recreational_drugs", Null, ["pk": fk_recreationaldrug, "deleted": True])
   modDBConnect.CommitTrans()
   Reload()
   
End

Public Sub RecreationalDrug_Display()
   '---------------------------------------------------------
   'Display the recreational drug details in the editing area
   '---------------------------------------------------------
   
   Dim RecreationalDrug As Collection
   
   EditArea_Clear()
   cvwRecreationalDrugs.MoveCurrent()
   RecreationalDrug = RecreationalDrugs[cvwRecreationalDrugs.Item.key]
   bIniting = True
   cmbSubstances.index = cmbSubstances.Find(RecreationalDrug!drug)
   bIniting = False
   bExit = True
   txtAgeStarted.text = RecreationalDrug!age_started
   txtAgeLastUsed.text = RecreationalDrug!age_last_used
   txtPackYears.text = RecreationalDrug!cumulative_amount 'only used for nicotine
   txtQuantity.text = RecreationalDrug!substance_amount
   Select Case RecreationalDrug!fk_lu_substance_frequency
      Case const.Units_day
         rbDay.value = True
      Case const.Units_week
         rbWeek.Value = True
      Case const.Units_month
         rbMonth.Value = True
   End Select
   fk_progressnote = RecreationalDrug!fk_progressnote
   chkNeverUsedDrug.value = RecreationalDrug!never_used_drug
   txtNotes.text = RecreationalDrug!notes
   fk_recreationaldrug = RecreationalDrug!pk
   cmbRouteTaken.index = cmbRouteTaken.Find(RecreationalDrug!route)
   bExit = False
   EditArea_Notify_DataChange(False)
   
End

Public Sub RecreationalDrug_Valid() As Boolean
   '-----------------------------------------------------------------
   'Returns true if enough information to save this recreational drug
   '-----------------------------------------------------------------
   Dim sMsg As String
   
   For Each substance In currentconsult!recreationaldrugs
      If substances[cmbSubstances.index]!pk = substance!fk_lu_recreational_drug And bEditing = False Then
         Message.title = "Existing Recreational Drug"
         sMsg = "You have already entered data for " & substance!drug & ".\n\n"
         sMsg &= "Please edit existing data for this drug if you wish to modify it."
         Message.info(sMsg)
         RecreationalDrug_New
         Return
      Endif
   Next
   If cmbSubstances.index = -1 Then
      cmbSubstances.SetFocus()
      Return
   Endif
   If cmbRouteTaken.index = -1 Then
      cmbRouteTaken.SetFocus()
      Return
   Endif
   If Trim(txtQuantity.text) = "" And chkNeverUsedDrug.value = False Then
      txtQuantity.Background = Color.rgb(95, 255, 175)
      txtQuantity.SetFocus()
      Return
   Endif
   Return True
   
End

Private Sub Settings_Load()
   
   Vsplit_Main.Layout = Settings["FRecreationalDrugs/VSplit_Main.Layout", modUtil.VSplit([299, 558])]
   cvwRecreationalDrugs.font = Font[Settings["RecreationalDrugs/cvwRecreationalDrugs.font", "DejaVu Sans,9"]]
   
End

Public Sub Settings_Save()
   
   Settings["FRecreationalDrugs/VSplit_Main.Layout"] = Vsplit_Main.Layout
   
End

Public Sub Form_Close()
   '------------------
   'Save splits layout
   '------------------
   
   Settings_Save()
   
End

Public Sub EditArea_Clear()
   
   bExit = True
   modEditAreaHelpers.EditArea_Clear(Vbox_EditArea)
   fk_recreationaldrug = 0
   fk_progressnote = 0
   rbReset.value = True 'unsets the day/month/week radiobuttons
   bexit = False
   bEditing = False
   cmbSubstances.index = -1
   cmbRouteTaken.index = -1
   EditArea_Notify_DataChange(False)
   
End

Public Sub EditAreaTextBox_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   
End

Public Sub EditAreaTextBox_LostFocus()
   
   Last.Background = Color.White
   
End

Public Sub EditArea_Notify_DataChange(flag As Boolean)
   '--------------------------------------------------
   'Adds or removes padding around edit area and lists
   'to indicate if data is changed and unsaved
   '--------------------------------------------------
   
   If bexit Then Return
   If flag Then
      HBox_EditArea.Padding = 1
   Else
      HBox_EditArea.Padding = 0
   End If
   
End

Public Sub EditAreaTextBox_KeyPress()
   '-------------------------------------------------------------
   'first make sure only valid keys for each text box are entered
   'here effectively this means only the date
   '--------------------------------------------------------------
   
   Dim x As Integer
   Dim bKeyValid As Boolean
   
   bkeyvalid = EditAreaTextBox_ExcludeKeys(key.code, Last.tag)
   If bkeyvalid = False Then
      Stop Event
      Return
   End If
   Select Case Key.Code
      Case Key.Return, Key.tab
         Select Case Last.tag
            Case "age started"
               txtAgeLastUsed.SetFocus()
            Case "age last used"
               txtQuantity.SetFocus()
            Case "quantity"
               rbDay.SetFocus()
            Case "pack years"
               cmbRouteTaken.SetFocus()
         End Select
   End Select
   
End

Public Sub EditAreaTextBox_Change()
   
   EditArea_Notify_DataChange(True)
   If Last.tag = "age last used" And Len(Trim(txtAgeLastUsed.text)) > 0 Then
      If Val(Trim(txtAgeLastUsed.text)) > currentconsult!patient!age_numeric Or currentconsult!patient!age_numeric < Val(Trim(txtAgeStarted.text)) Then
         bexit = False
         Last.text = ""
         bExit = True
      Endif
   Endif
   Select Case Last.tag
      Case "age started", "age last_used", "pack years"
         If Len(Last.text) Then chkNeverUsedDrug.value = False
   End Select
   
End

Public Function EditAreaTextBox_ExcludeKeys(keycode As Integer, tag As String) As Boolean
   
   Dim bKeyValid As Boolean
   
   Select Case tag
      Case "pack years", "age started", "age last used", "quantity"
         bKeyValid = modUtil.AllowKeys(const.AllowKeys_NumbersOnly, keycode)
      Case Else
         bKeyValid = True
   End Select
   Return bKeyValid
   
End

Public Sub cmbSubstances_Click()
   
   Dim sMsg As String
   Dim RD As Collection    

   If bexit Then Return
   '-----------------------------------------------------------------------
   'First check the user is not stupid enough to be starting another record
   'for a substance already recorded
   '-----------------------------------------------------------------------
   If Not bIniting Then
      For Each substance In currentconsult!recreationaldrugs
         If substances[cmbSubstances.index]!pk = substance!fk_lu_recreational_drug Then
            Message.title = "Existing Recreational Drug"
            sMsg = "You have already entered data for " & substance!drug & ".\n\n"
            sMsg &= "Please edit existing data for this drug if you wish to modify it."
            Message.info(sMsg)
            Return
         Endif
      Next
   End If
   
   If cmbSubstances.text = "alcohol" Then
      lblQuantity.text = "gms per"
   Endif
   lblSubstanceAKA.text = substances[cmbSubstances.index]!alternative_names
   cmbRouteTaken.index = cmbRouteTaken.Find(substances[cmbSubstances.index]!route)
   lblQuantity.text = substances[cmbSubstances.index]!quantification & " per  "
   If cmbSubstances.text = "nicotine" Then
      HBox_PackYears.Visible = True
   Else
      HBox_PackYears.Visible = False
   End If
   EditArea_Notify_DataChange(True)
   
End

Public Sub EditArea_RadioButtons_Click()
   
   EditArea_Notify_DataChange(True)
   
End

Public Sub EditArea_RadioButtons_KeyPress()
   
   If bexit Then Return
   Select Case Key.Code
      Case Key.Tab, Key.Return
         Select Case Last.tag
            Case "day"
               rbWeek.SetFocus()
            Case "week"
               rbMonth.SetFocus()
            Case "month"
               If cmbSubstances.text = "nicotine" Then
                  txtPackYears.SetFocus()
               Else
                  cmbRouteTaken.SetFocus
               Endif
               
         End Select
   End Select
   
End

Public Sub cmbRouteTaken_KeyPress()
   
   If bexit Then Return
   txtNotes.SetFocus()
   
End
' --drop table common.lu_recreationaldrugs;
'
' Create table common.lu_recreational_drugs
' (pk serial primary key,
' drug text not null,
' alternative_names text default null,
' default_fk_lu_route_administration integer not null,
' quantification text default null,
' illicit boolean not null default true,
'  CONSTRAINT common_lu_recreational_drugs_default_fk_lu_route_administration  FOREIGN KEY (default_fk_lu_route_administration )
'       REFERENCES common.lu_route_administration (pk) MATCH SIMPLE
'       ON UPDATE NO ACTION ON DELETE NO ACTION
'
' );
'
' ALTER TABLE common.lu_recreational_drugs OWNER TO easygp;
' GRANT ALL ON TABLE common.lu_recreational_drugs TO easygp;
' GRANT SELECT ON TABLE common.lu_recreational_drugs TO staff;
'
'
' comment on table common.lu_recreational_drugs is 'A list of common recreational drugs';
' comment on column common.lu_recreational_drugs.alternative_names is 'a space-separated list of alternative names or subtypes';
' comment on column common.lu_recreational_drugs.illicit is 'true if illegal to use recreationally in most Australian jurisdictions';
' comment on column common.lu_recreational_drugs.quantification is 'how to quantify eg cig/day or gm/day';
'
' --  route_administration_intramuscular As Integer = 1
' --  route_administration_subcutaneous As Integer = 2
' --  route_administration_intramuscular_or_subcutaneous As Integer = 3
' --  route_administration_intradermal As Integer = 4
' --  route_administration_oral As Integer = 5
' --  route_administration_intranasal As Integer = 6
' --  route_administration_inhaled As Integer = 7
' --  route_administration_topical As Integer = 8
' --  route_administration_intravenous As Integer = 11
'
' Insert into common.lu_recreational_drugs (drug, alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('nicotine','cigarette cigar rollies chop-chop',7,'cig or equiv',false);
' Insert into common.lu_recreational_drugs (drug, alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('alcohol','ethanol booze piss goon drink mixers',5,'grams',false);
' Insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('opiate', 'heroin morphine oxycodone oxies smack shit ms-contin',11, 'mg',true);
' Insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('cocaine','crack rock coke powder', 6,'',true);
' Insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('caffeine','coffee', 5,'cups',false);
' Insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('cannabis', 'THC skunk weed grass green bud synthetic-cannabis mary-jane wacky-baccy', 7,'grams',true);
' -- God only knows what "synthetic cannabis" actually is!
' Insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('benzodiazepines','valium xanax mogadon moggies serepax serries', 5,'milligrams',true);
' Insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('inhalants','solvents glue', 7,'sessions',false);
' Insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('petrol','fuel gas', 7,'sessions',false);
' insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values  ('amphetamine', 'metamphetamine ice speed methylphenidate ritalin looey', 11,'',true);
' -- contrary to the firm belief of many users there is no effective difference between
' -- "speed" and "ice": the same mixture of amphetamines created in the backyard lab
' -- will be sold by dealers as "ice" to increase cachet (and so value)
' Insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('psychedelics','LSD angel-dust acid shrooms mushies', 5,'times',true);
' -- technically angel dust is phencycline, and mushrooms may contain a
' -- variety of compounds, chiefly mescaline, but again clinically it doesn't really make
' -- a difference
' insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('MDMA','xtc ecstasy extasy', 5,'tablets',true);
' -- in practice "ecstasy" often has the same issue as "ice": whatever claimed by the dealer
' -- the pill will usually contain plain old amphetamine
' Insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('kava','', 5,'',false);
' Insert into common.lu_recreational_drugs (drug,alternative_names, default_fk_lu_route_administration,quantification, illicit) values ('ketamine','special k', 11,'',false);
' -- yes it is legal, apparently
'
' Create or replace view common.vwRecreationalDrugs as
' SELECT
'   common.lu_recreational_drugs.pk,
'   common.lu_recreational_drugs.drug,
'   common.lu_route_administration.route,
'   common.lu_recreational_drugs.alternative_names,
'   common.lu_recreational_drugs.illicit,
'   common.lu_recreational_drugs.quantification,
'   common.lu_recreational_drugs.default_fk_lu_route_administration
' FROM
'   common.lu_route_administration,
'   common.lu_recreational_drugs
' WHERE
'   common.lu_recreational_drugs.default_fk_lu_route_administration = lu_route_administration.pk;
'
'
' truncate db.lu_version;
' insert into db.lu_version (lu_major,lu_minor) values (0, 259);
'
'
'

' -- work on recreational drug use tables
' --drop table clin_history.data_recreational_drugs
'
' CREATE TABLE clin_history.recreational_drugs
' (
'   pk serial primary key,
'   fk_consult integer not null,
'   fk_lu_recreational_drug integer not null,
'   age_started integer default null,
'   age_last_used integer default null,
'   substance_amount integer default null,
'   fk_lu_substance_amount_units integer default null,
'   fk_lu_substance_frequency integer default null,
'   fk_lu_route_administration integer default null,
'   cumulative_amount integer default null,
'   notes text,
'   deleted boolean default false,
'   CONSTRAINT data_recreational_drugs_fk_consult FOREIGN KEY (fk_consult)
'       REFERENCES clin_consult.consult (pk) MATCH SIMPLE
'       ON UPDATE NO ACTION ON DELETE NO ACTION,
'   CONSTRAINT data_recreational_drugs_fk_lu_recreational_drug FOREIGN KEY (fk_lu_recreational_drug)
'       REFERENCES common.lu_recreational_drugs (pk) MATCH SIMPLE
'       ON UPDATE NO ACTION ON DELETE NO ACTION
'  );
' ALTER TABLE clin_history.recreational_drugs OWNER TO easygp;
' GRANT ALL ON TABLE clin_history.recreational_drugs TO easygp;
' GRANT SELECT ON TABLE clin_history.recreational_drugs TO staff;
'
' Comment on table clin_history.recreational_drugs is
' 'A list of the patient''s recreational drug use
'  - note it is not possible to be absolutely precise about age started/stopped drugs a use can start stop, so comments should be added to the notes field';
' comment on column  clin_history.recreational_drugs.fk_lu_recreational_drug is 'foreign key to common.lu_recreational_drugs';
' comment on column  clin_history.recreational_drugs.age_started is 'the age the patient first used this drug';
' comment on column  clin_history.recreational_drugs.age_last_used is 'the age the patient last used or stopped using the drug';
' comment on column  clin_history.recreational_drugs.substance_amount is 'the quantity of the substance e.g 10 if say 10gm of alcohol per day see lu_substance_frequency';
' comment on column  clin_history.recreational_drugs.fk_lu_substance_frequency is 'foreign key to common.lu_units but front end will allow on day/week/month/year';
' comment on column  clin_history.recreational_drugs.fk_lu_substance_amount_units is 'the units for the substance amount eg gm key to common.lu_units (to be restricted in the front end';
' comment on column  clin_history.recreational_drugs.fk_lu_route_administration is 'key to common.lu_route_administration';
' comment on column  clin_history.recreational_drugs.notes is 'any qualifying information about the drug eg, ''used intermittently 20-30, stopped in 30''s, started again in 40''s';
' comment on column clin_history.recreational_drugs.cumulative_amount is 'the cumulative amount of the drug meant more for  nicotine eg 25=25 pack years';
'
' Create or replace view clin_history.vwRecreationalDrugsUsed as
' SELECT
'   recreational_drugs.pk,
'   data_patients.pk as fk_patient,
'   lu_recreational_drugs.drug,
'   lu_recreational_drugs.alternative_names,
'   lu_route_administration.route,
'
'   recreational_drugs.fk_consult,
'   recreational_drugs.fk_lu_recreational_drug,
'   recreational_drugs.age_started,
'   recreational_drugs.age_last_used,
'   recreational_drugs.substance_amount,
'   recreational_drugs.fk_lu_substance_amount_units,
'   recreational_drugs.fk_lu_substance_frequency,
'   recreational_drugs.fk_lu_route_administration,
'   recreational_drugs.notes,
'   recreational_drugs.deleted,
'   recreational_drugs.cumulative_amount,
'   lu_recreational_drugs.quantification,
'   lu_recreational_drugs.illicit,
'   lu_recreational_drugs.default_fk_lu_route_administration
' FROM
' clin_history.recreational_drugs
'  JOIN clin_consult.consult on consult.pk= recreational_drugs.fk_consult
'  JOIN clerical.data_patients on data_patients.pk = consult.fk_patient
'  JOIN common.lu_recreational_drugs on lu_recreational_drugs.pk = recreational_drugs.fk_lu_recreational_drug
'  JOIN common.lu_route_administration on lu_route_administration.pk = recreational_drugs.fk_lu_route_administration
'  LEFT JOIN  common.lu_units on lu_units.pk = recreational_drugs.fk_lu_substance_amount_units;
'
' ALTER TABLE clin_history.vwRecreationalDrugsUsed OWNER TO easygp;
' GRANT ALL ON TABLE clin_history.vwRecreationalDrugsUsed TO easygp;
' GRANT SELECT ON TABLE clin_history.vwRecreationalDrugsUsed TO staff;
'
'
' truncate db.lu_version;
' insert into db.lu_version (lu_major,lu_minor) values (0, 261);
'
'

Public Sub chkNeverUsedDrug_Click()
   
   If bexit Then Return
   EditArea_Notify_DataChange(True)
   If Last.value = True Then  
      txtAgeLastUsed.text = ""
      txtAgeStarted.text = ""
      rbReset.value = True
      txtNotes.text = ""
      txtPackYears.text = ""
      txtQuantity.text = ""
   End If
   
End
