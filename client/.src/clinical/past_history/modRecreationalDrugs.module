' Gambas module file

' Copyright (C) 2008-2016 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'
' A module to interface with the backend for recreational drugs
' ---------------------------------------------------------------------

Public Function Recreational_Drugs_Get() As Collection
   '-------------------------------------------------------------
   'returns a collection of recreational drugs which can be used
   'If a drug is missing please email me
   '------------------------------------------ ------------------
   
   Return modDBConnect.exec_query_collection("Select * from common.vwRecreationalDrugs order by drug")
   
End

Public Sub Never_Smoked(currentconsult As CConsult)
   '--------------------------------------------------------------------------------------------------------------
   'used from FClinical.lblAlerts popup menu to quickly put in that the patient has never smoked
   'Save the recreational drug
   ' CREATE TABLE clin_history.recreational_drugs
   ' (
   '   pk serial NOT NULL,
   '   fk_consult integer NOT NULL,
   '   fk_lu_recreational_drug integer NOT NULL, -- foreign key to common.lu_recreational_drugs
   '   age_started integer, -- the age the patient first used this drug
   '   age_last_used integer, -- the age the patient last used or stopped using the drug
   '   substance_amount integer, -- the quantity of the substance e.g 10 if say 10gm of alcohol per day see lu_substance_frequency
   '   fk_lu_substance_amount_units integer, -- the units for the substance amount eg gm key to common.lu_units (to be restricted in the front end
   '   fk_lu_substance_frequency integer, -- foreign key to common.lu_units but front end will allow on day/week/month/year
   '   fk_lu_route_administration integer, -- key to common.lu_route_administration
   '   cumulative_amount integer, -- the cumulative amount of the drug meant more for  nicotine eg 25=25 pack years
   '   never_used_drug boolean DEFAULT false, -- this apparently useless column is because we have to record if say smoker is non-smoker or non- drinker, just have empty start_age end_age is not good enough
   '   notes text, -- any qualifying information about the drug eg, 'used intermittently 20-30, stopped in 30's, started again in 40's
   '   deleted boolean DEFAULT false,
   '   fk_progressnote integer NOT NULL, -- of not 0=was imported then links to the progress note for this drug
   '   confidential boolean DEFAULT false,
   '   CONSTRAINT recreational_drugs_pkey PRIMARY KEY (pk),
   '   CONSTRAINT data_recreational_drugs_fk_consult FOREIGN KEY (fk_consult)
   '       REFERENCES clin_consult.consult (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT data_recreational_drugs_fk_lu_recreational_drug FOREIGN KEY (fk_lu_recreational_drug)
   '       REFERENCES common.lu_recreational_drugs (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION
   ' )
   ' WITH (
   '   OIDS=FALSE
   ' );
   ' 
   '--------------------------------------------------------------------------------------------------------------------------
   
   Dim recreationalDrug As New CRow
  
   recreationalDrug!fk_consult = currentconsult.GetPK()
   recreationalDrug!fk_lu_recreational_drug = 1 'nicotine
   recreationalDrug!never_used_drug = True
   recreationalDrug!confidential = False 
   recreationalDrug!fk_progressnote = modConsultDBI.ProgressNote_Save(currentconsult, "<B> Nicotine details added:</B> never smoked.", const.cSection_RecreationalDrugs, Null, "Recreational Drugs")
   recreationalDrug.Save("clin_history.recreational_drugs", "fk_recreationaldrug")
   modDBConnect.CommitTrans()
   FClinicalToolbar.Smoking_Nofication_Update(const.cSmokerNever)
   
End

Public Function Recreational_Drugs_Used(fk_patient As Variant) As Collection
   
   Return modDBConnect.exec_query_collection("Select * from clin_history.vwRecreationalDrugsUsed where fk_patient =" & fk_patient & " AND deleted = FALSE")
   
End

Public Function SmokingStatus_String(cons As CConsult) As String
   '--------------------------------------------------------------------
   'Returns text of the smoking status
   'Note that to ensure the patient's e.g smoking history has been taken
   'we have a field that must be postively saved drug_never_used
   'if no smoking info returns 'smoking not known constant'
   '--------------------------------------------------------------------
   
   Dim substance As Collection
   
   For Each substance In cons!recreationaldrugs
      If substance!drug = "nicotine" Then
         If substance!never_used_drug Then 
            Return "NEVER SMOKED"
         Else    
            If IsNull(substance!age_last_used) Then
               Return "CURRENT SMOKER" 
            Else
               Return "EX-SMOKER CEASED AGE " & Str(substance!age_last_used)
            End If   
         Endif
         Break
      End If 
   Next
   
End

Public Function OtherDrugsStatus_String(cons As Cconsult) As String
   '-----------------------------------------
   'Returns a list of 'other drugs used'
   'Called by FPregnancy.Habits_Update_Data()
   '-----------------------------------------
   
   Dim substance As Collection
   Dim sString As String
   
   For Each substance In cons!recreationaldrugs
      If substance!drug <> "alcohol" And substance!drug <> "nicotine" Then
         sstring &= substance!drug & " age last used "
         If Not IsNull(substance!age_last_used) Then
            sString &= Str(substance!age_last_used)
         Else
            sstring &= "?"
         Endif
         sstring &= ","
      Endif
   Next
   Return Left(sString, Len(sString) - 1) 
   
End

Public Function AlcoholStatus_String(cons As CConsult) As String
   '--------------------------------------------------------------------
   'Returns text of the smoking status
   'Note that to ensure the patient's e.g smoking history has been taken
   'we have a field that must be postively saved drug_never_used
   'if no smoking info returns 'smoking not known constant'
   '--------------------------------------------------------------------
   
   Dim substance As Collection
   Dim sString As String
   
   For Each substance In cons!recreationaldrugs
      If substance!drug = "alcohol" Then
         If substance!never_used_drug Then 
            Return "NEVER DRANK"
         Else    
            If IsNull(substance!age_last_used) Then
               sString = "CURRENT DRINKER " 
               If Not IsNull(substance!substance_amount) Then
                  sString &= Str(substance!substance_amount) & " gms"
               Else
                  sString &= "?gms"
               End If
               If Not IsNull(substance!fk_lu_substance_frequency) Then  
                  Select Case substance!fk_lu_substance_frequency
                     Case const.Units_day
                        sString &= " per day"
                     Case const.Units_month
                        sString &= " per month"
                     Case const.Units_week
                        sString &= " per week"
                  End Select
               End If   
               Return sString
            Else
               Return "EX-DRINKER CEASED AGE " & Str(substance!age_last_used)
            End If   
         Endif
         Break
      End If 
   Next
   
End
