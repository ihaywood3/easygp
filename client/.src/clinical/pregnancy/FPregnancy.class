' Gambas class file

' Copyright (C) 2008-2015 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' ---------------------------------------------------------------------
' A module to record past and current pregnancies and ante-natal visits
' ---------------------------------------------------------------------
' TODO: finish and activate the ante-natal care sheet
' the tab is currently removed
' ----------------------------------------------------------------------
Private Form_PDF As FPdf
Private Form_HTML_Viewer As FHtmlViewer
Private lmp_fake As Date
Private sNuchalFoldScan As String 'abnormal, normal or unknown
Private sMorphologyScan As String ' ditto
Private currentconsult As CConsult
Private currentpregnancy As Collection
Private bExit As Boolean
Private bKeyValid As Boolean
Private fk_pregnancy As Variant
Private fk_progressnote As Variant
Private progress_notes_pregnancy As String 'for auditing reasons to compare changes.
Private cvwPregnancies_key As Integer
'Private form_AnteNatal_CareSheet_Wizard As FAnteNatalCareSheetWizard
Private pregnancies As Collection
Private onset_labour_types As Collection
Private delivery_types As Collection
Private sex_types As Collection
Private Const ctabPregnancies As Integer = 0
Private Const cTabAnteNatalVisits As Integer = 1
Private Const cTabAnteNatalSheetWizard As Integer = 2
Private blood_groups As Collection 
Private placenta_positions As Collection 
Private contraception_methods As Collection
Private form_visits As FPregnancyVisits

Static Private form_pregnancy As FPregnancy

Static Public Sub Result_Show(sHtml As String)
   
   form_pregnancy.Result_SHow_HTML(shtml)
   
End

Static Public Function IsInEditMode() As Boolean
   
   Return form_pregnancy.HBox_EditArea.Enabled
   
End

Public Sub Result_SHow_HTML(sHTML As String)
   
   Vbox_EditArea.Visible = False
   With Form_HTML_Viewer
      .WebView1.HTML = sHtml 
      .Visible = True   
   End With
   
End

Public Sub _new()
   
   With Form_PDF = New FPdf(VBox_LeftSide)
      .Visible = False
   End With
   With Form_HTML_Viewer = New FHtmlViewer(VBox_LeftSide)
      .Visible = False   
   End With
   
End

Public Sub init(cons As Cconsult)
   
   lblMeasure.text = "    Date for Anti D (If Rh -ve)    "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea, lblMeasure)
   lblMeasure.text = " 34-37W Rpt Antibody Screen "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea_Right, lblmeasure)
   txtDateNuchalFold.width = rbRHPositive.Width
   txtDateMorphologyScan.Width = rbRHPositive.Width
   txtDateGTT.Width = rbRHPositive.width  
   txtDate28WAntiDScreen.Width = rbRHPositive.Width
   rbAntiD28WeeksGivenYes.Width = rbRHPositive.Width
   rbAntiD34WeeksGivenYes.Width = rbRHPositive.Width
   rbRepeatAntibodyScreen34_37WPositive.Width = rbRHPositive.Width
   rbAntiD34WeeksGivenNo.Width = rbRHNegative.Width
   rbAntiD28WeeksGivenNo.width = rbRHNegative.Width
   rb28WeekRHScreenPositive.Width = rbRHNegative.Width
   rbPreNatalDiagnosisOtherCVS.width = rbRHPositive.Width
   onset_labour_types = modUtilGUI.LoadCombo(cmbOnsetLabour, modUtil.Copy_Collection_Keyed_Sequentially(modPregnancyDBI.Onset_Labour_Types_Get()), "type")
   delivery_types = modUtilGUI.LoadCombo(cmbDeliveryTypes, modUtil.Copy_Collection_Keyed_Sequentially(modPregnancyDBI.Delivery_Types_get()), "type")
   blood_groups = modUtilGUI.LoadCombo(cmbBloodGroups, modUtil.Copy_Collection_Keyed_Sequentially(modCommonDBI.Blood_Groups_Get()), "group_display")
   blood_groups.Add(["pk": 4, "group_display": "Unknown"], blood_groups.count)
   placenta_positions = modUtilGUI.LoadCombo(cmbPlacentaPosition, modUtil.Copy_Collection_Keyed_Sequentially(modPregnancyDBI.Placental_Positions_Get()), "position")
   placenta_positions.Add("Unknown", placenta_positions.count)
   contraception_methods = modUtilGUI.LoadCombo(cmbContraceptionMethods, modUtil.Copy_Collection_Keyed_Sequentially(modPregnancyDBI.Contraception_methods_Get()), "method")
   cmbOnsetLabour.width = chkMentalHealth.Width
   sex_types = modUtilGUI.LoadCombo(cmbBabySex, Sex_Types_Fill_Collection(), "type")
   cmbContraceptionMethods.width = cmbDeliveryTypes.Width
   '--------------------------
   'Load pages onto the wizard
   '--------------------------
   TabStripPregnancy.index = 0                'the ante-natal sheet
   currentconsult = cons
   Try Settings_Load()
   form_pregnancy = Me
   
   With cvwPregnancies
      .Columns.count = 9
      .Columns[0].text = "Age"
      .Columns[0].Width = 100
      .Columns[1].text = "Mth/year"
      .Columns[1].Width = 115
      .Columns[2].text = "Gestation"
      .Columns[2].width = 100
      .Columns[3].text = "Onset of Labour"
      .Columns[3].width = 150
      .Columns[4].text = "labour (hrs) "
      .Columns[4].width = 100
      .Columns[5].text = "Type of Delivery"
      .Columns[5].width = 130
      .Columns[6].text = " Sex "
      .Columns[6].width = 100
      .Columns[7].text = " Weight "
      .Columns[7].width = 100
      .Columns[8].text = "Notes "
   End With
   lblReasonEDCRevised.width = lblComment.Width
   lblGTTResult.width = lblComment.Width
   Reload()
   
End

Private Function Calc_Nuchal_fold_date(last_period As Date) As String
   'Last_period can be real or calculated back from gestation date
   
   Return Format(DateAdd(last_period, gb.week, 12), "dd/mm/yyyy")
   
End

Private Function Calc_Anti_D_28W_Date() As String
   'Calculate anti-D date due  from real or fake period
   
   If Trim(txtDateLMP.text) Then Return Format(DateAdd(txtDATeLMP.text, gb.week, 28), "dd/mm/yyyy")
   If IsDate(txtEDCRevisedDate.text) Then         'revised EDC, re-calculate the gestation
      Return Format(DateAdd(DateAdd(Val(txtEDCRevisedDate.text), gb.day, -280), gb.week, 28), "dd/mm/yyyy")     
   End If
   If IsDate(txtEDC.text) Then         'revised EDC, re-calculate the gestation
      Return Format(DateAdd(DateAdd(Val(txtEDC.text), gb.day, -280), gb.week, 28), "dd/mm/yyyy")     
   End If 
   
End

Private Function Calc_Morphology_Scan_Date(last_period As Date) As String  
   'Last_period can be real or calculated back from gestation date 
   
   Return Format(DateAdd(last_period, gb.week, 18), "dd/mm/yyyy")
   
End

Private Function Calc_GTT_Or_Anti_D(last_period As Date) As String
   'Last_period can be real or calculated back from gestation date 
   
   Return Format(DateAdd(last_period, gb.week, 28), "dd/mm/yyyy")
   
End

Public Sub Settings_Save()
   
   '  Try form_demographics.Settings_Save()
   '  Try form_familyandsocial.Settings_Save
   '  Try form_pasthistory.Settings_Save
   '  Try frmInvestigations.Settings_Save
   ' ' Try form_visits.Settings_Save
   Settings["FPregnancy/VSplit_Main.Layout"] = VSplit_Main.Layout
   Settings["FPregnancy/HSplit_EditArea.Layout"] = HSplit_EditArea.Layout
   form_visits.Settings_Save()
   
End

Private Sub Settings_Load()
   
   VSplit_Main.Layout = Settings["FPregnancy/VSplit_Main.Layout", modUtilGUI.VSplit([450, 169])]
   HSplit_EditArea.Layout = Settings["FPregnancy/HSplit_EditArea.Layout", modUtilGUI.HSplit([1, 1])]
   cvwPregnancies.font = Font[Settings["FPregnancy/cvwPregnancies.font", "DejaVu Sans,9"]]
   
End

Public Function Sex_Types_Fill_Collection() As Collection
   '---------------------------------------------------------------
   'these keys will correspond to the backend contacts.lu_sex table
   '---------------------------------------------------------------
   
   Dim sex_type As Collection
   Dim types As Collection
   
   types = New Collection
   sex_type = New Collection
   sex_type!pk = 0
   sex_type!type = "Male"
   types.Add(sex_type, 1)
   sex_type = New Collection
   sex_type!pk = 1
   sex_type!type = "Female"
   types.Add(sex_type, 2)
   sex_type = New Collection
   sex_type!pk = 2
   sex_type!type = "Unknown"
   types.Add(sex_type, 3)
   Return types
   
End

Public Sub Save()
   
   Select Case TabStripPregnancy.Index
      Case ctabPregnancies
         Pregnancy_Save()
      Case cTabAnteNatalVisits
         form_visits.Save()
      Case cTabAnteNatalSheetWizard
         ' form_AnteNatal_CareSheet_Wizard.Save()
   End Select
   
End

Public Function ProgressNotes_Pregnancy_Create() As String
   '-------------------------------------------------------------------------------------
   'F!k what a pain. Do the progress notes, don't want data table with lots of empty rows
   'The visual construction of this is a table
   'Outer table has rows one column
   '- headings eg Dates & Risk Factors
   '- the row under this would be a table in itself with all those params in 2 cols
   '- headings eg Basic Bloods
   '- the row under this would be a table in itself with all those params in 2 cols
   '-------------------------------------------------------------------------------------
   
   Dim Pn As String 
   Dim table_row As String 
   Dim table_row_outer As String
   Dim sString As String
   Dim subtable As String
   Dim bOldPregnancy As Boolean   
   Dim row_contents As String
   Dim bHaveBasicBloods As Boolean 
   
   table_row_outer = ""
   "<TR VALIGN=TOP>"
   "<TD WIDTH=100%>%boldon%%row_contents%%boldoff%</TD>"
   "</TR>"
   
   Table_row = ""
   "<TR VALIGN=TOP>"
   "<TD WIDTH=25%>%col1%</TD>"
   "<TD WIDTH=75%>%col2%</TD>"
   "</TR>"
   pn = "<P ALIGN=CENTER><B>Pregnancy Details&nbsp;%babyname%</B><P>"                                 'main heading  
   If Trim(txtBabyName.Text) <> "" Then                                                'baby born
      sstring = " (Baby " & Trim(txtBabyName.Text)                                     'insert name into main heading   
      If txtDateDelivery.text <> "" Then
         sSTring &= " born " & txtDateDelivery.text 
      Endif
      sstring &= ")"
      bOldPregnancy = True
   End If   
   pn = Replace(pn, "%babyname%", sString)                                             'if real live baby put in name and birthday as the heading
   pn &= "<TABLE WIDTH=100% BORDER=1 CELLPADDING=2 CELLSPACING=0><COL WIDTH=100%>"     'create the outer table
   pn &= table_row_outer                                                               'add blank row to table
   pn = Replace(pn, "%row_contents%", "Dates & Risk Factors")     
   pn = Replace(pn, "%boldon%", "<B>")
   pn = Replace(pn, "%boldoff%", "</B>")                     'put in a heading
   pn &= table_row_outer                                                               'add another row for heading parameters row_contents will be a table 
   row_contents = "<TABLE WIDTH=100% BORDER=0 CELLPADDING=2 CELLSPACING=0>"
   "<COL WIDTH=24%>"
   "<COL WIDTH=75%>"
   
   If Trim(txtDateLMP.text) <> "" Then    
      row_contents &= Table_row
      row_contents = Replace(row_contents, "%col1%", "LMP")
      row_contents = Replace(row_contents, "%col2%", txtDateLMP.text)
   End If   
   If Trim(txtEDC.text) <> "" Then
      row_contents &= Table_row
      row_contents = Replace(row_contents, "%col1%", "EDC")
      row_contents = Replace(row_contents, "%col2%", txtEDC.text)
   End If   
   If Trim(txtEDCRevisedDate.text) <> "" Then  
      row_contents &= Table_row
      row_contents = Replace(row_contents, "%col1%", "EDC Revised")
      If Trim(txtEDCRevisedReason.text) <> "" Then 
         row_contents = Replace(row_contents, "%col2%", txtEDCRevisedDate.text & " reason:" & Trim(txtEDCRevisedReason.Text))
      Else
         row_contents = Replace(pn, "%col2%", txtEDCRevisedDate.text)
      Endif
   Endif
   If Trim(txtGestation.text) <> "" Then   
      row_contents &= Table_row
      row_contents = Replace(row_contents, "%col1%", "Gestation")
      row_contents = Replace(row_contents, "%col2%", Trim(txtGestation.text))
   End If   
   
   'Now construct a table within the main table for the risk factors
   If chkSmoking.value = True Or Trim(txtRiskFactorsSmoking.text) <> "" Then
      subtable &= Table_row
      subtable = Replace(subtable, "%col1%", "Smoking")
      subtable = Replace(subtable, "%col2%", Trim(txtRiskFactorsSmoking.text))
   End If   
   If chkAlcohol.value = True Or Trim(txtRiskFactorsAlcohol.text) Then 
      subtable &= Table_row
      subtable = Replace(subtable, "%col1%", "Alcohol")
      subtable = Replace(subtable, "%col2%", Trim(txtRiskFactorsAlcohol.text))
   Endif
   If chkDrugs.Value = True Or Trim(txtRiskFactorsDrugs.text) <> "" Then 
      subtable &= Table_row
      subtable = Replace(subtable, "%col1%", "Drugs")
      subtable = Replace(subtable, "%col2%", Trim(txtRiskFactorsDrugs.text))
   Endif
   If chkSocial.value = True Or Trim(txtRiskFactorsSocial.text) <> "" Then
      subtable &= Table_row
      subtable = Replace(subtable, "%col1%", "Social")
      subtable = Replace(subtable, "%col2%", Trim(txtRiskFactorsSocial.text))
   Endif
   If chkMentalHealth.value = True Or Trim(txtRiskFactorsMentalHealth.text) <> "" Then 
      subtable &= Table_row
      subtable = Replace(subtable, "%col1%", "Mental Health")
      subtable = Replace(subtable, "%col2%", Trim(txtRiskFactorsMentalHealth.text))
   Endif
   If Trim(taRiskFactorsPastHistory.text) <> "" Then
      subtable &= Table_row
      subtable = Replace(subtable, "%col1%", "Past History")
      subtable = Replace(subtable, "%col2%", Trim(taRiskFactorsPastHistory.text))
   Endif
   If Trim(taRiskFActorsObstetric.text) <> "" Then
      subtable &= Table_row
      subtable = Replace(subtable, "%col1%", "Obstetric")
      subtable = Replace(subtable, "%col2%", Trim(taRiskFActorsObstetric.text))
   Endif
   If subtable <> "" Then  'we have some risk factors 
      row_contents &= Table_row
      row_contents = Replace(row_contents, "%col1%", "Risk Factors")
      subtable = "<TABLE WIDTH=100% BORDER=0 CELLPADDING=0 CELLSPACING=0>"
      "<COL WIDTH=20%>"
      "<COL WIDTH=80%>" & subtable & "</TABLE>"
      row_contents = Replace(row_contents, "%col2%", subtable)
   End If 
   row_contents &= "</TABLE>"                  'complete an inner table
   pn = Replace(pn, "%row_contents%", row_contents)
   '  pn &= "</TABLE>" ' complete outer table"
   pn = Replace(pn, "%boldon%", "")
   pn = Replace(pn, "%boldoff%", "")
   'worked down to here   
   ' Return pn  
   ' If Trim(txtDateDelivery.text) <> "" And bOldPregnancy = False Then  
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Date of Delivery")
   '    pn = Replace(pn, "%col2%", Trim(txtDateDelivery.text))
   ' End If   
   ' If Trim(txtAgeAtDelivery.text) <> "" Then
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Age at Delivery")
   '    pn = Replace(pn, "%col2%", Trim(txtAgeAtDelivery.text) & " years")
   ' End If   
   ' If Trim(txtGestationAtDelivery.text) <> "" Then 
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Gestation at Delivery")
   '    pn = Replace(pn, "%col2%", Trim(txtGestationAtDelivery.text) & " weeks")
   ' End If   
   ' If cmbOnsetLabour.text <> "n/a" Then   
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Onset of Labour")
   '    pn = Replace(pn, "%col2%", cmbOnsetLabour.text)
   ' End If   
   ' If Trim(txtHoursLabour.text) <> "" Then 
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Duration of Labour")
   '    pn = Replace(pn, "%col2%", Trim(txtHoursLabour.text) & " hours")
   ' End If
   ' If cmbDeliveryTypes.text <> "n/a" Then    
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Type of Delivery")
   '    pn = Replace(pn, "%col2%", cmbDeliveryTypes.text)
   ' End If   
   ' If Trim(txtcomplications.text) <> "" Then 
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Complications")
   '    pn = Replace(pn, "%col2%", Trim(txtcomplications.Text))
   ' End If
   ' If Trim(txtBabyName.text) <> "" Then   
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Baby Name")
   '    pn = Replace(pn, "%col2%", Trim(txtBabyName.text) & " - sex: " & cmbBabySex.Text)
   ' End If
   ' If Trim(txtBirthweight.text) <> "" Then   
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Birth Weight")
   '    pn = Replace(pn, "%col2%", Trim(txtBirthweight.Text) & "Kg")  
   ' End If   
   ' If Trim(txtPuerperium.text) <> "" Then    
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Problems Puerperium")
   '    pn = Replace(pn, "%col2%", Trim(txtPuerperium.Text))  
   ' End If   
   ' If rbBreastFedYes.value = True Or rbBreastFedNo.Value = True Then
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Breast Feeding")
   '    If rbBreastFedYes.value = True Then    
   '       sString = "yes"
   '       If Trim(txtBreastFedDuration.text) <> "" Then
   '          sstring &= " - for " & Trim(txtBreastFedDuration.text) & " months"
   '       Endif
   '    Else
   '       sString = "no" 
   '    Endif
   '    pn = Replace(pn, "%col2%", sString)  
   ' End If   
   ' If Trim(txtcontraception.text) <> "" Then    
   '    pn &= Table_row
   '    pn = Replace(pn, "%col1%", "Contraception")
   '    pn = Replace(pn, "%col2%", Trim(txtcontraception.Text))  
   ' End If   
   ' '----------------------------------------------------------------------------------
   'If not entering a completed prognancy then put in whatever tests we currently have
   '----------------------------------------------------------------------------------
   '  pn &= "</TABLE>"
   ' Return pn
   If Not bOldPregnancy Then
      ' pn &= table_row_outer                                                               'add blank row to table
      ' pn = Replace(pn, "%row_contents%", "Basic Blood Tests")       'put in a heading
      ' pn = Replace(pn, "%boldon%", "<B>")
      ' pn = Replace(pn, "%boldoff%", "</B>")  
      ' pn &= table_row_outer                                                               'add another row for heading parameters row_contents will be a table 
      ' row_contents = "<TABLE WIDTH=100% BORDER=0 CELLPADDING=2 CELLSPACING=0>"
      ' "<COL WIDTH=24%>"
      ' "<COL WIDTH=75%>"   
      '-----------------------------------------------------------------------------------
      'Before constructing the table, check we have data to put in it > bHaveBasicBloods is true
      '-----------------------------------------------------------------------------------
      row_contents = ""
      If cmbBloodGroups.text <> "Unknown" And cmbBloodGroups.text <> "" Then    
         bHaveBasicBloods = True 
         row_contents &= Table_row
         sstring = cmbBloodGroups.text
         If rbRHPositive.value = True Then 
            sString &= " positive"
         Else If rbRHNegative.value = True Then
            sString &= " negative"
         Else
            sstring &= " +/- not recorded"
         Endif
         row_contents = Replace(row_contents, "%col1%", "Blood Group")
         If rbAntibodyPositive.value = True Or rbAntibodyNegative.value = True
            sString &= " Antibody screen " 
            If rbAntibodyPositive.value = True Then
               sString &= "positive"
            Else If rbAntibodyNegative.Value = True Then
               sString &= "negative"
            Endif
         End If   
         row_contents = Replace(row_contents, "%col2%", sString)
      End If  
      If Trim(txtHaemoglobin.text) <> "" Then
         bHaveBasicBloods = True 
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "Hb at booking")
         row_contents = Replace(row_contents, "%col2%", txtHaemoglobin.Text)
      Endif
      If rbSyphilusPositive.value = True Or rbSyphilusNegative.Value = True Then 'Or rbSyphilusUnknown.value = True
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "Syphilus")
         If rbSyphilusPositive.value = True Then sstring = "Positive"
         If rbSyphilusNegative.value = True Then sstring = "Negative"
         If rbSyphilusUnknown.value = True Then sSTring = "Unknown"
         row_contents = Replace(row_contents, "%col2%", sSTring)
      Endif
      If rbRubellaImmune.value = True Or rbRubellaNonImmune.Value = True Then ' Or rbRubellaUnknown.value = True 
         bHaveBasicBloods = True 
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "Rubella")
         If rbRubellaImmune.value = True Then sstring = "Immune "
         If rbRubellaNonImmune.value = True Then sstring = "Non Immune"
         If Trim(txtRubellaTitre.text) <> "" Then  
            sstring &= " (Titre: " & Trim(txtRubellaTitre.text) & ")"
         End If   
         row_contents = Replace(row_contents, "%col2%", sSTring)
      Endif
      If rbHepatitisBPositive.value = True Or rbHepatitisBNegative.Value = True Then ' Or rbHepatitisBUnknown.value = True
         bHaveBasicBloods = True 
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "Hepatitis B")
         If rbHepatitisBPositive.value = True Then sstring = "Positive"
         If rbHepatitisBNegative.value = True Then sstring = "Negative"
         If rbHepatitisBUnknown.value = True Then sSTring = "Unknown"
         row_contents = Replace(row_contents, "%col2%", sSTring)
      Endif 
      If rbHepatitisCPositive.value = True Or rbHepatitisCNegative.Value = True Then ' Or rbHepatitisCUnknown.value = True
         bHaveBasicBloods = True 
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "Hepatitis C")
         If rbHepatitisCPositive.value = True Then sstring = "Positive"
         If rbHepatitisCNegative.value = True Then sstring = "Negative"
         If rbHepatitisCUnknown.value = True Then sSTring = "Unknown"
         row_contents = Replace(row_contents, "%col2%", sSTring)
      Endif
      If rbHIVPositive.value = True Or rbHIVNegative.Value = True Then 'Or rbHIVUnknown.value = True 
         bHaveBasicBloods = True 
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "HIV")
         If rbHIVPositive.value = True Then sstring = "Positive"
         If rbHIVNegative.value = True Then sstring = "Negative"
         If rbHIVUnknown.value = True Then sSTring = "Unknown"
         row_contents = Replace(row_contents, "%col2%", sSTring)
      Endif
      If rbVaricellaPositive.value = True Or rbVaricellaNegative.Value = True Then ' Or rbVaricellaUnknown.value = True
         bHaveBasicBloods = True 
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "Varicella")
         If rbVaricellaPositive.value = True Then sstring = "Immune"
         If rbVaricellaNegative.value = True Then sstring = "Non Immune"
         If rbVaricellaUnknown.value = True Then sSTring = "Unknown"
         row_contents = Replace(row_contents, "%col2%", sSTring)
      Endif
      If Trim(txtMsu.text) <> "" Then
         bHaveBasicBloods = True 
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "MSU") 
         row_contents = Replace(row_contents, "%col2%", Trim(txtMsu.text))
      Endif
      If bHaveBasicBloods Then           'have some data?add another row for the heading and results
         pn &= table_row_outer                                                               'add blank row to table
         pn = Replace(pn, "%row_contents%", "Basic Blood Tests")                             'put in a heading
         pn = Replace(pn, "%boldon%", "<B>")
         pn = Replace(pn, "%boldoff%", "</B>")  
         pn &= table_row_outer       
         'add another row for heading parameters row_contents will be a table 
         row_contents = "<TABLE WIDTH=100% BORDER=0 CELLPADDING=2 CELLSPACING=0><COL WIDTH=24%><COL WIDTH=75%>" & row_contents
         row_contents &= "</TABLE>"                                                          'complete an inner table
         pn = Replace(pn, "%row_contents%", row_contents)
         pn = Replace(pn, "%boldon%", "")
         pn = Replace(pn, "%boldoff%", "")
      Endif
      
      '-------------------------------------------------------
      'if women is RH-ve then new heading and appropriate rows
      '-------------------------------------------------------
      If rbRHNegative.Value = True Then
         pn &= table_row_outer                                                               'add blank row to table
         pn = Replace(pn, "%row_contents%", "For RH -ve Women")     
         pn = Replace(pn, "%boldon%", "<B>")
         pn = Replace(pn, "%boldoff%", "</B>")                     'put in a heading
         pn &= table_row_outer                                                               'add another row for heading parameters row_contents will be a table 
         row_contents = "<TABLE WIDTH=100% BORDER=0 CELLPADDING=2 CELLSPACING=0>"
         "<COL WIDTH=24%>"
         "<COL WIDTH=75%>"
         '  If Trim(txtDate28WAntiDScreen.text) <> "" Then
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "Date 28Wk RH -ve Test")
         If rb28WeekRHScreenPositive.value = False And rb28WeekRHScreenNegative.value = False Then   
            row_contents = Replace(row_contents, "%col2%", "Due on " & Trim(txtDate28WAntiDScreen.text))
         Else
            row_contents = Replace(row_contents, "%col2%", Trim(txtDate28WAntiDScreen.text))
         End If
         ' Endif
         row_contents &= "</TABLE>"
         pn = Replace(pn, "%row_contents%", row_contents)     
         pn = Replace(pn, "%boldon%", "")
         pn = Replace(pn, "%boldoff%", "")  
         ' If rb28WeekRHScreenPositive.value = True Or rb28WeekRHScreenNegative.Value = True Then 'Or rb28WeekRHScreenUnknown.value = True
         '    pn &= Table_row
         '    pn = Replace(pn, "%col1%", "28wk RH Screen")
         '    If rb28WeekRHScreenPositive.value = True Then sstring = "Positive"
         '    If rb28WeekRHScreenNegative.value = True Then sstring = "Negative"
         '    '  If rb28WeekRHScreenUnknown.value = True Then sSTring = "Unknown"
         '    pn = Replace(pn, "%col2%", sSTring)
         ' Endif
         ' 
         ' If rbAntiD28WeeksGivenYes.value = True Or rbAntiD28WeeksGivenNo.Value = True Then ' Or rbAntiD28WeeksGivenUnknown.value = True
         '    pn &= Table_row
         '    pn = Replace(pn, "%col1%", "Anti D 28wk Injection")
         '    If rbAntiD28WeeksGivenYes.value = True Then 
         '       sstring = "Yes"
         '       If Trim(txtAntiD28weeksDate.text) <> "" Then
         '          sstring &= " on " & txtAntiD28weeksDate.Text
         '       Endif
         '    End If   
         '    If rbAntiD28WeeksGivenNo.value = True Then sstring = "No"
         '    If rbAntiD28WeeksGivenUnknown.value = True Then sSTring = "Unknown"
         '    pn = Replace(pn, "%col2%", sSTring)
         ' Endif
         ' If rbAntiD34WeeksGivenYes.value = True Or rbAntiD34WeeksGivenNo.Value = True Then 'Or rbAntiD34WeeksGivenUnknown.value = True
         '    pn &= Table_row
         '    pn = Replace(pn, "%col1%", "Anti D 34wk Injection")
         '    If rbAntiD34WeeksGivenYes.value = True Then
         '       sstring = "Yes"
         '       txtAntiD34WeeksDate
         '       If Trim(txtAntiD34WeeksDate.text) <> "" Then
         '          sstring &= " on " & txtAntiD34WeeksDate.Text
         '       Endif
         '    End If   
         '    If rbAntiD34WeeksGivenNo.value = True Then sstring = "No"
         '    If rbAntiD34WeeksGivenUnknown.value = True Then sSTring = "Unknown"
         '    pn = Replace(pn, "%col2%", sSTring)
         ' Endif
         ' 
      End If   
      
      '-----------------------------------------
      'Now other tests, investigations and scans
      '-----------------------------------------
      pn &= table_row_outer                                                               'add blank row to table
      pn = Replace(pn, "%row_contents%", "Other Tests, Investigations & Scans")     
      pn = Replace(pn, "%boldon%", "<B>")
      pn = Replace(pn, "%boldoff%", "</B>")                     'put in a heading
      pn &= table_row_outer                                                               'add another row for heading parameters row_contents will be a table 
      row_contents = "<TABLE WIDTH=100% BORDER=0 CELLPADDING=2 CELLSPACING=0>"
      "<COL WIDTH=24%>"
      "<COL WIDTH=75%>"
      row_contents &= Table_row
      If Trim(txtDateGTT.text) <> "" Then
         row_contents = Replace(row_contents, "%col1%", "Date 75gm GTT")
         sstring = Trim(txtDateGTT.text)
         If Trim(txtGTTResult.text) <> "" Then
            sString = Trim(txtDateGTT.text) & " = result was " & Trim(txtGTTResult.text)
         Else
            sString = "Due on " & Trim(txtDateGTT.text)
         Endif
         row_contents = Replace(row_contents, "%col2%", sSTring)
      Endif
      If rbGroupBStrepPositive.value = True Or rbGroupBStrepNegative.Value = True Then 'Or rbGroupBStrepUnknown.value = True 
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "Group B Strep Swabs")
         If rbGroupBStrepPositive.value = True Then sstring = "Positive"
         If rbGroupBStrepNegative.value = True Then sstring = "Negative"
         If rbGroupBStrepUnknown.value = True Then sSTring = "Unknown"
         row_contents = Replace(row_contents, "%col2%", sSTring)
      Endif
      If rbRepeatAntibodyScreen34_37WPositive.value = True Or rbRepeatAntibodyScreen34_37WNegative.Value = True Then ' Or rbRepeatAntibodyScreen34_37WUnknown.value = True
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "34 -37W Rpt Ab Screen")
         If rbRepeatAntibodyScreen34_37WPositive.value = True Then sstring = "Positive"
         If rbRepeatAntibodyScreen34_37WNegative.value = True Then sstring = "Negative"
         If rbRepeatAntibodyScreen34_37WUnknown.value = True Then sSTring = "Unknown"
         row_contents = Replace(row_contents, "%col2%", sSTring)
      Endif
      '  If Trim(txtDateNuchalFold.text) <> "" Then
      '  
      row_contents &= Table_row
      row_contents = Replace(row_contents, "%col1%", "Nuchal Fold Scan")
      If rbNuchalFoldReset.value = True Or rbNuchalFoldUnknown.value = True Then
         sString = "Due on " & Trim(txtDateNuchalFold.text) 'no data yet   
      Else
         sstring = Trim(txtDateNuchalFold.text)
         If rbNuchalFoldAbnormal.value = True Then sString = " - abnormal"
         If rbNuchalFoldNormal.value = True Then sString = " - normal"
         ' If rbNuchalFoldUnknown.value = True Then sstring = " - unknown"
      End If   
      row_contents = Replace(row_contents, "%col2%", sString)
      ' Endif
      row_contents &= Table_row
      row_contents = Replace(row_contents, "%col1%", "Morphology Scan")
      '  If Trim(txtDateMorphologyScan.text) <> "" Or rbMorphologyScanAbnormal.value = True Or rbMorphologyScanNormal.value = True Then 'Or rbMorphologyScanUnknown.value = True 
      If rbMorphologyScanReset.value = True Or rbMorphologyScanUnknown.value = True Then 'no data yet  
         sSTring = "Due on " & txtDateMorphologyScan.text
      Else
         If rbMorphologyScanAbnormal.value = True Then sString = " - abnormal"
         If rbMorphologyScanNormal.value = True Then sString = " - normal"
         '  If rbMorphologyScanUnknown.value = True Then sstring = " - unknown"
         If Trim(txtDateMorphologyScan.text) <> "" Then
            sstring = "Date: " & Trim(txtDateMorphologyScan.text)
         Endif
         If Trim(txtMorphologyScanFoetalsize.text) <> "" Then
            sString = "Foetal size: " & Trim(txtMorphologyScanFoetalsize.text)
         Endif
         If Trim(txtMorphologyScanFoetalWeeks.text) <> "" Then   
            sString = "Weeks: " & Trim(txtMorphologyScanFoetalWeeks.text)
         Endif
      End If   
      row_contents = Replace(row_contents, "%col2%", sString)
      ' Endif
      If rbPreNatalDiagnosisOtherCVS.value = True Or rbPreNatalDiagnosisOtherAmniocentesis.value = True Then
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "Other Pre-Natal Diagnosis")
         If rbPreNatalDiagnosisOtherCVS.value = True Then   
            sstring = "CVS"
         End If   
         If rbPreNatalDiagnosisOtherAmniocentesis.value = True Then
            sstring &= " " & "Amniocentesis"
         Endif
         row_contents = Replace(row_contents, "%col2%", Trim(sString)) 
      Endif
      If cmbPlacentaPosition.text <> "Unknown" And cmbPlacentaPosition.text <> "" Then
         row_contents &= Table_row
         row_contents = Replace(row_contents, "%col1%", "Placenta")
         row_contents = Replace(row_contents, "%col2%", cmbPlacentaPosition.text) 
      Endif
      pn = Replace(pn, "%row_contents%", row_contents)
      pn &= "</TABLE>"
      
   End If   
   pn = Replace(pn, "%boldon%", "")
   pn = Replace(pn, "%boldoff%", "")
   pn = Replace(pn, "%col2%", "") 'replace any left over
   pn &= "</TABLE>" 
   Print pn
   Return pn   
   
End


Public Sub Pregnancy_Save()
   '--------------------------------------------------------------------------------
   ' Saves the details of the pregnancy and any child forms (not done)
   ''Note: as we may know nothing about the pregnancy bar that the women is pregnant
   ' this table can be saved with no data by fk_consult
   ' x = I've checked this field is saved
   ' d = I've checked this field is displayed pr set
   ' -------------------------------------------------------------------------------
   '   Create TABLE clin_pregnancy.pregnancies
   ' (
   ' xd  pk serial Not Null,
   ' x  fk_consult integer Not Null,
   ' xd lmp text, - - the Last period Date If known, can be Free text Or Null
   ' xd edc Date, - - the estimated Date Of confinement can initially be Null
   ' xd edc_revised Date,
   ' xd edc_revised_reason text,
   ' xd date_gtt Date,
   ' xd  gtt_result text,
   ' xd  notes text, - - general notes On the pregnancy, could include summary Of complications
   ' xd  gestation text, - - the gestation In weeks
   ' xd  nuchal_fold_scan_date Date,
   ' xd  morphology_scan_date Date,
   ' x  last_presentation text,
   ' xd  risk_factor_smoking boolean Default False,
   ' xd  risk_factor_smoking_details text,
   ' xd  risk_factor_alcohol boolean Default False,
   ' xd  risk_factor_alcohol_details text,
   ' dx  risk_factor_drugs boolean Default False,
   ' xd  risk_factor_drugs_details text,
   ' xd  risk_factor_social boolean Default False,
   ' xd  risk_factor_social_details text,
   ' xd  risk_factor_mental_health boolean Default False,
   ' xd  risk_factor_mental_health_details text,
   ' xd  age_at_delivery integer, - - a deliberately vague column For recording past history Of pregnancies...
   ' xd  date_delivery text, - - As We may be recording bare details about past pregnancies where dates are Not known accept Year Or mm / yyyy Or proper Date
   ' xd  gestation_at_delivery integer,
   ' xd  fk_lu_onset_labour integer,
   ' xd  labour_hours numeric,
   ' xd  fk_lu_delivery_type integer,
   ' xd  complications text,
   ' xd  fk_lu_sex integer,
   ' xd  birthweight numeric,
   ' xd  baby_name text,
   ' xd  puerperium text, - - any complications after birth e.g problems With infant feeding, mothers mood, depression etc
   ' xd  morphology_scan_abnormal boolean, - - True If abnormal, False If normal And Null If unknown Or Not done
   ' xd  nuchal_fold_abnormal boolean, - - True If abnormal, False If normal And Null If unknown Or Not done
   ' xd  fk_progressnote integer Not Null,
   ' xd  breast_fed boolean Default null,
   ' xd  breast_fed_duration text,
   ' xd  contraception text, - - the post natal contraceptive method Or advice
   ' xd  anti_d_28w_date Date, - - Date the injection Of anti - d Is Due Or was given
   ' xd  anti_d_28w_given boolean Default False, - - True If given, False If Not given, Null If unknown
   ' xd  anti_d_34w_date date, - - Date the injection Of anti - d Is Due Or was given
   ' xd  anti_d_34w_given boolean Default False, - - True If given, False If Not given, Null If unknown
   ' xd  morphology_scan_foetal_size numeric,
   ' xd  morphology_scan_weeks numeric,
   ' xd  fk_lu_blood_group integer,
   ' xd  fk_lu_rhesus_group integer,
   ' xd  booking_haemoglobin numeric, - - the patients haemoglobin at booking...considered this field To be generic enough...
   ' xd  syphilus boolean, - - True If TPHA Or VDRL positive, False If - ve And Null If unknown
   ' xd rubella boolean, - - True If Immune, False If Not immune And Null If unknown
   ' xd  rubella_titre text, - - this Is A text field As The result could be eg 20(range may be included)
   ' xd  hepatitis_b boolean, - - True If Immune, False If non immune And Null If unknown
   ' xd hepatitis_c boolean, - - True If Immune, False If non immune And Null If unknown
   ' xd  booking_msu text, - - The Mid stream urine results at Time Of booking
   ' xd  group_b_strep_swabs boolean, - - True If postive, False If negative And Null If unknown
   ' xd  repeat_antibody_screen_34_37wk boolean Default False, - - True If postive, False If negative And Null If unknown
   ' xd  hiv boolean, - - True If Postive, False If negative And Null If unknown
   ' xd  varicella boolean, - - True If Immune, False If Non Immune And Null If unknown
   ' x rh_antibody_screen_28w boolean, - - True If Positive, False If Negative And Null If unknown
   ' x fk_lu_placenta_position integer default false
   ' x risk_factors_past_history,
   ' x risk_factors_obstetric,
   ' x reason_caesarian_section
   '-------------------------------------------------------------------------------
   
   Dim Pregnancy As CRow
   Dim ProgressNote As CRow   
   
   If HBox_EditArea.Padding = 0 Then Return
   If Not Pregnancy_Valid() Then Return
   Form_HTML_Viewer.Visible = False 
   Form_PDF.Visible = False   
   Vbox_EditArea.Visible = True  
   Pregnancy = New CRow
   If fk_pregnancy Then
      Pregnancy.put_unchanged(fk_pregnancy, "fk_pregnancy")
   End If
   Pregnancy!fk_consult = currentconsult.GetPK()
   Pregnancy!lmp = Trim(txtDateLMP.text)  'not kept as date could be 'uknown' or  'mid july'
   Pregnancy!edc = Val(txtEDC.text)
   pregnancy!edc_revised = Val(txtEDCRevisedDate.text)
   pregnancy!edc_revised_reason = Trim(txtEDCRevisedReason.text)
   pregnancy!gestation = txtGestation.text
   Pregnancy!notes = Trim(txtNotes.text)
   Pregnancy!nuchal_fold_scan_date = Val(txtDateNuchalFold.text)
   Pregnancy!morphology_scan_date = Val(txtDateMorphologyScan.text)
   Pregnancy!morphology_scan_foetal_size = Val(txtMorphologyScanFoetalsize.text)
   Pregnancy!morphology_scan_weeks = Val(txtMorphologyScanFoetalWeeks.text)
   Select Case sMorphologyScan
      Case "abnormal"
         Pregnancy!morphology_scan_abnormal = True   
      Case "normal"
         Pregnancy!morphology_scan_abnormal = False
      Case "unknown"
         Pregnancy!morphology_scan_abnormal = Null
   End Select
   Select Case sNuchalFoldScan
      Case "abnormal"
         Pregnancy!nuchal_fold_abnormal = True   
      Case "normal"
         Pregnancy!nuchal_fold_abnormal = False
      Case "unknown"
         Pregnancy!nuchal_fold_abnormal = Null
   End Select
   If cmbBloodGroups.text = "Unknown" Or cmbBloodGroups.text = "" Then 
      pregnancy!fk_lu_blood_group = Null
   Else
      pregnancy!fk_lu_blood_group = blood_groups[cmbBloodGroups.index]!pk
   End If   
   If rbRHPositive.value = True Then pregnancy!fk_lu_rhesus_group = 1
   If rbRHNegative.Value = True Then Pregnancy!fk_lu_rhesus_group = 2
   If rbRHUnknown.Value = True Or rbRHReset.value = True Then Pregnancy!fk_lu_rhesus_group = Null
   If rbAntibodyPositive.value = True Then Pregnancy!booking_antibody_screen = True
   If rbAntibodyNegative.value = True Then Pregnancy!booking_antibody_screen = False   
   If rbAntibodyUnknown.value = True Or rbAntibodyReset.Value = True Then pregnancy!booking_antibody_screen = Null
   pregnancy!booking_haemoglobin = Val(txtHaemoglobin.Text)
   pregnancy!booking_msu = txtMsu.Text
   If rbSyphilusPositive.value = True Then pregnancy!syphilus = True
   If rbSyphilusNegative.value = True Then pregnancy!syphilus = False
   If rbSyphilusUnknown.value = True Or rbSyphilusReset.value = True Then pregnancy!syphilus = Null
   If rbRubellaImmune.value = True Then pregnancy!rubella = True
   If rbRubellaNonImmune.value = True Then pregnancy!rubella = False
   If rbRubellaUnknown.value = True Or rbRubellaReset.value = True Then pregnancy!rubella = Null
   Pregnancy!rubella_titre = Val(txtRubellaTitre.text)
   If rbhepatitisBPositive.value = True Then Pregnancy!hepatitis_b = True
   If rbhepatitisBNegative.value = True Then Pregnancy!hepatitis_b = False  
   If rbhepatitisBUnknown.value = True Or rbHepatitisbReset.Value = True Then Pregnancy!hepatitis_b = Null
   If rbHepatitisCPositive.value = True Then Pregnancy!hepatitis_c = True
   If rbHepatitisCNegative.value = True Then Pregnancy!hepatitis_c = False 
   If rbHepatitisCUnknown.value = True Or rbhepatitisCReset.Value = True Then Pregnancy!hepatitis_c = Null
   If rbHIVPositive.value = True Then Pregnancy!hiv = True
   If rbHIVNegative.value = True Then Pregnancy!hiv = False
   If rbHIVUnknown.value = True Or rbHIVReset.Value = True Then Pregnancy!hiv = Null
   If rbVaricellaPositive.value = True Then Pregnancy!varicella = True
   If rbVaricellaNegative.value = True Then Pregnancy!varicella = False  
   If rbVaricellaUnknown.value = True Or rbVaricellaReset.Value = True Then Pregnancy!varicella = Null
   If rbGroupBStrepPositive.value = True Then Pregnancy!group_b_strep_swabs = True
   If rbGroupBStrepNegative.value = True Then Pregnancy!group_b_strep_swabs = False 
   If rbGroupBStrepUnknown.value = True Or rbGroupBStrepReset.Value = True Then Pregnancy!group_b_strep_swabs = Null
   Pregnancy!anti_d_28w_date = Val(txtDate28WAntiDScreen.text)
   If rbAntiD28WeeksGivenYes.value = True Then Pregnancy!anti_d_28w_given = True
   If rbAntiD28WeeksGivenNo.value = True Then Pregnancy!anti_d_28w_given = False
   If rbAntiD28WeeksGivenUnknown.Value = True Or rbAntiD28WeeksGivenReset.Value = True Then Pregnancy!anti_d_28w_given = Null
   Pregnancy!anti_d_34w_date = Val(txtAntiD34WeeksGivenDate.text)
   If rbAntiD34WeeksGivenYes.Value = True Then Pregnancy!anti_d_34w_given = True
   If rbAntiD34WeeksGivenNo.Value = False Then Pregnancy!anti_d_34w_given = False 
   If rbAntiD34WeeksGivenUnknown.Value = True Or rbAntiD34WeeksGivenReset.Value = True Then Pregnancy!anti_d_34w_given = Null
   If rb28WeekRHScreenPositive.value = True Then Pregnancy!rh_antibody_screen_28w = True
   If rb28WeekRHScreenNegative.value = True Then Pregnancy!rh_antibody_screen_28w = False 
   If rb28WeekRHScreenUnknown.value = True Or rb28WeekRHScreenReset.value = True Then Pregnancy!rh_antibody_screen_28w = Null
   If rbRepeatAntibodyScreen34_37WPositive.value = True Then Pregnancy!repeat_antibody_screen_34_37wk = True
   If rbRepeatAntibodyScreen34_37WNegative.value = True Then Pregnancy!repeat_antibody_screen_34_37wk = False
   If rbRepeatAntibodyScreen34_37WUnknown.value = True Or rbRepeatAntibodyScreen34_37WReset.Value = True Then Pregnancy!repeat_antibody_screen_34_37wk = Null
   
   Pregnancy!date_gtt = Val(txtDateGTT.text)
   Pregnancy!gtt_result = Trim(txtGTTResult.text)
   Pregnancy!risk_factor_smoking = CBool(chkSmoking.value)
   Pregnancy!risk_factor_alcohol = CBool(chkAlcohol.value)
   Pregnancy!risk_factor_drugs = CBool(chkDrugs.value)
   Pregnancy!risk_factor_social = CBool(chkSocial.value)
   Pregnancy!risk_factor_mental_health = CBool(chkMentalHealth.value)
   Pregnancy!risk_factor_smoking_details = Trim(txtRiskFactorsSmoking.text)
   Pregnancy!risk_factor_alcohol_details = Trim(txtRiskFactorsAlcohol.text)
   Pregnancy!risk_factor_drugs_details = Trim(txtRiskFactorsDrugs.text)
   Pregnancy!risk_factor_social_details = Trim(txtRiskFactorsSocial.text)
   Pregnancy!risk_factor_mental_health_details = Trim(txtRiskFactorsMentalHealth.text)
   Pregnancy!complications = Trim(taComplications.text)
   If txtDateDelivery.text <> "" Then
      Pregnancy!date_delivery = Trim(txtDateDelivery.text) 'can be eg mm/yyyy kept as text
   Else
      Pregnancy!date_delivery = ""
   Endif
   If txtAgeAtDelivery.text <> "" Then
      Pregnancy!age_at_delivery = Val(txtAgeAtDelivery.text)
   Else
      Pregnancy!age_at_delivery = ""
   Endif
   If Trim(txtGestationAtDelivery.text) <> "" Then
      Pregnancy!gestation_at_delivery = Val(txtGestationAtDelivery.text)
   Else
      Pregnancy!gestation_at_delivery = Null
   End If
   Pregnancy!fk_lu_onset_labour = onset_labour_types[cmbOnsetLabour.Index]!pk
   Pregnancy!fk_lu_delivery_type = delivery_types[cmbDeliveryTypes.index]!pk
   Pregnancy!labour_hours = Trim(txtHoursLabour.text)
   pregnancy!baby_name = Trim(txtBabyName.text)
   If cmbBabySex.index <> -1 Then Pregnancy!fk_lu_sex = sex_types[cmbBabySex.index]!pk
   If Trim(txtBirthweight.text) <> "" Then Pregnancy!birthweight = Val(txtBirthweight.text)
   Pregnancy!puerperium = Trim(txtPuerperium.text)
   If rbBreastFedYes.value = True Then 
      Pregnancy!breast_fed = True
   Else If rbBreastFedNo.Value = True Then
      pregnancy!breast_fed = False  
   Else  
      Pregnancy!breast_fed = Null 'no informationi
   Endif
   pregnancy!breast_fed_duration = Trim(txtBreastFedDuration.text)
   If cmbContraceptionMethods.index <> -1 Then
      pregnancy!fk_lu_contraception_method = contraception_methods[cmbContraceptionMethods.index]!pk
   Else
      pregnancy!fk_lu_contraception_method = Null
   Endif
   pregnancy!contraception_method_notes = Trim(txtcontraceptionNotes.text)
   If cmbPlacentaPosition.index = -1 Or cmbPlacentaPosition.text = "Unknown" Then 
      pregnancy!fk_lu_placenta_position = Null
   Else
      pregnancy!fk_lu_placenta_position = placenta_positions[cmbPlacentaPosition.index]!pk 
   Endif
   pregnancy!risk_factors_past_history = Trim(taRiskFactorsPastHistory.text)
   pregnancy!risk_factors_obstetric = Trim(taRiskFActorsObstetric.text)
   pregnancy!reason_caesarian_section = Trim(txtReasonCaesarianSection.text)
   '------------------------------------------
   ' CREATE TABLE clin_consult.progressnotes
   ' (
   '   pk serial NOT NULL,
   '   fk_consult integer,
   '   notes text,
   '   fk_section integer,
   '   fk_code bigint,
   '   problem text,
   '   fk_problem integer,
   '   fk_audit_action integer DEFAULT 1,
   '   linked_table regclass,
   '   fk_row integer,
   '   fk_audit_reason integer,
   '   deleted boolean DEFAULT false,
   '-----------------------------------
   progressnote = New CRow 
   If fk_progressnote Then  'if have fk_progress note we are editing
      progressnote.put_unchanged(fk_progressnote, "fk_progressnote")
   Endif         
   progressnote!fk_consult = currentconsult.GetPK()
   progressnote!notes = ProgressNotes_Pregnancy_Create()
   progressnote!fk_section = const.cSection_Pregnancy
   ProgressNote!fk_audit_action = const.cAuditAction_Insert 
   ProgressNote.Save("clin_consult.progressnotes", "fk_progressnote")
   Pregnancy!fk_progressnote = ProgressNote!fk_progressnote  ' will point to the most recent progress note
   Pregnancy.Save("clin_pregnancy.pregnancies", "fk_pregnancy")
   modDBConnect.CommitTrans()
   FClinical_Update
   Reload    
   
End

Public Sub FClinical_Update()
   '-----------------------------------------------------------------------
   'Updates any pregnancy related notifications/progress notes in FClinical 
   '-----------------------------------------------------------------------
   
   FClinical.Pregnancy_Notify 
'   FClinical.Refresh_AllPreviousNotes()
   
End

Public Sub Reload()
   '--------------------------------------------------------
   'Load all previous or current pregnancies for the patient
   'if one or more exist, display the most recent
   '--------------------------------------------------------
   
   Dim pregnancy As Collection
   Dim x As Integer
   
   HBox_EditArea.Enabled = False
   EditArea_Clear()
   EditArea_NotifyData_Change(False)
   cvwPregnancies.Clear()
   pregnancies = modUtil.Copy_Collection_Keyed_Sequentially(modPregnancyDBI.Pregnancies_Get(currentconsult!patient!fk_patient))
   For Each pregnancy In pregnancies
      cvwPregnancies.Add(x, 0)
      cvwPregnancies[x][0] = pregnancy!age_at_delivery
      If IsNull(pregnancy!date_delivery) Then
         cvwPregnancies[x][0] = currentconsult!patient!age_numeric
         cvwPregnancies[x][1] = " CURRENT "
      Else
         cvwPregnancies[x][1] = pregnancy!date_delivery 'this field is text not date.
         Try cvwPregnancies[x][0] = DateDiff(currentconsult!patient!birthdate, Val(pregnancy!date_delivery), gb.year) 'date_delivery may not be a valid date
         
      End If   
      If Not IsNull(pregnancy!gestation_at_delivery) Then
         cvwPregnancies[x][2] = pregnancy!gestation_at_delivery & " wks"
      Else
         
         If Not IsNull(pregnancy!edc_revised) Then
            cvwPregnancies[x][2] = Calc_Gestation(calc_fake_lmp(pregnancy!edc_revised))
         End If
         If cvwPregnancies[x][2] = "" And Not IsNull(pregnancy!edc) Then
            cvwPregnancies[x][2] = Calc_Gestation(calc_fake_lmp(pregnancy!edc))
         Endif
         
      End If
      cvwPregnancies[x][3] = pregnancy!onset_labour_type
      If Not IsNull(pregnancy!labour_hours) Then
         cvwPregnancies[x][4] = pregnancy!labour_hours & " hours"
      End If
      cvwPregnancies[x][5] = pregnancy!delivery_type
      cvwPregnancies[x][6] = pregnancy!baby_sex
      If Not IsNull(pregnancy!birthweight) Then
         cvwPregnancies[x][7] = pregnancy!birthweight & "Kg" 
      End If
      cvwPregnancies[x][8] = pregnancy!notes
      Inc x
   Next
   If cvwPregnancies.count Then
      If Not cvwPregnancies.MoveLast() Then
         cvwPregnancies.Item.Selected = True
      Endif
   Endif
   '  lblMeasure.font = cvwPregnancies.Font
   ' modUtilGUI.Columnview_Columns_Set_Size(cvwPregnancies, lblMeasure)
   
End

Public Sub cvwPregnancies_Select()
   
   cvwPregnancies_key = cvwPregnancies.Item.Key
   Pregnancy_Display()
   
End

Public Sub Pregnancy_Display()
   '--------------------------------------------------
   'Display the pregnancy selected from the columnview
   '--------------------------------------------------
   
   EditArea_Clear()
   
   bExit = True                                             'prevent the auto-calculating of all the dates due
   currentPregnancy = pregnancies[cvwPregnancies_key]
   fk_pregnancy = currentPregnancy!fk_pregnancy
   If Format(currentconsult.GetConsultDate(), "dd/mm/yyyy") = Format(currentpregnancy!progress_notes_date, "dd/mm/yyyy") Then  'if editing on same day overwrite notes
      fk_progressnote = currentPregnancy!fk_progressnote
   End If   'else fk_progressnote reset to 0 in editarea_clear()
   If Not IsNull(currentPregnancy!lmp) Then
      Try txtDateLMP.text = Format(currentPregnancy!lmp, "dd/mm/yyyy")
      If Error Then
         txtDateLMP.text = currentPregnancy!lmp
      Endif
   End If
   If Not IsNull(currentPregnancy!edc) Then
      txtEDC.text = Format(currentPregnancy!edc, "dd/mm/yyyy")
   Endif
   Try txtEDCRevisedDate.text = Format(currentPregnancy!edc_revised, "dd/mm/yyyy")
   txtEDCRevisedReason.text = currentpregnancy!edc_revised_reason
   '----------------------------------------------------------------------
   'calculate current gestation in weeks. If have LMP will always have edc
   '----------------------------------------------------------------------
   If Not IsNull(currentPregnancy!edc_revised) Then
      txtGestation.text = Calc_Gestation(calc_fake_lmp(currentPregnancy!edc_revised))
   Endif
   If txtGestation.text = "" And Not IsNull(currentPregnancy!edc) Then
      txtGestation.text = Calc_Gestation(calc_fake_lmp(currentPregnancy!edc))
   Endif
   If Not IsNull(currentPregnancy!nuchal_fold_scan_date) Then
      txtDateNuchalFold.text = Format(currentPregnancy!nuchal_fold_scan_date, "dd/mm/yyyy")
   Endif
   If Not IsNull(currentPregnancy!morphology_scan_date) Then
      txtDateMorphologyScan.text = Format(currentPregnancy!morphology_scan_date, "dd/mm/yyyy")
   Endif
   If Not IsNull(currentPregnancy!date_gtt) Then
      txtDateGTT.text = Format(currentPregnancy!date_gtt, "dd/mm/yyyy")
   Endif
   txtGTTResult.text = currentPregnancy!gtt_result
   bexit = False  
   If currentPregnancy!nuchal_fold_abnormal = True Then
      rbNuchalFoldAbnormal.value = True   
   Else If currentPregnancy!nuchal_fold_abnormal = False Then
      rbNuchalFoldNormal.value = True
   Else 'must be null
      rbNuchalFoldUnknown.value = True  
   Endif
   If currentPregnancy!morphology_scan_abnormal = True Then
      rbMorphologyScanAbNormal.value = True
   Else If currentPregnancy!morphology_scan_abnormal = False Then
      rbMorphologyScanNormal.value = True
   Else 'must be null
      rbMorphologyScanUnknown.value = True    
   Endif
   txtMorphologyScanFoetalsize.text = currentPregnancy!morphology_scan_foetal_size
   txtMorphologyScanFoetalWeeks.text = currentpregnancy!morphology_scan_weeks
   bexit = True   
   chkSmoking.value = currentPregnancy!risk_factor_smoking
   chkDrugs.value = currentPregnancy!risk_factor_drugs
   chkAlcohol.value = currentPregnancy!risk_factor_alcohol
   chkSocial.Value = currentPregnancy!risk_factor_social
   chkMentalHealth.value = currentPregnancy!risk_factor_mental_health
   txtRiskFactorsAlcohol.text = currentPregnancy!risk_factor_alcohol_details
   txtRiskFactorsDrugs.text = currentPregnancy!risk_factor_drugs_details
   txtRiskFactorsSocial.text = currentPregnancy!risk_factor_social_details
   txtRiskFactorsSmoking.text = currentPregnancy!risk_factor_smoking_details
   txtRiskFactorsMentalHealth.text = currentPregnancy!risk_factor_mental_health_details
   taRiskFactorsPastHistory.text = currentPregnancy!risk_factors_past_history
   taRiskFActorsObstetric.text = currentpregnancy!risk_factors_obstetric
   txtReasonCaesarianSection.text = currentpregnancy!reason_caesarian_section
   txtNotes.text = currentPregnancy!notes
   txtDateDelivery.text = currentPregnancy!date_delivery
   txtAgeAtDelivery.text = currentPregnancy!age_at_delivery
   txtGestationAtDelivery.text = currentPregnancy!gestation_at_delivery
   txtHoursLabour.text = currentPregnancy!labour_hours
   Try cmbOnsetLabour.index = cmbOnsetLabour.Find(currentPregnancy!onset_labour_type)
   Try cmbDeliveryTypes.index = cmbDeliveryTypes.Find(currentPregnancy!delivery_type)
   Try cmbBabySex.Index = cmbBabySex.Find(currentPregnancy!baby_sex)
   txtBirthweight.text = currentPregnancy!birthweight
   txtBabyName.text = currentpregnancy!baby_name
   taComplications.text = currentPregnancy!complications
   txtPuerperium.text = currentpregnancy!puerperium
   If currentPregnancy!breast_fed = True Then
      rbBreastFedYes.value = True
      txtBreastFedDuration.Enabled = True
   End If   
   If currentPregnancy!breast_fed = False Then 
      rbBreastFedNo.value = True
      txtBreastFedDuration.Enabled = False   
   End If   
   txtBreastFedDuration.text = currentPregnancy!breast_fed_duration
   txtcontraceptionNotes.text = currentPregnancy!contraception_method_notes
   If Not IsNull(currentPregnancy!contraception_method) Then
      cmbContraceptionMethods.index = cmbContraceptionMethods.Find(currentPregnancy!contraception_method)
   Endif
   If currentPregnancy!anti_d_28w_given = True Then rbAntiD28WeeksGivenYes.value = True
   If currentPregnancy!anti_d_28w_given = False Then rbAntiD28WeeksGivenNo.value = True
   If IsNull(currentPregnancy!anti_d_28w_given) Then rbAntiD28WeeksGivenUnknown.value = True 
   
   Try txtAntiD34WeeksGivenDate = Format(currentpregnancy!anti_d_34w_date, "dd/mm/yyyy")
   If currentPregnancy!anti_d_34w_given = True Then rbAntiD34WeeksGivenYes.value = True
   If currentPregnancy!anti_d_34w_given = False Then rbAntiD34WeeksGivenNo.value = True
   If IsNull(currentPregnancy!anti_d_34w_given) Then rbAntiD34WeeksGivenUnknown.value = True
   If Not IsNull(currentPregnancy!abo_group) Then
      cmbBloodGroups.index = cmbBloodGroups.Find("Group " & currentPregnancy!abo_group)
   Endif
   If currentpregnancy!fk_lu_rhesus_group = 1 Then 
      rbRHPositive.value = True
      lblRhNeg28WeekScreen.Background = Color.Background
      HBox_RHScreenDate.Enabled = False   
      HBox_RHAntiDgiven28W.Enabled = False
      HBox_RHAntiDgiven34W.Enabled = False   
   Else If currentpregnancy!fk_lu_rhesus_group = 2 Then
      rbRHNegative.Value = True
      lblRhNeg28WeekScreen.Background = Color.RGB(255, 255, 0)
      txtDate28WAntiDScreen.text = Calc_Anti_D_28W_Date()
      HBox_RHScreenDate.Enabled = True
      HBox_RHAntiDgiven28W.Enabled = True   
      HBox_RHAntiDgiven34W.Enabled = True   
      If IsNull(currentpregnancy!anti_d_28w_date) Then
         '  txtDate28WAntiDScreen.text = Calc_Anti_D_28W_Date()
      Else
         '   txtAntiD28weeksGivenDate.text = Format(currentpregnancy!anti_d_28w_date, "dd/mm/yyyy")
      Endif
   Else
      rbRHUnknown.value = True   
      lblRhNeg28WeekScreen.Background = Color.Background
   End If   
   If currentpregnancy!booking_antibody_screen = True Then rbAntibodyPositive.value = True
   If currentpregnancy!booking_antibody_screen = False Then rbAntibodyNegative.Value = True
   If currentpregnancy!booking_antibody_screen = Null Then rbAntibodyUnknown.Value = True 
   txtHaemoglobin.text = currentpregnancy!booking_haemoglobin
   If currentPregnancy!syphilus = True Then rbSyphilusPositive.value = True   
   If currentPregnancy!syphilus = False Then rbSyphilusNegative.value = True
   If IsNull(currentPregnancy!syphilus) Then rbSyphilusUnknown.value = True
   If currentPregnancy!rubella = True Then rbRubellaImmune.value = True   
   If currentPregnancy!rubella = False Then rbRubellaNonImmune.value = True
   If IsNull(currentPregnancy!rubella) Then rbrubellaUnknown.value = True
   txtRubellaTitre.text = currentpregnancy!rubella_titre
   If currentPregnancy!hepatitis_b = True Then rbhepatitisBPositive.value = True
   If currentPregnancy!hepatitis_b = False Then rbhepatitisBNegative.Value = True   
   If IsNull(currentPregnancy!hepatitis_b) Then rbhepatitisBUnknown.value = True
   If currentPregnancy!hepatitis_c = True Then rbhepatitisCPositive.value = True
   If currentPregnancy!hepatitis_c = False Then rbhepatitisCNegative.Value = True   
   If IsNull(currentPregnancy!hepatitis_c) Then rbhepatitisCUnknown.value = True
   txtMsu.text = currentpregnancy!booking_msu   
   If currentpregnancy!group_b_strep_swabs = True Then rbGroupBStrepPositive.value = True
   If currentpregnancy!group_b_strep_swabs = False Then rbGroupBStrepNegative.Value = True
   If IsNull(currentpregnancy!group_b_strep_swabs) Then rbGroupBStrepUnknown.value = True
   If currentpregnancy!repeat_antibody_screen_34_37wk = True Then rbRepeatAntibodyScreen34_37WPositive.value = True
   If currentpregnancy!repeat_antibody_screen_34_37wk = False Then rbRepeatAntibodyScreen34_37WNegative.value = True 
   If IsNull(currentpregnancy!repeat_antibody_screen_34_37wk) Then rbRepeatAntibodyScreen34_37WUnknown.value = True
   If currentPregnancy!hiv = True Then rbHIVPositive.value = True
   If currentPregnancy!hiv = False Then rbHIVNegative.value = True
   If IsNull(currentPregnancy!hiv) Then rbHIVUnknown.value = True
   If currentpregnancy!varicella = True Then rbVaricellaPositive.value = True
   If currentpregnancy!varicella = False Then rbVaricellaNegative.value = True
   If IsNull(currentpregnancy!varicella) Then rbVaricellaUnknown.value = True
   If currentpregnancy!rh_antibody_screen_28w = True Then rb28WeekRHScreenPositive.value = True
   If currentpregnancy!rh_antibody_screen_28w = False Then rb28WeekRHScreenNegative.value = True
   If currentpregnancy!rh_antibody_screen_28w = Null Then rb28WeekRHScreenUnknown.value = True
   If currentpregnancy!repeat_antibody_screen_34_37wk = True Then rbRepeatAntibodyScreen34_37WPositive.Value = True
   If currentpregnancy!repeat_antibody_screen_34_37wk = False Then rbRepeatAntibodyScreen34_37WNegative.Value = True 
   If currentpregnancy!repeat_antibody_screen_34_37wk = Null Then rbRepeatAntibodyScreen34_37WUnknown.value = True   
   If Not IsNull(currentpregnancy!fk_lu_placenta_position) Then
      cmbPlacentaPosition.index = cmbPlacentaPosition.Find(currentpregnancy!position)
   Endif
   EditArea_NotifyData_Change(False)
   bExit = False
   
End

Public Sub Pregnancy_Edit()
   
   HBox_EditArea.Enabled = True
   lblEditAreaHeading.text = "Edit Existing Pregnancy"
   If txtHaemoglobin.text = "" Then txtHaemoglobin.text = Haemoglobin_Get_Latest()
   
End

Public Sub Pregnancy_Delete()
   '-------------------------------------
   'Deletes the current pregnancy details
   '-------------------------------------
   
   Dim sMsg As String
   
   If Message.Question("Are you sure you want to delete this pregnancy and all associated ante-natal visits?", "Yes", "No") = 2 Then Return  
   If modPregnancyDBI.Pregnancy_Delete(currentconsult, currentpregnancy) Then
      modDBConnect.CommitTrans
      FClinical_Update
      Reload    
   Else
      modDBConnect.RollBack
   Endif
   
End

Public Sub Preview()
   
End

Public Sub New_Entry()
   '------------------------------------------------------------------
   'see FClinical for explanation anyway, allow entry of new pregnancy
   '------------------------------------------------------------------
   
   Select Case TabStripPregnancy.index
      Case ctabPregnancies
         Pregnancy_New()
      Case cTabAnteNatalVisits
         AnteNatalVisit_New()
      Case cTabAnteNatalSheetWizard
         AnteNatal_Summary_New()
   End Select
   
End

Public Sub AnteNatal_Summary_New()
   
End

Public Sub AnteNatalVisit_New()
   
   currentPregnancy = pregnancies[cvwPregnancies_key]
   TabStripPregnancy.index = cTabAnteNatalVisits
   Try TabStripPregnancy.text = "AnteNatal Visit: EDC- " & Format(currentPregnancy!edc, "dd/mm/yyyy")
   If Error Then
      TabStripPregnancy.text = "AnteNatal Visit: EDC-Unknown "
   Endif
   With form_visits
      .Init(currentconsult, currentPregnancy)
      .AnteNatal_Visit_New()
   End With
   
End

Public Sub Pregnancy_New()
   '--------------------------------------------------
   'Start a new pregnancy FIXME - clear all the forms
   'none of this will work..... so far
   'just ignore all the wizard stuff....
   '--------------------------------------------------
   
   EditArea_Clear()
   currentPregnancy = New Collection
   fk_pregnancy = 0
   lblEditAreaHeading.text = "New Pregnancy"
   HBox_EditArea.Enabled = True
   EditArea_NotifyData_Change(True) 'can save a pregnancy without any data.
   Habits_Update_Data
   MentalHealth_CheckPlans
   txtDateLMP.SetFocus()
   
End

Public Function rubella_titre_Get_Latest() As String
   '-------------------------------------------------------------------------------------------
   'Attempt to find the pregnancy rubella titre as long as blood taken after LMP or calc'd LMP
   '------------------------------------------------------------------------------------------
   
   Dim titre As Integer
   
   If txtEDC.text = "" Then Return
   titre = modPregnancyDBI.Pregnancy_Rubella_Get_Latest(currentConsult!patient!fk_patient, Val(txtEDC.text))
   If titre = 0 Then Return 'there was no titre found 
   If titre < 10 Then rbRubellaNonImmune.value = True
   If titre > 10 And titre < 30 Then rbRubellaUnknown.value = True
   If titre > 30 Then rbRubellaImmune.value = True
   Return Str(titre)
   
End

Public Function Haemoglobin_Get_Latest() As String
   '-------------------------------------------------------------------------------
   'Attempt to find the pregnancy hb as long as blood taken after LMP or calc'd LMP
   '-------------------------------------------------------------------------------
   
   If txtEDC.text = "" Then Return
   Return modPregnancyDBI.Pregnancy_Haemoglobin_Get_Latest(currentConsult!patient!fk_patient, Val(txtEDC.text))
   
End

Public Sub MentalHealth_CheckPlans()
   '----------------------------------
   'Checks if mental health plan done 
   '----------------------------------
   
   Dim plans As Collection = modMentalHealthDBI.Plans_Get(currentconsult!patient!fk_patient, 1)
   Dim plan As Collection
   
   If plans.count Then
      For Each plan In plans 'will be only 1
         txtRiskFactorsMentalHealth.text = plan!diagnosis & " MHP:" & Format(plan!plan_date, "dd/mm/yyyy")
         chkMentalHealth.value = True  
         Return
      Next
   Endif
   chkMentalHealth.Value = False 
   
End

Public Sub Habits_Update_Data()
   '----------------------------------------------------
   'Pulls in the patients smoking/alcohol/other drug use
   '----------------------------------------------------  
   
   Dim smoking_status As String = modRecreationalDrugs.SmokingStatus_String(currentConsult)
   Dim drinking_status As String = modRecreationalDrugs.AlcoholStatus_String(currentConsult)
   Dim other_drugs As String = modRecreationalDrugs.OtherDrugsStatus_String(currentconsult)
   
   chkAlcohol.value = False   
   chkSmoking.Value = False  
   chkDrugs.Value = False   
   If smoking_status = "NEVER SMOKED" Then txtRiskFactorsSmoking.text = Lower(smoking_status)
   If smoking_status = "CURRENT SMOKER" Then 
      txtRiskFactorsSmoking.text = Lower(smoking_status)
      chkSmoking.value = True 
   End If
   txtRiskFactorsAlcohol.text = Lower(drinking_status)
   If InStr(Lower(drinking_status), "current") Then chkAlcohol.value = True  
   If other_drugs <> "" Then
      txtRiskFactorsDrugs.text = other_drugs
      chkDrugs.value = True   
   Endif
   
End

Public Sub Refresh()
   '--------------------------------
   'Reloads stuff like drugs/smoking
   '--------------------------------
   
   Habits_Update_Data
   MentalHealth_CheckPlans
   
End

Public Sub EditArea_NotifyData_Change(bFlag As Boolean) As Boolean
   
   If bflag Then
      HBox_EditArea.Padding = 1
   Else
      HBox_EditArea.Padding = 0
   End If
   
End

Public Sub EditArea_Clear()
   
   bexit = True   
   modEditAreaHelpers.EditArea_Clear(Vbox_EditArea)  'fixme at some point to descend more control depths
   txtDateLMP.text = ""
   modEditAreaHelpers.EditArea_Clear(VBox_EditArea_Right)
   cmbDeliveryTypes.index = cmbDeliveryTypes.Find("n/a")
   cmbOnsetLabour.index = cmbOnsetLabour.Find("n/a")
   cmbBabySex.index = cmbBabySex.Find("Unknown")
   cmbPlacentaPosition.index = -1
   cmbBloodGroups.index = -1
   txtBreastFedDuration.enabled = False   
   txtRubellaTitre.text = ""
   lblEditAreaHeading.text = "" 'fixme
   lblNuchalFoldDateComment.text = ""
   lblMorphologyScanDateComment.text = ""
   rbSyphilusReset.value = True
   rbRHReset.value = True
   rbAntibodyReset.value = True  
   rbRubellaReset.value = True
   rbHepatitisbReset.value = True
   rbhepatitisCReset.value = True
   rbHIVReset.value = True
   rbVaricellaReset.value = True
   rb28WeekRHScreenReset.Value = True
   rbMorphologyScanReset.value = True
   rbBreastFedReset.Value = True
   rbAntiD28WeeksGivenReset.Value = True
   rbAntiD34WeeksGivenReset.value = True
   rbGroupBStrepReset.value = True  
   rbRepeatAntibodyScreen34_37WReset.Value = True
   rbNuchalFoldReset.value = True   
   sNuchalFoldScan = "unknown"
   sMorphologyScan = "unknown"
   HBox_RHScreenDate.Enabled = False   
   HBox_RHAntiDgiven28W.Enabled = False 
   HBox_RHAntiDgiven34W.Enabled = False  
   progress_notes_pregnancy = ""
   fk_progressnote = 0
   fk_pregnancy = 0
   EditArea_NotifyData_Change(False)
   bExit = False  
   
End

Public Sub EditAreaButtons_Click()
   
   Select Case Last.tag
      Case "new"
         Pregnancy_New()
      Case "save"
         Save()
      Case "preview"
         Preview()
         
   End Select
   
End

Public Sub EditAreaTextBox_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   
End

Public Sub EditAreaTextBox_LostFocus()
   
   Last.BackGround = Color.White
   
End

Public Sub tbDatePicker_ReviewDate_Click()
   
   Dim hCtrl As Control
   Dim hTextbox As Textbox
   
   Select Case Last.tag
      Case "pick date"
         If HBox_Calander.Visible Then
            HBox_Calander.Visible = False
            txtDateLMP.SetFocus()
         Else
            For Each hctrl In Last.parent.children
               If hctrl Is TextBox Then
                  hTextbox = hctrl
                  DateChooser1.tag = hTextbox
                  Break
               End If
            Next
            With HBox_Calander
               .top = Last.Parent.Parent.top + Last.Parent.Height + Vbox_EditArea.padding
               .left = Last.Parent.Parent.left + Vbox_EditArea.padding
               .width = 170
               .height = 170
               .Raise()
            End With
            HBox_Calander.Visible = True
            DateChooser1.SetFocus()
         End If
      Case "insert"
         
   End Select
   
End

Public Sub DateChooser1_Activate()
   
   Last.tag.text = Format(Last.value, "dd/mm/yyyy")
   HBox_Calander.Visible = False
   DateChooser1.tag.SetFocus()
   
End

Public Sub DateChooser1_LostFocus()
   
   HBox_Calander.Visible = False
   
End

Public Sub EditAreaTextBox_KeyPress()
   
   bkeyvalid = EditArea_TxtBox_ExcludeKeys(key.code, Last.tag)
   If bkeyvalid = False Then
      Stop Event
      Return
   End If
   
   Select Case key.Code
      Case key.Return, key.Tab
         Select Case Last.tag
            Case "lmp"
               txtEDC.SetFocus
            Case "edc"
               txtEDCRevisedDate.SetFocus
            Case "edc revised"
               txtEDCRevisedReason.SetFocus
            Case "edc revised reason"
               taRiskFactorsPastHistory.SetFocus
            Case "smoking details"
               chkAlcohol.SetFocus
            Case "alcohol details"
               chkDrugs.SetFocus
            Case "drugs details"
               chkSocial.SetFocus
            Case "social factors details"
               chkMentalHealth.SetFocus
            Case "mental health factors details"
               taRiskFactorsPastHistory.SetFocus
            Case "date of delivery"
               txtGestationAtDelivery.SetFocus
            Case "gestation at delivery"
               cmbOnsetLabour.SetFocus
            Case "hours labour"
               cmbDeliveryTypes.SetFocus
            Case "reason caesarian section"
               taComplications.SetFocus
            Case "complications"
               cmbBabySex.SetFocus
            Case "baby name"
               txtBirthweight.SetFocus
            Case "birth weight"
               txtPuerperium.SetFocus
            Case "contraception"
               txtNotes.SetFocus
            Case "puerperium"
               rbBreastFedYes.SetFocus
            Case "breast feeding duration"
               cmbContraceptionMethods.SetFocus
            Case "contraception notes"
               txtNotes.SetFocus
         End Select
   End Select
   
End

Public Function EditArea_TxtBox_ExcludeKeys(keycode As Integer, tag As String) As Boolean
   
   Select Case tag
      Case "edc", "date nuchal fold scan", "date anti-d test", "date morphology scan", "lmp", "date gtt", "anti-d 34 weeks given date", "anti-d 28 weeks given date", "edc revised"
         bKeyValid = modUtilGUI.AllowKeys(const.AllowKeys_DateFormat, keycode)
      Case "date of delivery"
         bKeyValid = modUtilGUI.AllowKeys(const.AllowKeys_Date_DWMY, keycode) 'eg mm/yy or full date
      Case "duration", "fundal height", "gestation at delivery", "age at delivery", "breast feeding duration", "morphology scan foetal size", "morphology scan foetal weeks", "haemoglobin"
         bKeyValid = modUtilGUI.AllowKeys(const.AllowKeys_NumbersOnly, keycode)
      Case "birth weight", "hours labour"
         bKeyValid = modUtilGUI.AllowKeys(const.AllowKeys_NumbersDecimal, keycode)
      Case "blood pressure"
         bKeyValid = modUtilGUI.AllowKeys(const.AllowKeys_BP, keycode)
      Case Else
         bKeyValid = True
   End Select
   Return bKeyValid
   
End

Public Sub EditAreaTextBox_Change()
   
   If bexit Then Return
   Select Case Last.tag
      Case "date anti-d test"
         If IsDate(Last.text) Then
            lblRhNeg28WeekScreen.text = "28W RH -ve Screen Date Due"
         Endif
      Case "lmp"                                        
         If IsDate(Last.text) Then
            bexit = True
            txtEDC.text = Format(DateAdd(Val(Last.text), gb.day, 280), "dd/mm/yyyy")
            txtHaemoglobin.text = Haemoglobin_Get_Latest()
            txtDateNuchalFold.text = Format(DateAdd(Val(Last.text), gb.week, 12), "dd/mm/yyyy")
            txtDateMorphologyScan.text = Format(DateAdd(Val(Last.text), gb.week, 18), "dd/mm/yyyy")
            txtGestation.text = Calc_Gestation(Val(Last.text))
            txtDateGTT.text = Format(DateAdd(Val(txtDateLMP.text), gb.week, 28), "dd/mm/yyyy")
            If rbRHNegative.value = True Then   
               txtDate28WAntiDScreen.text = txtDateGTT.Text
            End If   
            bExit = False  
         Endif
         txtRubellaTitre.text = rubella_titre_Get_Latest()
         txtHaemoglobin.text = Haemoglobin_Get_Latest()
      Case "edc revised", "edc"
         If Len(Last.text) = "" Then
            lblMorphologyScanDateComment.text = ""
            lblNuchalFoldDateComment.text = ""
         End If 
         Calc_Scan_GTT_Dates_From_EDC(Last)  'also calcs the txtGestation
         txtRubellaTitre.text = rubella_titre_Get_Latest()
         txtHaemoglobin.text = Haemoglobin_Get_Latest()
      Case "date of delivery"
         If IsDate(Last.text) And Len(Last.text) = 10 Then
            If Year(Val(Last.text)) < Year(currentconsult.GetConsultDate()) Then
               lblEditAreaHeading.text = "Previous Delivery"
            Endif
            'calc the age at delivery
            txtAgeAtDelivery.text = DateDiff(currentconsult!patient!birthdate, Val(Last.text), gb.year)
            'calc the gestation at delivery  
            txtGestationAtDelivery.SetFocus()
         Else
            '  Try bits = Split(Last.text, "/")
            ' If bits.count = 3
            ' If Len(Last.text) > 3 Then
            '
            '    If Val(Right(Last.text, 4)) < Year(Now) Then
            '       lblHeading.text = "Previous Delivery"
            '    Endif
            ' Endif
         Endif
      Case "risk factors medical"
         If InStr(Last.text, "\n\n") Then
            Last.text = Replace(Last.text, "\n\n", "")
            taRiskFActorsObstetric.SetFocus
         End If
      Case "risk factors obstetric"
         If InStr(Last.text, "\n\n") Then
            Last.text = Replace(Last.text, "\n\n", "")
            txtDateDelivery.SetFocus
         End If
      Case "complications"
         If InStr(Last.text, "\n\n") Then
            Last.text = Replace(Last.text, "\n\n", "")
            txtDateDelivery.SetFocus
         End If
   End Select
   EditArea_NotifyData_Change(True)
   
End

Public Function Calc_Gestation(date_lmp As Date) As String
   '------------------------------------------------
   'the date_lmp could be fake (ie know only the EDC
   'If have revised EDC use that
   '------------------------------------------------- 
   
   Dim gestation As String
   
   gestation = (DateDiff(date_lmp, currentconsult.GetConsultDate(), gb.day) Div 7) & " wks "
   gestation &= (DateDiff(date_lmp, currentconsult.GetConsultDate(), gb.day) Mod 7) & " days"
   Return gestation
   
End

Public Function calc_fake_lmp(edc As Date) As Date
   'given EDC work out rough period  
   
   Return DateAdd(edc, gb.day, -280)
   
End

Public Sub Calc_Scan_GTT_Dates_From_EDC(tb As Textbox)
   
   'expects and EDC or revised EDC
   bexit = True   
   If txtEDC.text = "" Then 
      If IsDate(txtEDCRevisedDate.Text) And Len(txtEDCRevisedDate.text) = 10 Then 
         txtEDC.Text = tb.Text
      End If
   End If  
   If IsDate(tb.text) And Len(Last.text) = 10 Then         'revised EDC, re-calculate the gestation
      lmp_fake = calc_fake_lmp(Val(tb.text))
      txtGestation.text = Calc_Gestation(lmp_fake)
      ' txtGestation.text = Str(39 - (DateDiff(Now, Val(tb.text), gb.day) Div 7)) & " wks "
      ' txtGestation.text &= Str(7 - (DateDiff(Now, Val(tb.text), gb.day) Mod 7)) & " days"
      If Val(Split(txtGestation.text, " ")[0]) < 12 Then                           'not done the nuchal fold scan?
         txtDateNuchalFold.text = calc_Nuchal_fold_date(lmp_fake)
         lblNuchalFoldDateComment.text = "** Recalculated from revised EDC"
      Endif
      If Val(Split(txtGestation.text, " ")[0]) < 18 Then
         txtDateMorphologyScan.text = Calc_Morphology_Scan_Date(lmp_fake)
         lblMorphologyScanDateComment.text = "** Recalculated from revised EDC"
      Endif
      If Val(Split(txtGestation.text, " ")[0]) < 28 Then
         txtDateGTT.text = Calc_GTT_Or_Anti_D(lmp_fake)
         '   txtDateAntiD.text = txtDateGTT.Text
         '    lblAntiDDateComment.text = "** Recalculated from revised EDC" 
      Endif
      If rbRHNegative.value = True And Val(Split(txtGestation.text, " ")[0]) < 28 Then 
         txtDate28WAntiDScreen.text = Calc_GTT_Or_Anti_D(lmp_fake)
      Endif
   End If 
   bExit = False    
   
End

Public Function Pregnancy_Valid() As Boolean
   '------------------------------------------------------
   'Return true if any data entered is valid
   'Note that we need no data to save a pregnancy but what
   'we do enter must be valid format
   '------------------------------------------------------
   
   If Trim(txtDateLMP.text) <> "" Then
      If Not IsDate(Trim(txtDateLMP.text)) Then
         With txtDateLMP
            .SetFocus()
            .Background = Color.rgb(95, 255, 175)
         End With
         Return
      Endif
   Endif
   ' If Trim(txtEDC.text) <> "" Then
   '    If Not IsDate(Trim(txtDateLMP.text)) Then
   '       With txtDateLMP
   '          .SetFocus()
   '          .Background = Color.rgb(95, 255, 175)
   '       End With
   '       Return
   '    Endif
   ' End If
   If Trim(txtEDCRevisedDate.text) <> "" And If Trim(txtEDCRevisedReason.text) = "" Then
      Message.info("Please enter the reason the EDC has been revised")
      With txtEDCRevisedReason
         .Background = Color.rgb(95, 255, 175)
         .SetFocus()
      End With
      Return  
   Endif
   Return True
   
End

Public Sub chkEditArea_Click()
   
   If bexit Then Return
   If Last.value = False Then    
      Select Case Last.tag
         Case "risk factor smoking"
            txtRiskFactorsSmoking.text = ""
         Case "risk factor drugs"
            txtRiskFactorsDrugs.text = ""
         Case "risk factor alcohol"
            txtRiskFactorsAlcohol.text = ""
         Case "risk factor mental health"
            txtRiskFactorsMentalHealth.text = ""
         Case "risk factor social"
            txtRiskFactorsSocial.text = ""
      End Select
   End If   
   EditArea_NotifyData_Change(True)
   
End

Public Sub cmbOnsetLabour_KeyPress()
   
   If key.code = key.return Or key.code = key.tab Then txtHoursLabour.SetFocus()
   
End

Public Sub cmbDeliveryTypes_KeyPress()
   
   If key.code = key.return Or key.code = key.tab Then taComplications.SetFocus
   
End

Public Sub cmbBabySex_KeyPress()
   
   If key.code = key.return Or key.code = key.tab Then txtBirthweight.SetFocus()
   
End

Public Sub cvwPregnancies_Menu()
   
   If Not cvwPregnancies.count Then Return
   mnuPregnancies.Popup()
   
End

Public Sub mnuPregnancies_Click()
   
   Select Case Last.tag
      Case "edit"
         Pregnancy_Edit
      Case "delete"
         Pregnancy_Delete
      Case "font"
         modUtilGUI.Columnview_SetFont(cvwPregnancies, "FPregnancy")        'allow use to change the font, save to settings"
   End Select
Catch
   Return 

End

Public Sub TabStripPregnancy_Click()
   
   If Not pregnancies.count Then
      TabStripPregnancy.index = 0
      Return
   Endif
   Select Case TabStripPregnancy.Index
      Case cTabAnteNatalVisits
         If Not IsNull(currentPregnancy!date_delivery) Then
            Stop Event
         Else
            If IsNull(form_visits) Then
               With form_visits = New FPregnancyVisits(VBox_AnteNatalVisits)
                  .Init(currentconsult, currentpregnancy)
               End With
            Endif
            AnteNatalVisit_New()
         Endif
      Case cTabAnteNatalSheetWizard
         ' If IsNull(form_AnteNatal_CareSheet_Wizard) Then
         '    With form_AnteNatal_CareSheet_Wizard = New FAnteNatalCareSheetWizard(VBox_AnteNatal_CareSheet_Wizard)
         '       .init(currentconsult, currentPregnancy)
         '    End With
         ' Endif
   End Select
   
End

Public Sub TabStripPregnancy_MouseDown()
   '------------------------------------------------------------
   'To add an antenatal visit must be pregnant and not delivered
   '------------------------------------------------------------
   
   If IsNull(currentPregnancy) Then
      Stop Event
      Return
   End If
   
End

Public Sub cmbEditArea_Click()
   
   If bexit Then Return
   EditArea_NotifyData_Change(True)
   Select Case Last.tag
      Case "onset labour"
         txtHoursLabour.SetFocus
      Case "baby sex"
         txtBabyName.SetFocus
      Case "delivery types"
         If InStr(cmbDeliveryTypes.text, "caesar") Then
            HBox_Reason_Caesar.Enabled = True
            lblReasonCaesar.Foreground = Color.Black
            txtReasonCaesarianSection.SetFocus
         Else
            HBox_Reason_Caesar.Enabled = False
            txtReasonCaesarianSection.text = ""
            lblReasonCaesar.Foreground = Color.LightForeground
            taComplications.SetFocus
         Endif
   End Select
   
End

Public Sub cmbEditArea_KeyPress()
   
   Select Case Last.tag
      Case "contraception methods"
         txtcontraceptionNotes.SetFocus
      Case "baby sex"
         txtBabyName.SetFocus
   End Select
   
End

Public Sub rbMorphologyScan_Click()
   
   sNuchalFoldScan = Last.tag 
   EditArea_NotifyData_Change(True)
   
End

Public Sub rbNuchalFold_Click()
   
   sMorphologyScan = Last.tag 
   EditArea_NotifyData_Change(True)
   
End

Public Sub Form_KeyPress()
   
   If Key.code = Key.Esc Then HBox_Calander.Visible = False 
   
End

Public Sub rbEditArea_Click()
   
   If Bexit Then Return 
   Select Case Last.tag
      Case "breast fed yes"
         With txtBreastFedDuration
            .Enabled = True   
            .SetFocus
         End With
      Case "breast fed no"
         With txtBreastFedDuration
            .text = ""
            .enabled = False  
         End With
         cmbContraceptionMethods.SetFocus
      Case "breast red unknown"
         With txtBreastFedDuration
            .text = ""
            .enabled = False  
         End With
      Case "rh negative"
         HBox_RHScreenDate.Enabled = True  
         HBox_RHAntiDgiven28W.Enabled = True 
         HBox_RHAntiDgiven34W.Enabled = True 
         If Trim(txtDate28WAntiDScreen.text) = "" Then
            lblRhNeg28WeekScreen.text = "28W RH -ve Screen Due"
            txtDate28WAntiDScreen.text = Calc_Anti_D_28W_Date()
         Endif
         
         lblRhNeg28WeekScreen.BackGround = Color.RGB(255, 255, 0)
      Case "rh positive", "rh unknown"
         If Anit_D_Have_Data() Then 
            If Message.Question("Delete all existing RH -ve testing/injection data?", "Yes", "No") = 2 Then Return
            Anti_D_Clear_Data
         End If   
         lblRhNeg28WeekScreen.Background = Color.Background
         HBox_RHScreenDate.Enabled = False   
         HBox_RHAntiDgiven28W.Enabled = False 
         HBox_RHAntiDgiven34W.Enabled = False  
         ' Case "antibody positive", "antibody negative", "antibody unknown"
         '    If Trim(txtDate28WAntiDScreen.text) = "" Then
         '    lblRhNeg28WeekScreen.text = "28W RH -ve Screen Due"
         '   Else
         '    lblRhNeg28WeekScreen.text = "28W RH -ve Screen Date"
         '   End If 
      Case "28wk rh screen positive", "28wk rh screen negative" 
         lblRhNeg28WeekScreen.text = "28W RH -ve Screen"
      Case "28wk rh screen unknown"
         lblRhNeg28WeekScreen.text = "28W RH -ve Screen Due"
   End Select
   EditArea_NotifyData_Change(True)
   
End

Public Sub Anti_D_Clear_Data()
   '-------------------------------------------------------------------------
   'User has decided patient is Not RH -ve so clear data associated with this
   '-------------------------------------------------------------------------   
   
   Dim hctrl As Control
   Dim HB As HBox
   Dim rb As RadioButton
   
   txtDate28WAntiDScreen.text = ""
   txtAntiD28weeksGivenDate.text = ""
   lblRhNeg28WeekScreen.Background = Color.RGB(255, 255, 0)
   For Each hctrl In HBox_RHScreenDate.Children
      If hctrl Is Hbox Then
         HB = hctrl
         For Each hctrl In HB.Children 
            If hctrl Is RadioButton Then
               rb = hctrl
               If rb.tag = "hidden" Then 
                  rb.value = True  
                  Break
               Endif
            Endif  
         Next
         Break
      Endif
   Next
   For Each hctrl In HBox_RHAntiDgiven28W.Children
      If hctrl Is Hbox Then
         HB = hctrl
         For Each hctrl In HB.Children 
            If hctrl Is RadioButton Then
               rb = hctrl
               If rb.tag = "hidden" Then 
                  rb.value = True  
                  Break
               Endif
            Endif  
         Next
         Break
      Endif
   Next
   For Each hctrl In HBox_RHAntiDgiven34W.Children
      If hctrl Is Hbox Then
         HB = hctrl
         For Each hctrl In HB.Children 
            If hctrl Is RadioButton Then
               rb = hctrl
               If rb.tag = "hidden" Then 
                  rb.value = True  
                  Break
               Endif
            Endif  
         Next
         Break
      Endif
   Next
   
End

Public Function Anit_D_Have_Data() As Boolean
   '--------------------------------------------
   'Returns True if user has entered anti-d data
   '-------------------------------------------- 
   
   Dim hctrl As Control
   Dim HB As HBox
   Dim rb As RadioButton
   
   If Trim(txtAntiD28weeksGivenDate.text) <> "" Then Return True
   For Each hctrl In HBox_RHScreenDate.Children
      If hctrl Is Hbox Then
         HB = hctrl
         For Each hctrl In HB.Children
            If hctrl Is RadioButton Then
               rb = hctrl
               If rb.value = True Then Return True
            Endif
         Next
      Endif
   Next
   For Each hctrl In HBox_RHAntiDgiven28W.Children
      If hctrl Is Hbox Then
         HB = hctrl
         For Each hctrl In HB.Children
            If hctrl Is RadioButton Then
               rb = hctrl
               If rb.value = True Then Return True
            Endif
         Next
      Endif
   Next
   For Each hctrl In HBox_RHAntiDgiven34W.Children
      If hctrl Is Hbox Then
         HB = hctrl
         For Each hctrl In HB.Children
            If hctrl Is RadioButton Then
               rb = hctrl
               If rb.value = True Then Return True
            Endif
         Next
      Endif
   Next
   Return False
   
End

Public Sub VBox_LeftSide_Enter()
   
   Form_HTML_Viewer.Visible = False 
   Form_PDF.Visible = False   
   Vbox_EditArea.Visible = True  
   
End
