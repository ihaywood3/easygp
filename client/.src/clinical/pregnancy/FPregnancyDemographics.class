' Gambas class file

' Copyright (C) 2008-2014 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
Private member As Collection
Private The_collection As Collection 
Private bExit As Boolean
Private bKeyValid As Boolean

Private fk_occupation_spouse As Integer
Private fk_countryofbirth_spouse As Integer
Private fk_ethnicity_spouse As Integer
Public fk_occupation As Integer 'do not make this private
Private fk_countryofbirth As Integer
Private fk_ethnicity As String
Private fk_religion As Integer
Private fk_sub_religion As Integer
Private staff As Collection
Private currentconsult As CConsult
Private patient As Collection 

Static Private form_pregnancy_demographics As FPregnancyDemographics

Static Public Function Occupation_Update(occupation As String, key As Integer)
   
   form_pregnancy_demographics.fk_occupation = key
   form_pregnancy_demographics.txtOccupationPatient.text = occupation
   
End

Public Sub Init(c As CConsult)

   form_pregnancy_demographics = Me 
   currentconsult = c 
   patient = currentconsult!patient  
   ' modEditAreaHelpers.Religions_Menu_Refresh(mnuReligions) - DO NOT REMOVE THIS
   lblmeasure.text = "  Country of Birth  "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea, lblmeasure)
   Religions_Menu_Refresh
   cmbMarital.Add("Unknown", 0)
   cmbMarital.Add("Single", 1)
   cmbMarital.Add("Married", 2)
   cmbMarital.Add("Divorced", 3)
   cmbMarital.Add("Defacto", 4)
   cmbMarital.Add("Widow", 5)
   cmbMarital.Add("Widower", 6)
   cmbAccomodationType.Add("Own Home")
   cmbAccomodationType.Add("Rental")
   cmbAccomodationType.Add("Shared")
   staff = modUtilGUI.LoadCombo(cmbStaff, modUtil.Copy_Collection_Keyed_Sequentially(modContactsDBI.Staff_Get()), "wholename")  
   Reload()
   
End

Public Sub Reload()
   '--------------------------------
   'display the current demographics
   '--------------------------------

   Dim comm As Collection
   EditArea_Clear
   cmbMarital.index = patient!fk_marital
   Try txtCountryOfBirthPatient.Text = patient!country_birth
   Try txtOccupationPatient.Text = patient!occupation
   Try txtEthnicityPatient.text = patient!ethnicity
   Try fk_ethnicity = patient!fk_ethnicity
   Try fk_countryofbirth = patient!country_birth_country_code
   Try fk_occupation = patient!fk_occupation
   cmbMarital.index = cmbMarital.Find(patient!marital)
   For Each comm In currentconsult!comms
      If comm!fk_type = const.CommModalityHome Then txtPhoneHomePatient.text = comm!value
      If comm!fk_type = const.CommModalityMobile Then txtPhoneMobilePatient.text = comm!value
      If comm!fk_type = const.CommModalityWork Then txtPhoneworkPatient.text = comm!value
   Next
   cmbStaff.index = cmbStaff.Find(modDBConnect.currentUser!wholename)
   lblmeasure.SetFocus 'just to give something focus

End

Public Sub mnuReligions_Click()
   
   Dim charpos As Integer
   
   charpos = InStr(Last.tag, "-")
   Try fk_religion = Val(Left(Last.tag, InStr(Last.tag, "-") - 1))
   Try fk_sub_religion = Val(Right(Last.tag, Len(Last.tag) - InStr(Last.tag, "-")))
   txtReligionPatient.text = Last.caption 
   txtOccupationPatient.SetFocus()
   Catch
      Return 
End

Public Sub Religions_Menu_Refresh()
   '------------------------------------------------------
   'There is a 1 to many relationship between the religion
   'and subreligion but subreligion may be null
   'This creates a menu of religions, with sub-religions
   'as submenus
   'FIXMED - USE A COMMON ROUTINE IN MODEDIAREA HELPERS
   'SEE COMMENT IN THAT ROUTINE AS TO THE PROBLEM
   '------------------------------------------------------
   
   Dim mnu As Menu
   Dim member As Collection
   Dim parent_menu As Menu 
   Dim fk_last_religion As Integer
   
   The_collection = modCommonDBI.Religions_Get()
   
   For Each member In The_collection
      If fk_last_religion <> member!fk_religion Then
         fk_last_religion = member!fk_religion
         mnu = New Menu(mnuReligions) As "mnuReligions"
         parent_menu = mnu
         mnu.name = member!religion
         mnu.caption = member!religion
         mnu.tag = member!pk_view
      End If
      If Not IsNull(member!fk_lu_sub_religion) Then
         '-----------------------------
         'Add sub-religions to the menu
         '-----------------------------
         mnu = New Menu(parent_menu) As "mnuReligions"
         mnu.name = member!sub_religion
         mnu.caption = member!sub_religion
         mnu.tag = member!pk_view
      End If   
      
   Next
   
End

Public Sub Occupation_Selection(action As String, Optional calling_control As Control)
   
   Dim x As Integer
   
   Select Case action
      Case "get"
         With listview1
            .Clear
            .Visible = False
         End With
         If Len(Trim(txtOccupationPatient.text)) = 0 Then Return
         The_Collection = modCommonDBI.Occupations_Get(Trim(txtOccupationPatient.text))
         '-----------------------------------------------------------------
         'If categories exist to match the text, auto-select or show a list
         '-----------------------------------------------------------------
         If The_Collection.count Then 
            For Each member In The_Collection
               listview1.Add(member!pk, member!occupation)
            Next 
            If The_Collection.count = 1 Then 
               If Trim(Lower(txtOccupationPatient.text)) = Lower(member!occupation) Then
                  Occupation_Selection("select", "list")
                  Return
               End If
            End If
            listview1.Visible = True
            listview1.Raise
            listview1.tag = txtOccupationPatient
            Return 
         Else
            '---------------------------------------------------------------------
            'The text user has typed in dosn't exist yet in contacts.lu_Firstnames
            'i.e this is a new firstname
            '---------------------------------------------------------------------
            If calling_control.tag = "occupation" Then
               fk_occupation = 0 'fixme
            Else
               fk_occupation_spouse = 0
            End If  
         End If
         listview1.Visible = False  
      Case "accept"
         '----------------------------------------------------------------------
         'CALLED BY  : user hitting <enter> in txtoccupation ie editarea_keypress
         '             user hitting <enter> on the popup list
         '             user double clicking on the popup list
         '----------------------------------------------------------------------
         bExit = True
         If calling_control Is TextBox Then
            '-------------------------------------------------------
            'User has just hit <enter> without scrolling on the list
            'try and find a match
            '-------------------------------------------------------
            If listview1.Visible Then
               listview1.MoveFirst
               For x = 0 To listview1.count - 1
                  If Lower(listview1.Item.text) = Trim(Lower(txtOccupationPatient.text)) Then
                     If calling_control.tag = "occupation" Then
                        fk_occupation = listview1.Item.Key
                     Else
                        fk_occupation_spouse = listview1.Item.Key
                     End If   
                     Break
                  End If
               Next
            End If
            '------------------------------------------------------------------
            'Either no match was found OR list wasn't visible anyway = no match
            '------------------------------------------------------------------
            If calling_control.tag.tag = "occupation" Then
               fk_occupation = 0
            Else
               fk_occupation_spouse = 0
            End If   
            listview1.Visible = False     
         Else
            '-----------------------------------------------------------
            'Routine called by user clicking on list or pressing <enter>
            '-----------------------------------------------------------
            If listview1.Visible Then
               listview1.MoveCurrent   'set internal cursor to match marquee
               If calling_control.tag.tag = "occupation" Then
                  fk_occupation = listview1.Item.Key
               Else
                  fk_occupation_spouse = listview1.Item.Key
               End If   
               txtOccupationPatient.Text = listview1.Item.Text
            End If
         End If
         txtEthnicityPatient.SetFocus()
         bExit = False  
   End Select
Catch
   bexit = False
   Return
   
End

Public Sub Data_Selection(action As String, calling_control As Control, input_txtbox As Textbox, lv As Listview, data_collection As Collection, p_key As String, display_field As String, Next_control As Control)
   
   Dim x As Integer
   
   Select Case action
      Case "get list"
         '-----------------------------------------------------------------
         'If categories exist to match the text, auto-select or show a list
         '-----------------------------------------------------------------
         lv.Clear()
         If data_collection.count Then 
            For Each member In data_collection
               lv.Add(member[p_key], member[display_field])
            Next 
            lv.Visible = True
            lv.Raise
            lv.tag = input_txtbox
            Return 
         Else
            
            Select Case input_txtbox.Tag
               Case "occupation"
                  fk_occupation = 0 'fixme
               Case "occupation spouse"
                  fk_occupation_spouse = 0
               Case "ethnicity"
                  fk_ethnicity = 0
               Case "ethnicity spouse"
                  fk_ethnicity_spouse = 0
               Case "country of birth"
                  fk_countryofbirth = ""
               Case "country of birth spouse"
                  fk_countryofbirth_spouse = ""
            End Select
         End If
         lv.Visible = False  
      Case "accept"
         '----------------------------------------------------------------------
         'CALLED BY  : user hitting <enter> in txtoccupation ie editarea_keypress
         '             user hitting <enter> on the popup list
         '             user double clicking on the popup list
         '----------------------------------------------------------------------
         bExit = True
         If calling_control Is Textbox Then 
            '-------------------------------------------------------
            'User has just hit <enter> without scrolling on the list
            'try and find a match
            '-------------------------------------------------------
            If lv.Visible Then
               lv.MoveFirst
               For x = 0 To lv.count - 1
                  If Lower(lv.Item.text) = Trim(Lower(input_txtbox.text)) Then
                     Select Case input_txtbox.Tag
                        Case "occupation" 
                           fk_occupation = lv.Item.Key
                        Case "occupation spouse"
                           fk_occupation_spouse = lv.Item.Key
                     End Select 
                     Break
                  End If
               Next
            End If
            '------------------------------------------------------------------
            'Either no match was found OR list wasn't visible anyway = no match
            '------------------------------------------------------------------
            Select Case input_txtbox.Tag
               Case "occupation"
                  fk_occupation = lv.Item.Key
               Case "occupation spouse"
                  fk_occupation_spouse = lv.Item.Key
               Case "ethnicity"
                  fk_ethnicity = lv.Item.Key
               Case "ethnicity spouse"
                  fk_ethnicity_spouse = lv.Item.Key
               Case "country of birth"
                  fk_countryofbirth = lv.Item.Key
               Case "country of birth spouse"
                  fk_countryofbirth_spouse = lv.Item.Key
            End Select 
            
         Else
            '-----------------------------------------------------------
            'Routine called by user clicking on list or pressing <enter>
            '-----------------------------------------------------------
            If lv.Visible Then
               lv.MoveCurrent   'set internal cursor to match marquee
               Select Case input_txtbox.Tag
                  Case "occupation"
                     fk_occupation = lv.Item.Key
                  Case "occupation spouse"
                     fk_occupation_spouse = lv.Item.Key
                  Case "ethnicity"
                     fk_ethnicity = lv.Item.Key
                  Case "ethnicity spouse"
                     fk_ethnicity_spouse = lv.Item.Key
                  Case "country of birth"
                     fk_countryofbirth = lv.Item.Key
                  Case "country of birth spouse"
                     fk_countryofbirth_spouse = lv.Item.Key
               End Select 
               input_txtbox.Text = lv.Item.Text
            End If
         End If
         Next_control.SetFocus()
         bExit = False  
   End Select
   
End

Public Sub EditArea_TextBox_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   Select Case Last.tag
      Case "country of birth", "country of birth spouse", "ethnicity", "ethnicity spouse", "occupation", "occupation spouse" 
         With listview1
            .top = Last.parent.parent.top + Last.height
            .left = Last.parent.Left + Last.left
            .width = Last.width
            .Visible = False
         End With
   End Select
   
End

Public Sub EditArea_TextBox_LostFocus()
   
   Last.BackGround = Color.white
   
End

Public Function EditArea_Textbox_ExcludeKeys(keycode As Integer, tag As String) As Boolean
   '----------------------------------------------------------
   'PURPOSE       Restrict key presses for validation purposes
   'HOW IT WORKS  see routines names
   'FIXME         Ian would do this much simpler I'm sure
   '-----------------------------------------------------------
   
   Select Case tag
      Case "spouse age", "home phone", "work phone", "mobile phone"
         bKeyValid = modUtilGUI.AllowKeys(const.AllowKeys_NumbersOnly, keycode)
      Case "spouse birthdate"
         bKeyValid = modUtilGUI.AllowKeys(const.AllowKeys_DateFormat)
      Case Else
         bKeyValid = True
   End Select
   Return bKeyValid
   
End

Public Sub EditArea_Textbox_KeyRelease()
   
   If Len(Trim(Last.text)) = 0 Then Return
   Select Case Last.tag
      Case "occupation"
         Data_Selection("get list", Last, Last, listview1, modCommonDBI.Occupations_Get(Trim(Last.text)), "pk", "occupation", txtEthnicityPatient)
      Case "ethnicity"
         Data_Selection("get list", Last, Last, listview1, modContactsDBI.Ethnicity_Get(Trim(Last.text)), "pk", "ethnicity", txtCountryOfBirthPatient)
      Case "country of birth"
         Data_Selection("get list", Last, Last, listview1, modContactsDBI.Country_Get(Trim(Last.text)), "pk", "country", cmbAccomodationType)
      Case "occupation spouse"
         Data_Selection("get list", Last, Last, listview1, modCommonDBI.Occupations_Get(Trim(Last.text)), "pk", "occupation", txtSpouseEthnicity)
      Case "ethnicity spouse"
         Data_Selection("get list", Last, Last, listview1, modContactsDBI.Ethnicity_Get(Trim(Last.text)), "pk", "ethnicity", txtSpouseCountryOfBirth)
      Case "country of birth spouse"
         Data_Selection("get list", Last, Last, listview1, modContactsDBI.Country_Get(Trim(Last.text)), "pk", "country", txtSpouseCountryOfBirth)
   End Select
   
End

Public Sub EditArea_TextBox_KeyPress()
   
   bkeyvalid = EditArea_Textbox_ExcludeKeys(key.code, Last.tag)
   If bkeyvalid = False Then
      Stop Event
      Return
   End If
   Select Case Key.Code
      Case Key.Return, Key.tab
         Select Case Last.tag
            Case "religion"
               txtOccupationPatient.SetFocus()
            Case "occupation"
               txtEthnicityPatient.SetFocus()
            Case "ethnicity"
               txtCountryOfBirthPatient.SetFocus()
            Case "country of birth"
               cmbAccomodationType.SetFocus()
            Case "home phone"
               txtPhoneworkPatient.SetFocus()
            Case "work phone"
               txtPhoneMobilePatient.SetFocus()
            Case "mobile phone"
               txtSpouseName.SetFocus()
            Case "spouse name"
               txtSpouseAge.SetFocus()
            Case "spouse age"
               txtSpouseOccupation.SetFocus
            Case "spouse occupation"
               txtSpouseEthnicity.SetFocus()
            Case "spouse ethnicity"
               txtSpouseCountryOfBirth.SetFocus()
            Case "spouse country of birth"
               txtFamilyDoctorName.SetFocus()
            Case "family doctor name"
               txtFamilyDoctorAddress.SetFocus()
            Case "family doctor address"
               txtFamilyDoctorContactDetails.SetFocus()
            Case "family doctor contact details"
         End Select
      Case Key.Down
         If listview1.Visible Then
            listview1.SetFocus()
            listview1.MoveFirst
            listview1.Item.Selected = True
         End If
         Select Case Last.tag
            Case "ethnicity"
            Case "occupation"
               
            Case "religion"
               mnuReligions.Popup()
            Case "country of birth"
            Case "home phone"
            Case "work phone"
            Case "mobile phone"
            Case "spouse name"
            Case "spouse age"
            Case "spouse occupation"
            Case "spouse ethnicity"
            Case "spouse country of birth"
            Case "family doctor name"
            Case "family doctor address"
            Case "family doctor contact details"
         End Select
   End Select
   
End

Public Sub ListView1_KeyPress()
   '------------------------------------------------------------------
   'User has scrolled onto the popup list and his a key, allow <enter>
   'to accept the line contents to the edit area
   '------------------------------------------------------------------
   
   If Key.code = Key.Return Then 
      listview1_DblClick
   End If
   
End

Public Sub Settings_Save()
   
End

Public Sub listview1_DblClick()
   '-----------------------------------------------------------------
   'The popup list has been populated, this routine is called either
   'by using double clicking on list, or by hitting <enter> when the
   'list has focus. Accept the contents of the current line to the gui
   'NB: listview1.MoveCurrent needed to move the internal cursor of
   '    the list to match the row the user is actually clicking on
   '------------------------------------------------------------------
   
   listview1.MoveCurrent   
   '-------------------------------------------------------------
   ' When listview was loaded, the actual calling textbox became
   ' its tag, so the tag of this textbox is used
   '-------------------------------------------------------------
   Select Case listview1.Tag.Tag
      Case "occupation"
         Data_Selection("accept", Last, txtOccupationPatient, Last, The_Collection, "pk", "occupation", txtEthnicityPatient)
      Case "ethnicity"
         Data_Selection("accept", Last, txtEthnicityPatient, Last, The_Collection, "pk", "ethnicity", Last.tag)
      Case "country of birth"
         Data_Selection("accept", Last, txtCountryOfBirthPatient, Last, The_Collection, "pk", "country", cmbAccomodationType)
      Case "occupation spouse"
         Data_Selection("accept", Last, txtSpouseOccupation, Last, The_Collection, "pk", "occupation", txtSpouseEthnicity)
      Case "ethnicity spouse"
         Data_Selection("accept", Last, txtSpouseEthnicity, Last, The_Collection, "pk", "ethnicity", txtSpouseCountryOfBirth)
      Case "country of birth spouse"
         Data_Selection("accept", Last, txtSpouseCountryOfBirth, Last, The_Collection, "pk", "country", txtSpouseCountryOfBirth)
   End Select
   listview1.Visible = False  
Catch
   Return 

End

Public Sub cmbAccomodationType_KeyPress()
   
   Select Case Key.Code
      Case Key.Return, Key.Tab
         txtPhoneHomePatient.SetFocus()
   End Select
   
End

Public Sub cmbMarital_KeyPress()
   
   Select Case Key.Code
      Case Key.Return, Key.Tab
         txtReligionPatient.SetFocus()
   End Select
   
End

Public Sub Save()
   '-----------------------------
   'Save any updated demographics
   '-----------------------------

   Dim person As CRow
   
   If HBox_EditArea.Padding = 0 Then Return
   
   Person = New CRow 
   person.fk_person = patient!fk_person
   person.put_unchanged(patient!fk_person, "fk_person")
   If fk_occupation Then
      person!fk_occupation = fk_occupation
   Endif
   If fk_ethnicity Then
      person!fk_ethnicity = fk_ethnicity  
   Endif
   If fk_countryofbirth Then
      person!fk_countryofbirth = fk_countryofbirth
   Endif
   person.Save()
   modDBConnect.CommitTrans()

End

Public Sub EditArea_TextBox_Change()
   
   EditArea_Notify_DataChange(True)
   
End

Public Sub EditArea_Clear()
   
   fk_occupation = 0
   fk_countryofbirth = 0
   fk_ethnicity = 0
   fk_religion = 0
   fk_sub_religion = 0
   fk_countryofbirth_spouse = 0
   fk_ethnicity_spouse = 0
   fk_occupation_spouse = 0
   modEditAreaHelpers.EditArea_Clear(Vbox_EditArea)
   
End

Public Sub EditArea_Notify_DataChange(bFlag As Boolean) As Boolean
   
   If bflag Then
      HBox_EditArea.Padding = 1 
   Else
      HBox_EditArea.Padding = 0
   End If    
   
End
