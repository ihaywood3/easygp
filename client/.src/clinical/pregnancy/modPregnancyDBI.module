' Gambas module file

' Copyright (C) 2008-2015 Dr. Richard Terry
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'---------------------------------------------------------------------
' A module for the database routines for pregnancies
' --------------------------------------------------------------------

Public Function Presentations_Get() As Collection 
   '------------------------------------ 
   ' Return a list of baby presentations
   ' -----------------------------------
   
   Return modDBConnect.exec_query_collection("Select * from clin_pregnancy.lu_presentations")
   
End

Public Function Placental_Positions_Get() As Collection
   
   Return modDBConnect.exec_query_collection("Select * from clin_pregnancy.lu_placenta_position") 
   
End

Public Function Patient_Is_Pregnant(fk_patient As Integer) As String
   '---------------------------------------------------------------
   'Returns gestation if patient pregnant unless unknown in which
   'case returns "EDC?"
   'if pregnancy during > 40 weeks then prompt user ?still pregnant
   'FIXME ian to do a function in the back end for this.
   '--------------------------------------------------------------- 
   
   Dim R As Result
   Dim sql As String
   Dim gestation As String
   Dim LMP As Date
   
   sql = "Select pk, edc  from clin_pregnancy.vwPregnancies where  fk_patient = " & fk_patient & "and date_delivery is null and deleted = false order by edc DESC LIMIT 1"
   R = modDBConnect.exec_query(sql)
   If R.count <> 0 Then
      If Not IsNull(R!edc) Then  
         If DateDiff(Now, R!edc, gb.day) < 0 Then  
            If Message.Question("Is the patient still pregnant?\n\nIf not, then please go to the Pregnancy module and update the data.", "Yes", "No") = 2 Then
               Return
            Endif
         Endif
         'calc theoretical LMP
         LMP = Theoretical_LMP_From_EDC(r!edc)
         gestation = Str(DateDiff(LMP, Now, gb.day) Div 7) & "W " & Str(DateDiff(LMP, Now, gb.day) Mod 7) & "D"
      Else
         gestation = "?EDC"
      End If 
      Return gestation
   Endif
   
End

Public Function Theoretical_LMP_From_EDC(edc As Date) As Date
   '------------------------------------------------------------------------------------------------------
   'Attempt to guess an approximate LMP from EDC does not take into account subtle factors e.g cycle lengh
   '------------------------------------------------------------------------------------------------------

   Return DateAdd(edc, gb.day, -280)
   
End

Public Function Delivery_Types_get(Optional bsort As Boolean = False) As Collection
   
   Dim sql As String
   
   sql = "Select * from clin_pregnancy.lu_delivery_types "
   If bsort Then sql &= "order by type"
   Return modDBConnect.exec_query_collection(sql) 
   
End

Public Function Contraception_methods_Get() As Collection
   
  Return modDBConnect.exec_query_collection("Select * from clin_pregnancy.lu_contraception_methods") 
   
End

Public Function Onset_Labour_Types_Get(Optional bsort As Boolean = False) As Collection
   
   Dim sql As String
   
   sql = "Select * from clin_pregnancy.lu_onset_labour "
   If bsort Then sql &= "order by type"
   Return modDBConnect.exec_query_collection(sql) 
   
End

Public Function Pregnancy_Haemoglobin_Get_Latest(fk_patient As Integer, edc As Date) As String
   '---------------------------------------------------------------- 
   'Returns a haemoglobin as long as date taken was > LMP of patient
   '----------------------------------------------------------------

   Dim sql As String
   Dim R As Result
   
   sql = "select * from documents.vwObservations where fk_patient=" & fk_patient & " AND loinc = $$" & const.Loinc_Haemoglobin & "$$"
   sql &= " ORDER BY observation_date DESC limit 1"
   R = modDBConnect.exec_query(sql)
   If R.count Then
      Print DateDiff(R!observation_date, Theoretical_LMP_From_EDC(edc), gb.day)
      If DateDiff(R!observation_date, Theoretical_LMP_From_EDC(edc), gb.day) > 0 Then Return 
      Return Str(R!value_numeric)  '& R!units & " (" & R!reference_range & ") on " & Format(R!observation_date, "dd/mm/yyyy")
   Endif
   
End

Public Function Pregnancy_Rubella_Get_Latest(fk_patient As Integer, edc As Date) As Integer
   '---------------------------------------------------------------- 
   'Returns a haemoglobin as long as date taken was > LMP of patient
   '----------------------------------------------------------------

   Dim sql As String
   Dim R As Result
   
   sql = "select * from documents.vwObservations where fk_patient=" & fk_patient & " AND loinc = $$" & const.Loinc_Rubella & "$$"
   sql &= " ORDER BY observation_date DESC limit 1"
   R = modDBConnect.exec_query(sql)
   If R.count Then
      Print DateDiff(R!observation_date, Theoretical_LMP_From_EDC(edc), gb.day)
      If DateDiff(R!observation_date, Theoretical_LMP_From_EDC(edc), gb.day) > 0 Then Return 
      Return R!value_numeric
   Endif
   
End

Public Sub Pregnancy_Delete(currentconsult As Cconsult, pregnancy As Collection) As Boolean
   '------------------------------------------------------------------------------------
   'deletes pregnancy and associated ante-natal-visits (if they exist) and creates audit
   'if pregnancy was not created on Today then show the deleted progress notes changed
   'by graying out the background of that progress note
   '------------------------------------------------------------------------------------
   
   If modUtil.IsSameDay(Now, CurrentConsult.GetConsultDate()) Then                                                   'same day as today
      modDBConnect.update("clin_consult.progressnotes", Null, ["pk": pregnancy!fk_progressnote, "deleted": True])   'just remove progress notes, don't enforce audit
   Else
      pregnancy!progress_notes = "<TABLE BGCOLOR='#CFCFCF'" & "><COL WIDTH=100%><TR VALIGN=TOP><TD WIDTH=100%>" & pregnancy!progress_notes & "</TD></TR></TABLE>"   'otherwise gray out and leave audit trail message 
      pregnancy!progress_notes &= "<small><B><I>Audit note:</B> this pregnancy (and all associated ante-natal vists) was deleted by " & modDBConnect.currentUser!wholename & " on " & Format(Now, "dd/mm/yyyy") & ". See audit trail on that date for the reason.</I></small>"
      modDBConnect.update("clin_consult.progressnotes", Null, ["pk": pregnancy!fk_progressnote, "notes": pregnancy!progress_notes])            
   End If
   If modDBConnect.update("clin_pregnancy.pregnancies", Null, ["pk": pregnancy!fk_pregnancy, "deleted": True]) Then                         'success deleting the pregnancy
      modDBConnect.exec_query("Update clin_pregnancy.ante_natal_visits set deleted = TRUE where fk_pregnancy = " & pregnancy!fk_pregnancy)  'delete associated ante-natal visits
      If Not modUtil.IsSameDay(Now, currentconsult.GetConsultDate()) Then                                                                   'if not doing this on the same day
         If modAudit.MakeAudit(currentconsult, "mark deleted", "clin_pregnancy.pregnancies", pregnancy!fk_pregnancy, const.cSection_Pregnancy, pregnancy!progress_notes) Then 'construct audit notes
            Return True 
         Endif
      Else
         Return True 
      End If 
   End If  
   
End

Public Function Antenatal_Visits_Get(fk_patient As Integer) As Collection 
   '------------------------------------------------------------------------------
   'ordered by visit date, not key e.g back visits may be transcribed from a sheet
   '------------------------------------------------------------------------------   
   
   Return modDBConnect.exec_query_collection("Select * from clin_pregnancy.vwAnteNatal_Visits where fk_patient =" & fk_patient & " and not deleted ORDER BY visit_date")
   
End

Public Sub Pregnancies_Get(fk_patient As Integer) As Collection
   
   Return modDBConnect.exec_query_collection("Select * from clin_pregnancy.vwPregnancies where fk_patient=" & fk_patient & " and not deleted order by age_at_delivery ASC")  
   
End
