' Gambas class file
' Copyright (C) 2008,2009 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Private fk_pasthistory As Integer
Private cProgressNote_Section As Integer
Private currentconsult As CConsult
Private bEmbedded As Boolean             'If true the form is embedded in a frmConsultNotes editor
Private embedded_in_form As String
Private embedded_form As String          'the form this form is embedded in



Public Sub set_embedded(flag As Boolean, embeddedinform As String)
   '--------------------------------------------------
   'If this form is embeded from another form set flag
   'embeddedinform = either "notes" or "documents"
   '--------------------------------------------------
   bEmbedded = flag
   embedded_in_form = embeddedinform
End

Public Sub Save()
  
  
   FClinical.Refresh_AllPreviousNotes()
End

Public Sub TextLabel1_MouseDown()

  

End

Public Sub Form_settings(mode As String)
  
  Select Case mode
    Case "save"
        ' Settings["Tasks_Embedded_" & Parent_Form & "/HSplit_EditArea_Inner.Layout"] = HSplit_EditArea_Inner.Layout
        ' Settings["Tasks_Embedded_" & Parent_Form & "/HSplit_EditArea_Outer.Layout"] = HSplit_EditArea_Outer.Layout
        ' Settings["Tasks_Embedded_" & Parent_Form & "/Vsplit_Script.Layout"] = Vsplit_Script.Layout
    Case "load"
      
  End Select
  
End

Public Sub Init(cons As CConsult)
  
  currentconsult = cons
  
End

Public Sub mnuHealthIssues_Refresh()
   '------------------------------------------------------------------
   'Refreshes the progress notes menu on the main toolbar
   'Clears all existing entries as user could have added new problems
   'rebuilds the menu with menu's for
   '*show all notes
   '*general notes
   '*major problems as submenu
   '*significant active problems as submenu
   '*inactive problems as submenu
   '-------------------------------------------------------------------   
   Dim mnu As Menu
   Dim mnu_major As Menu
   Dim mnu_active As Menu
   Dim mnu_inactive As Menu
   Dim PastHistoryCondition As Collection
   Dim bNeedSeparator As Boolean = True
   Dim bNoMainMenu As Boolean = True
   
   If Not currentconsult Then Return
   '----------------------------------------------------------------
   'Clear menu, even if exit this sub, don't want the last patient's
   'menu items on the list
   '----------------------------------------------------------------
   mnuHealthIssues.Children.Clear()  
   mnu = New Menu(mnuHealthIssues) As "mnuHealthIssues"
   mnu.name = "General Notes"
   mnu.caption = "General Notes"
   mnu.tag = "general notes"  
   If currentconsult!past_history.count = 0 Then Return 
   currentconsult.Refresh("past_history")  
   '---------------------------------------------------------
   'Next add all the major conditions followed by a separator
   '---------------------------------------------------------
   For Each PastHistoryCondition In currentconsult!past_history
    If PastHistoryCondition!major Then
        If bNeedSeparator Then
            mnu = New Menu(mnuHealthIssues)
            mnu.name = "separator_1"
            mnu.caption = ""
            bNeedSeparator = False  
         End If
         If bNoMainMenu Then
            mnu_major = New Menu(mnuHealthIssues) As "mnuHealthIssues"
            mnu_major.name = "mnuHealthIssues_Major"
            mnu_major.caption = "Major Health Issues"
            mnu_major.tag = "major"
            bNoMainMenu = False  
         End If
        
         mnu = New Menu(mnu_major) As "mnuHealthIssues"
         mnu.name = PastHistoryCondition!description
         mnu.caption = PastHistoryCondition!description
         mnu.tag = PastHistoryCondition!pk_pasthistory
     End If
   Next
  
   bNeedSeparator = True   
   bNoMainMenu = True
   '---------------------------------------------------------------
   'Next add all the significant conditions followed by a separator
   '---------------------------------------------------------------
   For Each PastHistoryCondition In currentconsult!past_history
    If PastHistoryCondition!active = True Then
         If bNeedSeparator Then
           mnu = New Menu(mnuHealthIssues)
           mnu.name = "separator_2"
           mnu.caption = ""
           bNeedSeparator = False  
         End If  
         If bNoMainMenu Then
            mnu_active = New Menu(mnuHealthIssues) As "mnuHealthIssues"
            mnu_active.name = "mnuHealthIssues_Significant"
            mnu_active.caption = "Significant Issues"
            mnu_active.tag = "significant"
            bNoMainMenu = False  
         End If         
         mnu = New Menu(mnu_active) As "mnuHealthIssues"
         mnu.name = PastHistoryCondition!description
         mnu.caption = PastHistoryCondition!description
         mnu.tag = PastHistoryCondition!pk_pasthistory
    End If
   Next 
   bNeedSeparator = True   
   bNoMainMenu = True
   '--------------------------------------------------------------
   'Lastly add all the inactive conditions followed by a separator
   '--------------------------------------------------------------
    For Each PastHistoryCondition In currentconsult!past_history
      If PastHistoryCondition!active = False And PastHistoryCondition!major = False
         If bNeedSeparator Then
           mnu = New Menu(mnuHealthIssues)
           mnu.name = "separator_3"
           mnu.caption = ""
           bNeedSeparator = False  
         End If  
         If bNoMainMenu Then
            mnu_inactive = New Menu(mnuHealthIssues) As "mnuHealthIssues"
            mnu_inactive.name = "mnuHealthIssues_Significant"
            mnu_inactive.caption = "Inactive Issues"
            mnu_inactive.tag = "inactive"
            bNoMainMenu = False  
         End If         

         mnu = New Menu(mnu_inactive) As "mnuHealthIssues"
         mnu.name = PastHistoryCondition!description
         mnu.caption = PastHistoryCondition!description
         mnu.tag = PastHistoryCondition!pk_pasthistory
      End If
    Next
End

Public Sub mnuHealthIssues_Click()
   '---------------------------------------------------
   'User wants to link a request form to a health issue
   'The menu tag = the pk_pasthistory
   '---------------------------------------------------
  
  Select Case Last.tag
  Case "general notes", "remove link"
    txtHealthIssue.text = "General Notes"
    fk_pasthistory = 0
    cProgressNote_Section = const.cSection_GeneralNotes
  Case Else
    txtHealthIssue.text = currentconsult!past_history[Last.tag]!description
    fk_pasthistory = Last.tag
    cProgressNote_Section = const.cSection_Prescriptions
  End Select
End
Public Sub mnuHealthIssues_Show()
  
  mnuHealthIssues_Refresh()
  
End
