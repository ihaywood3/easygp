' Gambas class file

' Copyright (C) 2008,2011 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'
' PURPOSE: Allow user to add a new time interval for a recall when
'          marking them off the recalls list on the main clinical form
'----------------------------------------------------------------------
Private bExit As Boolean
Private currentRecall As Collection
Private bKeyValid As Boolean

Public Sub Run() As Boolean
   
   Return Not Me.ShowModal()
   
End

Public Sub Init(recall As Collection)
   '--------------------------------------------------------------------------
   'show details of recall as it currently is
   'If the recall is being re-scheduled, the default interval remains the same
   '--------------------------------------------------------------------------   
   Dim sUnit As String
   
   currentRecall = recall
   lblRecallFor.text = currentRecall!reason
   txtOldDatedue.text = Format(currentrecall!due, "dd/mm/yyyy")
   txtInterval.text = currentRecall!interval
   Select Case currentrecall!fk_interval_unit   
     Case const.Units_week
         sUnit = "W" 
     Case const.Units_month
        sUnit = "M" 
     Case const.Units_year
        sUnit = "Y" 
   End Select
   
   txtInterval.text &= sUnit
   modEditAreaHelpers.Resize_labels(Vbox_EditArea, lblMeasure)
End

Public Sub form_Open()

   Me.Center()
   If txtInterval.Enabled Then
      txtInterval.SetFocus()
   Else  
      txtDate.SetFocus()
   End If   
   
End

Public Sub EditAreaButtons_Keypress()
   
   EditAreaButtons_Click()
   
End

Public Function EditArea_TxtBox_ExcludeKeys(keycode As Integer) As Boolean  
   
   Select Case Last.Tag
      Case "recall for", "see specific person", "additional notes", "forms"
         bKeyValid = True
      Case "interval"
         bKeyValid = modUtil.AllowKeys(const.AllowKeys_Date_DWMY, keycode)
      Case "date"
         bKeyValid = modUtil.AllowKeys(const.AllowKeys_Date_DWMY, keycode)
   End Select
   Return bKeyValid
   
End

Public Sub EditAreaButtons_Click()
   
   Select Case Last.tag
      Case "accept"
         If Validate_Data() Then
            Me.Close(True)
         End If   
      Case "cancel"
         Me.Close()
   End Select
   
End

Public Function Validate_Data() As Boolean
   
   If Trim(txtInterval.text) = "" Then
      txtInterval.SetFocus
      Hbox_Interval.BackGround = Color.Red
      Hbox_Interval.Padding = 1
      Return False
   End If
   If Not IsDate(txtDate.text) Then
      txtDate.SetFocus()
      Hbox_Date.BackGround = Color.Red
      Hbox_Date.Padding = 1
      Return False
   End If
   Hbox_Interval.BackGround = Color.White
   Hbox_Interval.Padding = 0
   Hbox_Date.BackGround = Color.White  
   Hbox_Date.Padding = 0
   
   Return True
   
End

Public Sub Calculate_Recall_Date(txt As Textbox)
   '--------------------------------------------
   'Works out a date from e.g 18M or 2Y
   'FIXME put in weeks and days
   'FIXME this was cutn paste from identical in FRecalls
   'FIXME THIS NEEDS TO BE USED VIA MOD EDIT AREA HELPERS
   'THEN REMOVE THIS ROUTINE.
   '--------------------------------------------
   
   Dim sIntervalUnits As String 'eg if txtdate contains 3M then units interval is 3
   Dim iNumberOfMonths As Integer      'do not need both these declared, but do for readability
   Dim iNumberOfYears As Integer 
   Dim iNumberOfDays As Integer
   Dim iNumberOfWeeks As Integer
   Dim vPossibleDate As Variant
   Dim aDate As Date
   Dim x As Integer
   
   If UCase(Right(Trim(txt.text), 1)) = "M" Then
      '---------------------------------------------------------------------------
      'Try and convert the rest of the string (ie left part which should be number
      'to a number, if error, pop up invalid date and return
      'Remember that  bkeyvalid = EditArea_TxtBox_ExcludeKeys(key.code) has
      'only allowed numbers or mM or Yy for this textbox, but some idiot could
      'have tried out patience by typing in e.g 10m10M or something
      '---------------------------------------------------------------------------
      Try iNumberOfMonths = Val(Left(txt.text, Len(Trim(txt.text)) - 1))
      If Error Then
         txtDate.text = "" 
         Return
      End If
      txtDate.text = Format(DateAdd(Now, gb.Month, iNumberOfMonths), "dd/mm/yyyy")
      Select Case txt.Tag
         Case "default interval"
            currentrecall!fk_interval_unit = const.Units_month
            currentrecall!interval = iNumberOfMonths
         Case "interval"
            currentrecall!fk_interval_unit = const.Units_month
            currentrecall!interval = iNumberOfMonths
            currentrecall!abbrev_text = "M"
      End Select
   Else
      If UCase(Right(Trim(txt.text), 1)) = "Y" Then
         '---------------------------------------------------------------------------
         'Try and convert the rest of the string (ie left part which should be number
         'to a number, if error, pop up invalid date and return
         'Remember that  bkeyvalid = EditArea_TxtBox_ExcludeKeys(key.code) has
         'only allowed numbers or mM or Yy for this textbox, but some idiot could
         'have tried out patience by typing in e.g 10m10M or something
         '---------------------------------------------------------------------------
         Try iNumberOfYears = Val(Left(txt.text, Len(Trim(txt.text)) - 1))
         If Error Then
            txtDate.text = "" 
            Return
         End If
         txtDate.text = Format(DateAdd(Now, gb.Year, iNumberOfYears), "dd/mm/yyyy")
         Select Case txt.Tag
            Case "default interval"
               currentrecall!fk_interval_unit = const.Units_year
               currentrecall!interval = iNumberOfYears
            Case "interval"
               currentrecall!fk_interval_unit = const.Units_year
               currentrecall!abbrev_text = "Y"
               currentrecall!interval = iNumberOfYears
         End Select
      End If
   End If
   Hbox_Interval.BackGround = Color.White
   Hbox_Interval.Padding = 0
   Hbox_Date.BackGround = Color.White  
   Hbox_Date.Padding = 0
   
End

Public Sub EditArea_KeyPress()
   
   bkeyvalid = EditArea_TxtBox_ExcludeKeys(key.code)
   If bkeyvalid = False Then
      Stop Event
      Return
   End If
   
   Select Case Key.code
      Case Key.tab, Key.Return
         Select Case Last.tag
            Case "interval"  
               Calculate_Recall_Date(txtInterval)
               If txtDate.text Then
                  Hbox_Interval.BackGround = Color.White
                  Hbox_Interval.Padding = 0
                  tbAccept.SetFocus()
               End If
               
            Case "date"
               '------------------------------------------------------------------------------
               'Validate a date, or create a date
               'If contains 'M', or 'm' at the end, user could be typign 10M ie add 10 months
               '-----------------------------------------------------------------------------
               Calculate_Recall_Date(txtDate)
               
               If IsDate(txtDate.text) Then
                  Hbox_Interval.BackGround = Color.White
                  Hbox_Interval.Padding = 0
                  Hbox_Date.BackGround = Color.White
                  Hbox_Date.Padding = 0
               Else
                  txtDate.text = ""
                  Hbox_Interval.BackGround = Color.Red
                  Hbox_Interval.Padding = 1
                  Hbox_Date.BackGround = Color.Red
                  Hbox_Date.Padding = 1
                  
               End If
         End Select
   End Select
   
End

Public Sub EditArea_Change()
   
   If Last.tag = "date" Then
      Try currentrecall!due = Val(Last.text)
   End If
   
End

