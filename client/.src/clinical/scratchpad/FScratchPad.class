' Gambas class file
' Copyright (C) 2008,2009 Dr Richard TERRY
'
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
Private bExit As Boolean
Private pk_scratchpad As Integer           '  mnuScratchPad_HistoryEntire       
    '  mnuScratchPad_HistoryEntire
Private iCurrentKey As Integer
Private currentconsult As CConsult
Private ScratchPadItem As Collection
Private bEditing As Boolean 
Private iUserFilter As Integer  'const.cScopeCurrentUser or const.cScopeAllUsers
Private iAuditFilter As Integer 'all items or current item.
Private fk_progressnote As Integer   
Private fk_table_row As Integer        'fixme fim my name = e.g fk_document
Private schema As String
Private table As String 
Private tasks As Collection
Private task As Collection


Public Sub Set_Audit_Schema_Table_SourceRowKey(k As Integer, s As String, t As String)       
   '-----------------------------------------------------
   'if the scratch pad  is embedded in another form which
   'wants to keep track of this scratch pad item, then
   'this collection is set by the calling form
   '------------------------------------------------------
   
  fk_table_row = k
  table = t
  schema = s

End


Public Sub txtScratchPad_GotFocus()
  If Bexit Then Return 
  If Len(Last.text) = "" Then
     ScratchPadItem_New()
  End If 
  
End

Public Sub txtScratchPad_LostFocus()
   '---------------------------------------------------
   'Reset gui visually to start of line 
   'Reason:when lost focus, the start of the sentance
   'may not be visible it if exceeds width of textbox
   '----------------------------------------------------
   txtScratchPad.pos = 1
End


Public Sub txtScratchPad_Change()
   '--------------------------------------------------------
   'The text in the entry textbox for scratchpad has changed
   'Get outa here if shouldn't be here! or
   'If user (or program) has deleted the text, remove the
   'padding where red-colour could have been highlighting
   'a changed, and change label back to 'new item'
   'However if the change means there is now text in here
   'notify user of unsaved data by outlining the textbox in 
   'red (the background it sits on is Red!)
   '--------------------------------------------------------
   If bExit Or IsNull(currentconsult) Then Return
   If Trim(txtScratchPad.text) = "" Then 
       ScratchPadItem_New()       
   Else
      Hbox_ScratchPadNotes.Padding = 1
      If pk_scratchpad = -1 Then
      '   lblScratchPad.text = "New item"
      Else
      '   lblScratchPad.text = "Edit Note"
      End If
   
   End If
End


Public Sub txtScratchPad_Keypress()
   '--------------------------------------------------------------
   'A key has been pressed, user is typing in the entry textbox   
   'If consult is not valid, suppress the keypress ascii character
   'so that nothing is visible to the user
   'RELATED ROUTINE: Save()
   '---------------------------------------------------------------
   If IsNull(currentconsult) Then 
         Stop Event
         Return
   End If
   '-------------------------------------------------------------
   'But if it is a valid consult, and user hit <enter> then 
   'save the text as either a new item, or update it if existing
   '-------------------------------------------------------------
   If key.code = key.return Then
        Save()
  End If
End

Public Sub mnuScratchPad_Click()
   '-----------------------------------------------------------
   'The popup menu has been activated, user has selected one of
   'the options, each of which as a tag in the IDE gui code
   '-----------------------------------------------------------
 ' Dim F As New Font
   cvwScratchPad.MoveCurrent()
   Select Case Last.tag
   Case "edit"
         Edit()
   Case "filter current user"
        iUserFilter = Const.cScopeCurrentUser
        Refresh()
        Message.Info("Feature not implemented yet")
   Case "filter all users"
         iUserFilter = Const.cScopeAllUsers
         Refresh()
         Message.Info("Feature not implemented yet")
   Case "font"
         Try cvwScratchPad.Font = modUtil.Change_Fonts(cvwScratchPad.Font)
         If Not Error Then Settings_Save()
   Case "help"
         Message.Info("Feature not implemented yet")
   Case "view in context"
         Message.Info("Feature not implemented yet")
   Case "audit trail all"
         iAuditFilter = Const.cDisplay_All
         Audit_Trail()
   Case "audit trail single"
         iAuditFilter = Const.cDisplay_Current
         Audit_Trail()
   Case Else
         modScratchPadMenu.Process(currentconsult!scratchpad[pk_scratchpad], Last.tag, currentconsult)
         Refresh()
    

   End Select
End

Public Sub Audit_Trail()
  '------------------------------------------------------------
  'Displays an audit trail of a single entry
  'or the entire scratch pad according to value of iAuditFilter
  '= const.Const.cDisplay_All orConst.cDisplay_Current
  '------------------------------------------------------------
  Dim audit_rows As Collection
  If iAuditFilter = Const.cDisplay_All Then
      audit_rows = modScratchPadDBI.View_AuditTrail(currentconsult!patient!fk_patient)
  Else
      audit_rows = modScratchPadDBI.View_AuditTrail(currentconsult!patient!fk_patient, pk_scratchpad)
  End If
  If audit_rows.count Then
       FClinical.WebBrowser_show(modAuditDBI.Audit_HTML_Construct(audit_rows, "Scratchpad").GetData())
  End If 
End

Public Sub Delete()
   '-----------------------------------------------
   'Delete current scratch pad item enforcing audit
   '-----------------------------------------------
  
  
  
End

Public Sub Edit()
   '-------------------------------------------------------------------
   'WHAT FOR         :User attempting to edit one row of the columnview
   '                 which contains all existing scratch pad items
   'HOW THIS WORKS:  Scatchpad text  loaded into the editing textbox
   '                 as it is an edit, set bEditing flag for Save()
   '                 focus is then set on the textbox ready for user
   '                 input.
   'RELATED ROUTINES : cvwScratchPad_Select sets pk_scratchpad
   '                 : Save() to save any changes
   '-------------------------------------------------------------------
   scratchpadItem = New Collection
   scratchpadItem!pk_scratchpad = pk_scratchpad
   scratchpadItem!fk_lu_scratchpad_status = currentconsult!scratchpad[pk_scratchpad]!fk_lu_scratchpad_status
  ' txtScratchPad.text = currentconsult!scratchpad[pk_scratchpad]!note
  ' lblScratchPad.text = "Edit Item"
   bediting = True
   'allow editing of a scratchpad item if done on the same day: FIXME ONLY IF STAFF MEMBER IS THE SAME
   fk_progressnote = -1                   'default to new progress note
   If Not IsNull(currentconsult!scratchpad[pk_scratchpad]!fk_progressnote) Then
      If Format(currentconsult!scratchpad[pk_scratchpad]!consult_date, "dd/mm/yyyy") = Format(Now, "dd/mm/yyyy") Then
         fk_progressnote = currentconsult!scratchpad[pk_scratchpad]!fk_progressnote
      End If
   End If   
    txtScratchPad.SetFocus()
 
End

Public Sub cvwScratchPad_Select()
   '-----------------------------------------------
   'User has clicked on a line in the scratchpad
   'set pk_scratchpad to clin_consult.scratchpad.pk
   'this will be used in the Save() routine
   '-----------------------------------------------
   If cvwScratchPad.count = 0 Then Return 
    EditArea_Clear()   'could have been in process of editing
    cvwScratchPad.MoveCurrent
    pk_scratchpad = cvwScratchPad.Item.key
   ' iCurrentkey = cvwScratchPad.Item.key
   
End

Public Sub cvwScratchPad_Menu()
   '--------------------------------------------------------
   ' Popup a menu on the scratch pad with the following items
   ' If a consult is in existance, and there are scratch pad
   ' items visible to the user
   '  
   '    edit
   '    delete
   '    complete
   '    complete with explanation
   '    filter current user
   '    filter all users       
    '  mnuScratchPad_HistoryEntire
   '    font
   '    help
   '    show history
   '    view in context
   '
   ' RELATED ROUTINE:   mnuScratchPad_Click()
   '---------------------------------------------------------  
   Dim menuitem As Menu
   Dim x As Integer
   If Not currentconsult Then Return 
   
   If cvwScratchPad.count = 0 Then
      '-------------------------------------------------------------
      'allow the menu, but only couple of things     
    '  mnuScratchPad_HistoryEntirew entire pad history or above
      '-------------------------------------------------------------
      For Each menuitem In mnuScratchPad.Children
         Select Case menuitem.Tag
         Case "audit trail all", "help", "exit"
            menuitem.Enabled = True  
         Case Else        
            menuitem.Enabled = False  
         End Select
       Next
    Else
      '-------------------------------------
      'Turn them back on it already disabled 
      '-------------------------------------
        For Each menuitem In mnuScratchPad.Children
             menuitem.Enabled = True
             'If Menitem.tag <> "edit" Then
       Next
    End If
    EditArea_Clear()             'could be in middle of editing
    cvwScratchPad_Select()       'set the key again
    mnuScratchPad.Popup()
End
Public Sub Clear()
   '-------------------------------------------
   'Clear the scratchpad list and entry textbox
   'and remove data_changed indicator
   'red margin(mayNot have been red
   '-------------------------------------------
   If bExit Then Return
   txtScratchPad.Clear()
   cvwScratchPad.Clear()
   Vbox_ScratchPadItems.Padding = 0
End

Public Sub Mark_Completed()
   '---------------------------------------------------------------------
   'Mark the highlighted scratchpad item as completed with no explanation
   '---------------------------------------------------------------------  
  
  
End

Public Sub Mark_Completed_With_Explanation()
   '---------------------------------------------------------------------
   'Mark the highlighted scratchpad item as completed with  explanation
   '---------------------------------------------------------------------  
  
  
  
End

Public Function Consult_Exists() As Boolean
   '-----------------------------------------------------
   'If the consult as been passed to the form return true
   '-----------------------------------------------------  
  If IsNull(currentconsult) Then Return False
  Return True
  
End
Public Sub Save()
   '------------------------------------------------------------------------
   'Save the current scratch pad item, save a progress note to general notes
   'If user has the audit trail open -refresh that as well.
   'when move to emulated browser technology this will be more complex
   '------------------------------------------------------------------------
   Dim sProgressNotes As String
   Dim fk_patient_in_FClinical As Integer
   Dim linkage As New Collection 
   If Not Valid_ScratchPadItem() Then Return 
   If bEditing = False Then 
      pk_scratchpad = -1
      fk_progressnote = -1
   End If
  
   ScratchPadItem!note = Trim(txtScratchPad.text)
   sProgressNotes = "<B>scratch pad note: </B>" & Trim(txtScratchPad.text)
   modDBConnect.BeginTrans()
      fk_progressnote = modConsultDBI.ProgressNote_Save(currentconsult, sProgressNotes, const.cSection_ScratchPad, fk_progressnote, "", 0, False)
      ScratchPadItem!fk_progressnote = fk_progressnote
      pk_scratchpad = modScratchPadDBI.ScratchPad_Save(currentconsult, pk_scratchpad, ScratchPadItem)   
      'experimental - linking from INbox a document to this scratch pad item FIXME
      If fk_table_row Then
         modInboxDBI.Link_Document_Action(Schema, table, pk_scratchpad, fk_table_row)
      Endif
   modDBConnect.CommitTrans()
   Refresh()
    
      If FClinical.IsSamePatient(currentconsult!patient!fk_patient) Then
            FClinical.Refresh_AllPreviousNotes()
            If FClinical.WebBrowser_IsVisible() Then
               Audit_Trail()
            End If   
      End If     
  
   ScratchPadItem_New()
  
End


Public Function Valid_ScratchPadItem() As Boolean
   '------------------------
   'Ensure some text present
   '------------------------  
  If Trim(txtScratchPad.text) = "" Then Return False
  Return True   
End



Public Sub Settings_Save()


       Settings["Scratchpad/cvwScratchPad.font"] = cvwScratchPad.Font.ToString()
   

End

Private Sub Settings_Load()


      Try cvwScratchPad.Font = Font[Settings["Scratchpad/cvwScratchPad.font"]]
   

End


Public Sub Refresh()
   '-----------------------------------------------------------------------
   'Temporary as I'm going to merge scratch pad and tasks
   '-----------------------------------------------------------------------
   Dim item As Collection
   If Not currentconsult Then Return 
   currentconsult.Refresh("staff_tasks")
   cvwScratchPad.Clear()
   For Each item In currentconsult!staff_tasks
        '  If iUserFilter = const.cScopeCurrentUser Then
        '    If item!fk_staff = modDBConnect.currentUser!fk_staff Then
        ''      cvwScratchPad.Add(item!pk_scratchpad, 0)
         '     cvwScratchPad[item!pk_scratchpad][0] = Format(Item!consult_date, "dd/mm/yyyy")
         '     cvwScratchPad[item!pk_scratchpad][1] = Item!note
        '    End If
        ' Else
              cvwScratchPad.Add(item!pk_view, 0)
              cvwScratchPad[item!pk_view][0] = Format(Item!date_component_logged, "dd/mm/yyyy")
              cvwScratchPad[item!pk_view][1] = Item!task
              cvwScratchPad[item!pk_view][2] = Item!details
         ' End If
      Next
   Vbox_ScratchPadItems.Padding = 0  
   If FClinical.WebBrowser_IsVisible() Then
       Audit_Trail()
   End If
End


Public Sub Refresh_old_only_scratchPad()
   '-----------------------------------------------------------------------
   'Fetches all scratchpad items and loads into columnview
   'to allow users to see who did this.
   'HOW THIS WORKS:Just referencing currentconsult!scratchpad
   '               will fetch from database if not cached
   '               scope = const.cScopeCurrentUser or const.cScopeAllUsers
   'FIXME         : put staff code into the view to allow user
   '              : to see who logged the item
   '-----------------------------------------------------------------------
   Dim item As Collection
   If Not currentconsult Then Return 
   currentconsult.Refresh("scratchpad")
   cvwScratchPad.Clear()
   For Each item In currentconsult!scratchpad
          If iUserFilter = const.cScopeCurrentUser Then
            If item!fk_staff = modDBConnect.currentUser!fk_staff Then
              cvwScratchPad.Add(item!pk_scratchpad, 0)
              cvwScratchPad[item!pk_scratchpad][0] = Format(Item!consult_date, "dd/mm/yyyy")
              cvwScratchPad[item!pk_scratchpad][1] = Item!note
            End If
          Else
              cvwScratchPad.Add(item!pk_scratchpad, 0)
              cvwScratchPad[item!pk_scratchpad][0] = Format(Item!consult_date, "dd/mm/yyyy")
              cvwScratchPad[item!pk_scratchpad][1] = Item!note
          End If
      Next
   Vbox_ScratchPadItems.Padding = 0  
   If FClinical.WebBrowser_IsVisible() Then
       Audit_Trail()
   End If
End

Public Function Consult_Set_Null() 
   '-----------------------------------------------------
   'If the consult as been passed to the form return true
   '-----------------------------------------------------  
  currentconsult = Null
End

Public Sub Init(cons As CConsult)
   '-------------------------------------------------------------
   'set current consult and scratch pad columns, refresh the list
   '-------------------------------------------------------------
   currentconsult = Cons  

   With cvwScratchPad
       .Clear()
       .Columns.count = 3
       .Columns[0].width = 80
       .Columns[1].width = 200
       Try .Font = Font[Settings["Scratchpad/cvwScratchPad.font"]]

   End With
   txtScratchPad.Enabled = True
  
   Try Settings_Load()
   iUserFilter = Const.cScopeAllUsers
   iAuditFilter = Const.cDisplay_All
   Refresh()
   ScratchPadItem_New()
End

Public Sub ScratchPadItem_New()
   '---------------------
   'Clears the input area
   '---------------------
   EditArea_Clear()
  ' lblScratchPad.text = "New Item"
 
End
Public Sub EditArea_Clear()
   '---------------------
   bExit = True
  ' pk_scratchpad = -1
   Hbox_ScratchPadNotes.Padding = 0
   txtScratchPad.text = ""
   bediting = False
   ScratchPadItem = New Collection
   bExit = False  
End 


Public Sub tbHelp_Click()

  FClinical.Help_Show(Application.Path &/ "help/the-scratch-pad.html", "Help:ScratchPad", True)
End
