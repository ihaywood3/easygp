' Gambas module file

' Copyright (C) 2008-2012 Dr Richard TERRY
'
' Database accessing routines for scratchpad items

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------

Public Function Get(pk_patient As Integer) As Collection
   '--------------------------------------------------------------------
   'Fetches all scratchpad items  from the backend which are active
   'i.e clin_consult.scratchpad.fk_lu_scratchpad_status = 1
   '--------------------------------------------------------------------
   Dim sql As String
   sql = "Select * from clin_consult.vwScratchpad WHERE fk_patient = " & pk_patient
   sql &= " AND fk_status = " & const.cScratchPadItem_Active
   Return modDBConnect.exec_query_collection(sql)
End

Public Sub ScratchPad_Save(currentconsult As Cconsult, pk_scratchpad As Integer, ScratchpadItem As Collection) As Integer
   '--------------------------------------------------------------------
   'Save the current scratch pad item
   'note that capitalisation is important here
   'e.g currentconsult!ScratchPad <> currentconsult!scratchpad (correct)
   '--------------------------------------------------------------------
   Dim audit As New Collection 
 
   If pk_scratchpad < 0 Then
      '--------------------
      'new scratch pad item
      '--------------------
       ScratchpadItem!fk_consult = currentconsult.GetPK()
       ScratchpadItem!fk_lu_status = const.cScratchPadItem_Active
       pk_scratchpad = modDBConnect.insert("clin_consult.scratchpad", ScratchpadItem) 
       audit!data_summary = ScratchpadItem!note
       audit!fk_action = const.cAuditAction_Insert
       audit!reason = "insert"
   Else
      '-----------------------
      'changed scratchpad item
      '-----------------------
      If modDBConnect.update("clin_consult.scratchpad", currentconsult!scratchpad[pk_scratchpad], ScratchpadItem, "pk_scratchpad") ' save to backend and update the collection in RAM too
         audit!data_summary = ScratchPadItem!note
         audit!fk_action = const.cAuditAction_Change
         audit!reason = "edit"
      End If
    End If
   If audit.count Then 
      audit!fk_row = pk_scratchpad
      audit!fk_consult = currentconsult.GetPK()
      audit!fk_section = const.cSection_ScratchPad
      modConsultDBI.Make_Audit(audit, "clin_consult", "scratchpad")
   End If
   Return pk_scratchpad
End

Public Sub Mark_DealtWith(pk_scratchpad As Integer, iAuditAction As Integer, Optional bDeleted As Boolean)
   '------------------------------------------------
   'Marks the scratch pad item as Dealt with
   'iAuditAction = clin_consult.lu_scratchpad_status 
   '------------------------------------------------  
   Dim sql As String
   sql = "UPDATE clin_consult.scratchpad SET fk_lu_status="
   sql &= iAuditAction & " WHERE pk =" & pk_scratchpad
   modDBConnect.exec_query(sql)
End

Public Sub View_AuditTrail(fk_patient As Integer, Optional pk_scratchpad As Integer) As Collection 
   '------------------------------------------------------------------
   'if pk_scratchpad then display just the audit history for that item
   'otherwise the entire scratchpad history
   '------------------------------------------------------------------
   Dim sql As String
   sql = "Select * from clin_consult.vwScratchPadAudit where fk_patient =" & fk_patient
   If pk_scratchpad <> 0 Then
      sql &= " AND fk_row = " & pk_scratchpad
   End If   
   Return modDBConnect.exec_query_collection(sql)
End
