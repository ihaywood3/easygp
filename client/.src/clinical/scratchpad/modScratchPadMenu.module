' Gambas module file
' Copyright (C) 2008-2011 Dr Richard TERRY
'
' Scratchpad popup menu processing

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
Private iAuditAction As Integer

Public Sub Process(ScratchPadItem As Collection, tag As String, currentconsult As Cconsult)
   '------------------------------------------
   'Process some of the auditable menu items
   'For the moment, unlike FRecalls popup menu
   'I've left these tags as strings
   '   clin_audit.audit:
   '   tablename text,
   '   fk_table integer,
   '   fk_row integer,
   '   fk_consult integer,
   '   fk_lu_reason integer,
   '   fk_action integer,
   '   fk_section integer,
   '   data_summary text,
   'FIXME ?TAG ?LAST.TAG?WHY
   '------------------------------------------
   Dim bDeleted As Boolean
   Dim bIncludeSummaryInProgressNotes As Boolean = True 
   Dim audit As New Collection
   audit!fk_row = ScratchPadItem!pk_scratchpad
   audit!fk_consult = currentconsult.GetPK()
   audit!fk_section = const.cSection_ScratchPad
   audit!data_summary = ScratchPadItem!note   ' & " logged on " & Format(ScratchPadItem!consult_date, "dd/mm/yyyy")

   Select Case tag
   Case "delete"
   
         '--------------------------------------------------------------------
         'scratch pad could be deleted either during consulation (ie mistake)
         'in which case don't need FAudit to popup and get the reason
         'as we are allowed to change out mind within the consultation.
         'or at a later date
         '--------------------------------------------------------------------
         iAuditAction = const.cAuditAction_MarkDeleted
         If ScratchPadItem!fk_consult <> currentconsult.GetPK() Then
            FAudit.Init(ScratchPadItem, Const.cSection_ScratchPad, iAuditAction, currentconsult)
            If Not FAudit.ShowModal() Then Return 
                audit!reason = Last.tag & ":<BR> - " & Lower(const.globalstring)
            If iAuditAction = const.cAuditAction_Delete Then bDeleted = True   
         Else
             audit!reason = const.sAuditAction[const.cAuditAction_Reversal]
         End If
         bDeleted = True
   Case "complete"
    
      iAuditAction = const.cAuditAction_Completed
      audit!reason = const.sAuditAction[const.cAuditAction_Completed]
    
   Case "complete with explanation"
      iAuditAction = const.cAuditAction_CompletedWithExplanation
      FAudit.Init(ScratchPadItem, Const.cSection_ScratchPad, iAuditAction, currentconsult)
      If Not FAudit.ShowModal() Then Return 
      audit!reason = Last.tag & ":<BR> - " & Lower(const.globalstring)
   End Select
   ScratchPadItem!fk_status = iAuditAction
   audit!fk_action = iAuditAction
   '------------------------------------------------------
   'Ok, now action the menu item and create an audit trail
   '------------------------------------------------------
   modScratchPadDBI.Mark_DealtWith(ScratchPadItem!pk_scratchpad, iAuditAction, bDeleted) 
   modConsultDBI.Make_Audit(audit, "clin_consult", "scratchpad")
   modDBConnect.CommitTrans()
End

