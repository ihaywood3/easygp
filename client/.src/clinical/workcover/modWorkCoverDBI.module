' Gambas module file
' Copyright (C) 2008,2009 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
 Public sql As String
 Public $Result As Result
 
 
' Public Sub Claims_get1(patient As cPatient, cv As ColumnView)
'    '--------------------------------------------------------------------------
'    'Gets all the patients workcover claims, and loads the cvwWorkcover control
'    'clin_workcover.
'    '--------------------------------------------------------------------------
'    Dim picRedDot As Picture
'    Dim claim As cWorkCoverClaim
'    Dim visit As cWorkCoverVisit
'     
'    Dim current_fk_claim As Integer
'    Dim last_fk_claim As Integer
'    Dim x As Integer
'    Dim y As Integer
'    Dim z As Integer 
'     Dim claimcount As Integer
'      picRedDot = Picture["icons/12/red_dot.png"]
'   sql = "Select * from clin_workcover.vwWorkcover  WHERE "
'   sql = sql & "fk_patient =" & patient.pk_patient
'   ' Print sql
'   $Result = modDBConnect.exec_query(sql)
'   
'   cv.Clear()
'   cv.columns.count = 1
'   patient.workcover_claims = New Collection
'   If $Result.Count
'      ' ' Print "found ", $Result.count, "work cover results"
'       For Each $Result
'           Dec z
'           ' ' Print "z is", z
'           current_fk_claim = $Result!fk_claim
'           If current_fk_claim <> last_fk_claim Then 
'             '--------------------------------------------------------
'             'This is a new claim, add to claims collection
'             'and create a visits collection for this claim
'             'FIXME THE MIXUP OF FK_CLAIM AND PK_CLAIM
'             '--------------------------------------------------------
'             ' ' Print "The claim is", $Result!identifier
'             last_fk_claim = current_fk_claim
'             claim = New cWorkCoverClaim
'             claim.data_changed = False
'             claim.pk_claim = $Result!fk_claim
'             claim.fk_consult = $Result!fk_consult_claim
'             claim.start_date = $Result!start_date
'             claim.claim_number = $Result!claim_number
'             claim.identifier = $Result!identifier
'             claim.fk_occupation = $Result!fk_occupation
'             claim.occupation = $Result!occupation
'             claim.contact_person = $Result!contact_person
'             claim.memo = $Result!memo
'             claim.branch = New cBranch
'             claim.branch.pk_branch = $Result!pk_branch
'             claim.branch.branch = $Result!branch
'             claim.branch.address = New cAddress
'             claim.branch.address.pk = $Result!pk_address
'             claim.branch.address.street = $Result!street
'             claim.branch.address.suburb = $Result!town
'             claim.branch.address.postcode = $Result!postcode
'             claim.branch.organisation = New cOrganisation
'             claim.branch.organisation.pk_organisation = $Result!pk_organisation
'             claim.branch.organisation.organisation = $Result!organisation
'             claim.hours_week_worked = $Result!hours_week_worked
'             claim.date_injury = $Result!date_injury
'             claim.mechanism_of_injury = $Result!mechanism_of_injury
'             patient.workcover_claims.Add(claim, claim.pk_claim)
'             ' ' Print "x is", x, "adding claim", claim.identifier
'             
'             cv.add(claim.pk_claim, claim.identifier)
'            
'             patient.workcover_claims[claim.pk_claim].visits = New Collection
'              '------------------------
'             'add the first visit
'             '-----------------------
'             x = 0
'             visit = New cWorkCoverVisit   
'             Visit_Fill($Result, visit)
'            ' patient.workcover_claims[claim.pk_claim].visits.Add(visit, Str$(x))
'              patient.workcover_claims[claim.pk_claim].visits.Add(visit, visit.pk_visit)
'            ' cv.Add(claim.pk_claim, 0)
'            ' cv[claim.pk_claim][0] = Format(claim.start_date, "dd/mm/yyyy")   
'            ' cv[claim.pk_claim][1] = claim.identifier
'             ' ' Print "visit.pk_visit after if", visit.pk_visit, "adding visit", visit.date, "claim", claim.pk_claim
'            ' cv.add(z, visit.date & " " & visit.visit_type & " " & visit.diagnosis, picFemale, claim.pk_claim)
'             cv.add("-" & Str(visit.pk_visit), visit.date & " " & visit.visit_type & " " & visit.diagnosis, picRedDot, claim.pk_claim)
'        
'           Else
'             '-------------------------------------------------------
'             'It is the same claim, so just add the next visit
'             '-------------------------------------------------------
'             Inc x
'             visit = New cWorkCoverVisit
'             Visit_Fill($Result, visit)
'              ' ' Print "visit.pk_visit is after else", visit.pk_visit, "adding visit", visit.date, "claim", claim.pk_claim
'              'cv.add(z, visit.date & " " & visit.visit_type & " " & visit.diagnosis, picFemale, claim.pk_claim)
'                   cv.add("-" & Str(visit.pk_visit), visit.date & " " & visit.visit_type & " " & visit.diagnosis, picRedDot, claim.pk_claim)
'        
'  
'             'patient.workcover_claims[claim.pk_claim].visits.Add(visit, Str$(x))
'              patient.workcover_claims[claim.pk_claim].visits.Add(visit, visit.pk_visit)
'           End If  
'           
'        Next   
'    End If
'    
' End

Public Function Claims_Get(fk_patient As Integer) As Collection 
  '--------------------------------------------------------------------------
  'Gets all the patients workcover claims, and loads the cvwWorkcover control
  'clin_workcover.
  '--------------------------------------------------------------------------
  Return modDBConnect.exec_query_collection("Select * from clin_workcover.vwWorkcover  WHERE fk_patient =" & fk_patient)

End

Public Function Save(currentconsult As Cconsult, view_key As Integer, claim As Collection, visit As Collection) As Integer
    '------------------------------
   'Check if the occupation exists
   '------------------------------
    If claim!fk_occupation = 0 Then  'could be null ? if so will crash
      claim!fk_occupation = modCommonDBI.occupation_save(claim!occupation)
    End If
    Try claim.Remove("occupation")
   
   If view_key < 0 Then 
      '----------------------------------------------------------------------------------------
      'If no view_key this is an entirely new claim, so both claim part and visit part are new
      '----------------------------------------------------------------------------------------    
      claim!fk_consult = currentconsult.GetPK()
      claim!fk_claim = modDBConnect.insert("clin_workcover.claims", claim)
      '----------------------------------------------------
      'if this is a new claim it will always be a new visit
      '----------------------------------------------------
      visit!fk_claim = claim!fk_claim
      visit!fk_consult = claim!fk_consult
      visit!fk_visit = modDBConnect.insert("clin_workcover.visits", visit)
   Else
     '-----------------------------------------------------------------------------------
     'Record exists in the view, so will need to update claim details (if changed) first
     '----------------------------------------------------------------------------------
     If modDBConnect.update("clin_workcover.claims", currentconsult!workcover_claims[view_key], claim, "fk_claim") Then ' save to backend and update the collection in RAM too
       'IAN WHAT DO TO WITH THIS FLAG
     End If
     '------------------------------------------------------------------------------------------
     'Now, there **must be** a new claim, or if this is the same date and visit!pk_visit exists
     'we must have altered the visit on the same day, so allow a change.
     'FIXME DO THIS
     '----------------------------------------------------------------------------------------- 
     If visit!fk_visit Then
         visit.remove("fk_visit")
         modDBConnect.update("clin_workcover.visits", currentconsult!workcover_claims[view_key], visit, "fk_visit")
     
     Else
         visit!fk_claim = claim!fk_claim
         visit!fk_consult = currentconsult.GetPK() 'each visit dated 'today'
         visit!fk_visit = modDBConnect.insert("clin_workcover.visits", visit)
     End If  
   End If
   Return claim!fk_claim
  
  
End

