' Gambas class file

' Copyright (C) 2008-2013 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
Public sql As String
Public $Result As Result
Public terms_by_keyword As Collection
Public terms_by_natural_language As Collection

Public Sub Run() As Boolean

  Return Not Me.ShowModal()

End

Public Sub btnOK_Click()

  Me.Close(True)

End

Public Sub btnCancel_Click()

  Me.Close

End






Public Sub form_Open()
  Dim logon As FrmLogon
  
  Me.Center()
  If IsNull(modDBConnect.currentUser) Then
    logon = New FrmLogon
    logon.ShowModal()  
  End If
  
  
End





Public Sub txtKeyword_KeyRelease()


End
'Public Sub condition_Get_ICPC2(txtCondition As TextBox, listview1 As ListView, lblNewCondition As Label, terms As collection) 

Public Function keyword_term_Get_ICPC2() As Collection
        '-------------------------------------------------------------------
      'Condition unlike say countries does not default to auto-completion 
      'with a recordset of 1 because must allow entry of new terms
      'unless the user hits enter whilst listview1 has contents
      'in which case will search the list for match and use that
      'FIX ME - as this routine is used all over the place put it in a global
      'mod and just pass it the parameters
      '-------------------------------------------------------------------
      Dim $Result As Result
      Dim aTerm As CICPC2Term
     
      ListView1.Clear()
      terms_by_keyword = New Collection
      If Trim(txtSearch.text) = "" Then
        ' listview1.Visible = False
        ' lblNewCondition.Visible = False
         Return
      End If
      sql = "select * from  coding.vwicpc2terms_orig WHERE keyword ILIKE $$"
      sql &= Trim(txtSearch.text) & "%$$ AND status <> 'I' order by term"
      $Result = modDBConnect.exec_query(sql)
    
     If $Result.count Then 
        listview1.Clear
       ' lblNewCondition.Visible = False
         For Each $Result 
            aTerm = New CICPC2Term
            With aTerm
               .pk_term = $Result!pk_term
            '   .combined_term_code = $Result!combined_term_code
               .icpc_code = $Result!icpc_code
               '.keyword = $Result!keyword
               .natural_language_term = $Result!natural_language_term
               .replacement = $Result!replacement
               .status = $Result!status
               .term = $Result!term 
               .term_code = $Result!term_code   
            End With
            terms_by_keyword.Add(aTerm, listview1.count)
          '  listview1.Add(listview1.count, $Result!natural_language_term)
            listview1.Add(listview1.count, $Result!term)
          Next 
           
          ' listview1.Raise
          ' listview1.Visible = True
     ' Else 
        ' listview1.Visible = False
       '  lblNewCondition.visible = True
      End If  
  
  
End
Public Function natural_language_term_Get_ICPC2() As Collection
        '-------------------------------------------------------------------
      'Condition unlike say countries does not default to auto-completion 
      'with a recordset of 1 because must allow entry of new terms
      'unless the user hits enter whilst listview2 has contents
      'in which case will search the list for match and use that
      'FIX ME - as this routine is used all over the place put it in a global
      'mod and just pass it the parameters
      '-------------------------------------------------------------------
      Dim $Result As Result
      Dim aTerm As CICPC2Term
     
      listview2.Clear()
      terms_by_natural_language = New Collection
      If Trim(txtSearch.text) = "" Then
        ' listview2.Visible = False
        ' lblNewCondition.Visible = False
         Return
      End If
      sql = ""


     "SELECT DISTINCT "
        "  coding.icpc2_terms.pk as pk_term,"
        "  coding.icpc2_terms.term,"
        "  coding.icpc2_terms.natural_language_term,"
        "  coding.icpc2_terms.icpc_code,"
        "  coding.icpc2_terms.term_code,"
        "  coding.icpc2_terms.status,"
        "  coding.icpc2_terms.replacement "
        "FROM"
        "  coding.icpc2_terms "
        "WHERE"
        "  coding.icpc2_terms.status <> 'I' AND "
        "  coding.icpc2_terms.natural_language_term ILIKE $$%"
       
      
      
      
      sql &= Trim(txtSearch.text) & "%$$"
      $Result = modDBConnect.exec_query(sql)
    
     If $Result.count Then 
        listview2.Clear
       ' lblNewCondition.Visible = False
         For Each $Result 
            aTerm = New CICPC2Term
            With aTerm
               .pk_term = $Result!pk_term
            '   .combined_term_code = $Result!combined_term_code
               .icpc_code = $Result!icpc_code
               '.keyword = $Result!keyword
               .natural_language_term = $Result!natural_language_term
               .replacement = $Result!replacement
               .status = $Result!status
               .term = $Result!term 
               .term_code = $Result!term_code   
            End With
            terms_by_natural_language.Add(aTerm, listview2.count)
          '  listview2.Add(listview2.count, $Result!natural_language_term)
            listview2.Add(listview2.count, $Result!natural_language_term)
          Next 
           
          ' listview2.Raise
          ' listview2.Visible = True
     ' Else 
        ' listview2.Visible = False
       '  lblNewCondition.visible = True
      End If  
  
  
End

Public Sub ListView1_Click()

  listview1.MoveCurrent
  txtkeyword.text = terms_by_keyword[listview1.Item.key].keyword
  txtterm.text = terms_by_keyword[listview1.Item.key].term
  txtnaturallanguageTerm.text = terms_by_keyword[listview1.Item.key].natural_language_term
  txtcode.text = terms_by_keyword[listview1.Item.key].icpc_code & terms_by_keyword[listview1.Item.key].term_code
  const.globalstring = terms_by_keyword[listview1.Item.key].pk_term
End
Public Sub ListView2_Click()

  listview2.MoveCurrent
  txtkeyword.text = terms_by_natural_language[listview2.Item.key].keyword
  txtterm.text = terms_by_natural_language[listview2.Item.key].term
  txtnaturallanguageTerm.text = terms_by_natural_language[listview2.Item.key].natural_language_term

End

Public Sub txtSearch_KeyPress()
 ' modDBIPastHistory.condition_Get_ICPC2(txtCondition, listview1, lblNewCondition, ICPC2Terms) '- keyword_term_Get_ICPC2
keyword_term_Get_ICPC2
natural_language_term_Get_ICPC2
  

End
