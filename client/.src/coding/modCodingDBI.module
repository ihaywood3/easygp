' Gambas module file
' Copyright (C) 2008,2009 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

'PLEASE DON'T DELETE THIS
' delete from coding.generic_terms1;
' insert into coding.generic_terms1 (term,code)
'     select term, icpc_code || term_code
'     
'     from coding.icpc2_terms
'     where natural_language_term <> 'n/a';
'     ;
'     
' update coding .generic_terms1 set body_system = 'A',
' code_role = 2,
'  fk_coding_system = 1,
'  active = TRUE;

Property Read coding_system As Collection
Private all_systems As Collection

Public Function Loinc_Get_component(loinc_num As String) As String
  Print "Select * from coding.lu_loinc_abbrev WHERE loinc_num=$$" & loinc_num & "$$"
  Return modDBConnect.exec_query("Select * from coding.lu_loinc_abbrev WHERE loinc_num=$$" & loinc_num & "$$")!component
  
End


Public Function Get_Terms(term As String, Optional has_limit As Boolean = False, bIncludeAll As Boolean = False, terms_limit As Integer = -1) As Collection
   '-------------------------------------------------------------------------------------
   ' search the offical coding system
   ' has_limit: true to put a limit on the search results
   ' bIncludeAll: search all coding systems on the system, not just the preferred one
   ' terms_limit: the limt to the results
   '--------------------------------------------------------------------------------------

  Dim sql As String
  
  sql = "Select * from coding.vwGenericTerms WHERE term ILIKE $$%" & term & "%$$ "
  If Not bIncludeAll Then
   sql &= "  AND preferred order by term"
  Else
    sql &= " order by preferred desc, term " ' still put default system codes first 
  End If
  If has_limit And If terms_limit > 0 Then
      sql &= " LIMIT " & terms_limit
  End If
  Return modDBConnect.exec_query_collection(sql)
  
End

Public Function ICPC2_Get_Term(term As String) As Collection
   Dim sql As String 
  sql = "  Select distinct pk_term, combined_term_code, natural_language_term "
  sql &= "From coding.vwICPC2terms where  natural_language_term ILIKE $$%" & term & "%$$  and status = 'A' "
  sql &= "order by natural_language_term LIMIT 20 " 
  Return modDBConnect.exec_query_collection(sql)
  
End

Public Function Coding_System_Check_Default_Exists() As Boolean
  
  Get_Systems()
  Return all_systems.Count > 0
End


Private Function coding_system_Read() As Collection

   Dim c As Collection
   Dim p As Collection
   
   Get_Systems()
   For Each c In all_systems
      If IsNull(p) Then p = c ' if one system only, then by definition its preferred!
      If c!preferred Then p = c 
   Next
   Return p
   
End

Private Sub Get_Systems()
  ' download the systems and cache the result
  If IsNull(all_systems) Then all_systems = modDBConnect.exec_query_collection("select * from coding.lu_systems")
  
End

