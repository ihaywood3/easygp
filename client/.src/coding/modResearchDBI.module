' Gambas module file
' Copyright (C) 2008,2009 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' Database interface for research

Private sql As String
Private $Result As Result

Public Function Grouper_Select(txt As TextBox, lv As listview) As collection
   'Searches the grouper view vwIcpcKeywordGroupers according to keyword
   '
   'From ICPC Documentation:
   '
   ' 1. Keyword entry â€“ list matching groupers
   ' The User must be able to type in a keyword and 
   ' given the choice of groupers which are linked
   '
   'e.g: If you type in diab then you would get a list of all groups
   '     related to diabetes:
   '                          RETINOPATHY
   '                          DIABETES (ALL)
   '                          DIABETES (NON GESTATIONAL)
   '                          GESTATIONAL DIABETES
   '                          DIABETES INSULIN DEPENDANT
   '           ETC ETC
   '  from this the user can select what it is they want to search for
   '
   ' Finds  grouper_descriptions like keyword
   ' loads these into the calling form grouper collection
   ' displays grouper description in popup listbox
   ' adds tag of calling textbox as the listbox tag
   '------------------------------------------------------------- 
   Dim KeywordGrouper As cICPCKeywordGrouper
   Dim KeywordGroupers As Collection                 
   sql = "Select * From coding.vwIcpcKeywordGroupers "
         "WHERE keyword ILIKE $$"
   sql &= Trim(txt.text) & "%$$"
   Print sql
   lv.Clear()
   KeywordGroupers = New collection
   $Result = modDBConnect.exec_query(sql)
   If $Result.count Then
      For Each $Result
         KeywordGrouper = New cICPCKeywordGrouper
         With KeywordGrouper 'note not using pk at moment
            .keyword = $Result!Keyword
            .grouper = $Result!grouper
            .grouper_description = $Result!grouper_description
        End With
         KeywordGroupers.Add(KeywordGrouper, lv.count)
        lv.Add(lv.count, $Result!grouper_description)
       
      Next
      lv.tag = txt 'the textbox becomes the tag
      lv.Raise()
      lv.Visible = True
   End If
   Return KeywordGroupers
  
End

Public Function Patients_Get_For_Grouper(grouper As String, cv As ColumnView) As Collection
'   '   Gets all patients with a grouper eg G40 = all diabetics
'   Dim patients As Collection
'   Dim patient As cPatient
'   Dim iAddressOnlyRow As Integer                  'counter for address only row
'  
'   Dim iRow As Integer
'   Dim icols As Integer                            'column counter for cvpatients list
'   Dim strKey As String                            'hold data_patients.pk
'   Dim $AddressResult As Result                    'Result object for addresses
'   Dim $CommsResult As Result                    'Result object for addresses
' '  DIM $ResultPatients AS result                   
'   Dim i As Integer
'   Dim address As cAddress
'   Dim comm As cComm
'   Dim irowcounter As Integer
'   Dim iLastPatient_pk As Integer
'   Dim iAddressCount As Integer
'    Dim firstname As Integer = 0
'   Dim surname As Integer = 1
'   Dim sex As Integer = 2
'   Dim Birthdate As Integer = 3
'   Dim age As Integer = 4
'   Dim street As Integer = 7
'   Dim phone As Integer = 9
'    Dim health_issue As Integer = 10
'   sql = "Select * from research.vwHealthIssues_Groupers where grouper = $$"
'   sql &= grouper & "$$ ORDER BY surname,firstname"
'   Print sql
'   patients = New collection
'   cv.Clear()
'  With cv
'    .columns.Count = 11
'    .Columns[firstname].width = 100
'    .Columns[surname].width = 100
'    .Columns[sex].width = 20
'    .Columns[Birthdate].width = 20
'     .Columns[street].width = 50
'     '.columns[health_issue].width = 200
'   End With
'   
'   $Result = modDBConnect.exec_query(sql)
'   If $Result.count Then                           'If patients exist
'           For Each $Result   
'                     'for each patient record add the person to the persons list
'                    ' strKey = Str$(irowcounter) & "_" & Str$($Result!pk)     'key for cvpatient.current.key
'                   '  strKey = Str$($Result!pk_person)
'               ' Print " $Result!pk_person iLastPatient_pk ", $Result!pk_person, iLastPatient_pk 
'              'This below essentially equates to the logic
'              'If this current patients recordset is a new patient then
'              'add a new row to the cvpatients list with
'              'patients name/sex + first address they have
'               If $Result!pk_person <> iLastPatient_pk Then
'                     iLastPatient_pk = $Result!pk_person
'                     iAddressCount = 0
'                  
'                     strKey = Str$($Result!pk_person & "_" & Str$(iAddressCount))
'                     ' Print "in PLF, strKey = ,", strKey, "PK_person", $Result!pk_person
'                    cv.Add(strKey, 0)     'add new row, key = data_patients.pk
'                    cv[strKey][0] = $Result!surname   'add field to each column   
'                    cv[strKey][1] = $Result!firstname 'note nothing put into
'                    cv[strKey][2] = $Result!sex       'column 5 (use as spacer)
'                    cv[strKey][3] = $Result!Birthdate
'                    cv[strKey][10] = $Result!combined_term_code
'                     'Finally fill the patient class
'                     '***NB: patient.key = data_patient.pk = cvpatients.current.key
'                     'that way later when a user clicks on a row in the persons
'                     'list, we read the key, and then the correct record from the
'                     'patients array
'                     patient = New cPatient         'create a new patient 
'                     '
'                     patient.pk_patient = $Result!pk_patient
'                     '
'                     ' Print "SUB=PATIENTS LIST FILL NEW:", patient.fk_family
'                     patient.Firstname = $Result!firstname
'                     patient.Surname = $Result!Surname
'                     patient.Birthdate = $Result!Birthdate
'                     patient.occupation = $Result!occupation
'                     patient.country = $Result!country
'                     patient.ethnicity = $Result!ethnicity
'                     patient.language = $Result!language
'                     '
'                     ' If Not IsNull($Result!fk_country_birth) Then
'                     '           patient.fk_country_birth = $Result!fk_country_birth
'                     ' End If
'                     ' If Not IsNull($Result!fk_language) Then
'                     '           patient.fk_language = $Result!fk_language
'                     ' End If
'                     ' 
'                     ' If Not IsNull($Result!fk_ethnicity) Then
'                     '           patient.fk_ethnicity = $Result!fk_ethnicity
'                     ' End If
'                     ' 
'                     ' If Not IsNull($Result!fk_marital) Then
'                     '   patient.fk_marital = $Result!fk_marital 
'                     ' Else 
'                     '   patient.fk_marital = 1 'unkown 
'                     ' End If
'                     ' patient.Marital = $Result!Marital & " "
'                     patient.sex = $Result!Sex
'                    ' patient.Salutation = $Result!Salutation
'                     patient.Title = $Result!title
'                   '  If Not IsNull($Result!fk_title) Then
'                    '           patient.fk_title = $Result!fk_title
'                   '  End If
'                   '  If Not IsNull($Result!fk_sex) Then
'                   '            patient.fk_sex = $Result!fk_sex
'                   '  End If
'                     '-----------------------------------------
'                     'now get all the comms for each patient
'                     'If an comms exists for this patient 
'                     'show preferred contact method in next column
'                     '-----------------------------------------
'                     ' patient.Comms = New collection
'                     ' $CommsResult = modContactsDBI.person_comms_get($Result!pk_person)
'                     ' If $CommsResult.Count Then 
'                     '           For i = 0 To $CommsResult.count - 1 
'                     '                     comm = New cComm
'                     '                     comm.pk = $CommsResult!pk
'                     '                     comm.comm_value = $CommsResult!value
'                     '                     ' Print "result = ", $CommsResult!value
'                     '                     comm.note = $CommsResult!note
'                     '                     comm.fk_type = $CommsResult!fk_type
'                     '                     comm.comm_type = $CommsResult!comm_type
'                     '                     comm.preferred_method = $CommsResult!preferred_method
'                     '                     comm.confidential = $CommsResult!confidential
'                     '                     ' Print "Comms exist"
'                     '                    cv[strKey][8] = cv[strKey][8] & "    " & $CommsResult!comm_type & ": " & $CommsResult!value
'                     '                     patient.Comms.Add(comm, i)
'                     '                     $CommsResult.MoveNext
'                     '           Next 
'                     '         '  ' Print "The number of comms for ", $Result!surname, "was ", $CommsResult.count
'                     ' Else 
'                     '            ' Print "No comms for ", $Result!surname
'                     '           ' comm = NEW cComm
'                     '           ' patient.Comms.Add(comm, 0)
'                     ' End If                            
'                     '-----------------------------------------
'                     'now get all the addresses for each patient
'                     'If an address exists for this patient 
'                     'If only one, show on same row as name
'                     'otherwise create a new row under the name, but show only address
'                     'FIXME ADD ADDRESS TO THE patient ARRAY
'                     '-----------------------------------------
'                     patient.Address = New collection
'                     $AddressResult = modContactsDBI.person_addresses_get($Result!pk_person)
'                     If $AddressResult.Count Then  
'                                'FIXME figure out how to address address array
'                                'to person object
'                                'Add the first row to the same row as name
'                                
'                                address = New cAddress
'                                address.pk = $AddressResult!pk
'                                address.fk_town = $AddressResult!fk_town
'                                address.country_code = $AddressResult!country_code
'                                address.fk_type = $AddressResult!fk_type
'                                address.geolocation = $AddressResult!geolocation
'                                address.head_office = $AddressResult!head_office
'                                address.postal_address = $AddressResult!postal_address
'                                address.postcode = $AddressResult!postcode
'                                address.preferred_address = $AddressResult!preferred_address
'                                address.state = $AddressResult!state
'                                address.street = $AddressResult!street
'                                address.suburb = $AddressResult!town
'                                patient.Address.Add(address, 0)
'                               cv[strKey][6] = $AddressResult!Street & " " & $AddressResult!Town & " " & $AddressResult!Postcode
'                                'If any more exist,add them to subsequent rows
'                                'making columns 0 to 3 empty strings
'                                 For icols = 1 To $AddressResult.Count - 1
'                                         $AddressResult.MoveNext    'move to next record
'                                         address = New cAddress
'                                         address.pk = $AddressResult!pk
'                                         address.fk_town = $AddressResult!fk_town
'                                         address.country_code = $AddressResult!country_code
'                                         address.fk_type = $AddressResult!fk_type
'                                         address.geolocation = $AddressResult!geolocation
'                                         address.head_office = $AddressResult!head_office
'                                         address.postal_address = $AddressResult!postal_address
'                                         address.postcode = $AddressResult!postcode
'                                         address.preferred_address = $AddressResult!preferred_address
'                                         address.state = $AddressResult!state
'                                         address.street = $AddressResult!street
'                                         address.suburb = $AddressResult!town
'                                         patient.Address.Add(address, icols)
'                                         'This row also has the patientspk as identifier
'                                         'though it contains no patient data
'                                         'later used to keep track of who belongs to what data
'                                         'in cvpatients_select()
'                                         Inc iAddressCount
'                                         'removed 10feb8pm, put back if dosn't work
'                                         strKey = Str$($Result!pk_person) & "_" & Str$(iAddressCount) 
'                                        
'                                          'fixme icols is ambiguous, should be row
'                                         'cv.Add(iAddressOnlyRow, 0)
'                                         cv.Add(strKey, 0)
'                                         cv[strKey][0] = "" 
'                                         cv[strKey][1] = ""
'                                         cv[strKey][2] = ""
'                                         cv[strKey][3] = ""
'                                         cv[strKey][4] = ""
'                                         cv[strKey][5] = ""
'                                         cv[strKey][6] = $AddressResult!Street & " " & $AddressResult!Town & " " & $AddressResult!Postcode
'                                          'INC iAddressOnlyRow
'                                    
'                                 Next
'                       End If
'             patients.Add(patient, Str$($Result!pk_person))
'   
'             End If        
'             Next 
'  End If
'    cv.Enabled = True                       'enable list for clicking on 
'    Return patients
End

Public Function Get_Loinc_Codes(system As String, Optional component As String = "", Optional limit As Integer = 50) As Collection
  Dim sql As String
   sql = "Select * from coding.lu_loinc_abbrev WHERE system ILIKE $$%"
  If system Then
       sql &= system
  End If
  sql &= "%$$ "
  If component Then
    sql &= " AND component ILIKE $$%" & component & "%$$ LIMIT " & limit
  End If 
  Return modDBConnect.exec_query_collection(sql)
  
  
End

Public Function Loinc_Systems_Get(Optional system As String) As collection
  Dim C As New collection
  Dim systems As New collection 
  Dim r As result
  R = modDBConnect.exec_query("Select distinct system from coding.lu_loinc_abbrev order by system")
 For Each R
    c = New collection 
    c!system = R!system
    systems.Add(c, systems.count)
  Next
  Return systems
End

