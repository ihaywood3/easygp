' Gambas class file

' Copyright (C) 2008-2014 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Property Enabled As Boolean
Property ToolTip As String
Property Foreground As Integer
Property Background As Integer

Property {Font} As Font

Public Tag As String

Private $hPanel As Panel
Private $hLabel As Label
Private $hPictureBox As PictureBox
Private $hToolButton As ToolButton
Private hGBBackground As Picture
Private tmpimage As Image
Event Click()


Public Sub _new(hContainer As Container, X As Integer, Y As Integer, W As Integer, H As Integer, sText As String, vIcon As Variant, Optional sFont As String)
  
  
  $hPanel = New Panel(hContainer) As "Panel" 'Create the container as a Panel
  $hPanel.Move(X, Y, W, H)
 ' $hPanel.Mouse = mouse.Pointing
  $hPanel.Arrangement = Arrange.Horizontal
  $hPanel.Expand = True
  $hPanel.Border = 0                         ' give panel a border? -no
  $hPanel.Padding = 1
  $hPanel.Spacing = 1
     
   $hPictureBox = New PictureBox($hPanel) As "Panel"    'add a picture box to the panel
   $hPictureBox.Expand = True
   $hToolButton = New ToolButton($hPanel) As "Panel"
          $hToolButton.Expand = False
 If TypeOf(vIcon) = gb.String Then
     $hToolButton.Picture = Picture[vIcon]
     $hToolButton.Width = Picture[vIcon].width + 10
  Else
     $hToolButton.Picture = vIcon
  Endif

  ' $hImage = NEW PictureBox($hPanel) AS "Panel"

  tmpimage = image.Gradient($hPanel.Width, $hPanel.Height, color.LightGray, color.White, image.Vertical)
  hGBBackground = tmpimage.Picture 
   draw.Begin(hGBBackground)
          
          draw.Foreground = color.Black
          'color.LightGray
          draw.font.Name = "Sans"
          draw.Font.Bold = True
          draw.Font.Size = 14
          draw.Text(sText, 10, 0)
   draw.End
   $hPictureBox.Picture = hGBBackground
End

Public Sub Panel_Enter()

  ' IF Object.Type(LAST) <> "Panel" THEN RETURN
  ' $iColor = LAST.Foreground
  ' LAST.BackGround = Color.SelectedBackground '&88D5FF&
  ' LAST.Foreground = Color.SelectedForeground '&88D5FF&

End

Public Sub Panel_Leave()

  ' IF Object.Type(LAST) <> "Panel" THEN RETURN
  ' LAST.BackGround = LAST.Parent.Background
 ' LAST.Foreground = $iColor

End

Private Function GetPanel() As Panel

  Dim hPanel As Panel

  Try hPanel = Last
  If Error Then
    hPanel = Last.Parent
  Endif

  Return hPanel

End


Public Sub Panel_MouseDown()
  ' 
  ' WITH GetPanel()
  '   .Border = Border.Sunken
  ' END WITH

  '$hLabel.Move($hLabel.X + 1, $hLabel.Y + 1)
  '$hImage.Move($hImage.X + 1, $hImage.Y + 1)

End


Public Sub Panel_MouseUp()
  ' 
  ' DIM hPanel AS Panel
  ' DIM X AS Integer
  ' DIM Y AS Integer
  ' 
  ' hPanel = GetPanel()
  ' hPanel.Border = Border.None
  ' 
  ' X = Mouse.X
  ' Y = Mouse.Y
  ' 
  ' IF LAST <> hPanel THEN
  '   X = X + LAST.X
  '   Y = Y + LAST.Y
  ' ENDIF
  ' 
  ' '$hLabel.Move($hLabel.X - 1, $hLabel.Y - 1)
  ' '$hImage.Move($hImage.X - 1, $hImage.Y - 1)
  ' 
  ' 
  ' IF (X >= 0 AND Y >= 0 AND X < hPanel.W AND Y < hPanel.H) THEN
  ' 
  '   RAISE Click()
  ' 
  ' ELSE
  ' 
   ' 
  ' ENDIF

End


Private Function Enabled_Read() As Boolean

  Return $hPanel.Enabled

End

Private Sub Enabled_Write(bEnabled As Boolean)

  $hPanel.Enabled = bEnabled

End


Public Sub Move(X As Integer, Y As Integer)

  $hPanel.Move(X, Y)

End


Public Sub Resize(W As Integer, H As Integer)

  $hPanel.Resize(W, H)
  '$hLabel.Resize(W - ($hImage.X + $hImage.W + 8) - 8, H - 8)
 tmpimage = image.Gradient($hPanel.Width, $hPanel.Height, color.LightGray, color.White, image.Vertical)
  hGBBackground = tmpimage.Picture 
   draw.Begin(hGBBackground)
          
          draw.Foreground = color.Black
          'color.LightGray
          draw.font.Name = "Sans"
          draw.Font.Bold = True
          draw.Font.Size = 14
          draw.Text("new heading", 10, 0)
   draw.End
   $hPictureBox.Picture = hGBBackground
End

Private Function ToolTip_Read() As String

  Return $hPanel.ToolTip

End

Private Sub ToolTip_Write(sToolTip As String)

  $hPanel.ToolTip = sToolTip
  '$hImage.ToolTip = sToolTip
  '$hLabel.ToolTip = sToolTip

End

Private Function Background_Read() As Integer

  Return $hPanel.Background

End

Private Sub Background_Write(Value As Integer)

  $hPanel.Background = Value

End

Private Function Foreground_Read() As Integer

  Return $hPanel.Foreground

End

Private Sub Foreground_Write(Value As Integer)

  $hPanel.Foreground = Value

End

Private Sub Font_Write(Value As Font)

 $hLabel.Font = Value

End
 Private Function Font_Read() As Font
  '  hFont = $hLabel.Font
   Return $hLabel.Font
 
 End
 
