' Gambas class file

' Copyright (C) 2008-2012 Dr. Richard Terry  rterry@pacific.net.au Dr. Ian Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Private pro As Process
Private host As String
Private input_buf As String
Private jobs As Collection[]
Private current As Collection
Private restarts As Integer

Private Sub PrepareProcess()
  Dim prg As String
     
  If Not IsNull(pro) Then
    If pro.State <> Process.Running Then
       pro = Null
       If restarts > 5 Then Error.Raise("too many restarts")
    Endif
  Endif
  If IsNull(pro) Then
     prg = modUtil.FindProgram("sftp", "ssh")
     If IsNull(prg) Then Return
     pro = Exec [prg, "-b", "-", host] For Read Write As "Sftp"
     Inc restarts 
     input_buf = ""
  Endif
  
End

Public Sub _new(host1 As String)
   
  host = host1
  jobs = New Collection[]
  current = Null 
  restarts = 0
  
End



Public Sub Sftp_Read()
   
   Dim pos As Integer
   
   input_buf &= Read #pro, Lof(pro)
   pos = InStr(input_buf, "sftp>")
   If pos >= 0 Then
      input_buf = Right$(input_buf, - (pos + 5))
      If Not IsNull(current) And If current.Exist("callback") Then
         Object.Call(current!callback, "Response", [current, input_buf])
         restarts = 0
      Endif
      current = Null
      If jobs.Length > 0 Then
         current = jobs[0]
         jobs.Delete(0)
         StartJob()
      Endif
   Endif
End

Public Sub AddJob(job As Collection)
   
  If IsNull(current) Then
    current = job
    StartJob() 
  Else
     jobs.Add(job)
  Endif
End


Public Sub Sftp_Error(err As String)
   
  Log.DebugMsg("Sftp Process wrote to standard error:" & err)
  pro = Null 
  If Not IsNull(current) Then
    Wait restarts + 1
    StartJob()
  Endif
   
End

Private Sub StartJob()
   
  PrepareProcess()
  Print #pro, current!cmd 
   
End

