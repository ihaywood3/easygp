' Gambas class file
' Copyright (C) 2008-10 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
'PURPOSE    Holds all the forms needed to action a document
'           The document metadata
'           Patients past history
'           Prescriptions
'           Recalls
'           Referral Letter
'           Staff Tasks
'           Make  Appointment
'           Scratch Pad
'           View in context old progress notes
'           Add new progress notes
'-----------------------------------------------------------------------

Public FMetaData As FDocumentMetaData
Public Problemlists As FPastHistoryProblemLists
Public FTasks As FStaffTasks
Public Form_PastHistory As FPastHistory
Public Form_Prescriptions As FPrescriptions
Public Form_Requests As FRequests
Public Form_Scratchpad As FScratchPad
Public Form_Recalls As FRecalls 
Public Form_Editor As FProgressNoteEditor

Private Embedded_Forms As Collection 
'-------------------------------------------------------------------
'Constants to describe the tabs which action a document on tabstrip1
'--------------------------------------------------------------------
Private Const Metadata As Integer = 0
Private Const pasthistory As Integer = 1
Private Const script As Integer = 2
Private Const request As Integer = 3
Private Const recall As Integer = 4
Private Const scratch As Integer = 5
Private Const notes As Integer = 6
Private Const tasks As Integer = 7
Private Const appointment As Integer = 8
Private Const context As Integer = 9

Private Embedded_In_Form As String
Private SelectedDocument As Collection 
Public context_date As String 

Private currentconsult As CConsult


Public Sub Init(embedding_form As String)
   '--------------------------------------------------------------------------
   'only metadata is loaded at first as this often the only bit the user needs
   'unless they action the document in a more complex way
   '--------------------------------------------------------------------------
   Embedded_In_Form = embedding_form
   With FMetaData = New FDocumentMetaData(Vbox_Metadata)
        .Init("Allocated Documents")
        .Set_Embedded_Form_Name(embedding_form)
   End With
   Embedded_Forms = New Collection 
      ' Editor = New FProgressNoteEditor(vbox_ProgressNotesEditor)                                   
   ' Editor.lblTodaysNotes.text = "Progress notes for this result"
   ' Editor.tlsuggestions.text = "You may link the progress notes "
   ' "to an existing problem. If you leave this blank then  the default is "
   ' "to add the notes into the  patient's general notes."

End

Public Sub Init_Cons(Cons As CConsult)
  currentconsult = Cons                   'this now = the cConsult for patient in the inbox
  FMetaData.Set_Consult(currentconsult)   'passed now to the document metatdata for (Save)
End

Public Sub Set_Document(D As Collection)
  
  SelectedDocument = D
  
End

 
Public Sub TabStrip1_Click()
   
   Dim patient_details As String       
   Dim document_type As String 
   
   If FMetaData.get_fk_patient() = 0 Then
      Tabstrip1.index = 0
      Return 
   End If   
   patient_details = currentconsult!patient!wholename & " [" & Format(currentconsult!patient!birthdate, "dd/mm/yyyy") & "] " & currentconsult!patient!age & "yrs"
   Select Case Tabstrip1.Index
      Case Metadata
          
      Case pasthistory
         
         If IsNull(Form_PastHistory) Then
            Form_PastHistory = New FPastHistory(HBox_PastHistory)
            Form_PastHistory.set_embedded(True, Embedded_In_Form)
            Embedded_Forms.Add(Form_PastHistory, Tabstrip1.index)
         End If
         If Not Form_PastHistory.Consult_Exists() Then
            Form_PastHistory.Init(currentConsult)
            Form_PastHistory.lblFormHeading.text = "Health Issues - " & patient_details
         End If   
         
      Case script
         
      Case request
         If IsNull(Form_Requests) Then
            Form_Requests = New FRequests(HBox_Requests)
            Form_Requests.set_embedded(True, Embedded_In_Form)
            Embedded_Forms.Add(Form_Requests, Tabstrip1.index)
         End If
         If Not Form_Requests.Consult_Exists() Then
            Form_Requests.Init(currentconsult)
            Form_Requests.lblFormHeading.text = "Requests - " & patient_details
         End If
         
      Case recall
         
         If IsNull(Form_recalls) Then
            Form_recalls = New FRecalls(Hbox_Recalls)
            Form_recalls.set_embedded(True, Embedded_In_Form)
            Embedded_Forms.Add(Form_recalls, Tabstrip1.index)
         End If
         If Not Form_recalls.Consult_Exists() Then
            Form_recalls.Init(currentconsult)
            Form_recalls.lblFormHeading.text = "Recalls - " & patient_details
         End If
         Form_recalls.Set_Audit_Schema_Table_SourceRowKey(SelectedDocument!pk_document, "clin_recalls", "recalls")
         
      Case scratch
         
         If IsNull(Form_Scratchpad) Then
            Form_Scratchpad = New FScratchPad(VboxScratchPad)
            Form_Scratchpad.Hbox_ScratchPadHeading.Visible = True 
            Embedded_Forms.Add(Form_Scratchpad, Tabstrip1.index)
         End If
         If Not Form_Scratchpad.Consult_Exists() Then
            Form_Scratchpad.Init(currentconsult)
            Form_Scratchpad.lblPatient.text = patient_details
         End If
         Form_Scratchpad.Set_Audit_Schema_Table_SourceRowKey(SelectedDocument!pk_document, "clin_consult", "scratchpad")
         
      Case tasks
         '---------------------------------
         'Create a new staff tasks instance
         '---------------------------------
         If IsNull(FTasks) Then
            FTasks = New FStaffTasks(Hbox_Tasks)
         End If  
         
         With FTasks  
            .VSplit_Right.Visible = False                      'make only the data entry visible. everything else on form visible only in FStaffTasks
            .Set_Parent_Form(Embedded_In_Form)                 'Embedded_In_Form  = "Inbox" or "FDayBook"= staff tasks
            .Set_Audit_Schema_Table_SourceRowKey(SelectedDocument!pk_document, "documents.documents")  'will be removed once ian does the audit stuff
            .Set_Consult(currentconsult)                       'currentconsult has been passed from the parent form
            .Set_Document(SelectedDocument!pk_document)        'Key to documents.documents 
            .BExit = True 
            .Init()                                            'this clears edit area etc, shows existing tasks
            .txtPatient.text = SelectedDocument!patient_title & " " & SelectedDocument!patient_firstname & " " & SelectedDocument!patient_surname
            .lblBirthdate.text = Format(SelectedDocument!patient_birthdate, "dd/mm/yyyy")
            .txtStreet.text = Trim(SelectedDocument!patient_street1 & " " & SelectedDocument!patient_street2)
            .txtSuburb.text = SelectedDocument!patient_town & " " & SelectedDocument!patient_postcode 
            .txtPatient.ReadOnly = True  
            .txtStreet.ReadOnly = True
            .txtSuburb.ReadOnly = True
            .lblFinaliseTask.Visible = False  
            .HBox_FinalisedBy.Visible = False 
            .Hbox_DateFinalised.Visible = False
            .Vbox_AllStaffsTasks.Visible = False  
            .tbNewPracticeTask.visible = False
            .txtTask.TEXT = FMetaData.txtUserObservationName.text
            .lblNotesAllMembers.visible = False  
            .VBox_Notes.Visible = False   
            .tbNewPatientTask.text = "New Task"
            .bexit = False  
         End With
         
      Case appointment
         
      Case context
        
          Context_Show()
   End Select
    
End

Public Sub Context_Show()
   '----------------------------------------------------------------------
   'Shows the document in context eg notes for that day pathology ordered
   '----------------------------------------------------------------------
   Webview2.html = modProgressNotes.ConstructHTML_SingleDate(currentconsult, "15/10/2010")
  
  
End

Public Sub EmbeddedForms_Reset()
   
   Dim O As Object
   
   For Each O In Embedded_Forms
      O.Consult_Set_Null()
   Next
   
End 
Public Sub Tabstrip1_MouseDown()
      Dim document_type As String
      Dim comment_type As String 
      'fixme remove most of this see notes in bugs file
     If FMetaData.txtUserObservationName.text = "" Then
         Stop Event
    
      Select Case FMetaData.iDisplay_As
        Case const.Document_Display_As_Letter
          document_type = "Letter"
          comment_Type = "letter summary"
        Case const.Document_Display_As_Result
          document_type = "Result"
          comment_type = "user name"
        Case const.Document_Display_As_Certificate
           document_type = "Certificate"
           comment_type = "details"
        Case const.Document_Display_As_Image
           document_type = "Image"
             comment_type = "details"
      End Select
      Tabstrip1.index = 0
    '  Message.Info("Please complete the user tag for this document before attempting to action this " & FMetaData.sTypeDocument)
      Message.Info("Please complete the " & comment_type & " for this " & Lower(document_type) & " before attempting to action this document")

      Return
  End If
End

Public Sub TabStrip1_MouseUp()
   
   ' Select Case Tabstrip1.Index
   '       
   '    Case "metadata"
   '       
   '       Vsplit_left.Layout = [1, 2]
   '       Last.tooltip = "Document Metadata"
   '    Case pasthistory
   '       
   '       Vsplit_left.Layout = [1, 2]
   '       tbMaximize.tag = "maximized"
   '       Last.tooltip = "Add a new health issue"
   '    Case script
   '       Last.tooltip = "Write a prescription"
   '       
   '       Vsplit_left.Layout = [1, 1]
   '       tbMaximize.tag = "maximized"
   '    Case request
   '       
   '       Vsplit_left.Layout = [0, 0, 1]
   '       tbMaximize.tag = "maximized"
   '       Last.tooltip = "write a new request form"    
   '    Case recall
   '       
   '       Vsplit_left.layout = [0, 0, 1]
   '       tbMaximize.tag = "maximized"
   '       Last.tooltip = "Add a new recall"
   '    Case scratch
   '       
   '       Vsplit_left.Layout = [2, 2, 1]
   '       Last.tooltip = "Add a scratch pad item"
   '       tbMaximize.tag = "minimized"
   '       Vsplit_left.Layout = [2, 2, 1]
   '    Case notes
   '       
   '       Try Vsplit_left.layout = [0, 0, 1]
   '       tbMaximize.tag = "maximized"
   '       Last.tooltip = "Add progress notes"
   '       
   '    Case tasks
   '       Last.tooltip = "Allocate a staff task"
   '       Vsplit_left.Layout = [0, 0, 1]
   '       
   '    Case appointment
   '       Try Vsplit_left.layout = [0, 0, 1]
   '       Last.tooltip = "Make an appointment"
   '       tbMaximize.tag = "maximized"
   '    Case context
   '       If bNoContext = False Then
   '          Try Vsplit_left.layout = [0, 0, 1]
   '          tbMaximize.tag = "maximized"
   '       End If
   '       Last.tooltip = "View in ordering context"
         
  ' End Select
  ' Vsplit_left.Layout = [1, 2]
   
End

Public Function Identifyform() As String 
   
   ' Try Return EmbeddedForm.tag
   ' If Error Then Return "" 
   
End 

Public Sub Embed_Appointments(sUrgency As String)
   
   Dim sTag As String
   
   Try sTag = Identifyform()
   If sTag = sUrgency Then Return
   
   EmbedForm(sUrgency)
   
End

Public Sub Embed_RecallForm()
   
   Dim sTag As String
   
   Try sTag = Identifyform()
   If sTag = "recall" Then Return 
   EmbedForm("recall")
   
End

Public Sub EmbedForm(sTag As String)
   
   Dim RF As FRecalls
   Dim AP As FAppointments
   
   Select Case sTag
      Case "recall"
         
      Case "routine", "urgent"
         
   End Select
   
End
Public Sub Editor_Init()
   ' 'FIXME DECIDE IF STAYS
   ' Editor.condition = New CPastHistory
   ' Editor.bExit = True
   ' Editor.teNotes.text = ""
   ' Editor.Condition.todays_notes_changed = False
   ' Editor.bExit = False
   ' 
End
