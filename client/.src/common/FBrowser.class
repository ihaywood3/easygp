' Gambas class file

' Copyright (C) 2008-2011 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

'Static Private $aZoom As Float[]

Private $sStatus As String
Private $iZoom As Integer
Private $iHidden As Integer
Public $currenthview As WebView
Public bTravelmed As Boolean
Public bEmbeddedHelp As Boolean
Public sTravelMedDestination As String
Private bExit As Boolean
Private obs As Observer
Private SelectedFolder As MenuButton
Private folder_menu_html As String
Private Folders As Collection 
Private currentfolder As Collection 
Private current_menu_html As String
Private sClinical_Module_Name As String
Private bFolderAlwaysvisible As Boolean
Private x As WebSettings

'Private mnuFolders As Menu
Public Sub Section_Set(sString As String)
   '-----------------------------------------------
   'Each clinical module  can have its own menu bar
   '-----------------------------------------------

   sClinical_Module_Name = sString
   
End

Public Sub form_Close()

   Return 
   Settings_Save()
   
End

Public Sub Form_Open()
   
   WebSettings.IconDatabase.Path = File.Dir(File.Dir(Temp$()))
   '  WebSettings.Font[WebSettings.FixedFont] = "Inconsolata"
   WebSettings[WebSettings.PluginsEnabled] = False
   WebSettings[WebSettings.JavascriptEnabled] = True
   WebSettings[WebSettings.JavaEnabled] = True
   WebSettings[WebSettings.JavascriptCanOpenWindows] = True
   WebSettings[WebSettings.JavascriptCanAccessClipboard] = True
   WebSettings[WebSettings.DeveloperExtrasEnabled] = True
   ' WebSettings.Cache.path = File.Dir(File.Dir(Temp$()))
   ' WebSettings[WebSettings.cache] = "1"
   
   CreateView()
   btnZoomNormal_Click
   ' txtURL.SetFocus
   ' tabBrowser_Click()
   If bTravelmed = False Then
      'txtURL.Text = "http://www.ciap.health.nsw.gov.au/" 
      '  txtURL.Text = "http://www.gpaccess.com.au" 
      '  Print txturl
      '   txtURL_Activate
   End If
   Try Settings_Load()

End

Private Sub GetView() As WebView
   
   Return tabBrowser[tabBrowser.Index].Children[0]

End

Private Sub IsLastCurrentView() As Boolean
   
   Dim hView As WebView = GetView()

   Return hView = Last
   
End

Public Sub WebView_Link(Url As String)
   
   If Not IsLastCurrentView() Then Return
   lblStatus.Text = Url
   
End

Public Sub WebView_Status()
   
   If Not IsLastCurrentView() Then Return
   lblStatus.Text = GetView().Status
   
End

Public Sub WebView_Progress()
   
   GetView().Status = "Loading..."
   If Not IsLastCurrentView() Then Return
   
   lblStatus.Text = GetView().Status
   pgbLoad.Value = GetView().Progress
   panLoad.Show
   
End

Public Sub WebView_Error()
   
   GetView().Status = "Unable to load page"
   If Not IsLastCurrentView() Then Return
   
   lblStatus.Text = GetView().Status
   pgbLoad.Hide
   
End

Public Sub WebView_Load()
   
   Dim iInd As Integer
   
   GetView().Status = ""
   If Not IsLastCurrentView() Then Return
   
   lblStatus.Text = ""
   txtURL.Text = GetView().Url
   pgbLoad.Hide
   
End

Public Sub Clear()

   GetView().Clear()

End 

Public Sub btnGo_Click()
   
   Dim sText As String = txtURL.Text

   If BExit Then Return 
   If Not (sText Like "http://*") And bTravelmed = False Then sText = "http://" & sText
   If bTravelmed = True And InStr(txtURL.Text, "http://") = False Then
      bexit = True   
      Inc Application.Busy
      sTravelMedDestination = "http://wwwnc.cdc.gov/travel/destinations/**.aspx"
      sTravelMedDestination = Replace(sTravelMedDestination, "**", Replace(Trim(sText), " ", "-")) 'e.g united arab emirates = united-arab-emirates
      txtURL.Text = sTravelMedDestination
      $currenthview.url = sTravelMedDestination
      Wait 
      Dec Application.Busy
      bExit = False  
      Return
   Else
      GetView().Url = sText
   End If   
   
End

Public Sub txtURL_Activate()

   If bexit Then Return 
   btnGo.Value = True
   
End

Public Sub btnBack_Click()
   
   GetView().Back
   
End

Public Sub btnForward_Click()
   
   GetView().Forward
   
End

Public Sub btnStop_Click()
   
   GetView().Stop
   
End

Public Sub btnReload_Click()
   
   GetView().Reload
   
End

Public Sub btnZoomIn_Click()
   
   GetView().Zoom = Round(GetView().Zoom * 1.25, -2)
   
End

Public Sub btnZoomOut_Click()
   
   GetView().Zoom = Round(GetView().Zoom / 1.25, -2)
   
End

Public Sub btnZoomNormal_Click()
   
   GetView().Zoom = 1
   
End

Public Sub WebView_Title()
   
   Dim hView As WebView = Last

   tabBrowser[hView.Tag].Text = hView.Title
   If Not IsLastCurrentView() Then Return
   Me.Title = hView.Title & " - Gambas WebKit"
   
End

Public Sub WebView_Icon()
   
   Dim hView As WebView = Last

   tabBrowser[hView.Tag].Picture = hView.Icon
   If Not IsLastCurrentView() Then Return
   Me.Icon = hView.Icon
   
End

Public Sub btnClear_Click()
   
   txtURL.Clear
   txtURL.SetFocus
   
End

Public Sub WebView_NewWindow(Modal As Boolean)
   
   CreateView()
   
   Last.NewView = GetView()
   
End

Public Sub Add_Panel()
   'just mucking around

   Dim APanel As FRecalls

   Inc tabBrowser.Count
   tabBrowser.Index = tabBrowser.Count - 1
   APanel = New FRecalls(tabBrowser) As "Recalls"

End

Public Sub CreateView(Optional tabtext As String)
   
   Dim iLast As Integer = tabBrowser.Count - 1
   Dim hView As WebView
   
   Object.Lock(tabBrowser)
   Inc tabBrowser.Count
   tabBrowser[iLast + 1].Picture = tabBrowser[iLast].Picture
   tabBrowser[iLast + 1].Text = tabBrowser[iLast].Text
   tabBrowser[iLast].Text = ""
   tabBrowser[iLast].Picture = Null
   tabBrowser.Index = iLast
   hView = New WebView(tabBrowser) As "WebView"
   hView.Tag = tabBrowser.Index
   Object.Unlock(tabBrowser)
   tabBrowser_Click
   
End

Public Sub tabBrowser_Click()
   
   Dim iLast As Integer = tabBrowser.Count - 1
   Dim hView As WebView
   
   If tabBrowser.Index = iLast Then 
      CreateView()
   Else
      hView = GetView()
      $currenthview = hview
      If hView.Title Then
         Me.Title = hView.Title & " - Gambas WebKit"
      Else
         Me.Title = "Gambas WebKit"
      Endif
      If hView.title <> "" Then 
         tabBrowser.Text = hView.Title
      End If
      
      ' Me.Icon = hView.Icon
      ' tabBrowser.Picture = hView.Icon
      
      txtURL.Text = hView.Url
      lblStatus.Text = hView.Status
      pgbLoad.Value = hView.Progress
      If hView.Progress > 0 And If hView.Progress < 1 Then
         panLoad.Show
      Else
         panLoad.Hide
      Endif
   Endif
   
End

Public Sub btnClose_Click()

   Dim F As Form

   GetView().Delete
   
   Object.Lock(tabBrowser)
   Try tabBrowser[tabBrowser.Index].Delete()
   If Error Then
      If tabBrowser[tabBrowser.Index].Children[0] Is Form Then
         F = tabBrowser[tabBrowser.Index].Children[0]
         F.Close()
         Message.info("is a form")
         Try tabBrowser[tabBrowser.Index].Delete()
      End If
   End If
   ' tabBrowser[tabBrowser.Index].Delete
   Object.UnLock(tabBrowser)
   If tabBrowser.Index = (tabBrowser.Count - 1) And If tabBrowser.Index > 0 Then
      tabBrowser.Index = tabBrowser.Index - 1
   Else
      tabBrowser_Click
   Endif
   ' Shell "rm -rf " & Shell$(WebSettings.Cache.Path) &/ "*" Wait
   
   ' If (tabBrowser.Count - $iHidden) = 1 Then
   '   tabBrowser.Count = 1
   '   $iHidden = 0
   '   tabBrowser_Click
   ' Endif
   
End

Public Sub WebView_Auth()
   
   Dim hView As WebView = Last
   
   If Not FAuth.Run(hView.Auth.Url, hView.Auth.Realm) Then
      
      hView.Auth.User = FAuth.User
      hView.Auth.Password = FAuth.Password
      'Debug hView.Auth.Url;; hView.Auth.User;; hView.Auth.Password
      
   Endif 
   
End
' Gambas class file

Public Sub txtGoogle_Activate()

   If Trim(Last.text) <> "" Then
      bTravelmed = False 
      txtURL.text = "http://www.google.com.au/search?hl=en&source=hp&q=" & Trim(Last.text)
      btnGo_Click()
      bTravelmed = True  
   End If
   
End

Public Sub mnuBookMarkBar_Click()

   Dim mnuItem As Menu

   Select Case Last.Tag
      Case "open all in tabs"
      Case "new bookmark"
      Case "new folder"
         Folder_New()
      Case "new separator"
         Separator_New()
      Case "cut"
         Folder_Cut()
      Case "copy"
      Case "paste"
      Case "delete"
      Case "visible all sections"
         If Last.checked Then
            bFolderAlwaysvisible = True
            '------------------------------
            'Uncheck any particular section
            '------------------------------
            For Each mnuItem In mnuBookMarkBar.children
               If mnuItem.tag <> "visible all sections" Then
                  mnuItem.Checked = False 
               End If
            Next  
         End If
         
      Case "properties"
         Folder_Edit_Properties
      Case Else
         '----------------------------------------------------------
         'is a sub-menu showing which section it is to be visible in
         '----------------------------------------------------------
         If Last.checked Then
            sClinical_Module_Name = Last.tag
            'Now must uncheck the menu item saying "always visible"
            For Each mnuItem In mnuBookMarkBar.children
               If mnuItem.tag = "visible all sections" Then
                  mnuItem.Checked = False 
                  Break
                  
               End If
            Next  
            
         Else
            sClinical_Module_Name = ""
         End If   
         
   End Select
   
End

Public Sub Separator_New()

   Dim sep As Separator

   Return 
   sep = New Separator(Hbox_BookMarkFolders)
   With sep
      .height = Hbox_BookMarkFolders.height * 0.8
   End With

End 

Public Sub Folder_Cut()
   
   SelectedFolder.Delete()
   
End

Public Function Folder_Create(Optional folder_name As String = "New Folder") As MenuButton
   '------------------------------------------------------------  
   'Creates a new folder which is actually a menubutton control
   'lblMeasure = autoresize = true is a hidden label on the form
   'Its event handler is "bookmarkfolders_*()"
   'its associated menu is empty and called mnufolders - this is
   'the menu which 'drops down' to show the URL's
   '------------------------------------------------------------

   Dim folder As MenuButton
   ' Dim mnu As Menu
   folder = New MenuButton(Hbox_BookMarkFolders) As "bookmarkfolders"
   ' mnu = New Menu(Me, True)a s 
   lblmeasure.text = folder_name
   With folder
      .text = folder_name
      .picture = Picture["icon:/small/directory"]
      .width = lblmeasure.width + 50
      .drop = True
      .menu = folder_name
   End With
   
   Return folder 

End

Public Sub Folder_New()
   '---------------------------------------------------------------------  
   'Adds a new menubutton (a.k.a new folder) to the folder bookmark bar
   'Automatically drops user into rename the folder
   'this folder now = the selectedfolder
   '--------------------------------------------------------------------

   txtFolderName.text = "New Folder"
   SelectedFolder = Folder_Create()
   obs = New Observer(SelectedFolder) As "SelectedFolder"
   Folder_Edit_Properties()  

End

Public Sub mnufolders_Click()
   
   txtURL.text = Last.tag
   txtURL_Activate()
   
End

Public Sub Folder_Edit_Properties()
   '-----------------------------
   'Change the name of the folder
   '-----------------------------

   With txtFolderName
      .pos = 0
      .top = SelectedFolder.top
      .left = SelectedFolder.Left
      .width = SelectedFolder.width
      .height = SelectedFolder.height
      .Visible = True
      .Raise
      .SetFocus()
   End With

End

Public Sub txtFolderName_Activate()
   '-----------------------------------------------
   'user has pressed enter in the re-naming textbox
   're-name and resize the menubutton
   '-----------------------------------------------

   Last.visible = False
   lblmeasure.text = Last.text
   SelectedFolder.text = Last.text
   SelectedFolder.width = lblmeasure.width + 50
   SelectedFolder.menu = Last.text

End

Public Function Folders_Save() As Collection 
   '-----------------------------------------------------------
   'Saves the folders and their menu's
   'the tag of each menubutton = its menu items as a collection
   '-----------------------------------------------------------

   Dim MB As MenuButton
   Dim hCtrl As Control
   Dim folder As Collection 

   folders = New Collection
   folder = New Collection 
   
   For Each hctrl In Hbox_BookMarkFolders.Children
      If hctrl Is MenuButton Then
         MB = hctrl
         folder = New Collection 
         folder!name = MB.Text
         folder!menu_items = MB.tag
         folder!clinical_module = sClinical_Module_Name
         folder!always_visible = bFolderAlwaysvisible
         folders.Add(folder, folders.count)
      End If   
   Next  
   Return folders
   ' Select Case sClinical_Module_Name
   '   Case "Mental Health"
   '   Case "Travel"

End

Public Sub Folders_Load(folders As Collection)
   ' '---------------------------------------------------------
   ' 'Restores the folders to the folders bar underneath txtURL
   ' 'Folders are kept as a collection with each collection
   ' 'being a collection of the folder name, and its menu items
   ' 'as a collection
   ' '---------------------------------------------------------
   ' Dim folder As Collection
   ' Dim menuItem As Collection
   ' Dim mnuItem As Menu
   ' Dim menu_line As Collection 
   ' Dim NewMnu As Menu
   ' Dim folder_properties As Collection
   ' 
   ' For Each folder In folders
   '    '---------------------------------------------------
   '    'The Folders collection has been retreived from the
   '    'settings file
   '    '  Create a new menubutton to represent each folder
   '    '  Create a menu named after the folder name
   '    '  put sub-menu's onto each line of this menu      
   '    '---------------------------------------------------
   '    SelectedFolder = Folder_Create(folder!name)
   '    SelectedFolder.menu = folder!name
   '    folder_properties = New Collection 
   '    folder_properties!clinical_module = folder!clinical_module
   '  '  folder_properties!visible_all_modules = folder!visible_all_modules
   '    
   '    NewMnu = New Menu(Me, False)
   '    NewMnu.name = folder!name
   '    If Not IsNull(folder!menu_items) Then
   '       'Folder could exist, but no items
   '       For Each Menu_line In folder!menu_items
   '          mnuItem = New Menu(NewMnu) As "mnufolders"
   '          With mnuItem
   '           .text = Menu_line!name
   '           .tag = Menu_line!url 
   '         
   '          End With
   '        Next  
   '       folder_properties!menu_items = folder!menu_items
   '    End If
   '    SelectedFolder.tag = folder_properties
   ' Next

End

Private Sub Settings_Save()
   
   Settings["Travel/folders"] = Folders_Save()
   
End

Private Sub Settings_Load()
   
   Folders_Load(Settings["Travel/folders"])
   
End

Public Sub BookmarkFolders_Menu()
   '-------------------------------------------------------
   'User has right clicked on a menubutton (aka folder)
   'Show popup menu, make sure all enabled as they
   'could have been disabled by  Hbox_BookMarkFolders_Menu
   '-------------------------------------------------------

   Dim mnuitem As Menu
   Dim folder_properties As Collection 

   SelectedFolder = Last
   Folder_properties = Last.tag
   For Each mnuitem In mnuBookMarkBar.children
      '------------------------------------------------------------------
      'The tag of each folder is a collection consisting of this
      '!clinical_module (if not null show this folder only in the module
      '!menu_items as a collection or urls/names
      '------------------------------------------------------------------
      
      If Not IsNull(folder_properties!menu_items) Then  
         '--------------------------------------------------------------
         'ok, if menu items exist, then if not allocated to a particular
         'clinical section, enable the 'visible all sections' checkbox
         '--------------------------------------------------------------
         mnuItem.Enabled = True
         If mnuItem.text = "Visible All Sections" And IsNull(Folder_properties!clinical_module) Then
            mnuItem.Checked = True
         Else
            mnuItem.Checked = False   
         End If
      Else
         'no tag = no menu items, so only enable properties
         For Each mnuitem In mnuBookMarkBar.children
            Select Case mnuItem.Text
               Case "Properties", "Cut"
                  mnuitem.Enabled = True  
                  txtFolderName.text = Last.text
               Case Else
                  mnuitem.Enabled = False
                  mnuitem.checked = False
            End Select
            
         Next
         Break
      End If
   Next
   mnuBookMarkBar.Popup()
   
End

Public Sub PictureBox1_Drag()
   '-----------------------------------------
   'User is dragging the icon next to the URL
   '-----------------------------------------

   txtFolderName.text = txtURL.Text

End

Public Sub BookmarkFolders_Drop()
   '--------------------------------------------------
   'User is dropping a URL onto a folder
   'FBrowserURLProperties = form to allow
   'user to name a URL for the menu
   'mnuFolders already exists and could contain items
   '-------------------------------------------------

   Dim F As FBrowserURLProperties
   Dim mnu As Menu
   Dim mnuItem As Menu
   Dim c As Collection 
   Dim folder_menu As New Collection 
   Dim bMenuExists As Boolean = False   

   F = New FBrowserURLProperties
   
   F.SetURL(txtURL.text)
   F.txtBookMarkName.text = $currenthview.Title
   If Not (F.ShowModal()) Then Return 
   lblmeasure.text = const.globalstring
   
   '-----------------------------------
   'Now locate the menu for this button
   '-----------------------------------
   For Each mnu In Me.menus
      If mnu.Name = Last.text Then
         bMenuExists = True   
         Break
      End If   
   Next
   If Not bMenuExists Then
      mnu = New Menu(Me, False)
      mnu.name = Last.text
      
   End If   
   mnuItem = New Menu(mnu) As "mnufolders"
   mnuItem.Text = lblmeasure.text
   mnuItem.tag = txtURL.Text
   mnuItem.Visible = True 
   
   For Each mnuItem In mnu.Children
      c = New Collection 
      c!name = mnuItem.Caption
      c!url = mnuItem.Tag
      '  If mnuItem.Checked Then
      
      folder_menu.Add(c, folder_menu.count)
   Next   
   SelectedFolder.tag = folder_menu

End

Public Sub PictureBox1_MouseDrag()
   '------------------------
   'User is dragging the URL
   '------------------------

   If Mouse.Left Then
      Drag.Icon = Last.Picture
      Last.Drag(Last.Picture.Image)
   Endif

End

Public Sub Hbox_BookMarkFolders_Menu()
   '---------------------------------------------------------------------
   'User right clicks over the area for the folders under the url textbox
   'disable everything bar new folde
   '---------------------------------------------------------------------

   Dim mnuitem As Menu

   For Each mnuitem In mnuBookMarkBar.children
      If mnuitem.text <> "New Folder" Then
         mnuitem.Enabled = False
      Else
         mnuitem.Enabled = True  
      End If
   Next
   mnuBookMarkBar.Popup()

End

Public Sub btnHome_Click()
   
End

Public Sub btnPrint_Click()
   
   modPrinting.PrintHtml($currenthview.html, const.Paper_Plain)
   
End
