' Gambas class file

' Copyright (C) 2008-2013 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' nothing - just me experimenting with the grid

Private iRow As Integer
Private icol As Integer
Private iRowHeight As Integer
Private bExit As Boolean
Private new_data As Collection
Private fk_pasthistory As Integer

Public Sub _New()

   txtProperty.Height = 16
   iRowHeight = 16
   grdComponents.Columns.count = 3 'component, due, make recall
   grdComponents.Columns[0].Width = 180
   grdComponents.Columns[1].width = 70
   grdComponents.Columns[2].width = lblRecall.Width 'this auto-resizes
   lblComponent.width = 180
   lblDue.width = 80

End

Public Sub Init_New_Data_collection()
   '------------------------------------------------------
   'if no data exists in the grid, create a new collection
   '------------------------------------------------------

   Dim member As New Collection
   ' Member!component = ""
   ' Member!due = ""
   New_data = New Collection 
   new_data.Add(Member, 0)
   grdComponents.Rows.Count = 1
   grdComponents.Rows[0].Height = 16
   grdComponents[0, 0].text = ""
   grdComponents[0, 1].text = ""
   grdComponents[0, 2].Picture = Picture.Load("icons/16/unchecked.png")   

End

Public Sub Set_data(careplancomponents As Collection, pk_pasthistory As Integer)
   '-------------------------------------
   'Loads any existing data into the grid
   '-------------------------------------

   Dim existing_component As Collection
   Dim member As Collection 
   Dim x As Integer

   new_data = New Collection 
   fk_pasthistory = pk_pasthistory
   '-----------------------------
   'Set the basic grid parameters
   '-----------------------------
   Clear()        'clear the grid
   
   For Each existing_component In careplancomponents
      member = New Collection 
      member!component = existing_component!component
      member!fk_pasthistory = existing_component!fk_pasthistory
      member!pk_careplan_components_due = existing_component!pk_careplan_components_due
      member!fk_component = existing_component!fk_component
      member!due = existing_component!due
      new_data.Add(member, x)
      grdComponents.Rows.Count = x + 1
      grdComponents.Rows[x].Height = 16
      grdComponents[x, 0].text = member!component
      grdComponents[x, 1].text = Format(member!due, "dd/mm/yyyy")
      grdComponents[x, 2].Picture = Picture.Load("icons/16/unchecked.png")
      Inc x
   Next

End

Public Function Get_data() As Collection 
   'Gets the contents of the grid as a collection of rows data
   ' Dim row_data As Collection
   '  Dim x As Integer
   '  new_data = New collection 

   Return new_data

End

Public Sub Calculate_Recall_Date(txt As Textbox)
   '--------------------------------------------
   'Works out a date from e.g 18M or 2Y
   'FIXME put in weeks and days
   '--------------------------------------------

   Dim iNumberOfMonths As Integer      'do not need both these declared, but do for readability
   Dim iNumberOfYears As Integer 

   bExit = True 'stop change event of edit area triggering
   
   If UCase(Right(Trim(txt.text), 1)) = "M" Then
      '---------------------------------------------------------------------------
      'Try and convert the rest of the string (ie left part which should be number
      'to a number, if error, pop up invalid date and return
      'Remember that  bkeyvalid = EditArea_TxtBox_ExcludeKeys(key.code) has
      'only allowed numbers or mM or Yy for this textbox, but some idiot could
      'have tried out patience by typing in e.g 10m10M or something
      '---------------------------------------------------------------------------
      Try iNumberOfMonths = Val(Left(txt.text, Len(Trim(txt.text)) - 1))
      If Error Then
         txt.text = "" 
         Return
      End If
      ' If txt.tag = "interval" Then
      '    fk_interval_unit = const.Units_month
      '    interval = iNumberOfMonths
      ' Else
      '    fk_default_interval_unit = const.Units_month
      '    default_interval = iNumberOfMonths
      '    If Trim(txtInterval.text) = "" Then 
      '      fk_interval_unit = const.Units_month
      '      interval = iNumberOfMonths
      '      txtInterval.text = txtDefaultInterval.Text
      '    End If
      ' Endif
      txt.text = Format(DateAdd(Now, gb.Month, iNumberOfMonths), "dd/mm/yyyy")
      
   Else If UCase(Right(Trim(txt.text), 1)) = "Y" Then
      '---------------------------------------------------------------------------
      'Try and convert the rest of the string (ie left part which should be number
      'to a number, if error, pop up invalid date and return
      'Remember that  bkeyvalid = EditArea_TxtBox_ExcludeKeys(key.code) has
      'only allowed numbers or mM or Yy for this textbox, but some idiot could
      'have tried out patience by typing in e.g 10m10M or something
      '---------------------------------------------------------------------------
      Try iNumberOfYears = Val(Left(txt.text, Len(Trim(txt.text)) - 1))
      If Error Then
         txt.text = "" 
         Return
      End If
      
      txt.text = Format(DateAdd(Now, gb.Year, iNumberOfYears), "dd/mm/yyyy")
      '    If txt.tag = "interval" Then
      '      fk_interval_unit = const.Units_year
      '      interval = iNumberOfYears
      '    Else
      '       fk_default_interval_unit = const.Units_year
      '       default_interval = iNumberOfYears
      '       If Trim(txtInterval.text) = "" Then 
      '           fk_interval_unit = const.Units_year
      '           interval = iNumberOfYears
      '           txtInterval.text = txtDefaultInterval.Text
      '       End If
      '   
      '    End If
      
   Else 
      If LCase(Trim(txt.text)) = "now" Then
         txt.text = Format(Now, "dd/mm/yyyy")
      End If  
   End If
   bExit = False 

End

Public Sub Update_Data()

   Dim member As Collection
   If irow > new_data.count - 1 Then
      Member = New Collection
      Member!component = ""
      member!fk_pasthistory = fk_pasthistory
      new_data.Add(Member, irow)
   End If
   Select Case icol
      Case 0
         new_data[irow]!component = Trim(txtProperty.text)
      Case 1
         Try new_data[irow]!due = Val(Trim(txtProperty.text))
         If Error Then
            txtProperty.text = ""
            new_data[irow]!due = ""
            
         End If
   End Select  

End

Public Sub grdComponents_dblClick()
   
   txtProperty.left = set_left()
   txtProperty.top = grdComponents.top + (iRow * iRowHeight) + iRow * 1
   txtProperty.text = grdComponents[irow, icol].text
   txtProperty.width = grdComponents[irow, icol].Width
   txtProperty.Visible = True  
   txtProperty.Enabled = True
   txtProperty.SetFocus()

End
' 

Public Sub grdComponents_Click()

   If icol = 2 Then
      '--------------------------------------
      'The recall checkbox, check or uncheck
      '--------------------------------------
      
   Else
      irow = grdComponents.Row
      icol = grdComponents.Column
      grdComponents_dblClick()
   End If 

End

Public Function set_left() As Integer
   
   Select Case iCol
      Case 0
         Return grdComponents.Left 
      Case 1
         Return grdComponents.Left + 180
   End Select
   
End

Public Sub txtProperty_Keypress()
   
   Select Case Key.Code
         
      Case Key.Left
         '------------------------------------------------------------
         'Go left to column 0, or if at column 0, go up a row to col 1
         '------------------------------------------------------------
         ' If icol = 0 Then
         '    icol = 1
         '    irow = Max(irow - 1, 0)
         ' Else
         '    icol = 0
         ' End If
         ' Next_rc()
      Case Key.Return, Key.tab ', Key.Right
         '------------------------------------------------------------
         'First calculate the date if user typed in numberM or numberY
         '------------------------------------------------------------
         If icol Mod 2 Then
            Calculate_Recall_Date(txtProperty)
         End If
         grdComponents[irow, icol].text = txtProperty.Text
         Update_Data()
         
         '----------------------------------------------------------
         'Now, don't allow a new row to be added, if the current row
         'hasn't been filled
         '----------------------------------------------------------
         icol = icol + 1
         If icol = 2 Then
            If grdComponents[irow, 0].text = "" Or grdComponents[irow, 1].text = "" Then
               icol = 1
               Stop Event
               Return
            End If  
            
            If irow + 1 = grdComponents.Rows.Count Then
               Inc grdComponents.Rows.count
            End If
            irow = Min(iRow + 1, grdComponents.Rows.Count - 1)
            
            grdComponents.Rows[irow].Height = 16
            grdComponents[irow, 2].Picture = Picture.Load("icons/16/unchecked.png")
            
            icol = 0
         End If
         Next_rc()
      Case Key.Down
         grdComponents[irow, icol].text = txtProperty.Text
         Update_Data()
         irow = Min(iRow + 1, grdComponents.Rows.Count - 1)
         Next_rc()
      Case Key.Up
         grdComponents[irow, icol].text = txtProperty.Text
         Update_Data()
         iRow = Max(iRow - 1, 0)
         Next_rc()
   End Select
   
End

Public Sub Next_rc()

   grdComponents_dblClick 
   
End

Public Sub mnuGrid_Click()
   
   Select Case Last.tag
      Case "add row"
      Case "cut"
      Case "copy"
      Case "paste"
      Case "undo"
      Case "redo"
      Case "template"
      Case "clear text"
      Case "clear grid"
         Select Case Message.Warning("Are you sure you want to clear the component grid\n\nAll existing data will be lost", "Yes", "No")
            Case 1 
               Clear()
         End Select
         
   End Select
   
End

Public Sub Clear()
   '-----------------------------
   'removes contents of all cells
   '-----------------------------

   grdComponents.Rows.count = 0  

End

Public Sub grdComponents_Menu()
   
   mnuGrid.Popup()
   
End

Public Sub txtProperty_Menu()
   
   Stop Event
   mnuGrid.Popup()
   
End

Public Sub VBox1_Arrange()
   '----------------------------------------------------------
   'Something has resized this box so it has re-sized the grid
   '----------------------------------------------------------

End
Public Sub txtProperty_GotFocus()

 Last.BackGround = Color.rgb(95, 255, 175)

End

Public Sub txtProperty_LostFocus()

  Last.BackGround = Color.White

End

Public Sub txtProperty_Change()

 

End
