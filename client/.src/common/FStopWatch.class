' Gambas class file

' 
' Copyright (C) 2008-2016 Dr. Richard Terry
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' Based on gambas example: Another Timer example by Maxim Lapismaxim_lapis@web.de & gt
' with modifications by Dr Richard Terry rterry@internode.on.net
' ------------------------------------------------------------------------------------
Private $iCounter As Integer

Public Sub Pause()
   
   Timer1.Stop
   With tbStart
      .text = " Start "
      .Picture = Picture["icon:/small/play"]
      .tag = "start"
   End With 
   
End

Public Sub Start()
   
   Dim iSeconds, iMinutes As Integer

   With tbStart
      .text = " Pause "
      .Picture = Picture["icon:/small/pause"]
      .tag = "pause"
   End With
   ' Timer1.Start
   iSeconds = vbSeconds.Value
   iMinutes = vbMinutes.Value
   If Not Timer1.enabled Then
      'Normalize minutes and seconds
      If iSeconds >= 60 Then
         While iSeconds > 59
            Inc iMinutes
            iSeconds = iSeconds - 60
         Wend
      Endif
      'Update normalized values
      vbSeconds.Value = iSeconds
      vbMinutes.Value = iMinutes
      'Store the total count to simplify code
      $iCounter = iSeconds + iMinutes * 60
      'Let the timer start!
      Timer1.enabled = True
      '  tbStart.Text = ("Pause")
      ' tbStart.Background = &HC00F47&
   Else
      tbStart.Text = ("Start")
      ' tbStart.Background = &H4BC021&
      Timer1.enabled = False
   Endif
   
End

Public Sub Timer1_Timer()
   'Seconds are over, decrease the minute count by 1 and reset the seconds count

   If vbSeconds.Value = 60 Then
      Inc vbMinutes.Value
      vbSeconds.Value = 0
   Else
      Inc vbSeconds.Value
   Endif
   Inc $iCounter
   ' Timer1.Start

End

Public Sub Reset()
   
   vbMinutes.value = 0
   vbSeconds.value = 0
   Timer1.Enabled = False 
   With tbStart
      .text = " Start "
      .tag = "start"
      .picture = Picture["icon:/small/play"]
   End With
   
End
Public Sub Resume()
   
   
   
End

Public Sub tbStopwatch_Click()
   
   Select Case Last.tag
      Case "start"
         Start  
      Case "pause"
         Pause
      Case "reset", "stop"
         Reset
      Case "resume"
         Resume
      End Select
   
End
