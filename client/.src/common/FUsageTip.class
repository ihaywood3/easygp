' Gambas class file

' Copyright (C) 2008-2016 Dr. Richard Terry
' 
' ' Gambas class file Gambas Tips As a template
' 
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Private tip As String
   
Static Public Sub Run()
   
   Dim hForm As Form
   
   hForm = New FTips
   hForm.ShowModal
   
End

Public Sub btnOK_Click()
   
   If chkTipSeen.value = True Then
      modAdminDBI.Record_Tip_Seen(tip)
   Endif
   Me.Close(True)
   
End

Public Sub btnCancel_Click()
   
   Me.Close
   
End

Public Sub Init(title As String, tip_name As String, tip_text As String)
   
   lblTitle.text = title
   txtTip.text = tip_text
   tip = tip_name

End

Public Sub Form_Open()

   Me.title = "EasyGP Tips"
   txtTip.Background = Me.Background
   
End

Private Sub PaintRoundedRect(X As Integer, Y As Integer, W As Integer, H As Integer, R As Float)
   
   Dim fArcToBezier As Float = 0.55228475
   Dim fRadiusX, fRadiusY, c1, c2 As Float
   
   fRadiusX = R
   fRadiusY = R
   
   If fRadiusX > W - fRadiusX Then fRadiusX = W / 2
   If fRadiusY > H - fRadiusY Then fRadiusY = H / 2
   
   '#approximate(quite Close )the arc using a bezier curve
   c1 = fArcToBezier * fRadiusX
   c2 = fArcToBezier * fRadiusY
   
   Paint.NewPath()
   Paint.MoveTo(x + fRadiusX, y)
   Paint.RelLineTo(w - 2 * fRadiusX, 0.0)
   Paint.RelCurveTo(c1, 0.0, fRadiusX, c2, fRadiusX, fRadiusY)
   Paint.RelLineTo(0, h - 2 * fRadiusY)
   Paint.RelCurveTo(0.0, c2, c1 - fRadiusX, fRadiusY, - fRadiusX, fRadiusY)
   Paint.RelLineTo(- w + 2 * fRadiusX, 0)
   Paint.RelCurveTo(- c1, 0, - fRadiusX, - c2, - fRadiusX, - fRadiusY)
   Paint.RelLineTo(0, - h + 2 * fRadiusY)
   Paint.RelCurveTo(0.0, - c2, fRadiusX - c1, - fRadiusY, fRadiusX, - fRadiusY)
   Paint.ClosePath()
   
End

Public Sub dwgBackground_Draw()
   
   Paint.Brush = Paint.Color(Color.LightBackground)
   PaintRoundedRect(0, 0, dwgBackground.W, dwgBackground.H, 8)
   Paint.Fill
   
End
' 


