' Gambas module file

' a basic logging system as Gambas doesn't have one by default
' Copyright (C) 2009-2014 Dr. Ian Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Private logfile As File
Private level As Integer
Private level_names As String[] = ["PANIC", "ERROR", "WARN ", "INFO ", "DEBUG", "DATA "]
Public Const panic_level As Integer = 0
Public Const error_level As Integer = 1
Public Const warning_level As Integer = 2
Public Const info_level As Integer = 3
Public Const debug_level As Integer = 4
Public Const data_level As Integer = 5

Public Sub _init()
  
  logfile = Open User.Home &/ ".easygp.log" For Write Create
  level = data_level ' by default log everything
  MakeLog(info_level, "EasyGP client version " & Application.Version & " running on Gambas " & System.Version)
  
End

'Public Sub _exit()
'  
' Close #logfile
'  
'End

Public Sub SetLevel(new_level As Integer)
  
  level = new_level
  
End


Public Sub MakeLog(msg_level As Integer, msg As String)
  
  If msg_level <= level Then
    msg = Replace$(msg, "\n", "\n   ") ' indent newlines in the string
    msg = Trim$(msg)
    Print #logfile, Now(); " ["; level_names[msg_level]; "] "; msg
  Endif
  
End

' 'Panic' is a massive error that leads to immediate program termination
Public Sub PanicMsg(msg As String)
  
  MakeLog(panic_level, msg)
  
End

' a serious error that alters functionality visible to the user, but the program keeps running
Public Sub ErrorMsg(msg As String)
  
  MakeLog(error_level, msg)
  
End

' a potential problem, shouldn't happen, but doesn't (yet) affect user functionality 
Public Sub WarningMsg(msg As String)
  
  MakeLog(warning_level, msg)
  
End

' information to help read the log, generated by normal program execution
' this is the lowest level that should be run outside of the development environment
Public Sub InfoMsg(msg As String)
  
  MakeLog(info_level, msg)
  
End

' messages to help debugging, normal when being run by developers.
' *** some of these logs can be a security risk ***
Public Sub DebugMsg(msg As String)
  
  MakeLog(debug_level, msg)
  
End

' when dumping whole datastructures to the log, only during specific debugging and 
' such log commands should be removed once the code is working
' obviously these can be a security risk also
Public Sub DataMsg(msg As String)
  
  MakeLog(data_level, msg)
  
End

Public Function GetWholeLog() As String
  
  MakeLog(data_level, "Log being copied by client")
  Return File.Load(User.Home &/ ".easygp.log")
  
End

