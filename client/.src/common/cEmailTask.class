' Gambas class file

Inherits CShellTask
' Copyright (C) 2013 Dr. Ian Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------

'  class to allow e-mail sending in the background via mutt

Public Sub Send_Email(addr As String, subj As String, Optional body As String, attachments As String[])
   
   Dim cmd As String
   Dim s As String
   Dim i As Integer
   Dim smtp As String
   Dim smtp_user As String
   Dim smtp_pass As String
   Dim tmp As String
   Dim from_addr As String
   
   cmd = modUtil.FindProgram("mutt", "mutt")
   If IsNull(cmd) Then Error.Raise("no mutt available")
   s = ""
   If Not IsNull(body) Then
      tmp = Temp$("emailtxt")
      File.Save(tmp, body)
      s = Subst$(" -i '&1'", tmp)
   Endif
   If Not IsNull(attachments) Then
      s = s & " -a"
      For i = 0 To attachments.Max 
        s = s & " '" & attachments[i] & "'"
      Next
   Endif
   If s = "" Then Error.Raise("no data to send in e-mail: needs a body or attachments")
   smtp = modAdminDBI.Config_Get("smtp_server", "localhost")
   smtp_user = modAdminDBI.Config_Get("smtp_username", "none")
   from_addr = modDBConnect.currentUser!logon_name & "@" & modAdminDBI.Config_Get("reply-to-email", smtp)
   If smtp_user <> "none" Then
      smtp_pass = modAdminDBI.Config_Get("smtp_password", "none")
      If smtp_pass <> "none" Then
         smtp_user = smtp_user & ":" & smtp_pass
      Endif
      smtp = smtp_user & "@" & smtp
   Endif
   If Not (smtp Begins "smtp://") And If Not (smtp Begins "smtps://") Then
      smtp = "smtp://" & smtp
   Endif
   Me.Send(Subst$("&1 -e 'set smtp_url=&5' -e 'set from=&6' -s '&2'&4 -- '&3' < /dev/null\n", cmd, subj, addr, s, smtp, from_addr))
   If Not IsNull(body) Then
      Me.Kill(tmp)
   Endif
End

Public Sub Send_Fax(fax As String, pdf_file As String)
   
   Me.Send_Email(fax & "@ozefax.me", "EasyGP fax to " & fax, Null, [pdf_file])
   
End

' send an e-mail, creating a background task object as required
' addr: e-mail address to send to
' subj: the e-mail subject
' body: a string with ASCII text forming the body of the e-mail
' attachments: an array of strings: paths to files on disk which are attached to the e-mail
Static Public Sub Send_Email_Easy(addr As String, subj As String, Optional body As String, attachments As String[])
  Dim t As CEmailTask
  
  t = New CEmailTask
  t.Send_Email(addr, subj, body, attachments)
  t.Finish()
  
End

Static Public Sub Unit_Test()
   
  Dim t As CEmailTask
  
  t = New CEmailTask
  t.Send_Email("ian@haywood.id.au", "test e-mail from easygp, really", "this is a body II")
  t.Finish()
   
End





