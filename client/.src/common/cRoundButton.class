' Gambas class file

' Copyright (C)  Beno√Æt Minisini

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Property Enabled As Boolean
Property ToolTip As String
Property Foreground As Integer
Property Font As Font
Property Visible As Boolean
Property Expand As Boolean
Property Text As String 
Private $hPanel As Panel
Public $hDrawingArea As DrawingArea
Private $hLabel As Label
Private $iColor As Integer
Private lblButton As String

Public $hDrawingAreaNotify As PictureBox 'just experimenting - if outstanding tasks, show red_button image (set from FMain for example)

Event Click()

Public Sub _new(hContainer As Container, X As Integer, Y As Integer, W As Integer, H As Integer, sText As String, Optional sFont As String)
   
   Dim hPict As Picture
   lblButton = sText
   $hPanel = New Panel(hContainer) As "Panel"
   $hPanel.Move(X, Y, W, H)
   $hPanel.Mouse = Mouse.Pointing
   $hPanel.Arrangement = Arrange.Horizontal
   $hPanel.Padding = 2
   $hPanel.Spacing = 8
   
 
    
    With $hDrawingArea = New DrawingArea($hPanel) As "Panel"
       .width = $hPanel.Width
       .height = $hPanel.Height
       .Border = True 
       .Expand = True 
       .painted = True
       .Background = Color.RGB(185, 191, 167)
    End With
   ' If hPict Then
   '    $hDrawingArea.Resize(hPict.Width + 4, H - 8)
   '    $hDrawingArea.Alignment = Align.Right
   '    $hDrawingArea.Picture = hPict
   ' Else
   '    $hDrawingArea.Resize(32, H - 8)
   ' Endif
   ' 
   ' $hLabel = New Label($hPanel) As "Panel"
   ' $hLabel.AutoResize = True
   ' $hLabel.Expand = False
   ' 
   ' If sFont Then $hLabel.Font = Font[sFont]
   ' $hLabel.Text = sText
   ' 
   ' 
   
End
' Public Sub ExampleRT()
'   Paint.Brush = Paint.Color(Color.RGB(31, 127, 31))
' 
'   Paint.LineWidth = 30
'   Paint.LineCap = Paint.LineCapRound
'   Paint.MoveTo(20, 20)
'   Paint.LineTo(120, 20)
'   Paint.Stroke
'   Paint.Brush = Paint.Color(Color.RGB(237, 239, 235))
'   Paint.LineWidth = 26
'   Paint.MoveTo(22, 20)
'   Paint.LineTo(118, 20)
'   Paint.Stroke
'    Paint.Brush = Paint.Color(Color.RGB(31, 127, 31))
'   Paint.Font.Name = "10"
'   Paint.Font.Bold = False
'   Paint.MoveTo(24, 24)
'   Paint.Text("Clinical Desktop")
'   Paint.Fill
' End
Public Sub Panel_draw()
  Dim x As Integer = 20
  Dim left_val As Integer = 20
  Dim width_val As Integer = $hpanel.width - 20
 If lblButton = "Clinical" Then 
  Paint.Brush = Paint.Color(Color.RGB(31, 127, 31))
 Else
  Paint.Brush = Paint.Color(Color.RGB(232, 231, 230))
    
 End If 
  Paint.LineWidth = $hpanel.height - 8
  Paint.LineCap = Paint.LineCapRound
  Paint.MoveTo(left_val, x)
  Paint.LineTo(width_val, x)
 
    
  Paint.Stroke
  If lblButton = "Clinical" Then 
      Paint.Brush = Paint.Color(Color.RGB(232, 231, 230))
  Else
     Paint.Brush = Paint.Color(Color.RGB(185, 191, 167))
  End If  
  Paint.LineWidth = $hpanel.height - 10
  Paint.MoveTo(left_val + 1, x)
  Paint.LineTo(width_val - 1, x)
  Paint.Stroke
  If lblButton = "Clinical" Then 
   Paint.Brush = Paint.Color(Color.RGB(31, 127, 31))
  Else
      Paint.Brush = Paint.Color(Color.RGB(255, 255, 255))
  End If 
  Paint.Font.Name = "Sans"
  Paint.Font.Size = 8
  Paint.Font.Bold = False
  Paint.MoveTo(left_val + 6, 24)
  Paint.Text(lblButton)
  Paint.Fill
End

Public Sub Panel_Enter()
   
   If Object.Type(Last) <> "Panel" Then Return
   $iColor = Last.Foreground
   Last.Background = Color.SelectedBackground '&88D5FF&
   
   Last.Foreground = Color.SelectedForeground '&88D5FF&
   
End

Public Sub Panel_Leave()
   
   If Object.Type(Last) <> "Panel" Then Return
   Last.Background = Last.Parent.Background
   Last.Foreground = $iColor
   
End

Private Function GetPanel() As Panel
   
   Dim hPanel As Panel
   
   Try hPanel = Last
   If Error Then
      hPanel = Last.Parent
   Endif
   
   Return hPanel
   
End

Public Sub Panel_MouseDown()
   
   With GetPanel()
      .Border = Border.Sunken
   End With
   
   '$hLabel.Move($hLabel.X + 1, $hLabel.Y + 1)
   '$hDrawingArea.Move($hDrawingArea.X + 1, $hDrawingArea.Y + 1)
   
End

Public Sub Panel_MouseUp()
   
   Dim hPanel As Panel
   Dim X As Integer
   Dim Y As Integer
   
   hPanel = GetPanel()
   hPanel.Border = Border.None
   
   X = Mouse.X
   Y = Mouse.Y
   
   If Last <> hPanel Then
      X = X + Last.X
      Y = Y + Last.Y
   Endif
   
   '$hLabel.Move($hLabel.X - 1, $hLabel.Y - 1)
   '$hDrawingArea.Move($hDrawingArea.X - 1, $hDrawingArea.Y - 1)
   
   If (X >= 0 And Y >= 0 And X < hPanel.W And Y < hPanel.H) Then
      
      Raise Click()
      
   Else
      
   Endif
   
End

Private Function Expand_Read() As Boolean
   
   Return $hPanel.Expand
   
End

Private Sub Expand_Write(bExpanded As Boolean)
   
   $hPanel.Expand = bExpanded
   
End

Private Function Text_Write(txt As String)
   
   $hLabel.text = txt
   
End

Private Function Text_Read() As String 
   
   Return $hLabel.text
   
End

Private Function Enabled_Read() As Boolean
   
   Return $hPanel.Enabled
   
End

Private Sub Enabled_Write(bEnabled As Boolean)
   
   $hPanel.Enabled = bEnabled
   
End

Public Sub Move(X As Integer, Y As Integer)
   
   $hPanel.Move(X, Y)
   
End

Public Sub Resize(W As Integer, H As Integer)
   
   $hPanel.Resize(W, H)
   '$hLabel.Resize(W - ($hDrawingArea.X + $hDrawingArea.W + 8) - 8, H - 8)
   
End

Private Function ToolTip_Read() As String
   
   Return $hPanel.ToolTip
   
End

Private Sub ToolTip_Write(sToolTip As String)
   
   $hPanel.ToolTip = sToolTip
   
End

Private Function Visible_Read() As Boolean
   
   Return $hPanel.visible
   
End

Private Sub Visible_Write(Value As Boolean)
   
   $hPanel.visible = Value
   
End

Private Function Foreground_Read() As Integer
   
   Return $hPanel.Foreground
   
End

Private Sub Foreground_Write(Value As Integer)
   
   $hPanel.Foreground = Value
   
End

Private Sub Font_Write(Value As Font)
   
   $hLabel.Font = Value
   
End

Private Function Font_Read() As Font
   
   Return $hLabel.Font
   
End
