' Gambas class file

' Copyright (C) 2009 Dr. Ian Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------

Private data As String
Private mode As String
Private tabledata As String
Private fieldbegin As String
Private lyx As Boolean

Public Sub _new(data2 As String, Optional mode2 As String = "html")
   
   Dim fd As File  
   
   If Right$(data2, 5) = ".html" Then
      ' it's a filename, load the file
      fd = Open data2 For Input
      Read #fd, data, Lof(fd)
      Close #fd
      mode = "html"
   Else If Right$(data2, 4) = ".tex" Then
      data = File.Load(data2)
      mode = "tex"
   Else If Len(data2) < 20 Then
      mode = mode2
      fd = Open "templates" &/ data2 & "." & mode For Input
      Read #fd, data, Lof(fd)
      Close #fd
   Else
      data = data2
      mode = mode2
   Endif
   tabledata = ""
   If mode = "tex" Then
      fieldbegin = "!"
      lyx = False
      If String.InStr(data, "LyX", 0, gb.IgnoreCase) > 0 Then lyx = True
   Else
      fieldbegin = "%"
   Endif
   
End

Private Function Escape(s As String) As String
   
   If mode = "tex" Then
      Return Esc_Tex(s)
   Else
      Return Esc_HTML(s)
   Endif
   
End

Private Function Esc_Tex(s As String) As String
   
   s = Replace$(s, "$", "\\$", gb.IgnoreCase)
   s = Replace$(s, "&", "\\&", gb.IgnoreCase)
   s = Replace$(s, "%", "\\%", gb.IgnoreCase)
   s = Replace$(s, ">", "$>$", gb.IgnoreCase)
   s = Replace$(s, "<", "$<$", gb.IgnoreCase)
   Return Trim$(s)
   
End

Private Function Esc_HTML_Tex(s As String) As String
   
   ' turns HTML into TeX 
   s = Replace$(s, "<b>", "{\\bf ", gb.IgnoreCase)
   s = Replace$(s, "</b>", "}", gb.IgnoreCase)
   s = Replace$(s, "<i>", "\\emph{", gb.IgnoreCase)
   s = Replace$(s, "<span style=\" font-weight:bold;\">", "{\\bf ", gb.IgnoreCase)
   s = Replace$(s, "</span>", "}", gb.IgnoreCase)
   s = Replace$(s, "</i>", "}", gb.IgnoreCase)
   s = Replace$(s, "<p>", "\n\n", gb.IgnoreCase)
   s = Replace$(s, "<p/>", "\n\n", gb.IgnoreCase)
   s = Replace$(s, "</p>", "\n\n", gb.IgnoreCase)
   s = Replace$(s, "<br>", "\\\\ ", gb.IgnoreCase)
   s = Replace$(s, "<h1>", "\\section{", gb.IgnoreCase)
   s = Replace$(s, "</h1>", "}", gb.IgnoreCase)
   s = Replace$(s, "<h2>", "\\subsection{", gb.IgnoreCase)
   s = Replace$(s, "</h2>", "}", gb.IgnoreCase)
   s = Replace$(s, "$", "\\$")
   s = Replace$(s, "&gt;", "$>$", gb.IgnoreCase)
   s = Replace$(s, "&lt;", "$<$", gb.IgnoreCase)
   s = Replace$(s, "&amp;", "\\&", gb.IgnoreCase)
   s = Replace$(s, "%", "\\%")
   Return Trim$(s)
   
End

Private Function Esc_HTML(s As String) As String
   
   ' turns *plain* text into HTML
   
   s = Replace$(s, "&", "&amp;")
   s = Replace$(s, "<", "&lt;")
   s = Replace$(s, ">", "&gt;")
   s = Replace$(s, "\n", "<br />")
   s = Replace$(s, "\"", "&quot;")
   Return s 
   
End

Public Sub Subst_Drugs(items As Collection, Optional bauthority As Boolean = False)
   
   Dim sSep As String = "\\\\ "
   Dim Drug_LaTex As String 
   Dim item As Collection
   
   For Each item In items
      Drug_LaTex &= Escape(item!generic) & sSep
      Drug_LaTex &= Escape(item!strength & " " & item!quantity & "'s Rpt " & item!repeats) & sSep
      Drug_LaTex &= Escape(item!instruction) & sSep
      Drug_LaTex &= "For " & Escape(item!prescribed_for) & sSep
      If bauthority = False Then
         Drug_LaTex &= Escape("*************************************") & sSep
      End If   
   Next
   If bauthority = False Then
        Drug_LaTex &= sSep & sSep & Escape("There are " & Str(items.count) & " items listed on this script") & sSep & sSep
        Drug_LaTex &= Escape("Signature of " & modDBConnect.currentUser!title & " " & modDBConnect.currentUser!wholename)
   End If 
   Me.Subst("drugs", Drug_LaTex)
   
End

Public Sub Subst_common(consult As CConsult)
   
   Dim sFax As String
   Dim sPhone As String
   Dim sMobile As String
   Dim comm As Collection
   Dim sSep As String
   
   If mode = "html" Then
      sSep = "<BR>"
   Else If mode = "tex" Then
      sSep = "\\\\\n "
   Endif
   Me.Subst("patient-address-vertical", Escape(consult!patient!street1) & sSep & Escape(consult!patient!town) & " " & consult!patient!postcode)
   Me.Subst("practitioner-address-vertical", Escape(modDBConnect.currentUser!organisation) & sSep & Escape(modDBConnect.currentUser!street1) & sSep & Escape(modDBConnect.currentUser!town & " " & modDBConnect.currentUser!postcode))   
   Me.Subst("firstname", Escape(consult!patient!firstname))
   Me.Subst("surname", Escape(consult!patient!surname))
   Me.Subst("name", Escape(consult!patient!title & " " & consult!patient!firstname & " " & consult!patient!surname))
   Me.Subst("birthdate", Escape(Format(consult!patient!birthdate, "dd/mm/yyyy")))
  '; Me.Subst("birthdate", Escape(Str$(Format(consult!patient!birthdate, "dd/mm/yyyy")))
   Me.Subst("sex", Escape(consult!patient!sex))
   If Not IsNull(consult!patient!street2) Then 
      Me.Subst("address", Escape(consult!patient!street1 & " " & consult!patient!street2 & " " & consult!patient!town & " " & consult!patient!postcode))
   Else
      Me.Subst("address", Escape(consult!patient!street1) & " " & consult!patient!town & " " & consult!patient!postcode)
   End If    
   If Not IsNull(consult!patient!street2) Then 
      Me.Subst("street", Escape(consult!patient!street1 & sSep & consult!patient!street2))
   Else
      Me.Subst("street", Escape(consult!patient!street1))
   End If    
   Me.Subst("suburb", Escape(consult!patient!town & " " & consult!patient!postcode))
   sPhone = ""
   sMobile = ""
   For Each comm In consult!comms
      Select Case comm!fk_type
         Case const.CommModalityPhone, const.CommModalityHome
            sPhone = Escape(comm!value)
         Case const.CommModalityMobile
            sMobile = Escape(comm!value)
      End Select
   Next
   Me.Subst("patient-phone", sPhone)
   Me.Subst("patient-mobile", sMobile)  
   Me.Subst("medicare", Escape(consult!patient!medicare_number))
   Me.Subst("practitioner-name", Escape(modDBConnect.currentUser!title & " " & modDBConnect.currentUser!wholename))
   Me.Subst("provider-no", Escape(modDBConnect.currentUser!provider_number))
   Me.Subst("prescriber-no", Escape(modDBConnect.currentUser!prescriber_number))
   Me.Subst("clinic-address", Escape(Trim(modDBConnect.currentUser!street1 & " " & modDBConnect.currentUser!street2) & " " & modDBConnect.currentUser!town & " " & modDBConnect.currentUser!postcode))
   Me.Subst("clinic-name", Escape(modDBConnect.currentUser!organisation)) 
   Me.Subst("clinic-branch", Escape(modDBConnect.currentUser!branch))
   If Not IsNull(modDBConnect.currentUser!street2) Then
      Me.Subst("clinic-street", Escape(modDBConnect.currentUser!street1 & sSep & modDBConnect.currentUser!street2))
   Else
      Me.Subst("clinic-street", Escape(modDBConnect.currentUser!street1))
   End If 
   Me.Subst("clinic-suburb", Escape(modDBConnect.currentUser!town & " " & modDBConnect.currentUser!postcode))
   sPhone = ""
   sFax = ""
   For Each comm In modDBConnect.currentUser!comms
      If comm!fk_type = const.CommModalityPhone Then
         sPhone = comm!value
      Endif
      If comm!fk_type = const.CommModalityFax Then
         sFax = comm!value
      Endif
   Next
   Me.Subst("clinic-phone", Escape(sPhone))
   Me.Subst("clinic-fax", Escape(sFax))
   
End

Public Sub Subst(field As String, value As String)
   ' accepts a plain text field and escapes appropriately
   
   data = Replace(data, fieldbegin & field, Escape(value))
   
End

Public Sub Subst_HTML(field As String, value As String)
   
   ' accepts HTML and substitutes appropriately 
   If mode = "tex" Then
      value = Esc_HTML_Tex(value) 
   Endif
   data = Replace(data, fieldbegin & field, value)
   
End

Public Sub Display(browser As WebView)
   
   browser.HTML = data
   
End

Public Function GetData() As String
   
   Return data
   
End

Public Sub Row(...)
   ' insert a row of table data
   ' each parameter is a row column
   ' call multiple times, one for each row
   
   Dim bSep As Boolean = False
   Dim i As Variant
   
   If mode = "html" Then
      tabledata &= "<TR><TD>"
   Endif
   For Each i In Param
      If bSep Then
         If mode = "tex" Then
            tabledata &= " & "
         Else
            tabledata &= "</TD><TD>\n"
         Endif
      Else
         bSep = True
      Endif
      tabledata &= Escape(Str$(i))
   Next
   If mode = "html" Then
      tabledata &= "</TD></TR>\n"
   Else
     If lyx Then
       tabledata &= " \\tabularnewline \n"
     Else 
       tabledata &= " \\\\\n"
     Endif       
   Endif
   
End

Public Sub Table(name As String)
   ' after you have called Row(), call this to
   ' actually do the substitution
   data = Replace$(data, fieldbegin & name, tabledata)
   tabledata = ""
   
End

Public Function Bold(word As String) As String
   ' returns a word with tags to make it bold 
   
   If mode = "tex" Then
      Return Subst$("{\\bf &1 }", word)
   Else
      Return Subst$("<B>&1</B>", word)
   Endif
   
End

Public Function Checkbox(item As String, Optional checked As Boolean = True) As String
   
   Dim s As String
   
   If mode = "tex" Then
      If checked Then
         s = "\\framebox(3,3){$\\bullet$}"
      Else
         s = "\\framebox(3,3){}"
      Endif
   Else
      If checked Then
         s = "checkbox_checked.png"
      Else
         s = "checkbox_notchecked.png " ' FIXME: no such file"
      Endif
      s = Application.Path &/ "icons/12" &/ s
      s = Subst("<img src=\"&1\" alt=\"checkbox\" ALIGN=LEFT WIDTH=15 HEIGHT=15 BORDER=0 />", s)
   Endif
   data = Replace(data, fieldbegin & item, s)
   
End

Public Function MakeImage(imagename As String) As String
   
   If mode = "tex" Then
      Return Subst$("\\includegraphics{&1}", imagename)
   Else
      Return "<img align=RIGHT border=0 src=\"file://" & imagename & "\">"
   Endif
   
End
