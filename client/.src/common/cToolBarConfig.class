' Gambas class file
'----------------------------------------------------------------------
' Embryonic but intended use is to configure toolbuttons on the toolbar
' This control = a panel + checkbox + label + icon (icon not yet done)
' ---------------------------------------------------------------------
Property Enabled As Boolean
Property ToolTip As String
Property Foreground As Integer
Property Font As Font
'Property Drag As Drag
Property Visible As Boolean
Property Expand As Boolean
Property tag As String
Property Text As String 
Public $hPanel As Panel
Private $hCheckbox As CheckBox
Public $hImage As PictureBox
Private $hLabel As Label
Private $iColor As Integer
Private $hSpacer As Vbox

Event MouseDrag()
Event Click()

Public Sub _new(hContainer As Container, sText As String, vIcon As Variant)
   
   Dim hPict As Picture
   
   $hPanel = New Panel(hContainer) As "Panel"
   $hPanel.Mouse = Mouse.Pointing
   $hPanel.Arrangement = Arrange.Horizontal
   $hPanel.Expand = False 
   $hPanel.border = Border.Raised
   $hPanel.height = 30
  
   If TypeOf(vIcon) = gb.String Then
      hPict = Picture[vIcon]
   Else
      hPict = vIcon
   Endif
   ' 
 
   ' 
   $hCheckbox = New CheckBox($HPanel) As "Checkbox"
   $hCheckbox.AutoResize = False
   $hCheckbox.width = 30
   $hLabel = New Label($hPanel) As "Panel"
   $hLabel.AutoResize = False 
   $hLabel.Expand = True  
   $hLabel.text = sText 
   
   $hImage = New PictureBox($hPanel) As "Panel"
   If hPict Then
      $hImage.Resize(hPict.Width + 4, 24)
      $hImage.Alignment = Align.Right
      $hImage.Picture = hPict
   Else
      $hImage.Resize(32, 24)
   Endif
   With $hSpacer = New VBox($hpanel)
      .width = 20

   End With
End



Private Function GetPanel() As Panel
   
   Dim hPanel As Panel
   
   Try hPanel = Last
   If Error Then
      hPanel = Last.Parent
   Endif
   
   Return hPanel
   
End


Public Sub Panel_MouseDown()
   
   Dim hPanel As Panel
   Dim X As Integer
   Dim Y As Integer
   
   hPanel = GetPanel()
  ' hPanel.Border = Border.None
   
   X = Mouse.X
   Y = Mouse.Y
   
   If Last <> hPanel Then
      X = X + Last.X
      Y = Y + Last.Y
   Endif
    
   If (X >= 0 And Y >= 0 And X < hPanel.W And Y < hPanel.H) Then
      
      Raise MouseDrag()
    
   Else
      
   Endif 
  
  
End

Public Sub Panel_MouseUp()
   
   Dim hPanel As Panel
   Dim X As Integer
   Dim Y As Integer
   
   hPanel = GetPanel()
  ' hPanel.Border = Border.None
   
   X = Mouse.X
   Y = Mouse.Y
   
   If Last <> hPanel Then
      X = X + Last.X
      Y = Y + Last.Y
   Endif
    
   If (X >= 0 And Y >= 0 And X < hPanel.W And Y < hPanel.H) Then
      
      Raise Click()
      
   Else
      
   Endif
   
End

Private Function Expand_Read() As Boolean
   
   Return $hPanel.Expand
   
End

Private Sub Expand_Write(bExpanded As Boolean)
   
   $hPanel.Expand = bExpanded
   
End
Private Function Tag_Write(tag As String)
  
  $hPanel.tag = tag
  
End
Private Function Tag_Read() As String
   
   Return $hPanel.Tag
   
End
Private Function Text_Write(txt As String)
   
   $hLabel.text = txt
   
End

Private Function Text_Read() As String 
   
   Return $hLabel.text
   
End

Private Function Enabled_Read() As Boolean
   
   Return $hPanel.Enabled
   
End

Private Sub Enabled_Write(bEnabled As Boolean)
   
   $hPanel.Enabled = bEnabled
   
End

Public Sub Move(X As Integer, Y As Integer)
   
   $hPanel.Move(X, Y)
   
End

Public Sub Resize(W As Integer, H As Integer)
   
   $hPanel.Resize(W, H)
 End

Private Function ToolTip_Read() As String
   
   Return $hPanel.ToolTip
   
End

Private Sub ToolTip_Write(sToolTip As String)
   
   $hPanel.ToolTip = sToolTip
   
End

Private Function Visible_Read() As Boolean
   
   Return $hPanel.visible
   
End

Private Sub Visible_Write(Value As Boolean)
   
   $hPanel.visible = Value
   
End

Private Function Foreground_Read() As Integer
   
   Return $hPanel.Foreground
   
End

Private Sub Foreground_Write(Value As Integer)
   
   $hPanel.Foreground = Value
   
End

Private Sub Font_Write(Value As Font)
   
   $hLabel.Font = Value
   
End

Private Function Font_Read() As Font
   
   Return $hLabel.Font
   
End
