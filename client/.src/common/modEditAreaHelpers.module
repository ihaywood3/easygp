' Gambas module file
' Copyright (C) 2008,2009 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
Public Sub Valid_Date(txtbox As Textbox) As Boolean
  
  If TypeOf(Val(txtbox.text)) = gb.Date Then 
      Return True
  End If 
  Return False
  
End
Public Sub Fill_Combo_Titles(cb As ComboBox)
  
   cb.Clear()
   cb.Add("Mr", 0)
   cb.Add("Mrs", 1)
   cb.Add("Master", 2)
   cb.Add("Miss", 3)
   cb.Add("Dr", 4)
   cb.Add("Prof", 5)
   cb.Add("Ms")
End

Public Sub Fill_Combo_Sex(cb As ComboBox)
   cb.Clear()
   cb.Add("Male", 0)
   cb.Add("Female", 1)
   cb.Add("Unknown", 2)
End

Public Function Progressnote_Annotate_As_Edited(sProgressNotes As String) As String 
     sProgressNotes &= "<FONT COLOR='#b3b3b3'> [Edited:" & Format(Now, "dd/mm/yyyy") & " "
     sProgressNotes &= modDBConnect.currentUser!title & " " & modDBConnect.currentuser()!wholename & "]</FONT></small></P>"
     Return sProgressNotes
End
Public Function wholename(person As Collection) As String
  
  Return person!title & " " & person!firstname & " " & person!surname
  
End

Public Sub Help_Show(topic As String, F As FHtmlViewer) 
  
    If F.tag <> topic Then
       F.webview1.url = Application.Path &/ topic
       F.tag = topic
    Endif
  
End
Public Sub Resize_labels(VB As VBox, lblmeasure As Label)
   '-----------------------------------------------------------------------------
   'PURPOSE     :If application.fonts has been changed, then the labels could
   '            no longer be wide enough so the display would look funny
   '           
   'HOW IT WORKS:loop through all the labels on the form and make sure they
   '             are correct size.LblMeasure is a hidden control.
   'NB:         :Resize those labels in the gui with autoresize = false
   '             I have set ones I don't want to be resized manually by this
   '             routine too auto-resize = True - ie they will do it themselves
   '-----------------------------------------------------------------------------
   Dim hCtrl As Control
   Dim ABox As HBox
   Dim lbl As Label
  
   For Each Hctrl In VB.Children
    If hctrl Is Hbox Then
       Abox = hctrl
       For Each hctrl In Abox.Children      'children of outer box e.g Vbox_EditArea
          If hctrl Is Label Then
             lbl = hctrl
             Print lbl.text
             Resize_label(lbl, lblMeasure)
             '  If lbl.AutoResize = False And lbl.tag <> "skip me" Then
             '    lbl.width = lblmeasure.Width 
             ' End If   
             Break
          Else
            If Hctrl Is Hbox Then
              Abox = hctrl
            
                For Each hctrl In Abox.children
                   If hctrl Is Label Then
                      lbl = hctrl
                     Print lbl.text
                     Resize_label(lbl, lblMeasure)
                     Break
                   Endif
                Next
            Endif
          End If
       Next
    End If
   Next
End
Public Sub Resize_labels_New(F As Form, lblmeasure As Label)
   '-----------------------------------------------------------------------------
   'PURPOSE     :If application.fonts has been changed, then the labels could
   '            no longer be wide enough so the display would look funny
   '           
   'HOW IT WORKS:loop through all the labels on the form and make sure they
   '             are correct size.LblMeasure is a hidden control.
   'NB:         :Resize those labels in the gui with autoresize = false
   '             I have set ones I don't want to be resized manually by this
   '             routine too auto-resize = True - ie they will do it themselves
   '-----------------------------------------------------------------------------
   Dim hCtrl As Control
   Dim ABox As HBox
   Dim lbl As Label
  
   For Each Hctrl In F.Children
    If hctrl Is Hbox Then
       Abox = hctrl
       For Each hctrl In Abox.Children      'children of outer box e.g Vbox_EditArea
          If hctrl Is Label Then
             lbl = hctrl
             Print lbl.text
             Resize_label(lbl, lblMeasure)
             '  If lbl.AutoResize = False And lbl.tag <> "skip me" Then
             '    lbl.width = lblmeasure.Width 
             ' End If   
             Break
          Else
            If Hctrl Is Hbox Then
              Abox = hctrl
            
                For Each hctrl In Abox.children
                   If hctrl Is Label Then
                      lbl = hctrl
                     Print lbl.text
                     Resize_label(lbl, lblMeasure)
                     Break
                   Endif
                Next
            Endif
          End If
       Next
    End If
   Next
End
Public Sub Resize_label(lbl As Label, lblMeasure As Label)
        If lbl.AutoResize = False And lbl.tag <> "skip me" Then
           lbl.width = lblmeasure.Width 
        End If   
End
Public Sub Resize_labels_old_donotremove(VB As VBox, lblmeasure As Label)
   '-----------------------------------------------------------------------------
   'PURPOSE     :If application.fonts has been changed, then the labels could
   '            no longer be wide enough so the display would look funny
   '           
   'HOW IT WORKS:loop through all the labels on the form and make sure they
   '             are correct size.LblMeasure is a hidden control.
   'NB:         :Resize those labels in the gui with autoresize = false
   '             I have set ones I don't want to be resized manually by this
   '             routine too auto-resize = True - ie they will do it themselves
   '-----------------------------------------------------------------------------
   Dim hCtrl As Control
   Dim ABox As HBox
   Dim lbl As Label
  
   For Each Hctrl In VB.Children
    If hctrl Is Hbox Then
       Abox = hctrl
       For Each hctrl In Abox.Children
          If hctrl Is Label Then
             lbl = hctrl
              If lbl.AutoResize = False And lbl.tag <> "skip me" Then
                lbl.width = lblmeasure.Width 
             End If   
             Break
          End If
       Next
    End If
   Next
End

Public Sub EditArea_ResetTextBox_BackColor(VerticalBox As VBox)
   '----------------------------------------------------
   'should not need this, but the gambas lostfocus event
   'does not work properly when a control getting focus
   'is a button and ?some others
   '----------------------------------------------------
    'Clears the edit area
   'currently allows for only 2 levels of hbox nesting FIXME
  Dim hCtrl As Control
  Dim hb As HBox
  Dim VB As VBox
  Dim PB As PictureBox
  Dim tb As TextBox
  Dim cb As CheckBox
  Dim rb As RadioButton
  Dim te As TextArea
 ' bexit = True
  For Each hctrl In VerticalBox.children
     If hctrl Is Hbox Then
        hb = hctrl
       For Each hCtrl In HB.Children
         If hctrl Is Textbox Then
              tb = hctrl
              tb.Background = Color.white
         Else If hctrl Is TextArea Then
            te = hctrl
            te.Background = Color.white
         Else If hctrl Is Hbox Then
                     hb = hctrl
                For Each hCtrl In hb.Children
                  If hctrl Is Textbox Then
                     tb = hctrl
                     tb.Background = Color.white
                  Else If hctrl Is TextArea
                     te = hctrl
                      te.Background = Color.white
                  End If
                Next 
         End If
       Next      
     End If
  Next 
  
End
Public Sub Patient_Comms_Display(comms As Collection, cvw As Columnview, bFullText_Prefix As Boolean)
   '------------------------------------------------------------------------
   'Display list of all patients communications
   '
   'Expects    a collection of valid comms
   '           a columnview control
   '           if bFullText_Prefix = true display e.g "Home" else display "H"  
   '
   'Note the cvw must have been cleared by the calling routine as sometimes
   'it countains information besides comms
   'called by clinical.patient_display_demographics()
   'recalls.patient_display_contacts()
   '
   ' Public Const CommModalityHome As Integer = 0
   ' Public Const CommModalityWork As Integer = 1
   ' Public Const CommModalityFax As Integer = 2
   ' Public Const CommModalityEmail As Integer = 3
   ' Public Const CommModalityMobile As Integer = 4
   ' Public Const CommModalityVOIP As Integer = 5
   ' Public Const CommModalityWeb As Integer = 6
   ' Public Const CommModalityPhone As Integer = 7
   ' Public Const CommModalityTollFree As Integer = 8
   ' Public Const CommModalityLetter As Integer = 9
   '------------------------------------------------------------------------
   Dim com As Collection
   Dim Prefix As String 
   
   For Each com In comms
      If bFullText_Prefix Then
         prefix = const.CommModalityTextFull[com!fk_type]
      Else
         prefix = const.CommModalityTextBrief[com!fk_type]
      End If
      
       ' Select com!fk_type
       ' Case const.CommModalityHome
       '    Abbrev_name = "H"
       ' Case const.CommModalityWork
       '    Abbrev_name = "W"
       ' Case const.CommModalityFax
       '    Abbrev_name = "F"
       ' Case const.CommModalityEmail
       '    Abbrev_name = "E"
       ' Case const.CommModalityMobile
       '    Abbrev_name = "M"
       ' Case const.CommModalityVOIP
       '    Abbrev_name = "V"
       ' Case const.CommModalityWeb
       '    Abbrev_name = "I"
       ' Case const.CommModalityPhone
       '    Abbrev_name = "P"
       ' Case const.CommModalityTollFree
       '    Abbrev_name = "TF"
       ' End Select
       cvw.Add(cvw.count, prefix & ":" & comms[comms.key]!value)
    Next
End

Public Sub Notify_Data_Changed(VB As Vbox, tbn As ToolButton, flag As Boolean)
   '-------------------------------------------------------------------------------------------
   'Outlines an edit area in red and the text on the save button to red to indicate data change
   '-------------------------------------------------------------------------------------------
   If flag Then  
      VB.Padding = 1  
      tbn.Foreground = Color.Red  
   Else
      VB.Padding = 0  
      tbn.Foreground = Color.Black 
   End If
End

Public Sub EditArea_SetTextBoxes_ReadOnly(VerticalBox As VBox)
  Dim hCtrl As Control
  Dim hb As HBox
  Dim VB As VBox
  Dim tb As TextBox
  Dim te As TextArea 
 For Each hctrl In VerticalBox.children
     If hctrl Is Hbox Then
        hb = hctrl
       For Each hCtrl In HB.Children
         If hctrl Is Textbox Then
            tb = hctrl
            tb.ReadOnly = True   
            tb.Clear()
        Else If hctrl Is TextArea Then
            te = hctrl
            te.ReadOnly = True
            te.Clear()
        Else If hctrl Is Hbox Then
                    hb = hctrl
                For Each hCtrl In hb.Children
                  If hctrl Is Textbox Then
                     tb = hctrl
                     tb.ReadOnly = True
                 Else If hctrl Is TextArea
                     te = hctrl
                      te.ReadOnly = True  
                 End If      

                Next 
         End If
       Next      
     End If
  Next  
  
End

Public Sub EditArea_Clear(VerticalBox As VBox)
   'Clears the edit area
   'currently allows for only 2 levels of hbox nesting FIXME
  Dim hCtrl As Control
  Dim hb As HBox
  Dim VB As VBox
  Dim PB As PictureBox
  Dim tb As TextBox
  Dim cb As CheckBox
  Dim rb As RadioButton
  Dim te As TextEdit
  Dim ta As TextArea
 ' bexit = True
  For Each hctrl In VerticalBox.children
     If hctrl Is Hbox Then
        hb = hctrl
       For Each hCtrl In HB.Children
         If hctrl Is Textbox Then
            tb = hctrl
            tb.Background = Color.white
            tb.Clear()
         Else If hctrl Is RadioButton Then
            rb = hctrl 
            If rb.tag = "hidden" Or rb.tag = const.HealthState_Indeterminate Then 'bad programming and against 
               rb.value = True       'Apple Human Interface Guidelines' 
                                      'but switches off the others
                                      'fix me change tags in health care forms to hidden or visa-vers
               Break
            End If 
         Else If hctrl Is TextArea Then
            ta = hctrl
            ta.Background = Color.white
            ta.Clear()
         Else If hctrl Is Checkbox Then
             cb = hctrl
             cb.value = False  
         Else If hctrl Is TextEdit Then
            te = hctrl
            te.Background = Color.white
            te.Clear()
         Else If hctrl Is Hbox Then
                    hb = hctrl
                For Each hCtrl In hb.Children
                  If hctrl Is Textbox Then
                     tb = hctrl
                     tb.Background = Color.white
                     tb.Clear()
                  Else If hctrl Is RadioButton Then
                     rb = hctrl 
                     If rb.tag = "hidden" Or rb.tag = const.HealthState_Indeterminate Then
                         rb.value = True  
                         Break
                     End If 
                  Else If hctrl Is TextArea
                     te = hctrl
                      te.Background = Color.white
                     te.Clear()
                  Else If hctrl Is Checkbox Then
                       cb = hctrl
                      cb.value = False  
                  End If
                Next 
         End If
       Next      
     End If
  Next
End 
Public Sub EditArea_Clear_Form(F As Form) 'ian temporary
   'Clears the edit area
   'currently allows for only 2 levels of hbox nesting FIXME
  Dim hCtrl As Control
  Dim hb As HBox
  Dim VB As VBox
  Dim PB As PictureBox
  Dim tb As TextBox
  Dim cb As CheckBox
  Dim rb As RadioButton
  Dim te As TextArea
 ' bexit = True
  For Each hctrl In F.children
     If hctrl Is Hbox Then
        hb = hctrl
       For Each hCtrl In HB.Children
         If hctrl Is Textbox Then
            tb = hctrl
            tb.Background = Color.white
            tb.Clear()
         Else If hctrl Is RadioButton Then
            rb = hctrl 
            If rb.tag = "hidden" Or rb.tag = const.HealthState_Indeterminate Then 'bad programming and against 
               rb.value = True       'Apple Human Interface Guidelines' 
                                      'but switches off the others
                                      'fix me change tags in health care forms to hidden or visa-vers
               Break
            End If 
         Else If hctrl Is TextArea Then
            te = hctrl
            te.Background = Color.white
            te.Clear()
         Else If hctrl Is Checkbox Then
              cb = hctrl
             cb.value = False  
         Else If hctrl Is Hbox Then
                    hb = hctrl
                For Each hCtrl In hb.Children
                  If hctrl Is Textbox Then
                     tb = hctrl
                     tb.Background = Color.white
                     tb.Clear()
                  Else If hctrl Is RadioButton Then
                     rb = hctrl 
                     If rb.tag = "hidden" Or rb.tag = const.HealthState_Indeterminate Then
                         rb.value = True  
                         Break
                     End If 
                  Else If hctrl Is TextArea
                     te = hctrl
                      te.Background = Color.white
                     te.Clear()
                  Else If hctrl Is Checkbox Then
                       cb = hctrl
                      cb.value = False  
                  End If
                Next 
         End If
       Next      
     End If
  Next
End 
 Public Sub Enable_DialogButton()
   '-------------------------------------------------------------------
   'User has checked a box in calling module
   'Search for the children of the Hbox the checkbox is in, when find
   'the only other Hbox which contains the toolbutton, enable or
   'disable the toolbutton according to whether the checkbox is checked
   'This works because Last is global
   '-------------------------------------------------------------------
   Dim hCtrl As Control
   Dim hCtrl1 As Control
   Dim aBox As Hbox
   Dim tb As Toolbutton
   Dim aTextBox As Textbox
   For Each hCtrl In Last.parent.children
      If hctrl Is Hbox Then
         aBox = hctrl
         Break
      End If
   Next
   For Each hCtrl In aBox.Children
      If hctrl Is Toolbutton Then
         tb = hctrl
         tb.Enabled = Last.value
         If Last.value = False Then
            For Each hCtrl1 In Last.parent.children
               If hCtrl1 Is TextBox Then
                  aTextbox = hCtrl1
                  aTextbox.text = "" 
               End If
            Next
         End If        
      End If
   Next
End

Public Sub Get_FilePath()
  '---------------------------------------------
   'Select a file to import demographic data from
   '---------------------------------------------
   Dim hfile As File
   Dim sFilename As String
   Dim sLineInput As String
   Dim hCtrl As Control
   Dim aTextbox As Textbox
   Dim x As Integer
   Dialog.Path = "import/"
  If Dialog.OpenFile() Then Return
   Print Dialog.path
     For Each hctrl In Last.parent.parent.children
     Print hCtrl.name
     If hctrl Is Textbox Then
       aTextbox = hctrl
       aTextbox.text = Dialog.Path
       
       Break
     End If
     Next
End

Public Sub Hightlight_Label(TheBox As HBox, flag As Boolean)
      '-----------------------------------------------------------------------------
      'Where there is a label descibing something followed by option button choices
      'e.g in the over 75 health care reviews, it can be difficult to know which
      'row you are on, so this routine hightlights the descriptive label when the
      'option buttons are hovered over and the font made larger!
      '------------------------------------------------------------------------------ 
      Dim lbl As Label
      Dim hCtrl As Control
      For Each hctrl In TheBox.Children
         If hctrl Is Label Then 
            lbl = hctrl
            If lbl.tag = "question"
              If flag Then 
               lbl.foreground = Color.white
               lbl.background = Color.Black
               lbl.Font.size = Last.Font.size + 2
               
            Else
               lbl.foreground = Color.Black
               lbl.background = Color.White
               lbl.Font.size = Max(Last.Font.size - 2, Application.Font.Size)
             
              End If
            End If
            Break
         End If   
      Next
End


Public Sub mnuHealthIssues_Refresh(currentconsult As CConsult, mnuHealthIssues As Menu)
   '--------------------------------------------------------
   'Puts all the current health issues onto a drop down menu
   '--------------------------------------------------------
   Dim mnu As Menu
   Dim PastHistoryCondition As Collection
   If Not currentconsult Then Return
   If currentconsult!past_history.count = 0 Then Return 
   mnuHealthIssues.Children.Clear()
   For Each PastHistoryCondition In currentconsult!past_history
    If PastHistoryCondition!major Then
      mnu = New Menu(mnuHealthIssues) As "mnuHealthIssues"
      mnu.name = PastHistoryCondition!description
      mnu.caption = PastHistoryCondition!description
      mnu.tag = PastHistoryCondition!pk_pasthistory
    End If
   
   Next
     mnu = New Menu(mnuHealthIssues)
     mnu.name = "separator_1"
     mnu.caption = ""
   For Each PastHistoryCondition In currentconsult!past_history
    If PastHistoryCondition!active = True Then
      mnu = New Menu(mnuHealthIssues) As "mnuHealthIssues"
      mnu.name = PastHistoryCondition!description
      mnu.caption = PastHistoryCondition!description
      mnu.tag = PastHistoryCondition!pk_pasthistory
    End If
   Next 
     mnu = New Menu(mnuHealthIssues)
     mnu.name = "separator_2"
     mnu.caption = ""
    For Each PastHistoryCondition In currentconsult!past_history
      If PastHistoryCondition!active = False And PastHistoryCondition!major = False
        mnu = New Menu(mnuHealthIssues) As "mnuHealthIssues"
        mnu.name = PastHistoryCondition!description
        mnu.caption = PastHistoryCondition!description
        mnu.tag = PastHistoryCondition!pk_pasthistory
      End If
    Next
    
End

Public Function Set_ICD10(chkicd10 As Checkbox, lblCodingSystem As Label)
  '------------------------------------------------------------------
   'Display the default coding system and set ICD10 checkbox if needed
   'otherwise, users won't be able to find any terms, don't let them
   'turn if off either or again, they will get nothing.
   '------------------------------------------------------------------
   lblCodingSystem.text = "Coding system in use: " & modCodingDBI.coding_system!system
   If modCodingDBI.coding_system!fk_system = const.coding_icd10 Then
      chkicd10.value = True
      chkicd10.Enabled = False
   Else
      chkicd10.value = False
      chkicd10.Enabled = True
   End If
End

Public Function Calculate_Date_From_Interval(tb As Textbox)
   '-----------------------------------------------------------
   'Given input like 1M 1W 1Y, add to Now() and return the date 
   'FIXME put in weeks and days
   '--------------------------------------------
   Dim sIntervalUnits As String 'eg if tb contains 3M then units interval is 3
   Dim iNumberOfMonths As Integer      'do not need both these declared, but do for readability
   Dim iNumberOfYears As Integer 
   Dim iNumberOfDays As Integer
   Dim iNumberOfWeeks As Integer
   Dim vPossibleDate As Variant
   Dim aDate As Date
   Dim x As Integer
   If UCase(Right(Trim(tb.text), 1)) = "M" Then
          '---------------------------------------------------------------------------
          'Try and convert the rest of the string (ie left part which should be number
          'to a number, if error, pop up invalid date and return
          'Remember that  bkeyvalid = EditArea_TxtBox_ExcludeKeys(key.code) has
          'only allowed numbers or mM or Yy for this textbox, but some idiot could
          'have tried out patience by typing in e.g 10m10M or something
          '---------------------------------------------------------------------------
          Try iNumberOfMonths = Val(Left(tb.text, Len(Trim(tb.text)) - 1))
          If Error Then
              tb.text = "" 
              Return
          End If
           tb.text = Format(DateAdd(Now, gb.Month, iNumberOfMonths), "dd/mm/yyyy")

  
         Else If UCase(Right(Trim(tb.text), 1)) = "Y" Then
               '---------------------------------------------------------------------------
               'Try and convert the rest of the string (ie left part which should be number
               'to a number, if error, pop up invalid date and return
               'Remember that  bkeyvalid = EditArea_TxtBox_ExcludeKeys(key.code) has
               'only allowed numbers or mM or Yy for this textbox, but some idiot could
               'have tried out patience by typing in e.g 10m10M or something
               '---------------------------------------------------------------------------
               Try iNumberOfYears = Val(Left(tb.text, Len(Trim(tb.text)) - 1))
               If Error Then
                    tb.text = "" 
                    Return
               End If
               
             tb.text = Format(DateAdd(Now, gb.Year, iNumberOfYears), "dd/mm/yyyy")
            
         ' End If
     
       Else If UCase(Right(Trim(tb.text), 1)) = "W" Then
               ' If UCase(Right(Trim(tb.text), 1)) = "M" Then
                   Try iNumberOfWeeks = Val(Left(tb.text, Len(Trim(tb.text)) - 1))
                 If Error Then
                      tb.text = "" 
                      Return
                 End If
             
             tb.text = Format(DateAdd(Now, gb.Week, iNumberOfWeeks), "dd/mm/yyyy")
            
       Else
       
               If UCase(Right(Trim(tb.text), 1)) = "D" Then
                    Try iNumberOfdays = Val(Left(tb.text, Len(Trim(tb.text)) - 1))
                 If Error Then
                      tb.text = "" 
                      Return
                 End If
               End If
             tb.text = Format(DateAdd(Now, gb.Day, iNumberOfdays), "dd/mm/yyyy")
     
    End If
End

Public Sub Patient_Requests_Show(cons As Cconsult, cvw As Columnview)
   '-------------------------------------------------------
   'Fill a column view with all the patients requests
   'This loads all requests on a form onto a columnview row
   'and all individual requests on rows below this
   '-------------------------------------------------------
   Dim SingleRequest As Collection 
   Dim requests As Collection
   Dim results As Collection
   Dim thepicture As Picture
   Dim HasResult As Boolean
   Dim picPathology As Picture
   Dim picPathologyBack As Picture
   Dim pixXray As Picture
   Dim x As Integer
   Dim y As Integer
   Dim last_form_fk As String
   Dim current_form_fk As String
   Dim parent_key As String
   
   picPathology = Picture["icons/12/bloodtube1212.png"]
   picPathologyBack = Picture["icons/12/bloodtube1212_greendot.png"]
   pixXray = Picture["icons/12/blacksquare1212.png"]
   
   cvw.Clear()
   cvw.Columns.count = 2
    For Each SingleRequest In cons!requests_ordered
      current_form_fk = SingleRequest!fk_form
      If SingleRequest!request_result_html <> "" Then 
          Hasresult = True
      Else
          HasResult = False
      End If
      If last_form_fk <> current_form_fk Then
             '-------------------
             'Start of a new form
             '-------------------
             last_form_fk = SingleRequest!fk_form
             Inc x
             Parent_Key = Str(x) & "-" & Str(SingleRequest!pk_view)
             cvw.add(parent_key, 0)
             cvw[parent_key][0] = Format(singleRequest!date, "dd/mm/yyyy")   '& "  " & singleRequest!requests_summary
             cvw[parent_key][1] = singleRequest!requests_summary
             thepicture = modRequestsDBI.Request_Picture_icon(SingleRequest!type, SingleRequest!item, HasResult)
             cvw.add(SingleRequest!pk_view, SingleRequest!item, thepicture, parent_key)
      Else
             '------------------------------------------
             'this test still belongs To the same form
             '------------------------------------------
             thepicture = modRequestsDBI.Request_Picture_icon(SingleRequest!type, SingleRequest!item, hasresult)
             cvw.add(SingleRequest!pk_view, SingleRequest!item, thepicture, parent_key)
          End If
    Next
End
