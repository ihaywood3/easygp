' Gambas module file
' Copyright (C) 2008,2009 Dr. Richard Terry Dr. Ian Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------


Public Function LineGraph(width As Integer, height As Integer, data As Result, title As String, ytitle As String, font_size As Integer) As String
  ' takes a SQL result object, the title, and the title for the y axis
  ' returns a file name of a PNG file with the graph
  ' x must be a Date and y some numeric data type
  ' a third numeric column is allowed, causing two lines to be drawn
  Dim datafile As File
  Dim gnuplot As Process
  Dim d1 As Date
  Dim linetype As String
  Dim tempFile As String = Temp() & ".png"  
  Dim sGraphFontSize As String
  Select Case font_size
   Case 1
     sGraphFontSize = "tiny"
   Case 2
      sGraphFontSize = "small"
   Case 3 
      sGraphFontSize = "medium"
   Case 4 
      sGraphFontSize = "large"
  End Select
  If data.Count < 1 Then
    Return "insufficient_data.png"
  End If
  datafile = Open Temp$("data1") For Output Create
  For Each data
    d1 = data[data.Fields[0].Name]
    Print #datafile, Day(d1) & "/" & Month(d1) & "/" & Year(d1), data[data.Fields[1].Name];
    If data.Fields.Count = 3 Then
      Print #datafile, " " & data[data.Fields[2].Name];
    End If
    Print #datafile  
  Next
  Close datafile
  'set xtics border In scale 1, 0.5 nomirror rotate by - 45 offset character 0, 0, 0 
'  set xtics("1891-1900" 0.00000, "1901-1910" 1.00000, "1911-1920" 2.00000, "1921-1930" 3.00000, "1931-1940" 4.00000, "1941-1950" 5.00000, "1951-1960" 6.00000, "1961-1970" 7.00000)

 ' Print #gnuplot, "set output '" & Temp$("graph") & "'"
  gnuplot = Exec ["/usr/bin/gnuplot"] For Write
  Print #gnuplot, "set terminal png transparent nocrop enhanced " & sGraphFontSize & " size " & width & ", " & height 
  Print #gnuplot, "set output '" & tempfile & "'"
  Print #gnuplot, "set xdata time"
  Print #gnuplot, "set timefmt x \"%d/%m/%Y\""
  Print #gnuplot, "set format x \"%m/%y\""
  Print #gnuplot, "set grid xtics nomxtics ytics nomytics"
  Print #gnuplot, "set grid layerdefault linetype 0 linewidth 1.000, linetype 0 linewidth 1.000"
  Print #gnuplot, "set title \"" & title & "\"" 
  Print #gnuplot, "set xlabel \"Date\" textcolor lt 1" 
  Print #gnuplot, "set pointsize 2"
  Print #gnuplot, "set ylabel \"" & ytitle & "\" textcolor lt 1"

'   Print #gnuplot "set ylabel "Y-axis" textcolor lt 1

  If data.Count < 3 Then
    linetype = "smooth unique"
  Else
    linetype = "smooth cspline"
  End If
  Print #gnuplot, "plot '" & Temp$("data1") & "' using 1:2 t '' " & linetype & ", '" & Temp$("data1") & "' using 1:2 t '' with points";
  If data.Fields.Count = 3 Then
    Print #gnuplot, ",'" & Temp$("data1") & "' using 1:3 t '' " & linetype & ", '" & Temp$("data1") & "' using 1:3 t '' with points";
  End If
  Print #gnuplot
  Close #gnuplot
  gnuplot.Wait() 'wait for gnuplot to finish
  Return tempfile
'  Return Temp$("graph")
End
Public Function LineGraph_hba1c(width As Integer, height As Integer, data As Result, title As String, ytitle As String) As String
'   ' takes a SQL result object, the title, and the title for the y axis
'   ' returns a file name of a PNG file with the graph
'   ' x must be a Date and y some numeric data type
'   ' a third numeric column is allowed, causing two lines to be drawn
'   Dim datafile As File
'   Dim gnuplot As Process
'   Dim d1 As Date
'   Dim linetype As String
'   Dim tempFile As String = Temp() & ".png"  
'   If data.Count < 1 Then
'     Return "insufficient_data.png"
'   End If
'   datafile = Open Temp$("data1") For Output Create
'   For Each data
'     d1 = data[data.Fields[0].Name]
'     Print #datafile, Day(d1) & "/" & Month(d1) & "/" & Year(d1), data[data.Fields[1].Name];
'     If data.Fields.Count = 3 Then
'       Print #datafile, " " & data[data.Fields[2].Name];
'     End If
'     Print #datafile  
'   Next
'   Close datafile
'  ' Print #gnuplot, "set output '" & Temp$("graph") & "'"
'   gnuplot = Exec ["/usr/bin/gnuplot"] For Write
'   Print #gnuplot, "set terminal png transparent nocrop enhanced tiny size " & width & ", " & height 
'   Print #gnuplot, "set output '" & tempfile & "'"
'   Print #gnuplot, "set xdata time"
'   Print #gnuplot, "set timefmt x \"%d/%m/%Y\""
'   Print #gnuplot, "set format x \"%m/%y\""
'   Print #gnuplot, "set grid xtics nomxtics ytics nomytics"
'   Print #gnuplot, "set grid layerdefault linetype 0 linewidth 1.000, linetype 0 linewidth 1.000"
'   Print #gnuplot, "set title \"" & title & "\"" 
'   Print #gnuplot, "set xlabel \"Date\"" 
'   Print #gnuplot, "set pointsize 2"
'   Print #gnuplot, "set ylabel \"" postges on debian & ytitle & "\"" 
'   If data.Count < 3 Then
'     linetype = "smooth unique"
'   Else
'     linetype = "smooth cspline"
'   End If
'   Print #gnuplot, "plot '" & Temp$("data1") & "' using 1:2 t '' " & linetype & ", '" & Temp$("data1") & "' using 1:2 t '' with points";
'   If data.Fields.Count = 3 Then
'     Print #gnuplot, ",'" & Temp$("data1") & "' using 1:3 t '' " & linetype & ", '" & Temp$("data1") & "' using 1:3 t '' with points";
'   End If
'   Print #gnuplot
'   Close #gnuplot
'   gnuplot.Wait() 'wait for gnuplot to finish
'   Return tempfile
' '  Return Temp$("graph")
End
Public Function LineGraph_old(width As Integer, height As Integer, data As Result, title As String, ytitle As String) As String
  ' takes a SQL result object, the title, and the title for the y axis
  ' returns a file name of a PNG file with the graph
  ' x must be a Date and y some numeric data type
  ' a third numeric column is allowed, causing two lines to be drawn
  Dim datafile As File
  Dim gnuplot As Process
  Dim d1 As Date
  Dim linetype As String
 
  If data.Count < 1 Then
    Return "insufficient_data.png"
  End If
  datafile = Open Temp$("data1") For Output Create
  For Each data
    d1 = data[data.Fields[0].Name]
    Print #datafile, Day(d1) & "/" & Month(d1) & "/" & Year(d1), data[data.Fields[1].Name];
    If data.Fields.Count = 3 Then
      Print #datafile, "" & data[data.Fields[2].Name];
    End If
    Print #datafile  
  Next
  Close datafile
  
  gnuplot = Exec ["/usr/bin/gnuplot"] For Write
  Print #gnuplot, "set terminal png transparent nocrop enhanced font arial 8 size " & width & ", " & height 
  Print #gnuplot, "set output '" & Temp$("graph") & "'"
  Print #gnuplot, "set xdata time"
  Print #gnuplot, "set timefmt x \"%d/%m/%Y\""
  Print #gnuplot, "set format x \"%m/%y\""
  Print #gnuplot, "set grid xtics nomxtics ytics nomytics"
  Print #gnuplot, "set grid layerdefault linetype 0 linewidth 1.000, linetype 0 linewidth 1.000"
  Print #gnuplot, "set title \"" & title & "\"" 
  Print #gnuplot, "set xlabel \"Date\"" 
  Print #gnuplot, "set pointsize 2"
  Print #gnuplot, "set ylabel \"" & ytitle & "\"" 
  If data.Count < 3 Then
    linetype = "smooth unique"
  Else
    linetype = "smooth cspline"
  End If
  Print #gnuplot, "plot '" & Temp$("data1") & "' using 1:2 t '' " & linetype & ", '" & Temp$("data1") & "' using 1:2 t '' with points";
  If data.Fields.Count = 3 Then
    Print #gnuplot, ",'" & Temp$("data1") & "' using 1:3 t '' " & linetype & ", '" & Temp$("data1") & "' using 1:3 t '' with points";
  End If
  Print #gnuplot
  Close #gnuplot
  gnuplot.Wait() 'wait for gnuplot to finish
  Return Temp$("graph")
End

' Public Sub Graph_on_Fly(p As cPatient, item As String)
'   '  Dim sql As String
'   '  Dim $Result As Result
'   ' sql = " Select vwresults.fk_forms_requests, vwresults.fk_patient, vwresults.date, vwresults.item, "
'   '       "vwresults.fk_lu_request, vwresults.fk_form, vwresults.deleted, vwresults.request_result_html," 
'   '       "vwresults.pk_requests_results, vwresults.episode_key, vwresults.result, vwresults.value,"
'   '       "vwresults.value_as_number, vwresults.units, vwresults.reference_range, vwresults.abnormal,"
'   '       "vwresults.probability From clin_requests.vwresults WHERE Lower(vwresults.item) =$$"
'   '        sql &= item & "$$ ORDER BY vwresults.fk_patient, vwresults.date"
'    
' 
' End
Public Sub Graph_Measurement(F As FProgressNotePage, fk_patient As Integer, measurement_text As String)
   '-----------------------------------------------------------
   'Note: like it or not, rightly or wrongly for the moment
   'measurments WE ie the user inputted such as BP, height
   'weight, are stored in clin_measurements.measuremnts table
   'whereas results returned from labs in hl7 files are in the
   'clin_requests.requests_results table.
   'hence the differences in the queries. Also BP must return
   'a calculated systolic/diastolic value from e.g n=190000
   'i.e systolic &1000 + diastolic
   '-----------------------------------------------------------
   Dim sql As String
   Dim sql_end As String
   Dim units As String
   Dim $Result As Result
   Dim Graph_title As String  
   Dim Ref_Range As String
   Dim fk_type As Variant = F.lvwAvailableMeasurements.Item.Key 'string or number
  ' Dim measurement_text As String = Trim(F.lvwAvailableMeasurements.Item.Text)
   Dim x As Integer
   Dim Bp As String
   '-----------------------------------------------------
   'This sql will apply to: weight, height as the default
   '-----------------------------------------------------
   sql = "Select distinct consult_date As Date, measurement"  
   '-----------------------------------------------
   'The ending of sql is same for every measurement
   '-----------------------------------------------
   sql_end = " From clin_measurements.vwmeasurements"
   sql_end &= " WHERE fk_patient = " & fk_patient ' " AND  fk_type = " & fk_type 
   sql_end &= "  And lower(type) = $$" & Lower(measurement_text) & "$$"
   sql_end &= " AND age(consult_date) < $$" & f.cmbGraphDateRange.Text & "$$ "
   sql_end &= " ORDER BY date"
   
   Select Case Lower(measurement_text)
   Case "bp"
         'Get three columns: date, systolic,diastolic
         'BP represented as number *1000 eg 190060 = BP of 190/60
         sql = "Select consult_date As Date,"
         "(measurement - (measurement % 1000))/1000 as systolic, "
         "mod(measurement, 1000) As diastolic "
         sql = sql & sql_end
         units = "MmHg"
   Case "weight"
         units = "Kg"
         sql = sql & sql_end
   Case "height" 
         units = "cm"
         sql = sql & sql_end
   Case Else
      '----------------------------------------------------------
      'fixme this may not exist
      'Otherwise, we are trying to graph anything
      'First get the (mostly but not aways accurate)
      'reference range [i.e mixed labs could be different ranges]
      '-----------------------------------------------------------
     sql = "select distinct reference_range "
     sql &= "From clin_requests.vwResults " 
     sql &= " WHERE fk_patient = " & f.patient.pk_patient
     sql &= " AND Lower(vwresults.result) = $$"
     sql &= Lower(measurement_text) & "$$"
     $Result = modDBConnect.exec_query(sql)
     If $Result.count Then
        Ref_Range = $Result!reference_range
     End If
     'Ok, now have the range to display, get the measurements
     
     sql = "Select distinct date, value_as_number as measurement From clin_requests.vwResults "
     sql &= " WHERE fk_patient = " & f.patient.pk_patient
      sql &= " AND Lower(vwresults.result) = $$"
      sql &= Lower(measurement_text) & "$$ ORDER BY  vwresults.date"

   End Select
   '---------------
   'Get the records
   '---------------
 
'   Debug sql
 '  Select Case Lower(measurement_text)
  '  Case "bp", "weight", "height"
   '      $Result = modDBConnect.exec_query(sql)
   ' Case Else
         'Try $Result = modDBConnect.exec_query(sql) 'not using this, at moment don't want the error message to interupt me
    '     Try $Result = gvar.$hConn.Exec(sql)
   '      If Error Then
    '        Create_View(measurement_text)
    '        $Result = modDBConnect.exec_query(sql)
     '    End If
    'End Select 
   $Result = modDBConnect.exec_query(sql)
   F.lvMeasurementValues.Clear
   'At this point there must be at least
   If $Result.count Then
      '--------------------------------------------------
      'If there are measurements, show these on a list
      'first show the very last one somewhere obvious
      'and put that first on the list of all measurements
      '--------------------------------------------------
      Graph_Title = measurement_text 
      If Ref_Range <> "" Then
         Graph_title &= " [" & ref_range & "]"
      End If
      Graph_title &= Format($Result!date, "dd/mm/yyyy") & "-"
      $Result.MoveLast 
      Graph_title &= Format($Result!date, "dd/mm/yyyy")
      x = 0
      F.TextLabel1.text = "<small><B>Latest measurement</B>:"
      F.TextLabel1.text &= Format($Result!date, "dd/mm/yyyy")

      Select Case Lower(measurement_text)
      Case "bp"
         'Special case, convert to a string
          bp = $Result!systolic & "/" & $Result!diastolic
          F.TextLabel1.text &= "<B>   Value:</B>" & bp & "</small>"
          F.lvMeasurementValues.Add(x, Format($Result!date, "dd/mm/yyyy") & " " & bp)
      Case Else
          F.TextLabel1.text &= "<B>   Value:</B>" & $Result!measurement & "</small>"
          F.lvMeasurementValues.Add(x, Format($Result!date, "dd/mm/yyyy") & " " & $Result!measurement)
      End Select
      '---------------------------------------------------------------------------------
      'Now, sequentially add all the previous measurements to a list, latest till oldest
      '---------------------------------------------------------------------------------
       Inc x
       Do Until $Result.MovePrevious()
        '  Print "x:", x, Format($Result!date, "dd/mm/yyyy") & " " & $Result!measurement
          Select Case Lower(measurement_text)
          Case "bp"
             bp = $Result!systolic & "/" & $Result!diastolic
             F.lvMeasurementValues.Add(x, Format($Result!date, "dd/mm/yyyy") & " " & bp)
          Case Else
            F.lvMeasurementValues.Add(x, Format($Result!date, "dd/mm/yyyy") & " " & $Result!measurement)
          End Select
          Inc x 
       Loop
       Try F.Picturebox2.Picture = Picture.Load(modPlot.LineGraph(F.Picturebox2.Width, F.Picturebox2.Height, $Result, Graph_Title, units))
       If Not Error Then
          F.HBox_Picture.Padding = 0
          F.Picturebox2.Visible = True
          F.tlPLottingError.Visible = False
          Return
       End If
   End If
   '---------------------------------------------------------------
   'For whatever reason, ended up with either no or inadequate data
   '---------------------------------------------------------------
   F.HBox_Picture.Padding = 10
   F.Picturebox2.Visible = False
   F.tlPLottingError.Visible = True
    
End
'Public Sub Graph_And_Values_Get(fk_patient As Integer, loinc As String, measurement_text As String, PicHeight As Integer, picWidth As Integer, from_date As String, to_date As String) As collection

Public Sub Graph_And_Values_Get(fk_patient As Integer, loinc As String, measurement_text As String, PicHeight As Integer, picWidth As Integer, font_size As Integer, Optional number_months As Integer = 0) As Collection
   '-----------------------------------------------------------
   'PURPOSE    For a given patient return a png of the graph
   '           and the values in graph for given interval
   'Note: like it or not, rightly or wrongly for the moment
   'measurments WE ie the user inputted such as BP, height
   'weight, are stored in clin_measurements.measuremnts table
   'whereas results returned from labs in hl7 files are in the
   'clin_requests.requests_results table.
   'hence the differences in the queries. Also BP must return
   'a calculated systolic/diastolic value from e.g n=190000
   'i.e systolic &1000 + diastolic
   '-----------------------------------------------------------
   Dim sql As String
   Dim sql_end As String
   Dim units As String
   Dim $Result As Result
   Dim Ref_Range As String
   Dim Graph_Title As String 
  ' Dim fk_type As Variant = F.lvwAvailableMeasurements.Item.Key 'string or number
   Dim Graph_And_Values As Collection 
   Dim x As Integer
   Dim Bp As String
   '-------------------------------------------------------------
   'IF loinc code, then measurement is from an observation result
   '-------------------------------------------------------------
   If loinc <> "" Then
      sql = "Select distinct reference_range from documents.vwGraphableobservations where fk_patient = " & fk_patient & " and loinc = $$" & loinc & "$$ "
      Try ref_range = modDBConnect.exec_query(sql)!reference_range 'may not have a range
      sql = "Select distinct observation_date as date, value_numeric as measurement from documents.vwGraphableobservations where fk_patient = "
      sql &= fk_patient & " and loinc = $$" & loinc & "$$ "
      If number_months Then
          sql &= " AND observation_date between $$" & Format(DateAdd(Now, gb.month, -6), "dd/mm/yyyy") & "$$  AND $$" & Format(Now, "dd/mm/yyyy") & "$$ "
      End If
      sql &= "ORDER BY date"
   Else
      '--------------------------------------------------------------------------------------
      'Otherwise, is from our clin_measurements.lu_type table 1=bp, 2=weight 3 = pf 4 =height
      'FIXME PUT IN PEAK FLOW
      '--------------------------------------------------------------------------------------
      sql = "Select distinct consult_date As Date, measurement"  
       
     sql_end = " From clin_measurements.vwmeasurements"
      sql_end &= " WHERE fk_patient = " & fk_patient
      sql_end &= "  And lower(name_full) = $$" & Lower(measurement_text) & "$$"
     ' sql_end &= " AND age(consult_date) < $$" & number_months & "$$ "
      sql_end &= " ORDER BY date"

      Select Case measurement_text
      Case "blood pressure"
            'Get three columns: date, systolic,diastolic
            'BP represented as number *1000 eg 190060 = BP of 190/60
            sql = "Select consult_date As Date,"
            "(measurement - (measurement % 1000))/1000 as systolic, "
            "mod(measurement, 1000) As diastolic "
            sql = sql & sql_end
            units = "mm Hg"
      Case "weight"
            units = "Kg"
            sql = sql & sql_end
      Case "height" 
            units = "cm"
            sql = sql & sql_end
      Case "peak flow"
            units = "l/min"
            sql = sql & sql_end
      End Select
   End If
   $Result = modDBConnect.exec_query(sql)
   Graph_And_Values = New Collection 
   Graph_Title = measurement_text 

   If $Result.count Then
      '----------------------------------------------------------------
      'If there are measurements, construct the title to look like this
      ' Measurement [range] fromdate todate
      '----------------------------------------------------------------
      Graph_Title = measurement_text 
       If Ref_Range <> "" Then
         Graph_title &= " [" & ref_range & "] "
      End If
      Graph_title &= Format($Result!date, "dd/mm/yyyy") & "-"
      $Result.MoveLast 
      Graph_title &= Format($Result!date, "dd/mm/yyyy")

      '--------------------------------------------------
      'If there are measurements, show these on a list
      'first show the very last one somewhere obvious
      'and put that first on the list of all measurements
      '--------------------------------------------------
      picWidth = 500
      PicHeight = 200
      Graph_And_Values!values = $Result
     ' Graph_And_Values!graph_filename = modPlot.LineGraph(picWidth, picHeight, $Result, Graph_Title, units, font_size)
      Graph_And_Values!graph_filename = modPlot.LineGraph(picWidth, picHeight, $Result, Graph_Title, measurement_text, font_size)
     ' Graph_And_Values!
   End If
   Return Graph_And_Values
    
End
Public Sub Graph_And_Values_Get_old(fk_patient As Integer, measurement_text As String, loinc As String, DateRange As String, PicHeight As Integer, picWidth As Integer) As Collection
   '-----------------------------------------------------------
   'PURPOSE    For a given patient return a png of the graph
   '           and the values in graph for given interval
   'Note: like it or not, rightly or wrongly for the moment
   'measurments WE ie the user inputted such as BP, height
   'weight, are stored in clin_measurements.measuremnts table
   'whereas results returned from labs in hl7 files are in the
   'clin_requests.requests_results table.
   'hence the differences in the queries. Also BP must return
   'a calculated systolic/diastolic value from e.g n=190000
   'i.e systolic &1000 + diastolic
   '-----------------------------------------------------------
 
   Dim sql As String
   Dim sql_end As String
   Dim units As String
   Dim $Result As Result
   Dim Ref_Range As String
   Dim Graph_Title As String 
  ' Dim fk_type As Variant = F.lvwAvailableMeasurements.Item.Key 'string or number
   Dim Graph_And_Values As Collection 
   Dim x As Integer
   Dim Bp As String
   '-----------------------------------------------------
   'This sql will apply to: weight, height as the default
   '-----------------------------------------------------
   sql = "Select distinct consult_date As Date, measurement"  
   '-----------------------------------------------
   'The ending of sql is same for every measurement
   '-----------------------------------------------
   sql_end = " From clin_measurements.vwmeasurements"
   sql_end &= " WHERE fk_patient = " & fk_patient ' " AND  fk_type = " & fk_type 
   sql_end &= "  And lower(type) = $$" & Lower(measurement_text) & "$$"
   sql_end &= " AND age(consult_date) < $$" & DateRange & "$$ "
   sql_end &= " ORDER BY date"
   
   Select Case Lower(measurement_text)
   Case "bp"
         'Get three columns: date, systolic,diastolic
         'BP represented as number *1000 eg 190060 = BP of 190/60
         sql = "Select consult_date As Date,"
         "(measurement - (measurement % 1000))/1000 as systolic, "
         "mod(measurement, 1000) As diastolic "
         sql = sql & sql_end
         units = "MmHg"
   Case "weight"
         units = "Kg"
         sql = sql & sql_end
   Case "height" 
         units = "cm"
         sql = sql & sql_end
   Case Else
      '----------------------------------------------------------
      'fixme this may not exist
      'Otherwise, we are trying to graph anything
      'First get the (mostly but not aways accurate)
      'reference range [i.e mixed labs could be different ranges]
      '-----------------------------------------------------------
     ' sql = "select distinct reference_range "
     ' sql &= "From clin_requests.vwResults " 
     ' sql &= " WHERE fk_patient = " & fk_patient
     ' sql &= " AND Lower(vwresults.result) = $$"
     ' sql &= Lower(measurement_text) & "$$"
     ' $Result = modDBConnect.exec_query(sql)
     ' If $Result.count Then
     '    Ref_Range = $Result!reference_range
     ' End If
     'Ok, now have the range to display, get the measurements
     Ref_Range = "2.0 - 3.0"
     ' sql = "Select distinct date, value_as_number as measurement From clin_requests.vwResults "
     ' sql &= " WHERE fk_patient = " & fk_patient
     '  sql &= " AND Lower(vwresults.result) = $$"
     '  sql &= Lower(measurement_text) & "$$ ORDER BY  vwresults.date"
     sql = " Select * from documents.vwobservations where fk_patient = " & fk_patient & "and loinc = $$" & loinc & "$$ order by observation_date;"
     sql = "Select distinct observation_date as date, value_numeric as measurement from documents.vwobservations where fk_patient = "
     sql &= fk_patient & "and loinc = $$" & loinc & "$$ order by date"

   End Select
   '---------------
   'Get the records
   '---------------
   $Result = modDBConnect.exec_query(sql)
   Graph_And_Values = New Collection 
   Graph_Title = measurement_text 

   If $Result.count Then
      'If there are measurements, construct the title to look like this
      ' Measurement [range] fromdate todate
      Graph_Title = measurement_text 
   '   Graph_Title = "Blood Pressure     "
      If Ref_Range <> "" Then
         Graph_title &= " [" & ref_range & "] "
      End If
      Graph_title &= Format($Result!date, "dd/mm/yyyy") & "-"
      $Result.MoveLast 
      Graph_title &= Format($Result!date, "dd/mm/yyyy")

      '--------------------------------------------------
      'If there are measurements, show these on a list
      'first show the very last one somewhere obvious
      'and put that first on the list of all measurements
      '--------------------------------------------------
      Graph_And_Values!values = $Result
      Graph_And_Values!graph_filename = modPlot.LineGraph(picWidth, picHeight, $Result, Graph_Title, units)

   End If
   Return Graph_And_Values
   
     
 '  End If
   '---------------------------------------------------------------
   'For whatever reason, ended up with either no or inadequate data
   '---------------------------------------------------------------
  ' F.HBox_Picture.Padding = 10
   'F.Picturebox2.Visible = False
  ' F.tlPLottingError.Visible = True
    
End
Public Sub Create_View(result_name As String)
   '--------------------------------------------------------------------
   'creates a view on the fly of the measurement the user wants to graph
   'Fixme make me smarter
   '--------------------------------------------------------------------
   Dim $Result As Result
   Dim sql As String
   sql = "Create Or Replace VIEW clin_requests.vw" & result_name & " As "
   sql &= " SELECT vwresults.fk_forms_requests, vwresults.fk_patient, vwresults.date, vwresults.item, "
   sql &= "vwresults.fk_lu_request, vwresults.fk_form, vwresults.deleted, vwresults.request_result_html, "
   sql &= "vwresults.pk_requests_results, vwresults.episode_key, vwresults.result, vwresults.value, vwresults.value_as_number, "
   sql &= "vwresults.units, vwresults.reference_range, vwresults.abnormal, vwresults.probability "
   sql &= " FROM clin_requests.vwresults" 
   sql &= " WHERE lower(vwresults.item) = $$" & Lower(result_name) & "$$ :: text "
   sql &= " ORDER BY vwresults.fk_patient, vwresults.date"
   $Result = modDBConnect.exec_query(sql)
   
   
End

Public Sub Recalls_Stats_Graph()
  'Sample query to give numbers of recalls due in the ensuring x months;
  
  ' select count(vwRecalls.due),'august' as month, 8 as month_order from clin_recalls.vwRecalls 
  ' where date_part('month', vwRecalls.due) ::text ||'/'|| date_part('year', vwRecalls.due) = '8/2010'
  ' union
  ' select count(vwRecalls.due),'september' as month, 9 as month_order from clin_recalls.vwRecalls 
  ' where date_part('month', vwRecalls.due) ::text ||'/'|| date_part('year', vwRecalls.due) = '9/2010'
  ' 
  ' union
  ' select count(vwRecalls.due),'october' as month, 10 as month_order from clin_recalls.vwRecalls 
  ' where date_part('month', vwRecalls.due) ::text ||'/'|| date_part('year', vwRecalls.due) = '10/2010'
  ' 
  ' union
  ' select count(vwRecalls.due),'november' as month, 11 as month_order from clin_recalls.vwRecalls 
  ' where date_part('month', vwRecalls.due) ::text ||'/'|| date_part('year', vwRecalls.due) = '11/2010'
  ' 
  ' union
  ' select count(vwRecalls.due),'december' as month, 12 as month_order from clin_recalls.vwRecalls 
  ' where date_part('month', vwRecalls.due) ::text ||'/'|| date_part('year', vwRecalls.due) = '12/2010'
  ' 
  ' union
  ' select count(vwRecalls.due),'january' as month, 13 as month_order from clin_recalls.vwRecalls 
  ' where date_part('month', vwRecalls.due) ::text ||'/'|| date_part('year', vwRecalls.due) = '1/2011'
  ' union
  ' select count(vwRecalls.due),'february' as month, 14 as month_order from clin_recalls.vwRecalls 
  ' where date_part('month', vwRecalls.due) ::text ||'/'|| date_part('year', vwRecalls.due) = '2/2011'
  ' union
  ' select count(vwRecalls.due),'march' as month, 15 as month_order from clin_recalls.vwRecalls 
  ' where date_part('month', vwRecalls.due) ::text ||'/'|| date_part('year', vwRecalls.due) = '0/2011'
  ' order by month_order
  ' 
  
  
End
