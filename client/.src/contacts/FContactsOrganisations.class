' Gambas class file

Private frmWebBrowser As FBrowser                   'New instance of web browser
Private bExit As Boolean                            'general flag to prevent re-entry into routines
Private bNewCommunication As Integer                'true if adding a new communication
Private bEmployeeDisplayed As Boolean               'True if adding or displaying existing employee
Private sLastSearchCriteria As String               'last criteria used to create the viewing list

Private iCommunication As Integer
Private age As Integer
Private help_dir As String
Private Branches As Collection                      'holds a collection of cBranch = 1 row in the viewing list 
Private Towns As Collection 
Private Town As Collection  
Private Members As Collection
Private Member As Collection
Private The_Collection As Collection

Private Categories As Collection
Private category As Collection 
Private aString As String                      'a collection or towns or suburbs

Private iSecurityType As Integer  'clinical/clerical or both
Private cSecurityTypeClinical As Integer = 0
Private cSecurityTypeClerical As Integer = 1
Private cSecurityTypeBoth As Integer = 3
Private bKeyValid As Boolean

Private staff_member As Collection 
Private usingWizard As Boolean 'If true this form has been loaded form the installation wizard
Private fk_staff As Integer
Private fk_organisation As Integer
Private fk_branch As Integer
Private fk_address As Integer
Private fk_category As Integer
Private fk_employee As Integer
Private fk_person As Integer
Private fk_occupation As Integer
Private fk_town As Integer
Private organisation As Collection
Private rows_in_view As Collection 
Private row_in_view As Collection 'current row we are on
Private branch As Collection
Private person As Collection 
Private clinic As Collection 
Private employee As Collection
Private employees As Collection 
Private address As Collection
Private views_comms As Collection
Private Comms As Collection
Private Comm As Collection
Private HtmlMessageBox As FGenericHTMLMessage
Private bEmbedded As Boolean
Private FHelp As FHtmlViewer

Public Sub set_embedded(flag As Boolean)
   
   bEmbedded = flag

End

Public Sub Form_Open()

   Init() 'just for compatibility with the other forms

End

Public Sub Init()

   Dim x As Integer
   Dim sMsg As String
   
   FHelp = New FHtmlViewer(Vbox_Help)
   Settings_Load()
   help_dir = Application.Path &/ "help/"
   combos_Load()
   cvOrganisations.columns.Count = 9
   cvOrganisations.Enabled = False
   cvwEmployees.Columns.count = 3
   cvwContacts.Columns.count = 3
   Reset_Fonts(VBox_EditArea_Left_Inner)
   Reset_Fonts(Vbox_EditArea_Right)
   Reset_Fonts(Vbox_Employee)
   Vbox_EditArea.Enabled = False 
   modEditAreaHelpers.Help_Show("help/organisations.html", FHelp)
   lblmeasure.text = "Work Status"
   modEditAreaHelpers.Resize_labels(Vbox_Employee, lblmeasure)
   modEditAreaHelpers.Resize_labels(VBox_EditArea_Right, lblmeasure)
   modEditAreaHelpers.Resize_labels(VBox_EditArea_Left_Inner, lblmeasure)
   cmbSearchType.index = 0 'default to search organisations and employees
   chkRetired.width = txtBirthdate.Width
End

Public Sub Reset_Fonts(VB As Vbox)
   
   Dim hCtrl As Control
   Dim ABox As HBox
   Dim lbl As Label
   
   For Each Hctrl In VB.Children
      If hctrl Is Hbox Then
         Abox = hctrl
         For Each hctrl In Abox.Children
            If hctrl Is Label Then
               lbl = hctrl
               If lbl.AutoResize = False Then
                  lbl.width = lblmeasure.Width 
               End If   
               Break
            End If
         Next
      End If
   Next

End

Public Sub combos_Load()
   
   cmbEmployeeSex.Add("Male", 0)
   cmbEmployeeSex.Add("Female", 1)
   cmbEmployeeSex.Add("Unknown", 2)
   
   cmbEmployeeTitle.Add("Mr", 0)
   cmbEmployeeTitle.Add("Mrs", 1)
   cmbEmployeeTitle.Add("Master", 2)
   cmbEmployeeTitle.Add("Miss", 3)
   cmbEmployeeTitle.Add("Dr", 4)
   cmbEmployeeTitle.Add("Prof", 5)
   cmbEmployeeTitle.Add("Ms", 6)
   cmbMarital.Add("Unkown", 0)
   cmbMarital.Add("Single", 1)
   cmbMarital.Add("Married", 2)
   cmbMarital.Add("Divorced", 3)
   cmbMarital.Add("Defacto", 4)
   cmbMarital.Add("Widow", 5)
   cmbMarital.Add("Widower", 6)
   
   cmbCommunicationType.Add("Home", 0)
   cmbCommunicationType.Add("Work", 1)
   cmbCommunicationType.Add("Fax", 2)
   cmbCommunicationType.Add("Email", 3)
   cmbCommunicationType.Add("Mobile", 4)
   cmbCommunicationType.Add("VOIP", 5)
   cmbCommunicationType.Add("Web URL ", 6)
   cmbCommunicationType.Add("Phone", 7)
   cmbCommunicationType.Add("Toll Free", 8)
   
End

Public Sub Form_Close()
   
   Settings_Save()

End

Public Sub Settings_Save()
   
   Settings["Contacts_Organisations/HSplit_EditArea"] = HSplit_EditArea.Layout
   Settings["Contacts_Organisations/VSplit_DataEntry"] = VSplit_DataEntry.Layout
   Settings["Contacts_Organisations/cvwOrganisations.Font"] = cvOrganisations.Font.ToString()
  ' Settings["Contacts_Organisations/HSplit_Help.Layout"] = HSplit_Help.Layout
   Settings["Contacts_Organisations/HSplit_Main.Layout"] = HSplit_Main.Layout
  Settings["Contacts_Organisations/FHelp_zoom"] = FHelp.WebView1.Zoom

End

Private Sub Settings_Load()

   Try VSplit_DataEntry.Layout = Settings["Contacts_Organisations/VSplit_DataEntry"] 
   Try HSplit_EditArea.Layout = Settings["Contacts_Organisations/HSplit_EditArea"] 
   Try HSplit_Main.Layout = Settings["Contacts_Organisations/HSplit_Main.Layout"]
   Try cvOrganisations.Font = Font[Settings["Contacts_Organisations/cvwOrganisations.Font"]]
 '  Try HSplit_Help.Layout = Settings["Contacts_Organisations/HSplit_Help.Layout"]
   Try FHelp.WebView1.Zoom = Settings["Contacts_Organisations/FHelp_zoom", 1]
   
End

Public Sub lvwEmployee_KeyPress()
   
End

Public Sub Clearfields_Organisation()
   
   txtOrganisation.text = ""
   txtBranch.text = ""
   txtStreet1.text = ""
   txtStreet2.text = ""
   txtState.text = ""
   txtPostcode.text = ""
   txtSuburb.text = ""
   txtOrganisation.Enabled = True
   txtBranch.Enabled = True
   txtStreet1.Enabled = True
   txtStreet2.Enabled = True
   txtSuburb.Enabled = True
   txtState.Enabled = True
   txtPostcode.Enabled = True
   chkHeadOffice.value = False
   chkPostal.value = False
   chkPostal.Enabled = False
   teBranchMemo.text = ""
   txtCategory.Text = ""
   cmbCommunicationType.index = 7 'default to phone
   txtCommunicationNotes.text = ""
   txtCommunication.text = ""
   chkCommunicationConfidential.value = False
   chkPreferredCommunication.value = False
   cvwContacts.Clear()
   cvwEmployees.Clear()
   cvwEmployees.Visible = False
   
End

Public Sub Organisation_WebSite_Browse()

   frmWebBrowser = New FBrowser(Me)
   frmWebBrowser.HBox2.Visible = False
   frmWebBrowser.Visible = True
   
   frmWebBrowser.cmbURLs.text = "http://" & Trim(txtCommunication.Text)
   frmWebBrowser.Browser.path = "http://" & Trim(txtCommunication.Text)
   
End

Public Sub Reset_Gui()
   
   bExit = True
   bEmployeeDisplayed = False
   VSplit_DataEntry.Visible = True
   Clearfields_Organisation()  'clear appropriate fields in either section
   tbSave.Picture = Picture.Load("icons/12/filesave.png")
   tbSave.Foreground = Color.black
   lblBranch.text = ""
   Vbox_Employee.Visible = False  
   VBox_EditArea_Left_Inner.Visible = True 
   txtSearch.text = ""
   cvOrganisations.Clear()
   listview1.Visible = False
   cvOrganisations.Enabled = False
   VBox_EditArea.Enabled = False
   bExit = False       

End Sub 

Public Sub PopupAddressMenu_Click()
   
   Select Case Last.tag
      Case "new"
         
      Case "delete"
         
   End Select
   
End

Public Sub Form_KeyPress()
   
   Select Case key.Code
      Case key.F12
         Save()
      Case key.Esc
         Reset_Gui
         
   End Select 

End

Public Sub Communication_New()
   
   bExit = True
   iCommunication = cvwContacts.Count 'if 3, then this is 0,1,2 so 3 will be new
   txtCommunication.text = ""
   txtCommunicationNotes.text = ""
   cmbCommunicationType.index = const.CommModalityPhone
   chkCommunicationConfidential.Value = False
   chkPreferredCommunication.Value = False
   bNewCommunication = True
   txtCommunication.enabled = True
   txtCommunicationNotes.enabled = True
   chkCommunicationConfidential.Enabled = True
   chkPreferredCommunication.Enabled = True
   tbBrowseWeb.Visible = False  
   btnAddContact.text = "Add new contact to list"
   btnAddContact.Foreground = Color.black
   comm = New Collection 
   modEditAreaHelpers.Help_Show("help/add-contact-method.html", FHelp)
   bExit = False

End

Public Sub Communication_Delete()
   
   Select Message.Question("Delete current contact?", "Yes", "No")
      Case 1
         modDBConnect.BeginTrans       'a noop
         If bEmployeeDisplayed = True Then
            
         Else
            If Not IsNull(comm!pk) Then
               modContactsDBI.Branch_Comm_Delete(fk_branch, comm!pk)
            End If   
         End If
         modDBConnect.CommitTrans()
   End Select
   cvOrganisations_Select()

End 

Public Sub Surname_Duplicates_Selection(action As String, Optional calling_control As String) 
   
   Select Case action
      Case "get"
         
         The_Collection = modContactsDBI.employee_Get(Trim(txtEmployeesurname.text))
         The_Collection = modContactsDBI.Person_Get(Trim(txtEmployeesurname.text), const.contacttype_person)
         The_Collection.Remove("sql_in_english")
         listview1.Clear
         If The_Collection.count Then 
            For Each Member In The_Collection
               listview1.Add(Member!pk_view, Member!firstname & " " & Member!surname & " (" & Member!occupation & ")")
            Next 
            
            listview1.Visible = True
            listview1.Raise
            listview1.tag = txtEmployeesurname
         Else
            listview1.Visible = False  
         End If
      Case "accept"
         
         bExit = True
         
         If listview1.Visible Then
            
            listview1.MoveCurrent()             'match internal cursor to marquee
         End If
         txtEmployeesurname.text = The_Collection[listview1.Item.key]!surname
         txtEmployeeFirstname.text = The_Collection[listview1.Item.key]!firstname
         txtEmployeeoccupation.text = The_Collection[listview1.Item.key]!occupation
         Try fk_occupation = The_Collection[listview1.Item.key]!fk_occupation
         fk_person = The_Collection[listview1.Item.key]!fk_person
         
         rows_in_view[cvOrganisations.Current.key]!fk_person = fk_person
         Try fk_category = The_Collection[listview1.Item.key]!fk_category
         txtCategory.text = The_Collection[listview1.Item.key]!category
         Try cmbEmployeeSex.index = The_Collection[listview1.Item.key]!fk_sex
         Try cmbEmployeeTitle = The_Collection[listview1.Item.key]!fk_title
         listview1.Visible = False  
         
         tbSave.SetFocus()
         bExit = False  
   End Select
   
End

Public Function Read_Help(sfilename As String) As String  
   
   Dim fn As File
   Dim sString As String

   fn = Open sfilename For Input
   Input #fn, sstring
   Close #fn
   Return sstring
   
End

Public Sub Suburb_Selection(action As String, Optional calling_control As String) 
   
   Dim iMatched As Boolean
   Dim x As Integer

   Select Case action
      Case "get"
         
         Towns = modContactsDBI.Get_Town(Lower(Trim$(txtSuburb.text)))
         listview1.Clear
         If Towns.count Then 
            For Each Town In Towns
               listview1.Add(Town!pk, Town!town & " " & Town!state & " " & Town!postcode)
            Next 
            If Towns.count = 1 Then 
               Suburb_Selection("accept")
            Else 
               listview1.Visible = True
               listview1.Raise
               listview1.tag = txtSuburb
            End If
         Else
            listview1.Visible = False  
         End If
      Case "accept"
         
         bExit = True
         If calling_control = "textbox" Then
            
            If listview1.Visible Then
               listview1.MoveFirst
               For x = 0 To listview1.count - 1
                  If InStr(Lower(listview1.Item.text), Trim(Lower(txtsuburb.text))) Then
                     
                     iMatched = True 
                     Break
                  End If
               Next
               If Not iMatched Then
                  listview1.Visible = False
                  txtSuburb.SetFocus()
                  Return 'no match found for suburb user typed in 
               End If 
            End If
         Else
            
            If listview1.Visible Then
               
               listview1.MoveCurrent()             'match internal cursor to marquee
            End If
         End If
         
         txtSuburb.text = Towns[listview1.Item.key]!town
         txtState.text = Towns[listview1.Item.key]!state 
         txtPostcode.text = Towns[listview1.Item.key]!postcode
         fk_town = Towns[listview1.Item.key]!pk
         
         If chkHeadOffice.Enabled = True Then
            chkHeadOffice.SetFocus()
         Else
            chkPostal.SetFocus()
         End If
         
         listview1.Visible = False  
         bExit = False  
   End Select
   
End

Sub SetStatus(section As String, statustext As String, bOff As Boolean, message_severity As String)
   
   If bOff Then 
      
   Else 
      
   End If
   If message_severity = 0 Then 
      
   Else If message_severity = 1 Then 
      
   End If  
   
End

Public Sub ListView1_DblClick()
   
   Select Case Last.Tag.tag
      Case "category"
         Category_Selection("accept", "list")
      Case "occupation"
         occupation_selection("accept", "list")
      Case "firstname" 
         Firstname_Selection("accept", "list")
      Case "surname"
         Surname_Duplicates_Selection("accept", "list")
         
      Case "suburb"
         Suburb_Selection("accept", "list")
   End Select
   listView1.visible = False

End

Public Sub ListView1_KeyPress()
   
   If Key.Code = Key.RETURN Then 
      ListView1_DblClick()
   End If

End

Public Sub Organisation_ClearInputArea()
   
   txtOrganisation.text = ""     
   txtBranch.text = ""       
   txtBranch.Visible = False
   txtStreet1.text = ""
   txtStreet2.text = ""
   txtState.text = ""
   txtPostcode.text = ""
   txtSuburb.text = ""
   teBranchMemo.clear
   txtCategory.text = ""
   txtCommunicationNotes.text = ""
   txtCommunication.text = ""
   txtSearch.text = ""
   chkHeadOffice.Value = False 
   chkHeadOffice.Enabled = True  
   chkPostal.Value = False
   chkPostal.enabled = True
   chkCommunicationConfidential.Value = False
   chkPreferredCommunication.Value = False
   lblBranch.Text = ""

End

Public Sub Save()
   
   Dim old_pk As Integer 
   Dim Returned_collection As Collection
   Dim fk_organisation_to_restore_to As Integer
   
   If Vbox_EditArea.Padding = 0 Then Return ' no data change indicators - no save
   tbSave.Enabled = False  
   Try old_pk = cvOrganisations.current.key
   
   modEditAreaHelpers.EditArea_ResetTextBox_BackColor(Vbox_EditArea_Right)
   modEditAreaHelpers.EditArea_ResetTextBox_BackColor(VBox_EditArea_Left_Inner)
   
   modDBConnect.BeginTrans() 
   
   If bEmployeeDisplayed = False Then
      If Not Valid_Organisation() Then Return 
      
      Organisation = New Collection 
      If fk_organisation Then
         Organisation!fk_organisation = fk_organisation
      End If
      organisation!organisation = Trim(txtOrganisation.text)
      
      branch = New Collection
      branch!fk_organisation = fk_organisation
      If fk_branch <> 0 Then  
         branch!fk_branch = fk_branch
      End If   
      If fk_address <> 0 Then
         branch!fk_address = fk_address
      End If
      branch!branch = Trim(txtBranch.text) 
      If fk_category <> 0 Then
         branch!fk_category = fk_category
      End If
      branch!category = Trim(txtCategory.text)
      branch!memo = Trim(teBranchMemo.Text)  
      
      If Trim(txtStreet1.text) = "" And fk_town = 0 Then
         address = Null
      Else
         address = New Collection
         If fk_address <> 0 Then
            address!fk_address = fk_address
         End If   
         address!street = Trim(txtStreet1.text) 'FIXME TO INCLUDE STREET1\NSTREET2
         If fk_town <> 0 Then address!fk_town = fk_town
         address!country_code = "AU" 'FIXME make me configurable
         If chkHeadOffice.value = True Then
            address!head_office = True
         Else
            address!head_office = False
         End If
         If chkPostal.Value = True Then
            address!postal_address = True
         Else
            address!postal_address = False
         End If   
         
      End If
      
      Returned_collection = modContactsDBI.Org_Save(rows_in_view, old_pk, organisation, branch, address, comms, views_comms, clinic)
      modDBConnect.CommitTrans()
      rows_in_view = modContactsDBI.Organisations_Employees_Get_By_Keys(Returned_collection["fk_organisation"])
      
   Else
      
      If Not valid_Person() Then Return 
      person = New Collection 
      If fk_person Then
         person!fk_person = fk_person
      End If
      person!firstname = Trim(txtEmployeeFirstname.text)
      person!surname = Trim(txtEmployeeSurname.text)
      person!salutation = Trim(txtEmployeeSalutation.text)
      
      person!fk_title = cmbEmployeeTitle.Index
      person!fk_sex = cmbEmployeeSex.Index
      person!fk_marital = cmbMarital.Index
      If chkRetired.value Then
         person!retired = True
      Else
         person!retired = False
      End If    
      If Trim(txtBirthdate.text) <> "" Then
         person!birthdate = Format(Val(txtBirthdate.text), "dd/mm/yyyy")
      End If
      
      employee = New Collection      
      If fk_employee <> 0 Then
         employee!fk_employee = fk_employee
      End If
      If chkLeftOrganisation.value = True Then 
          employee!fk_status = const.StaffStatus_LeftOrganisation
      Else
         employee!fk_status = const.StaffStatus_Active
      End If
      employee!fk_branch = fk_branch
      If fk_occupation Then
         employee!fk_occupation = fk_occupation
      Else
         employee!occupation = Trim(txtEmployeeOccupation.text)
      End If   
      If fk_category Then
         employee!fk_category = fk_category
      Else
         employee!category = Trim(txtCategory.text)
      End If   
      employee!memo = Trim(txtEmployeeMemo.text)
      
      Returned_collection = modContactsDBI.employee_save(rows_in_view, old_pk, person, employee, comms, views_comms)
      modDBConnect.CommitTrans()
      rows_in_view = modContactsDBI.Organisations_Employees_Get_By_Keys(fk_organisation)
      
   End If
   
   Display_Contacts()
   
   Vbox_EditArea.Padding = 0
   tbSave.foreground = Color.Black  
   lblBranch.text = "Branch"

End

Public Sub Organisation_Add()
   
   bExit = True             
   
   Comms = New Collection
   Comm = New Collection
   iCommunication = 0    
   fk_organisation = 0
   fk_address = 0
   fk_branch = 0    
   fk_town = 0     
   fk_employee = 0
   fk_category = 0
   fk_person = 0
   
   Vbox_Employee.Visible = False 
   VBox_EditArea_Left_Inner.Visible = True   
   Organisation_ClearInputArea()  
   cvOrganisations.Clear()
   cvwContacts.Clear()   
   txtBranch.visible = True
   txtBranch.text = "HEAD OFFICE"
   txtBranch.Enabled = False
   chkHeadOffice.value = True
   chkHeadOffice.Enabled = False
   chkPostal.enabled = True 
   Communication_New()
   modEditAreaHelpers.Notify_Data_Changed(Vbox_EditArea, tbSave, False)               
   tbSave.Enabled = True  
   Vbox_EditArea.Enabled = True    
   Hbox_Occupation.Visible = False             
   txtOrganisation.SetFocus  
   lblBranch.text = "New Organisation"
   bEmployeeDisplayed = False 
   bExit = False

End

Public Sub Branch_Add()
   
   Dim sOrganisation As String
   Dim sCategory As String
   Dim sMsg As String
   Dim tempfile As String
   Dim fk_category_organisation As Integer

   fk_category_organisation = fk_category
   sOrganisation = txtOrganisation.Text
   sCategory = txtCategory.Text
   If Not fk_organisation Then
      sMsg = "You seem a little uncertain how to use the contact manager.\n\n"
      "Would you like to see some help on adding a new branch?"
      Select Case Message.Question(smsg, "Show Help", "No")
         Case 1
            
            FMain.Set_PopUp_Help(help_dir & "/adding-a-branch.html")
            FMain.Show_PopUp_Help(True)
      End Select
      
      Return
   End If
   
   bExit = True
   bEmployeeDisplayed = False
   
   Organisation_ClearInputArea() 'clear all textboxes on the screen
   Employee_ClearFields()
   cvwContacts.Clear()
   txtOrganisation.Enabled = False
   txtStreet1.Enabled = True
   txtSuburb.Enabled = True
   txtPostcode.Enabled = True
   txtState.Enabled = True
   lblBranch.text = "Add new branch to the organisation"
   txtBranch.Visible = True 
   txtBranch.Enabled = True
   chkHeadOffice.Enabled = False
   
   tbSave.Enabled = True
   txtOrganisation.text = sOrganisation
   txtCategory.text = sCategory
   chkHeadOffice.Enabled = False
   chkPostal.Enabled = True
   Comms = New Collection
   
   fk_address = 0
   fk_town = 0
   fk_employee = 0
   fk_person = 0
   fk_branch = 0
   fk_category = fk_category_organisation
   bExit = False
   Communication_New()
   txtBranch.SetFocus()

End

Public Sub branch_delete()
   
End

Public Function Valid_Organisation() As Boolean
   
   Dim sMsg As String    

   If txtOrganisation.text = "" Then
      sMsg = "Please enter the name of the organisation before saving"
      txtOrganisation.SetFocus()
      Goto MissingData
   End If 
   If txtBranch.text = "" Then
      sMsg = "Please enter the name of the branch before saving"
      If chkHeadOffice.value = True Then
         txtBranch.text = "HEAD OFFICE"
      End If   
      txtBranch.SetFocus()
      Goto MissingData
   End If
   
   If txtCategory.text = "" Then
      sMsg = "Each entry in the contacts database must be allocated a category.\n\n"
      "This is extremely important, and should be an accurate refelection of the"
      "organisation, so please think carefully before allocating this.\n\n"
      "If the category does not exist, it will be created when the record is saved."
      txtCategory.SetFocus()
      Goto MissingData
   End If 
   Return True
   MissingData:
   Message.Info(sMsg)
   Return False

End

Public Function Valid_Person() As Boolean
   
   Dim sMsg As String    

   If Trim(txtEmployeeFirstname.text) = "" Then
      txtEmployeeFirstname.SetFocus
      Return False
   End If 
   
   If Trim(txtEmployeeSurname.text) = "" Then
      txtEmployeeSurname.SetFocus
      Return False
   End If 
   If Trim(txtBirthdate.text) <> "" Then
      If Not IsDate(Val(txtBirthdate.text)) Then
         txtBirthdate.SetFocus()
         Return False
      End If
   End If
   
   If txtCategory.text = "" Then
      txtCategory.SetFocus
      Return False
   End If 
   
   Return True
   
End

Public Sub Org_Input_Enable(bflag As Boolean)
   
   If bFlag Then
      txtOrganisation.Enabled = True
      txtBranch.Enabled = True
      txtStreet1.Enabled = True
      txtStreet2.Enabled = True
      txtSuburb.Enabled = True
      txtState.Enabled = False
      txtPostcode.Enabled = False
      lblBranch.Text = "Branch"
      chkHeadOffice.Enabled = True
      chkPostal.Enabled = True
      
   Else
      txtOrganisation.Enabled = False
      txtBranch.Enabled = False
      txtStreet1.Enabled = False
      txtStreet2.Enabled = False
      txtSuburb.Enabled = False
      txtState.Enabled = False
      txtPostcode.Enabled = False
      lblBranch.Text = "Branch"
      chkHeadOffice.Enabled = False
      chkPostal.Enabled = False
   End If

End

Public Sub Employee_Add()

   Dim msg As String
   
   If cvOrganisations.count = 0 Then Return
   msg = "You may not link a new employee to an existing employee\n\n"
   "Please select an organisation or a branch or department prior to adding an employee"
   If row_in_view!fk_employee <> 0 Then   
      Message.Info(Msg)
      Return  
   End If
   
   cvOrganisations_DblClick()
   bexit = True
   Employee_ClearFields()
   txtOrganisation.Enabled = False
   txtBranch.Enabled = False
   txtStreet1.Enabled = False
   txtStreet2.Enabled = False
   txtSuburb.Enabled = False
   txtState.Enabled = False
   txtPostcode.Enabled = False
   lblBranch.Text = "Site"
   chkHeadOffice.Enabled = False
   chkPostal.Enabled = False
   lblEmployeeDetails.text = "Add Employee to: " & txtBranch.Text
   VBox_EditArea_Left_Inner.Visible = False
   vbox_employee.Visible = True
   cmbCommunicationType.index = 0
   txtCommunication.text = ""
   txtCommunicationNotes.text = "" 
   txtCategory.text = ""
   cvwContacts.Clear()
   Hbox_Occupation.Visible = True
   lblOccupation.Visible = True
   lblOccupationspacer.Visible = True
      txtEmployeeoccupation.Visible = True
   Comms = New Collection
   listview1.Visible = False  
   bEmployeeDisplayed = True
   Communication_New() 
   bExit = False
   txtEmployeeSurname.SetFocus

End

Public Sub Organisations_Refresh()

   If bExit Then Return 
   Select Case cmbSearchType.Index
      Case 0 'organisations together with employee's
         rows_in_view = modContactsDBI.organisations_employees_get("%" & Trim(txtSearch.text))
      Case 1
         
      Case 2 'only organisations, no employees
         rows_in_view = modContactsDBI.Organisations_Get(Trim(txtSearch.text))
      Case 3
         rows_in_view = modContactsDBI.Employees_In_Organisations_Find(Trim(txtSearch.text))
   End Select
   If Not IsNull(rows_in_view) Then Display_Contacts()
   
End

Public Sub Organisations_Show_Duplicates()
   
   The_Collection = modContactsDBI.Organisations_Get(Trim(txtOrganisation.text))
   listview1.Clear
   If The_Collection.count Then 
      For Each Member In The_Collection
         listview1.Add(Member!pk_view, Member!organisation & " " & Member!branch & Member!street1 & " " & Member!town & " (" & Member!category & ")")
      Next 
      listview1.Visible = True
      listview1.Raise
      listview1.tag = txtOrganisation
   Else
      listview1.Visible = False  
   End If
   
End

Public Sub Organisations_Employees_Find(sSearchCriteria As String) 
   
   rows_in_view = modContactsDBI.organisations_employees_get(Trim(sSearchCriteria))
   If Not IsNull(rows_in_view) Then Display_Contacts()

End

Public Sub Employee_ClearFields()
   
   txtEmployeeFirstname.text = ""
   txtEmployeeMemo.Text = ""
   txtEmployeeOccupation.Text = ""
   txtEmployeeSalutation.text = ""
   txtEmployeeSurname.Text = ""
   txtCategory.text = ""
   chkLeftOrganisation.value = False
   
End

Public Sub Display_Contacts()
   
   Dim strKey As String                          'abbreviation for $ResultOrganisations.fk_branch
   Dim comms As Collection                   'Result object for communications eg phone/fax
   Dim pk_view As Integer
   Dim iKey As Integer
   
   Dim comm As Collection
   Dim sTemp As String
   Dim sStatusMessage As String
   Dim organisation As Collection 
   Dim iLastorganisation_pk As Integer
   Dim ilastBranch As Integer
   
   cvOrganisations.Clear                           'clear current list persons
   If rows_in_view.count Then              'If organisations exist do all the work
      
      sStatusMessage = Str$(rows_in_view.count) & " records found for search criteria '" & Trim(txtSearch.text) & "'" 
      SetStatus("Organisations", sStatusMessage, False, 0)
      For Each row_in_view In rows_in_view
         pk_view = row_in_view!pk_view
         
         cvOrganisations.Add(pk_view, 0)
         
         If iLastorganisation_pk <> row_in_view!fk_organisation Then
            cvOrganisations[pk_view][0] = row_in_view!organisation  'add field to each column   
            iLastorganisation_pk = row_in_view!fk_organisation
            
         Else
            cvOrganisations[pk_view][0] = ""
         End If
         If Len(row_in_view!surname) <> 0 Then
            cvOrganisations[pk_view][1] = ""
         Else If row_in_view!head_office = True Then
            cvOrganisations[pk_view][1] = "HEAD OFFICE"
            
         Else 
            cvOrganisations[pk_view][1] = row_in_view!branch
         End If
         ilastBranch = row_in_view!fk_branch
         If Len(row_in_view!surname) Then 'FIXME BAD CODE
            sTemp = " -- " & row_in_view!firstname & " " & row_in_view!surname & Space$(30 - Len(Trim(row_in_view!firstname & " " & row_in_view!surname)))
            cvOrganisations[pk_view][4] = sTemp & "(" & row_in_view!occupation & ")"
            
         Else
            cvOrganisations[pk_view][4] = row_in_view!street & " " & row_in_view!town & " " & row_in_view!postcode
         End If
         
      Next
      VSplit_DataEntry.Enabled = True  
      cvOrganisations.Enabled = True                       'enable list for clicking on 
      
   End If

End 

Public Sub cvOrganisations_DblClick()
   
End

Public Sub cvOrganisations_Select()
   
   Organisation_Display()
   
End

Public Sub Organisation_Display()
   
   Dim i As Integer
   Dim x As Integer
   
   If cvOrganisations.Count = 0 Then Return
   bExit = True
   listview1.Visible = False 'could have been visible e.g user adding record, then just clicks on list without saving
   Vbox_EditArea.Enabled = True  
   Clearfields_Organisation()             'clear just the textboxes
  
   Employee_ClearFields()                 'for organisation and employee
   bNewCommunication = False
   
   row_in_view = rows_in_view[cvOrganisations.Current.Key]
   
   fk_organisation = row_in_view!fk_organisation
   fk_branch = row_in_view!fk_branch
   
   If row_in_view!fk_employee = 0 Then
      
      fk_town = 0                   'this row may not have a town
      fk_address = 0                'and may not have an address
      
      Try fk_address = row_in_view!fk_address
      fk_category = row_in_view!fk_category
      Try fk_town = row_in_view!fk_town 'may not address
      txtOrganisation.text = row_in_view!organisation
      lblOrganisation.text = row_in_view!organisation  
      txtBranch.text = row_in_view!branch
      txtStreet1.text = row_in_view!street   'FIX ME TO includes street2
      txtSuburb.text = row_in_view!town
      txtState.text = row_in_view!state
      txtPostcode.text = row_in_view!postcode
      chkHeadOffice.Enabled = row_in_view!head_office
      Try chkHeadOffice.value = row_in_view!head_office
      chkPostal.Enabled = True   
      Try chkPostal.value = row_in_view!postal_address
      txtCategory.text = row_in_view!category
      teBranchMemo.text = row_in_view!memo
      If row_in_view!postal_address = True Then
         chkPostal.value = True
      Else
         chkPostal.value = False
      End If
      If row_in_view!head_office = True Then
         chkHeadOffice.value = True
      Else
         chkHeadOffice.value = False
      End If   
      lblBranch.text = row_in_view!branch
      MnuOrganisationsPopup_EnableBranchOptions
      fk_person = 0
      fk_employee = 0
      VBox_EditArea_Left_Inner.Visible = True  
      vbox_employee.Visible = False
      lblOccupation.visible = False
      txtEmployeeoccupation.Visible = False 
      lblOccupationspacer.Visible = False
      views_comms = New Collection
      views_comms = modContactsDBI.Branch_Comms_Get(row_in_view!fk_branch)
   Else
      lblOccupation.Visible = True
      lblOccupationspacer.Visible = True
      txtEmployeeoccupation.Visible = True
      bEmployeeDisplayed = True
      fk_employee = row_in_view!fk_employee
      fk_branch = row_in_view!fk_branch
      fk_organisation = row_in_view!fk_organisation
      fk_person = row_in_view!fk_person
      fk_occupation = row_in_view!fk_occupation 
      fk_category = row_in_view!fk_category
      txtEmployeeFirstname.text = row_in_view!firstname
      txtEmployeeSurname.text = row_in_view!surname 
      txtEmployeeSalutation.text = row_in_view!salutation
      txtEmployeeOccupation.text = row_in_view!occupation
      txtEmployeeMemo.text = row_in_view!memo
      cmbEmployeeSex.Index = row_in_view!fk_sex
      cmbEmployeeTitle.Index = row_in_view!fk_title
      txtCategory.text = row_in_view!category
      Select Case row_in_view!fk_status
        Case const.StaffStatus_Active
             chkLeftOrganisation.value = False
        Case const.StaffStatus_LeftOrganisation
               chkLeftOrganisation.value = True
      End Select
      mnuOrganisationsPopup_EnableEmployeeOptions
      lblEmployeeDetails.text = row_in_view!firstname & " " & row_in_view!surname 
      vbox_employee.Visible = True
      VBox_EditArea_Left_Inner.Visible = False  
      views_comms = New Collection 
      views_comms = modContactsDBI.person_Comms_Get(row_in_view!fk_person)
   End If    
   
   cvwContacts.Clear()
   comms = New Collection 
   For Each Member In views_comms
      comm = New Collection 
      comm!type = Member!type
      comm!value = Member!value
      comm!note = Member!note
      comm!pk = Member!pk
      comm!preferred_method = Member!preferred_method
      comm!confidential = Member!confidential
      comm!fk_type = Member!fk_type
      comm!type = Member!type
      
      x = cvwContacts.Count
      comms.Add(comm, x)
      cvwContacts.Add(x, 0)
      cvwContacts[x][0] = comm!type
      cvwContacts[x][1] = comm!value 
      cvwContacts[x][2] = comm!note
   Next
   Communication_New()
   tbSave.Enabled = True
   modEditAreaHelpers.Notify_Data_Changed(Vbox_EditArea, tbSave, False)    
   bExit = False

End

Public Sub Communications_FillList()
   
   Dim comm As Collection
   Dim x As Integer

   If IsNull(Comms) Then Return 
   cvwContacts.Clear()
   If comms.count Then            
      For Each Comm In comms
         If comm!value Then
            x = cvwContacts.Count
            cvwContacts.Add(x, 0)
            cvwContacts[x][0] = comm!type
            cvwContacts[x][1] = comm!value 
            cvwContacts[x][2] = comm!note
            
         End If 
      Next
   End If 

End

Public Sub Communication_Accept()
   
   Dim sMsg As String           'used to show message on status bar as to what we are doing
   Dim i As Integer             'used as a loop counter in this routine
   Dim iCurrentRow As Integer   'keep to allow moving back to this row after update

   If Trim(txtCommunication.Text) = "" Then 
      
      txtCommunication.SetFocus
      sMsg = "Hint: Contacts must consist of at least one value eg phone number, email address etc"
      SetStatus("Contacts", sMsg, False, const.cStatusMsg_Info)
      Return
   End If
   
   If bNewCommunication = True Then
      
      comm = New Collection      
      cvwContacts.Add(iCommunication, 0)   
      cvwContacts[iCommunication][0] = cmbCommunicationType.text
      cvwContacts[iCommunication][1] = txtCommunication.text
      cvwContacts[iCommunication][2] = txtCommunicationNotes.Text
      
      Comm!fk_type = cmbCommunicationType.Index
      Comm!type = cmbCommunicationType.text 'need this for display
      Comm!value = txtCommunication.Text
      Comm!note = txtCommunicationNotes.Text
      
      If chkPreferredCommunication.value Then
         Comm!preferred_method = True
      Else
         Comm!preferred_method = False
      End If  
      If chkCommunicationConfidential.Value Then
         Comm!confidential = True
      Else
         Comm!confidential = False
      End If  
      Comms.Add(Comm, iCommunication)
      
   Else 
      
      Comms[iCommunication]!value = txtCommunication.Text
      Comms[iCommunication]!note = txtCommunicationNotes.Text
      
      If chkPreferredCommunication.value Then
         Comms[iCommunication]!preferred_method = True
      Else
         Comms[iCommunication]!preferred_method = False
      End If  
      If chkCommunicationConfidential.Value Then
         Comms[iCommunication]!confidential = True
      Else
         Comms[iCommunication]!confidential = False
      End If  
      Comms[iCommunication]!fk_type = cmbCommunicationType.index
      Comms[iCommunication]!type = cmbCommunicationType.text
      
      Communications_FillList()
   End If
   
   Communication_New()
   txtCommunication.SetFocus

End

Public Sub Branch_Data_Changed_Notify(bflag As Boolean)

   If bexit Then Return
   branch.data_changed = bflag
   If bflag Then
      tbSave.Picture = Picture.Load("icons/12/filesave_changed.png")
   Else
      tbSave.Picture = Picture.Load("icons/12/filesave.png")
   End If
   
End

Public Sub cvwContacts_Menu()

   If cvwContacts.Count = 0 Then 
      Return
   End If
   popupMnuContacts.Popup
   
End

Public Sub cvwContacts_Click()
   
   If cvwContacts.Count = 0 Then Return
   bExit = True 'stop triggering a popup list on the textboxes
   bNewCommunication = False 'must be existing or not saved if clicking on it
   btnAddContact.text = "Save modifications to list"
   
   cvwContacts.MoveCurrent 'move internal cursor to the item showing
   iCommunication = cvwContacts.Item.Key
   Comm = Comms[iCommunication]
   If bEmployeeDisplayed Then
      txtCommunication.text = Comms[iCommunication]!value
      txtCommunicationNotes.text = Comms[iCommunication]!note
      cmbCommunicationType.index = Comms[iCommunication]!fk_type
      chkCommunicationConfidential.value = Comms[iCommunication]!confidential
      chkPreferredCommunication.Value = Comms[iCommunication]!preferred_method
      
   Else
      txtCommunication.text = Comms[iCommunication]!value
      txtCommunicationNotes.text = Comms[iCommunication]!note
      cmbCommunicationType.index = Comms[iCommunication]!fk_type
      chkCommunicationConfidential.value = Comms[iCommunication]!confidential
      chkPreferredCommunication.Value = Comms[iCommunication]!preferred_method
   End If
   bExit = False
   
End

Public Sub popupMnuContacts_Click()

   Select Case Last.tag
      Case "add"
         Communication_New()
      Case "delete"
         Communication_Delete
   End Select
   
End

Public Sub Employee_Delete()
   
   Dim smsg As String = "Are you sure you want to delete this employee:\n\n"

   sMsg &= "Organisation:" & rows_in_view[cvOrganisations.Current.Key]!organisation & "\n"
   sMsg &= "Branch:" & rows_in_view[cvOrganisations.Current.Key]!branch & "\n"
   sMsg &= "Name:" & rows_in_view[cvOrganisations.Current.Key]!wholename & "\n\n"
   sMsg &= "Are you sure you want to continue?"
   Print rows_in_view[cvOrganisations.Current.Key]!fk_person
   If Message.Warning(sMsg, "Yes", "No") = 2 Then Return 
   modContactsDBI.Employee_Delete(fk_person, fk_branch) 
   modDBConnect.CommitTrans()
   rows_in_view = modContactsDBI.Organisations_Employees_Get_By_Keys(fk_organisation)
   Display_Contacts()

End

Public Sub tbContacts_Click()

   Dim tempLayout As String

   Select Case Last.tag
      Case "display all"
         Organisations_Employees_Find("%")
      Case "add"
      Case "add all"
         
      Case "delete"
         
      Case "delete all"
         
      Case "new organisation"
         Organisation_Add()
         
      Case "add address"
      Case "new branch"
         branch_add()
      Case "delete branch"
         branch_delete
      Case "new employee"
         employee_add()
      Case "delete employee"
         employee_delete()
      Case "add communication"
         
         cvOrganisations_DblClick  
         Communication_New() 
         txtCommunication.SetFocus
      Case "reset"
        
      Case "browse web"
         
      Case "save"
         Save()
      Case "advanced search"
         
      Case "settings"
         
      Case "information"
         
      Case "help"
         
      Case "maximize"
         Return 
         
      Case "close"
         Me.Close()
   End Select
   
End

Public Sub Employees_Find(sSearchCriteria As String) As Collection 
   
   Dim $localResult As Result

   sLastSearchCriteria = Trim(sSearchCriteria)
   $localResult = modContactsDBI.Employees_In_Organisations_Find(sSearchCriteria)
   Display_Contacts($localResult)
   
End

Public Sub btnAquirePHoto2_Click()
   
   Message.Info("Not implemented yet")

End

Public Sub btnCommunications_Click()

   Select Case Last.tag
      Case "new communication"
         Communication_New() 
         txtCommunication.SetFocus
      Case "add communication" 
         Communication_Accept()
   End Select

End

Public Sub Employee_Locations_Show()
   
End

Public Sub organisationslist_configurefont()
   
   Dialog.Font = cvOrganisations.Font
   If Dialog.SelectFont() Then Return
   cvOrganisations.Font = Dialog.Font
   Settings_Save()

End

Public Sub cvOrganisations_Menu()
   
   If cvOrganisations.Count Then 
      
      mnuOrganisationsPopUp_SetDefaultProvider.Caption = "Set as Default Provider for " & rows_in_view[cvOrganisations.Current.Key]!category
      
      mnuOrganisationsPopUp.popup
   End If
   
End

Public Sub mnuOrganisationsPopup_EnableEmployeeOptions()
   
   mnuOrganisationsPopUp_BranchAdd.Enabled = False
   mnuOrganisationsPopUp_AddEmployee.Enabled = False
   mnuOrganisationsPopUp_AddEmployeeAll.Enabled = False
   mnuOrganisationsPopUp_DeleteEmployee.Enabled = True
   mnuOrganisationsPopUp_DeleteEmployeeAll.Enabled = True
   mnuOrganisationsPopUp_Email.Enabled = True 'fixme b checking if this is possible
   mnuOrganisationsPopUp_Web.Enabled = True 'fixme b checking if this is possible
   
End

Public Sub MnuOrganisationsPopup_EnableBranchOptions()
   
   If chkHeadOffice.Value = True
      mnuOrganisationsPopUp_AddEmployee.text = "Add employee to head office"
      mnuOrganisationsPopUp_BranchAdd.Enabled = True
      tbBranchAdd.Enabled = True
      chkHeadOffice.Enabled = True
   Else
      mnuOrganisationsPopUp_BranchAdd.Enabled = False
      mnuOrganisationsPopUp_AddEmployee.text = "Add employee to branch office"
      tbBranchAdd.Enabled = False
      chkHeadOffice.Enabled = False
   End If
   tbEmployeeAdd.Enabled = True 'can add employee to head office or any other branch
   mnuOrganisationsPopUp_AddEmployee.Enabled = True
   mnuOrganisationsPopUp_AddEmployeeAll.Enabled = False
   mnuOrganisationsPopUp_DeleteEmployee.Enabled = False
   mnuOrganisationsPopUp_DeleteEmployeeAll.Enabled = False
   
   mnuOrganisationsPopUp_Email.Enabled = True 'fixme b checking if this is possible
   mnuOrganisationsPopUp_Web.Enabled = True 'fixme b checking if this is possible

End

Public Sub Employee_Surname_Get()
   
End

Public Sub Firstname_Selection(action As String, Optional calling_control As String)

   Dim x As Integer

   Select Case action
      Case "get"
         listview1.Visible = False  'user may have backspaced and list still visible
         If Trim(txtEmployeeFirstname.text) = "" Then Return 
         The_Collection = modContactsDBI.Firstname_Get(Trim(txtEmployeeFirstname.text))
         listview1.Clear
         
         If The_Collection.count Then 
            For Each Member In The_Collection
               listview1.Add(Member!pk, Member!firstname)
            Next 
            If The_Collection.count = 1 Then 
               If Trim(Lower(txtEmployeefirstname.text)) = Lower(Member!firstname) Then
                  Firstname_Selection("select", "list")
                  Return
               End If
            End If
            listview1.Visible = True
            listview1.Raise
            listview1.tag = txtEmployeefirstname
            Return 
         End If
         listview1.Visible = False  
      Case "accept"
         
         bExit = True
         If calling_control = "textbox" Then
            
            If listview1.Visible Then
               listview1.MoveFirst
               For x = 0 To listview1.count - 1
                  If Lower(listview1.Item.text) = Trim(Lower(txtEmployeeFirstname.text)) Then
                     listview1.Visible = False  
                     Break
                  End If
               Next
            End If
         Else
            
            If listview1.Visible Then
               listview1.MoveCurrent   'set internal cursor to match marquee
               txtEmployeeFirstname.Text = listview1.Item.Text
            End If
         End If
         listview1.Visible = False  
         cmbEmployeeSex.SetFocus()
         bExit = False  
   End Select

End

Public Sub Occupation_Selection(action As String, Optional calling_control As String)

   Dim x As Integer

   Select Case action
      Case "get"
         
         If Len(Trim(txtEmployeeOccupation.text)) = 0 Then Return
         The_Collection = modContactsDBI.Occupation_Get(Trim(txtEmployeeOccupation.text))
         listview1.Clear
         
         If The_Collection.count Then 
            For Each Member In The_Collection
               listview1.Add(Member!pk, Member!occupation)
            Next 
            If The_Collection.count = 1 Then 
               If Trim(Lower(txtEmployeeOccupation.text)) = Lower(Member!occupation) Then
                  Occupation_Selection("select", "list")
                  Return
               End If
            End If
            listview1.Visible = True
            listview1.Raise
            listview1.tag = txtEmployeeOccupation
            Return 
         Else
            
            If bEmployeeDisplayed Then
               fk_occupation = 0
            End If
         End If
         listview1.Visible = False  
      Case "accept"
         
         bExit = True
         If calling_control = "textbox" Then
            
            If listview1.Visible Then
               listview1.MoveFirst
               For x = 0 To listview1.count - 1
                  If Lower(listview1.Item.text) = Trim(Lower(txtEmployeeOccupation.text)) Then
                     fk_occupation = listview1.Item.Key
                     Break
                  End If
               Next
            End If
            
            fk_occupation = 0
            listview1.Visible = False     
         Else
            
            If listview1.Visible Then
               listview1.MoveCurrent   'set internal cursor to match marquee
               fk_occupation = listview1.Item.key
               txtEmployeeOccupation.Text = listview1.Item.Text
            End If
         End If
         If bEmployeeDisplayed Then
            txtEmployeeOccupation.SetFocus()
         Else
            txtCommunication.SetFocus()
         End If   
         bExit = False  
   End Select

End

Public Function EditArea_TextBox_ExcludeKeys(keycode As Integer, tag As String) As Boolean
   
   Select Case tag
      Case "birthdate"
         bKeyValid = modUtil.AllowKeys(const.AllowKeys_DateFormat, keycode)
      Case Else
         bKeyValid = True
   End Select
   Return bKeyValid

End

Public Sub EditArea_KeyPress()
   
   If Not EditArea_Textbox_ExcludeKeys(key.code, Last.tag) Then 
      Stop Event
      Return
   End If
   Select Case key.Code
      Case key.Return
         Select Case Last.tag
            Case "organisation"
               listview1.Visible = False 'becomes visible when editing existing organisation
               txtStreet1.SetFocus()
            Case "branch"
               txtStreet1.SetFocus()
            Case "surname"
               cmbEmployeeTitle.SetFocus()
               listview1.Visible = False 'list could be popped up with duplicate and not used
            Case "firstname"
               Firstname_Selection("accept", "textbox")
               cmbEmployeeSex.setfocus()
            Case "birthdate"
               txtEmployeeMemo.setfocus()
            Case "occupation"
               Occupation_Selection("accept", "textbox")
            Case "salutation"
               cmbMarital.SetFocus()
               
            Case "street1"
               txtSuburb.SetFocus()
            Case "street2"
               txtSuburb.SetFocus()
            Case "suburb"
               Suburb_Selection("accept", "textbox")
               chkHeadOffice.setfocus()
            Case "value"
               txtCommunicationNotes.SetFocus()
            Case "notes"
               
               If Trim(txtCommunication.text) = "" Then
                  tbSave.SetFocus()
               Else
                  btnAddContact.SetFocus()
               End If
            Case "category"
               Category_Selection("accept", "textbox")
               
         End Select
      Case key.Tab
         listview1.Visible = False  
      Case key.Down
         Select Case Last.tag
            Case "occupation", "surname", "firstname", "suburb", "category"
               If listview1.Visible Then
                  listview1.SetFocus
                  listview1.MoveFirst
                  listview1.Item.Selected = True
               End If
         End Select
   End Select 

End

Public Sub Editarea_GotFocus()

   Last.BackGround = Color.rgb(95, 255, 175)
   Select Case Last.tag
      Case "suburb"
         With listview1
            .top = VBox_EditArea_Left_Inner.top + HBox_Org_Suburb.top + HBox_Org_Suburb.height
            .left = VBox_EditArea_Left_Inner.left + txtSuburb.Left + VBox_EditArea_Left_Inner.padding
            .Width = txtSuburb.Width
         End With
      Case "category"
         With listview1
            .left = VBox_EditArea_Right.left + txtCategory.Left + VBox_EditArea_Right.padding 
            .width = txtCategory.Width
            .top = VBox_EditArea_Right.top + Hbox_Category.top + txtCategory.Height
            .raise
         End With 
      Case "firstname"
         With listview1
            .left = Vbox_Employee.left + txtEmployeeFirstname.Left + Vbox_Employee.padding 
            .width = txtEmployeeFirstname.Width
            .top = Vbox_Employee.top + Hbox_Firstname.top + txtEmployeeFirstname.Height
            .raise
         End With 
      Case "surname"
         
         With listview1
            .left = Vbox_Employee.left + txtEmployeeSurname.Left + Vbox_Employee.padding 
            .width = txtEmployeeSurname.Width
            .top = Vbox_Employee.top + Hbox_Surname.top + txtEmployeeSurname.Height
            .raise
         End With 
      Case "occupation"
         With listview1
           
        
            .left = Last.parent.parent.left + txtEmployeeOccupation.Left + Vbox_Employee.padding 
            .width = txtEmployeeOccupation.Width
            .top = Last.parent.parent.top + Hbox_Occupation.top + txtEmployeeOccupation.Height
            .raise
         End With
      Case "organisation"
         With listview1
            .left = VBox_EditArea_Left_Inner.left + txtOrganisation.Left + VBox_EditArea_Left_Inner.padding 
            .width = txtOrganisation.Width
            .top = VBox_EditArea_Left_Inner.top + HboxOrg_Name.top + txtOrganisation.Height
            .raise
         End With
         
   End Select

End

Public Sub EditArea_Change()
   
   If bexit Then Return 
   Select Case Last.tag
      Case "suburb"
         
         If Trim(txtSuburb.text) = "" Then  
            txtState.Text = ""
            txtPostcode.text = ""
            fk_town = 0
            Return
         End If
         
      Case "surname"
         
      Case "firstname"
         
      Case "birthdate"
         If txtBirthdate.text <> "" Then
            age = -1
            Try age = DateDiff(Val((Trim(txtBirthdate.text))), Now, gb.Year)
            If Not Error Then
               If age > 0 And age < 100 Then 'most unlikely to have centarian working in practice
                  txtage.text = age
               End If   
            End If
         Else
            txtage.text = ""
         End If 
      Case "occupation"
         If Trim(Last.text) = "" Then 'Or Trim(Last.text) = "" And Listview1.Visible = False Then
            fk_occupation = 0
            listview1.Visible = False 'could be showing if user backspaced
         End If  
      Case "employee memo", "memo branch"
         If InStr(Last.text, "\n\n") Then
            Last.text = Replace(Last.text, "\n\n", "")
            txtCategory.SetFocus()
         End If
      Case "category"
         If Len(txtCategory.text) = 0 Then
            fk_category = 0
         End If 
         If InStr(Lower(Trim(Last.text)), "provider") And bEmployeeDisplayed Then
            Message.Info("An employee cannot belong to the provider category\n\nPlease select another category")
            bexit = False
            fk_category = 0
            txtCategory.text = ""
            bExit = True
         End If
      Case "notes"
         btnAddContact.Foreground = Color.red
      Case "value"
         If InStr(Last.text, "@") Then 
            cmbCommunicationType.index = const.CommModalityEmail
         Else If Left$(Trim(Last.text), 2) = "04" Then 'fix me put in the rest
            cmbCommunicationType.index = const.CommModalityMobile
         Else If InStr(Last.text, "www") Then 
            cmbCommunicationType.index = const.CommModalityWeb
         Else If InStr(Last.text, "1800") Then
            cmbCommunicationType.index = Const.CommModalityTollFree
         End If
         If InStr(Lower(Last.text), "f") Then
            If cmbCommunicationType.text <> "Fax" Then
               cmbCommunicationType.index = cmbCommunicationType.Find("Fax")
            End If
            bExit = True
            Last.text = Trim(Replace(Last.text, "f", "")) 'don't allow one or more 'f's
            bExit = False
         End If
         
         If Trim(Last.text) = "" Then
            tbBrowseWeb.Visible = False 'could have become visible, so always need to remove
         End If
         btnAddContact.Foreground = Color.red
   End Select  
   
   modEditAreaHelpers.Notify_Data_Changed(Vbox_EditArea, tbSave, True)

End

Public Sub EditArea_LostFocus()

   Last.BackGround = Color.White
   
   Last.pos = 0

End

Public Sub EditArea_KeyRelease()

   Select Case Last.tag
      Case "surname"
         
         Surname_Duplicates_Selection("get")
      Case "firstname" 
         Firstname_Selection("get")
      Case "organisation"
         Organisations_Show_Duplicates()
      Case "occupation"
         Occupation_Selection("get")
         
      Case "salutation"
         
      Case "suburb"
         Suburb_Selection("get")
      Case "category"
         Category_Selection("get")
         
   End Select 

End

Public Sub Category_Selection(action As String, Optional calling_control As String)

   Dim x As Integer

   Select Case action
      Case "get"
         
         If Trim$(txtCategory.text) = "" Then Return 
         categories = modContactsDBI.Get_Category(Lower(Trim$(txtCategory.text)))
         listview1.Clear
         
         If categories.count Then 
            For Each category In categories
               listview1.Add(category!pk, category!category)
            Next 
            If categories.count = 1 Then 
               If Trim(Lower(txtCategory.text)) = Lower(category!category) Then
                  Category_Selection("select")
                  Return
               End If
            End If
            listview1.Visible = True
            listview1.Raise
            listview1.tag = txtCategory
            Return 
            
         Else
            
            fk_category = 0
         End If
         listview1.Visible = False  
      Case "accept"
         
         If calling_control = "textbox" Then
            
            If listview1.Visible Then
               listview1.MoveFirst
               For x = 0 To listview1.count - 1
                  If Lower(listview1.Item.text) = Trim(Lower(txtCategory.text)) Then
                     fk_category = listview1.Item.Key
                     listview1.Visible = False  
                     Break
                  End If
               Next
            End If
         Else
            
            If listview1.Visible Then
               listview1.MoveCurrent   'set internal cursor to match marquee
               fk_category = listview1.Item.key
               txtCategory.Text = listview1.Item.Text
            Else
               fk_category = 0
            End If
         End If
         listview1.Visible = False    
         If Hbox_Occupation.Visible Then
           txtEmployeeoccupation.SetFocus
         Else
                    txtCommunication.SetFocus()        
         Endif
         
   End Select

End

Public Sub cvwEmployees_KeyPress()

   If key.code = key.return Then
      
      cvwEmployees_DblClick()
      
   End If
   
End

Public Sub cvwEmployees_DblClick()
   
End

Public Sub cvwEmployees_Select()

   Dim key As Integer

   cvwEmployees.MoveCurrent                                              'set internal cursor to the visible row
   key = cvwEmployees.Current.key                                        'get the key to the collection
   
End

Public Sub rbSecurity_Click()
   
End

Public Sub EditAreaChkBox_KeyPress()

   If key.code = key.Return Then
      Select Case Last.tag
         Case "head office"
            chkPostal.SetFocus
         Case "postal address"
            teBranchMemo.SetFocus
         Case "communication preferred"
            chkCommunicationConfidential.SetFocus
         Case "communication confidential"
            btnAddContact.SetFocus()
      End Select
   End If
   
End

Public Sub EditAreaChkBox_Click()

   If bExit Then Return 
   Select Case Last.tag
      Case "Head office"
         If Last.value = True Then
            txtBranch.text = "HEAD OFFICE"
         Else
            txtBranch.text = ""
         Endif
   End Select
   modEditAreaHelpers.Notify_Data_Changed(Vbox_EditArea, tbSave, True)

End

Public Sub cmbEditArea_KeyPress()

   If key.code = key.Return Then
      Select Case Last.tag
         Case "title"
            txtEmployeeFirstname.SetFocus
         Case "sex"
            txtEmployeeSalutation.SetFocus
         Case "communication type"
            txtCommunication.SetFocus
      End Select
   End If
   
End

Public Sub cmbEditArea_Click()

   If bExit Then Return
   
   Select Case Last.tag
         
      Case "communication type"
         
         If Last.index = const.CommModalityWeb Then
            tbBrowseWeb.Visible = True
         Else
            tbBrowseWeb.Visible = False
         End If
   End Select
   modEditAreaHelpers.Notify_Data_Changed(Vbox_EditArea, tbSave, True)

End

Public Sub mnuOrganisations_Click()

   Dim rd As CRequestDefault

   Select Case Last.tag
      Case "add branch"
         branch_add()
      Case "add employee"
         employee_add()
      Case "delete employee"
         Employee_Delete()
      Case "delete employee from all branches"
         modUtil.NotImplemented("delete employee from all branches not implemented")
      Case "delete organisation"
         modUtil.NotImplemented("Deleting organisation not implemented")
      Case "add communication"
         
         cvOrganisations_DblClick
         Communication_New() 
         txtCommunication.SetFocus
      Case "fonts"
         organisationslist_configurefont()
      Case "show locations"
         Employee_Locations_Show() 
      Case "show all branches" 
         modUtil.NotImplemented("show all branches not implemented")
      Case "default provider"
         modUtil.NotImplemented("default provider not implemented")
         
   End Select

End

Public Sub btnCommunications_KeyPress()

   If key.code = key.return Then
      btnCommunications_Click()
   End If

End

Public Sub EditArea_Combo_KeyPress()
   
   Select Case Last.tag
      Case "title"
         txtEmployeeFirstname.SetFocus()
      Case "sex"
         txtEmployeeSalutation.SetFocus()
      Case "marital"
         txtBirthdate.SetFocus()
   End Select

End

Public Sub tbContacts_KeyPress()
   
   If key.code = key.Return Then
      Select Case Last.tag
         Case "save"
            Save()
      End Select
   End If
   
End

Public Sub txtSearch_KeyRelease()
   
   Organisations_Refresh()

End

Public Sub txtSearch_GotFocus()

   Reset_Gui()

End

Public Sub cmbSearchType_Click()

   Organisations_Refresh()

End

Public Sub cvOrganisations_GotFocus()
   
   modEditAreaHelpers.Help_Show("help/organisations.html", FHelp)
   
End

Public Sub cvwContacts_GotFocus()
   
   modEditAreaHelpers.Help_Show("help/add-contact-method.html", FHelp)
   
End
