' Gambas class file

' Copyright (C) 2008-2014 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------------------
'PURPOSE          Allow transfer of a progress note to another persons file
'                 with appropriate audit trail.
'                 This allows for the situation where one writes in the wrong file
'FIXME            Put in the audit trail
'---------------------------------------------------------------------------------
Private From_Person As Collection
Private To_Person As Collection
Private To_Person_Row As CPatientSelectRow
Private patients As Collection 

Public Sub Run() As Boolean
   
   Return Not Me.ShowModal()
   
End

Public Sub Form_Open()
   
   With Me
      .Center
      .Title = "TRANSFER CLINICAL NOTES"
   End With
   
End

Public Sub Init(fp As Collection)
   '-------------------------------------------------------------------------
   'fp is patient transfering the notes from
   'notes = the richtext of the notes
   'fk_consult = the fk_consult in clin_consult.consult for this progress note
   'this row in clin_consult.consult current as fp!fk_patient = source patient
   '--------------------------------------------------------------------------   
   
   Dim FPR As CPatientSelectRow
   
   From_Person = fp   ' modDBConnect.update("clin_consult.consult", Null, ["pk": fk_consult, "fk_patient": To_Person!fk_patient])
   ' modDBConnect.CommitTrans()
   FPR = New CPatientSelectRow(ListContainer1, fp)
   With cvwPatients
      .Columns.count = 3 
   End With
   '  fk_consult = consult_fk 
   cvwPatients.Columns.count = 6
   
End

Public Sub btnOK_Click()
   '---------------------------------------------------------------------------------------------
   'User has decided to merge the person (could be a patient)
   'Give them a change to back out
   'This is immensely complicated due to the inter-woven contacts data from the clinical database
   '  update admin.staff set fk_person = new_person_fk where fk_person=old_person_pk;
   ' 
   ' chronic_disease_management.team_care_arrangements set fk_person = the new fk_person where old_person_pk = fk_person
   ' 
   ' clerical.data_patients set fk_person = the new fk_person where fk_person = the old_person_pk
   ' 
   ' find out if any consults have ever taken place for the old_patient we are going to 'lose'
   ' Select * from clin_consult.consult where fk_patient
   '
   '------------------------------------------------------------------

   Dim sql As String
   Dim R As Result   
   Dim fk_from_person As Integer = From_Person!fk_person
   Dim fk_to_person As Integer = To_Person!fk_person     
   Dim bIsPatient As Boolean
   Dim bHasConsults As Boolean
   
   listview1.Clear()          
   Return   'until it is working
   '  If Message.Warning("Please confirm merge - this cannot be undone.", "Yes - merge records", "Cancel") = 2 Then Return 
   
   '---------------------------------------------------------
   'First update the contacts database in no particular order
   'dosn't matter if some queries have null results  
   '1) If the from_person is an employee - update this
   '2) Mark the address of the from_person to be deleted
   '3) Mark the from_person now to be deleted  
   '4) mark any comms from the from_person to be deleted FIXME SHOULD BE  a more sophisticated merge
   '5)
   '---------------------------------------------------------
   If chkRetainEmployee.value = True Then 
      sql = "update contacts.data_employes set fk_person = " & fk_to_person
      sql &= " WHERE  fk_person = " & fk_from_person
   Else
      sql = "update contacts.data_employees set deleted = true WHERE fk_person = " & fk_from_person
   End If
   modDBConnect.exec_query(sql)
   sql = "update contacts.links_persons_addresses set deleted = True WHERE fk_person = " & fk_from_person
   modDBConnect.exec_query(sql)  
   If chkMergeComms.value = True Then
      sql = ""
   Else
      sql = "update contacts.links_persons_comms set deleted = true where fk_person = " & fk_from_person
   Endif
   modDBConnect.exec_query(sql)      
   sql = "update contacts.data_persons, set deleted = True WHERE pk=" & fk_from_person   
   modDBConnect.exec_query(sql)  
   '-----------------------------------------------
   'Determine if this person is actually a patient
   '----------------------------------------------
   sql = "Select * from clerical.data_patients where fk_person = " & From_Person!fk_person
   R = modDBConnect.exec_query(sql)
   If R.count Then
      bIsPatient = True
      listview1.Add(listview1.count, "The 'from' person is listed as a patient.....")
   End If
   R = modDBConnect.exec_query("Select * from clin_consult.consult where fk_patient = " & From_Person!fk_patient)
   If R.count Then
      bHasConsults = True
      listview1.add(listview1.count, "The 'from' person has had consultations recorded.....")
   Else
      listview1.Add(listview1.count, "the 'from' person has not had consultations recorded.....")
   Endif
   
   '---------------------------------- 
   'Next, update the clinical database
   '----------------------------------
   Return 
   Me.Close(True)
   
End

Public Sub btnCancel_Click()
   
   Me.Close
   
End

Public Sub EditAreaTextBox_GotFocus()
   '------------------------------------------------------
   'User has clicked on the search for patient textbox
   'clear it, and ensure patient list columnview is visible
   '--------------------------------------------------------   
   
   With Last
      .BackGround = Color.rgb(95, 255, 175)
      .Clear()
   End With
   With cvwPatients
      .Visible = True 
      .Clear()
   End With 
   ListContainer2.Visible = False   
   btnOK.Enabled = False  
   
End

Public Sub Patients_Find() 
   
   Dim patient As Collection
   Dim sql_in_english As String
   
   Inc Application.Busy
   Patients = modContactsDBI.patients_get_firstname_surname(Trim(txtFindPatient.text))
   sql_in_english = Patients!sql_in_english
   Patients.Remove("sql_in_english")
   If Patients.count = 0 Then 
      txtFindPatient.SetFocus()
      Dec application.Busy
      Return
   Else 
      '----------------------------------------------------
      'One or more patients.
      'If one, get their photo if it exists and load record
      '----------------------------------------------------
      If Patients.count = 1 Then  
         For Each To_Person In Patients 'no interaction = no collection
            Patient_Show(To_Person)
         Next
      Else  
         cvwPatients.Clear()
         For Each patient In Patients
            cvwPatients.Add(patient!pk_view, 0)
            cvwPatients[patient!pk_view][0] = patient!surname
            cvwPatients[patient!pk_view][1] = patient!firstname
            cvwPatients[patient!pk_view][2] = patient!age_display
            cvwPatients[patient!pk_view][3] = Format(patient!birthdate, "dd/mm/yyyy")
            cvwPatients[patient!pk_view][4] = patient!sex
            cvwPatients[patient!pk_view][5] = Trim(patient!street1 & " " & patient!street2) & " " & patient!town 
         Next
         With cvwPatients
            .MoveFirst
            .SetFocus
            .Item.Selected = True    
         End With
      Endif
   End If   
   Dec application.Busy
   
End

Public Sub Patient_Show(Patient As Collection)
   '-----------------------------------------------------------------------------
   'shows patien123t details + photo in the list container to make it really obvious
   '----------------------------------------------------------------------------- 
   
   cvwPatients.Visible = False    
   With ListContainer2
      .Visible = True 
      .Clear()
   End With
   To_Person_Row = New CPatientSelectRow(ListContainer2, Patient)
   
End

Public Sub cvwPatients_KeyPress()
   '-------------------------------------------------------------
   'User has hit the enter key on the patients list, show details
   '-------------------------------------------------------------   
   
   If Key.code = Key.Return Then cvwPatients_DblClick() 
   
End

Public Sub cvwPatients_DblClick()
   '-----------------------------------------------------------
   'User has selected a patient = show expanded details + photo
   '------------------------------123-----------------------------   
   
   cvwPatients.MoveCurrent()
   To_Person = Patients[cvwPatients.Item.Key]
   Patient_Show(To_Person)
   btnOK.Enabled = True 
   
End

Public Sub EditAreaTextBox_Activate()
   '------------------------------------------------
   'If user hits <enter> key, search for the patient
   '------------------------------------------------  
   
   Patients_Find()
   
End
