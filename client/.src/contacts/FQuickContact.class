' Gambas class file

' Copyright (C) 2008-2014 Dr. Richard Terry  rterry@pacific.net.au

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
' A QUICK CONTACT FINDER
'----------------------------------------------------------------------
' TODO     Allow user in FClinical to find contacts without going to 
'         the main contact manager
'----------------------------------------------------------------------
Private ReferenceHBoxForColumnView As HBox
Private bExit As Boolean                                    'Used to prevent re-entry into subroutines
Private bKeyValid As Boolean                                'Used in EditAreaTextBox routines to ensure valid data entry
Private Persons As Collection
Private Person As Collection
Private Branches As Collection
Private branch As Collection
Private Comms As Collection
Private comm As Collection
Private fk_person As Integer                                'key for person the referral letter is to see Contacts.data_persons
Private fk_employee As Integer                              'key to contacts.data_employees
Private fk_branch As Integer                                'can be null or 0, but if not key to          Contacts.data_branches
Private fk_organisation As Integer                          'can be null or 0, nut if not key to          Contacts.data_organisations
Private fk_address As Integer                               'key to contacts.data_addresses
Private Addresses As Collection
Private address As Collection

Public Sub _new()

   ReferenceHBoxForColumnView = New Hbox(Vbox_EditArea) 'used to re-position the columnview when form or splits resize
   ReferenceHBoxForColumnView = HBox_Name

End

Public Sub Init()
   '---------------------------------------------------------
   'Do all the form initialisation stuff like adding stuff to
   'combo's, setting numbers of columns in lists
   '---------------------------------------------------------

   lblmeasure.text = " Organisation "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea, lblmeasure)
   cvwPersonContacts.Columns.count = 1
   Settings_Load()                          'load settings for this form

End

Public Sub EditAreaTextBox_Change()

   If bExit Then Return
   Select Case Last.tag

      Case "organisation"
         If Trim(Last.text) = "" Then
            bexit = True
            fk_organisation = 0
            fk_branch = 0
            txtOrganisation.text = ""
            txtBranch.Text = ""
            txtStreet1.Text = ""
            txtStreet2.Text = ""
            txtSuburb.text = ""
            txtPostcode.text = ""
            lvworgcontacts.Clear()
            bexit = False
         Endif
      Case "name"
         '-----------------------------------------------------
         'User deletes the name, visciously reset the edit area
         'Why, we must enforce keys for saving ie fk_person etc
         'must exist
         '------------------------------------------------------
         If Trim(txtName.text) = "" Then
            lvworgcontacts.Clear()
            cvwPersonContacts.Clear()
            bExit = True
            fk_organisation = 0
            fk_branch = 0
            fk_employee = 0
            fk_person = 0
            txtOccupation.text = ""
            txtOrganisation.text = ""
            txtBranch.Text = ""
            txtStreet1.Text = ""
            txtStreet2.Text = ""
            txtSuburb.text = ""
            txtPostcode.text = ""
            bExit = False
         End If
   End Select

End

Public Sub EditAreaTextBox_KeyRelease()
   '----------------------------------------------------------------------------
   'Search for appropriate collections of information on each key-release stroke
   '-----------------------------------------------------------------------------

   If bExit Then Return

   Select Case Last.tag
      Case "category"
         Organisation_By_Category_Get()   'only organisation, search on occupation for person
      Case "occupation"
         Person_By_Occupation_Get()       'gets persons as employees or sole traders
      Case "name"
         Person_Get()
      Case "organisation"
         Organisation_Get()
   End Select

End

Public Sub EditArea_Clear()
   '-----------------------------------------
   'Clears the textboxes etc in the edit area
   'needs cleverer code
   '-----------------------------------------

   bExit = True
   '---------------
   'Clear textboxes
   '---------------
   modEditAreaHelpers.EditArea_Clear(Vbox_EditArea)
   '-----------
   'Clear lists
   '-----------
   columnview1.Visible = False
   cvwPersonContacts.Clear
   lvwOrgContacts.Clear()
   bExit = False

End

Public Sub EditAreaTextBox_GotFocus()

   If Bexit Then Return
   columnview1.Visible = False
   Last.BackGround = Color.rgb(95, 255, 175)
   ReferenceHBoxForColumnView = Last.Parent.parent
   Select Case Last.tag

      Case "category"
         With columnview1
            .top = Last.parent.parent.top + Last.Height
            .width = txtCategory.Width
            .left = Last.parent.Left + Vbox_EditArea.Padding
            .height = 150  'FIXME Make me smarter eg height  = that of # of items.
            .columns.count = 3
         End With
      Case "occupation"
         With columnview1
            .top = Last.parent.parent.top + Last.Height
            .width = txtOccupation.Width + Vbox_EditArea.Padding
            .left = Last.parent.Left
            .height = 150  'FIXME Make me smarter eg height  = that of # of items.
            .columns.count = 4 '0=occupation 1= name 2= organisation/branch 3=address
         End With
      Case "name"
         With columnview1
            .top = Last.parent.parent.top + txtName.Height
            .width = txtOrganisation.Width
            .height = 150
            .left = Last.parent.Left + Vbox_EditArea.Padding
            .columns.count = 4 '0=name,surname 1= occupation 2= organisation/branch 3=address
         End With
      Case "organisation"
         With columnview1
            .top = Last.parent.parent.top + Last.Height
            .width = txtOrganisation.Width - 10
            .left = Last.parent.Left + Vbox_EditArea.Padding
            .height = 150
            .columns.count = 4 'branch, street, suburb
         End With
         ' person_AddressGet()
      Case "branch"
         With columnview1
            .top = Last.parent.parent.top + Last.Height
            .width = Last.parent.parent.width
            .left = Last.parent.Left + Vbox_EditArea.Padding
            .height = 150
            .columns.count = 2
         End With
         If fk_branch Then
            Branches_Get_For_Organisation()
         Endif

      Case "street1"
         With columnview1
            .top = Last.parent.parent.top + Last.Height
            .left = Last.Left + Vbox_EditArea.Padding
            .height = 150
            .columns.count = 2
         End With
         Person_Addresses_Get()
      Case "street2"
      Case "suburb"
         txtPostcode.BackGround = Color.rgb(95, 255, 175)
      Case "postcode"
   End Select

End

Public Function EditAreaTextBox_ExcludeKeys(keycode As Integer, tag As String) As Boolean

   Select Case tag
      Case "date"
         bKeyValid = modUtil.AllowKeys(const.AllowKeys_DateFormat, keycode)
      Case Else
         bKeyValid = True
   End Select
   Return bKeyValid

End

Public Sub EditAreaTextBox_LostFocus()

   Last.BackGround = Color.White
   If Last.tag = "suburb" Then txtPostcode.BackGround = Color.white
   If Last.tag = "date" Then
      If Not (IsDate(Last.text)) Then
         bExit = True
         Last.text = ""
         bExit = False
      Endif
   Endif

End

Public Sub EditAreaTextBox_KeyPress()

   If bExit Then Return
   If Not EditAreaTextbox_ExcludeKeys(key.code, Last.tag) Then
      Stop Event
      Return
   End If

   Select Case Key.Code
      Case Key.F1
         Select Case Last.tag
            Case "tag"
         End Select
      Case Key.Down
         Select Case Last.tag
            Case "category", "organisation", "street1", "Suburb", "linkto", "name", "occupation"
               If columnview1.Visible Then
                  columnview1.MoveFirst
                  columnview1.SetFocus
                  columnview1.Item.Selected = True 
               End If
         End Select

      Case Key.Return, Key.Tab
         Select Case Last.tag

            Case "category"
               txtOccupation.SetFocus()
            Case "occupation"
               txtName.SetFocus()
         End Select

   End Select

End

Public Sub Settings_Save()

   Settings["FQuickContact/Vsplit1.layout"] = VSplit1.Layout

End

Private Sub Settings_Load()

   VSplit1.Layout = Settings["FQuickContact/Vsplit1.layout", modUtil.VSplit([246, 133])]

End

Public Sub ColumnView1_KeyPress()

   If Key.Code = Key.RETURN Then
      ColumnView1_DblClick()
   End If

End

Public Sub Address_Select(address As Collection)

   Try txtOrganisation.text = Addresses[columnview1.Item.key]!organisation
   Try txtBranch.text = Addresses[columnview1.Item.key]!branch
   Try txtStreet1.text = Addresses[columnview1.Item.key]!street1
   Try txtStreet2.text = Addresses[columnview1.Item.key]!street2
   Try txtSuburb.text = Addresses[columnview1.Item.key]!town
   Try txtPostcode.text = Addresses[columnview1.Item.key]!postcode
   Try fk_organisation = Addresses[columnview1.Item.key]!fk_organisation
   Try fk_branch = Addresses[columnview1.Item.key]!fk_branch

End

Public Sub ColumnView1_DblClick()
   '-----------------------------------------------------------
   'The columnview tag is always a control, usually a textbox
   'here we read the textbox tag to determine which textbox
   'poppuped up the columnview
   '---------------------------------------------------------

   columnview1.MoveCurrent
   Select Case Last.Tag.tag
      Case "branch", "organisation", "category"
        Organisation_Select(branches[columnview1.Item.key])
      Case "street1"
         Address_Select(Addresses[columnview1.Item.key])
      Case "name", "occupation"
         Person_Select(Persons[columnview1.Item.key])
   End Select
   columnview1.Visible = False

End

Public Sub Person_Addresses_Get()
   '----------------------------------------------------------------------
   'Get all addresses this person works, private rooms or in organisations
   '----------------------------------------------------------------------

   Dim x As Integer

   With columnview1
      .Clear
      .Columns.count = 2
   End With
   Addresses = modUtil.Copy_Collection_Keyed_Sequentially(modReferralsDBI.Persons_Addresses_Get(fk_person))
   If Not Addresses.count Then Return
   For Each address In Addresses
      ColumnView1.add(x, 0)
      If address!organisation <> Null Then
         ColumnView1[x][0] = address!organisation & " " & address!branch
      Else
         ColumnView1[x][0] = "Private rooms"
      End If
      ColumnView1[x][1] = address!street1 & " " & address!street2 & " " & address!town
      Inc x
   Next
   If Addresses.count > 1 Then
      With columnview1
         .Raise
         .Visible = True
         .tag = txtStreet1
      End With
   Else
      Address_Select(address)
   Endif

End

Public Sub Person_Get()
   '-------------------------------------------------------------
   'Gets a list of persons who could be sole traders or employees
   '-------------------------------------------------------------

   Dim address As String
   Dim x As Integer

   With columnview1
      .Visible = False
      .Clear()
   End With
   If Trim(txtName.text) = "" Then Return
   Persons = modUtil.Copy_Collection_Keyed_Sequentially(modReferralsDBI.Person_Get_By_Surname(Trim(txtName.text)))
   If Persons.count Then
      For Each Person In Persons
         columnview1.Add(x, 0)
         columnview1[x][0] = Person!wholename
         columnview1[x][1] = "(" & Person!occupation & ")"
         columnview1.Columns[2].width = 150
         If Not IsNull(Person!organisation) Then
            columnview1[x][2] = Person!organisation & " " & Person!branch
         Else
            columnview1[x][2] = ""
         Endif
         Try address = Trim(Person!street1 & " " & Person!street2)
         Try address &= Person!town & " " & Person!postcode
         columnview1[x][3] = address
         Inc x
      Next
      If Persons.count = 1 Then
         Person_Select(person)
      Else
         With columnview1
            .tag = txtName
            .Visible = True
            .Raise
         End With
      End If
   End If

End

Public Sub Person_Comms_Get()
   '--------------------------------------------------------
   'Get all the persons contacts, e.g phone, fax, mobile etc
   '--------------------------------------------------------

   Dim comm As Collection
   Dim x As Integer

   comms = modUtil.Copy_Collection_Keyed_Sequentially(modContactsDBI.person_comms_get(fk_person))
   cvwPersonContacts.Clear()
   For Each Comm In comms
      cvwPersonContacts.Add(x, 0)
      cvwPersonContacts[x][0] = comm!type & ": "
      If InStr(comm!type, "Mobile") Then
         cvwPersonContacts[x][0] = Replace(cvwPersonContacts[x][0], "Phone", "")
      Endif
      cvwPersonContacts[x][0] &= comm!value
      Inc x
   Next
   ' modUtil.Columnview_Columns_Set_Size(cvwPersonContacts, lblmeasure)

End

Public Sub Organisation_By_Category_Get()
   '---------------------------------------------------------------
   'Allows user to select a recipient by category
   'applies only to organisation, for persons, search on occupation
   '---------------------------------------------------------------

   Dim x As Integer

   With columnview1
      .Visible = False
      .Clear()
   End With
   If Trim(txtCategory.text) = "" Then Return
   branches = modUtil.Copy_Collection_Keyed_Sequentially(modContactsDBI.Organisations_Get_By_Category(Trim(txtCategory.text)))
   If Not branches.count Then Return
   For Each branch In branches
      columnview1.Add(x, 0)
      columnview1[x][0] = branch!category
      columnview1[x][1] = branch!organisation
      columnview1[x][2] = branch!branch
      Inc x
   Next
   If branches.count = 1 Then
      Branch_Select(branch)
   Else
      With columnview1
         .tag = txtCategory
         .Raise()
         .Visible = True
      End With
   End If

End

Public Sub Organisation_Select(branch As Collection)
   '--------------------------------------------------------------
   'User has been trying to find organisation by typing a category
   '--------------------------------------------------------------

   Branch_Select(branch)

   '------------------------------------------
   'Get the comms for this organisation/branch
   '------------------------------------------
   lvworgcontacts.Clear()
   cvwPersonContacts.Clear()
   comms = modContactsDBI.Branch_Comms_Get(fk_branch)
   For Each comm In comms
      lvworgcontacts.Add(comm!pk, comm!type & " " & comm!value)
   Next

End

Public Sub Branch_Comms_Get()

   comms = modContactsDBI.Branch_Comms_Get(fk_branch)

   For Each comm In comms
      lvworgcontacts.Add(comm!pk, comm!type & " " & comm!value)

   Next

End

Public Sub Branch_Select(branch As Collection)
   '-------------------------------------
   'Selects a branch from the columnview1
   '-------------------------------------

   bexit = True
   txtOrganisation.text = Branch!organisation
   txtBranch.text = Branch!branch
   txtstreet1.text = Branch!street1
   txtstreet2.text = Branch!street2
   txtSuburb.text = Branch!town
   txtPostcode.text = Branch!postcode
   txtCategory.text = Branch!category
   fk_branch = Branch!fk_branch
   fk_organisation = Branch!fk_organisation
   ' comms = modContactsDBI.Branch_Comms_Get(fk_branch)
   ' For Each comm In comms
   '    lvworgcontacts.Add(comm!pk, comm!type & " " & comm!value)
   ' Next
   bexit = False

End

Public Sub Branches_Get_For_Organisation()
   '--------------------------------
   'Get branches for an organisation
   '--------------------------------

   Dim x As Integer

   With columnview1
      .Clear
      .Visible = False
   End With
   Branches = modUtil.Copy_Collection_Keyed_Sequentially(modContactsDBI.Branches_Get_For_Organisation(fk_organisation))
   If Branches.count Then
      For Each branch In branches
         columnview1.Add(x, 0)
         columnview1[x][0] = branch!branch
         columnview1[x][1] = Trim(branch!street1 & " " & branch!street2) & " " & branch!town & " " & branch!postcode
         Inc x
      Next
      If branches.count = 1 Then
         Branch_Select(branch)
      Endif
      columnview1.Visible = True
      columnview1.Tag = txtBranch
   Endif

End

Public Function Employee_Workplace_Get()
   '-----------------------------------------------------------------------------
   'Given an fk_person, get where they could work (may not however be an employee
   'If a single place of employ - auto accept and put in the details
   '-----------------------------------------------------------------------------

   Dim x As Integer

   With columnview1
      .Visible = False
      .Clear()
   End With
   If Trim(txtName.text) = "" Then Return
   fk_organisation = 0
   fk_branch = 0
   branches = modUtil.Copy_Collection_Keyed_Sequentially(modReferralsDBI.Organisations_Get_For_Employee(fk_person))
   If Not branches.count Then Return
   '-----------------------------------------------------------------------------------
   'If branches of an organisation  exist to match the text, auto-select or show a list
   '-----------------------------------------------------------------------------------
   For Each branch In branches
      Columnview1.Add(x, 0)
      Columnview1[x][0] = Branch!organisation
      Columnview1[x][1] = Branch!branch
      Columnview1[x][2] = Trim(Branch!street1 & " " & Branch!street2)
      Columnview1[x][3] = Branch!town & " " & Branch!postcode
      Inc x
   Next
   If branches.count = 1 Then
     branch_Select(Branch)
   Else
      With columnview1
         .Visible = True
         .Raise
         .tag = txtOrganisation
      End With
   End If

End

Public Sub Person_Select(person As Collection)
   '-----------------------------------------------------------------------------------------
   'User selects person to send letter to from popup list
   'Remembering that the view contains person with addresses in organisations or sole traders
   'Hence all the Try's. Also, an organisation or person can be in the database 'name only'
   'without associated address. Bumma eh!
   '------------------------------------------------------------------------------------------

   bExit = True
   txtName.Text = person!wholename
   txtOccupation.text = person!occupation
   fk_person = person!fk_person
   Try fk_employee = person!fk_employee
   Try fk_organisation = person!fk_organisation
   Try fk_address = person!fk_address
   Try fk_branch = person!fk_branch
   Try txtOrganisation.text = person!organisation
   Try txtBranch.text = person!branch
   Try txtStreet1.text = person!street1
   Try txtStreet2.text = person!street2
   Try txtSuburb.text = person!town
   Try txtPostcode.text = person!postcode
   If fk_branch Then Branch_Comms_Get()
   If fk_person Then Person_Comms_Get()
   bExit = False

End

Public Sub Person_By_Occupation_Get()
   '-----------------------------------------------------------------------
   'Gets a list of categories of occupations, presented in a list like this
   ' category .... persons name i.e
   ' cardiologist      Dr Big heart
   '-----------------------------------------------------------------------

   Dim address As String
   Dim x As Integer

   With columnview1
      .Visible = False
      .Clear()
   End With
   If Trim(txtOccupation.text) = "" Then Return
   Persons = modUtil.Copy_Collection_Keyed_Sequentially(modReferralsDBI.Persons_Get_By_Occupation(Trim(txtOccupation.text)))
   If Not Persons.count Then Return
   '-----------------------------------------------------------------
   'If categories exist to match the text, auto-select or show a list
   '-----------------------------------------------------------------
   For Each Person In Persons
      columnview1.Add(x, 0)
      columnview1[x][0] = Person!occupation & " "
      columnview1[x][1] = Person!wholename & " "
      columnview1.Columns[2].width = 150
      If Not IsNull(Person!organisation) Then
         columnview1[x][2] = Person!organisation & " " & Person!branch & " "
      Else
         columnview1[x][2] = ""
      Endif
      Try address = Trim(Person!street1 & " " & Person!street2)
      Try address &= Person!town & " " & Person!postcode
      columnview1[x][3] = address
      Inc x
   Next
   If Persons.count = 1 Then
      Person_Select(Person)
   Endif
   With columnview1
      .Visible = True
      .Raise
      .tag = txtOccupation
   End With

End

Public Sub Organisation_Get()
   '------------------------------
   'Gets list of all organisations
   '------------------------------

   Dim x As Integer

   With columnview1
      .Visible = False
      .Clear()
   End With
   If Trim(txtOrganisation.text) = "" Then Return
   fk_organisation = 0
   fk_branch = 0
   branches = modUtil.Copy_Collection_Keyed_Sequentially(modContactsDBI.Organisations_Get(Trim(txtOrganisation.text)))
   If Not branches.count Then Return
   '-----------------------------------------------------------------------------------
   'If branches of an organisation  exist to match the text, auto-select or show a list
   '-----------------------------------------------------------------------------------
   For Each branch In branches
      Columnview1.Add(x, 0)
      Columnview1[x][0] = Branch!organisation
      Columnview1[x][1] = Branch!branch
      Columnview1[x][2] = Trim(Branch!street1 & " " & Branch!street2)
      Columnview1[x][3] = Branch!suburb & " " & Branch!postcode
      Inc x
   Next
   If branches.count = 1 Then
      Branch_Select(branch)
   Else
      With columnview1
         .Visible = True
         .Raise
         .tag = txtOrganisation
      End With
   End If

End

Public Sub EditArea_Buttons_Click()

   EditArea_Clear()

End

Public Sub VSplit1_Resize()

   If columnview1.Visible Then
      columnview1.top = ReferenceHBoxForColumnView.top + ReferenceHBoxForColumnView.height
   Endif

End

Public Sub Form_Close()
   
  Settings_Save    
   
End

Public Sub Form_Resize()

   VSplit1_Resize()
   columnview1.Width = txtCategory.Width

End
