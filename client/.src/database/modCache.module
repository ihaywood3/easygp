' Gambas module file

' a simple caching system for read-only lookup tables
' Copyright (C) 2010 Dr. Ian Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' Note:  - as the EasyGP program version updates the cache is re-loaded
'          and kept in ~/.cache/version_no in users home directory
'          If programming and you must force an update delete the dir.
'----------------------------------------------------------------------

Private db_version As String
Private cache_ram As New Collection
Private file_error As Boolean = False

Public Sub SetDBVersion(vers As Collection)
  ' called only by modDBConnect to set the database version
  db_version = vers!major & "." & vers!minor
  
End

Public Function Get(table As String, Optional v As Variant, field As String) As Variant
  ' obtains the content of a lookup table, caching the data in the 
  ' local disc.
  ' table: the name of the table with schema
  ' v: the value to get
  ' field: the field in the table to match v too
  ' if v is not provided, the whole table is returned
  ' if field isn't provided, returns one row, by the PK
  ' if field is provided, provides one row, where v matches that field in the row 
  Dim t As Collection
  Dim i As Collection
   
  Let t = Query(table, "select * from " & table)
  If IsNull(v) Then
    Return t
  Else
    If IsNull(field) Then
      Return t[v]
    Else
      For Each i In t
        If i[field] = v Then Return i
      Next
    Endif
  Endif
  
  Return Null
  
End

Public Function Query(tbl As String, query As String) As Collection
  Dim data As Collection
  Dim f As File
  Dim fname As String
  Dim i As String
  
  If cache_ram.Exist(tbl) Then
    Log.InfoMsg("Hit RAM cache on " & tbl)
    Return cache_ram[tbl]
  Endif
  Let fname = "/var/lib/easygp/cache" &/ db_version &/ tbl
  If Access(fname, gb.Read) Then
    Let f = Open fname For Read
    Read #f, data
    Close #f
  Else
    fname = User.Home &/ ".cache/easygp" &/ db_version &/ tbl
    If Access(fname, gb.Read) Then
      Log.InfoMsg("Hit disc cache on " & tbl)
      Let f = Open fname For Read
      Read #f, data
      Close #f
    Else
      Let data = modDBConnect.exec_query_collection(query)
      cache_ram[tbl] = data
      If file_error Then 
        Return data
      Endif
      For Each i In [".cache", ".cache/easygp", ".cache/easygp" &/ db_version]
        If Not Access(User.Home &/ i) Then
          Try Mkdir User.Home &/ i
          If Error Then 
            Log.ErrorMsg("Can't create directory: " & User.Home &/ i & " (" & Error.Text & ")")
            file_error = True
            Return data
          Endif
        Endif
      Next
      Try f = Open fname For Write Create
      If Error Then 
        Log.ErrorMsg("Can't create file: " & User.Home &/ i & " (" & Error.Text & ")")
        file_error = True
        Return data
      Endif
      Write #f, data As Collection
      Close #f
    Endif
  Endif
  Return data
    
End
