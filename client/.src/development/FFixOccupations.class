' Gambas class file

Public Sub Run() As Boolean
   
   Return Not Me.ShowModal()
   
End

Public Sub Form_Open()
   
   Me.title = "EasyGP Database Maintenance"
   
End

Public Sub btnOK_Click()
   
   Fix_Occupations()
   Me.Close(True)
   
End

Public Sub btnCancel_Click()
   
   Me.Close
   
End

Public Sub Fix_Occupations()
   
   '---------------------------------------------------------------------------
   'I put this in for temporary use as all my occupations were screwed over time
   'as there is some sort of bug in the occupation creation which hopefully
   'is fixed now
   'the following tables are affected:
   'contacts.data_persons
   'contacts.data_employees
   'clin_history.family_members
   'clin_workcover.claims
   'clin_history.occupational_history
   'if no match found between the existing occupation and the lu_occupations_temp
   'table a poup shown to allow user to search the new definitions
   'including allocate referrer type
   'the string is returne to this sub via  Split(const.globalstring, "|")[0] 
   'with  Split(const.globalstring, "|")[1] = the referrer_type 
   '----------------------------------------------------------------------------
   Dim sql As String
   Dim occupations As Collection
   Dim copyoccup As Collection
   Dim copycat As Collection
   Dim done As Boolean
   Dim Form_Verify_Occupation As FAllocateOccupation
   Dim members As Collection
   Dim member As Collection
   Dim old_occupation As String
   Dim R As Result
   Dim R1 As Result
   Dim x As Integer
   Dim occupation As Collection
   Dim new_pk_occupation As String
   Dim new_occupation As CRow
   Dim fk_occupation As Integer
   Dim total_patients_with_occupations As Integer
   Dim total_fk_occupation_zero As Integer
   Dim total_occupation_string_empty As Integer
   Dim total_employees_with_occupations As Integer
   
   '------------------------------------------------
   'Now to fix all the tables containing occupations
   'Load the occupation (text) for existing persons
   '------------------------------------------------
   Inc Application.Busy
   members = modDBConnect.exec_query_collection("Select * from contacts.data_persons")        'get all persons in the database
   For Each member In members
      'not every person has a occupation - eg all imported patients
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its original fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'old bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update  contacts.data_persons set fk_occupation = null WHERE pk=" & member!pk)
            Inc total_fk_occupation_zero
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            If Trim(R!occupation) <> "" And Trim(R!occupation) <> "occupation?" Then
               Print R!occupation
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = Trim(R!occupation)                                               'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     const.globalstring = ""
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtNewOccupation.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & Split(const.globalstring, "|")[0] & "$$")
                        If IsNull(occupation) Then                                  'should never happen with the new occupations table
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = Split(const.globalstring, "|")[0]          'the verified or corrected spelling
                           new_occupation!referrer_type = Split(const.globalstring, "|")[1]
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           ' modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update  contacts.data_persons set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update  contacts.data_persons set fk_occupation = null WHERE pk=" & member!pk)
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   '  modDBConnect.CommitTrans()
   '-----------------------------
   'Now do the same for employees
   '-----------------------------
   members = modDBConnect.exec_query_collection("Select * from contacts.data_employees")
   For Each member In members
      'not every person has a occupation - eg all imported patients
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update  contacts.data_employees set fk_occupation = null WHERE pk=" & member!pk)
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            old_occupation = Trim(R!occupation)
            If Trim(R!occupation) <> "" And Trim(R!occupation) <> "occupation?" Then
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = R!occupation                                                'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     const.globalstring = ""
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtNewOccupation.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & Split(const.globalstring, "|")[0] & "$$")
                        If IsNull(occupation) Then                                  'if not, then
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = Split(const.globalstring, "|")[0]          'the verified or corrected spelling
                           new_occupation!referrer_type = Split(const.globalstring, "|")[1]
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           '  modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update  contacts.data_employees set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update  contacts.data_employees set fk_occupation = null WHERE pk=" & member!pk)
               Inc total_fk_occupation_zero
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   '-------------------------------
   'Now clin_history.Family_Members
   '-------------------------------
   members = modDBConnect.exec_query_collection("Select * from clin_history.family_members")        'get all family_members in the database
   For Each member In members
      'not every person has a occupation - eg all imported patients
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its original fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'old bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update  clin_history.family_members set fk_occupation = null WHERE pk=" & member!pk)
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            If Trim(R!occupation) <> "" And Trim(R!occupation) <> "occupation?" Then
               Print R!occupation
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = Trim(R!occupation)                                               'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     const.globalstring = ""
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtNewOccupation.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & Split(const.globalstring, "|")[0] & "$$")
                        If IsNull(occupation) Then                                  'should never happen with the new occupations table
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = Split(const.globalstring, "|")[0]          'the verified or corrected spelling
                           new_occupation!referrer_type = Split(const.globalstring, "|")[1]
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           '   modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update clin_history.family_members set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update  clin_history.family_members set fk_occupation = null WHERE pk=" & member!pk)
               Inc total_fk_occupation_zero
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   ' modDBConnect.CommitTrans()
   '----------------------------------
   'Now clin_history.Occupationalhistory
   '------------------------------------
   members = modDBConnect.exec_query_collection("Select * from clin_history.occupational_history")        'get all patients with occupations in the database
   For Each member In members
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its original fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'old bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update clin_workcover.claims set fk_occupation = null WHERE pk=" & member!pk)
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            If Trim(R!occupation) <> "" And Trim(R!occupation) <> "occupation?" Then
               Print R!occupation
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = Trim(R!occupation)                                               'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     const.globalstring = ""
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtNewOccupation.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & Split(const.globalstring, "|")[0] & "$$")
                        If IsNull(occupation) Then                                  'should never happen with the new occupations table
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = Split(const.globalstring, "|")[0]          'the verified or corrected spelling
                           new_occupation!referrer_type = Split(const.globalstring, "|")[1]
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           '  modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update clin_history.occupational_history set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                   'occupation field exists but was blank, set fk_occupatin to null
               'this should never happen for this table
               Message.info("Richard this should never happen stop here - clin_history.occupational_history")
               modDBConnect.exec_query("Update clin_workcover.claims set fk_occupation = null WHERE pk=" & member!pk)
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next  
   '-------------------------
   'Now clin_workcover.claims
   '-------------------------
   members = modDBConnect.exec_query_collection("Select * from clin_workcover.claims")        'get all family_members in the database
   For Each member In members
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its original fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'old bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update clin_workcover.claims set fk_occupation = null WHERE pk=" & member!pk)
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            If Trim(R!occupation) <> "" And Trim(R!occupation) <> "occupation?" Then
               Print R!occupation
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = Trim(R!occupation)                                               'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     const.globalstring = ""
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtNewOccupation.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & Split(const.globalstring, "|")[0] & "$$")
                        If IsNull(occupation) Then                                  'should never happen with the new occupations table
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = Split(const.globalstring, "|")[0]          'the verified or corrected spelling
                           new_occupation!referrer_type = Split(const.globalstring, "|")[1]
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           '  modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update clin_workcover.claims set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update clin_workcover.claims set fk_occupation = null WHERE pk=" & member!pk)
               Inc total_fk_occupation_zero
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   '------------------------------------------------------------------------------
   'Now wipe the original common lu_occupations table, copy back the altered data
   'by inserting a cRow in the order of existing table, primary key integrity is
   'maintained. Drop the temp table.
   '------------------------------------------------------------------------------
   modDBConnect.exec_query("Delete from common.lu_occupations")      'Now wipe the common lu_occupations table
   sql = "ALTER SEQUENCE common.lu_occupations_pk_seq "              'reset the index to the start
   sql &= " INCREMENT 1 MINVALUE 1 "
   sql &= "MAXVALUE 9223372036854775807 RESTART 1 "
   sql &= "CACHE 1 NO CYCLE"
   modDBConnect.exec_query(sql)
   sql = "insert into common.lu_occupations (pk, occupation,referrer_type) select * from common.lu_occupations_temp order by pk" 
   modDBConnect.exec_query(sql)
   sql = "Select count(pk) from  common.lu_occupations"
   R = modDBConnect.exec_query(sql)
   sql = "ALTER SEQUENCE common.lu_occupations_pk_seq RESTART " 'reset starting pk
   sql &= R!count + 1
   modDBConnect.exec_query(sql)
   modDBConnect.CommitTrans()
   Dec Application.Busy
   Message.Info("Finished refurbishing the occupation table")
   
End

Public Sub Fix_Occupations_no_referrer_type()
   
   '---------------------------------------------------------------------------
   'I put this in for temporary use as all my occupations were screwed over time
   'as there is some sort of bug in the occupation creation which hopefully
   'is fixed now
   'the following tables are affected:
   'contacts.data_persons
   'contacts.data_employees
   'clin_history.family_members
   'clin_workcover.claims
   'clin_history.occupational_history
   '----------------------------------------------------------------------------
   Dim sql As String
   Dim occupations As Collection
   Dim copyoccup As Collection
   Dim copycat As Collection
   Dim done As Boolean
   Dim Form_Verify_Occupation As FAllocateOccupation
   Dim members As Collection
   Dim member As Collection
   Dim old_occupation As String
   Dim R As Result
   Dim R1 As Result
   Dim x As Integer
   Dim occupation As Collection
   Dim new_pk_occupation As String
   Dim new_occupation As CRow
   Dim fk_occupation As Integer
   Dim total_patients_with_occupations As Integer
   Dim total_fk_occupation_zero As Integer
   Dim total_occupation_string_empty As Integer
   Dim total_employees_with_occupations As Integer
   
   '------------------------------------------------
   'Now to fix all the tables containing occupations
   'Load the occupation (text) for existing persons
   '------------------------------------------------
   Inc Application.Busy
   members = modDBConnect.exec_query_collection("Select * from contacts.data_persons")        'get all persons in the database
   For Each member In members
      'not every person has a occupation - eg all imported patients
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its original fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'old bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update  contacts.data_persons set fk_occupation = null WHERE pk=" & member!pk)
            Inc total_fk_occupation_zero
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            If Trim(R!occupation) <> "" And Trim(R!occupation) <> "occupation?" Then
               Print R!occupation
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = Trim(R!occupation)                                               'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     const.globalstring = ""
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtNewOccupation.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & const.globalstring & "$$")
                        If IsNull(occupation) Then                                  'should never happen with the new occupations table
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = const.globalstring           'the verified or corrected spelling
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           ' modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update  contacts.data_persons set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update  contacts.data_persons set fk_occupation = null WHERE pk=" & member!pk)
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   '  modDBConnect.CommitTrans()
   '-----------------------------
   'Now do the same for employees
   '-----------------------------
   members = modDBConnect.exec_query_collection("Select * from contacts.data_employees")
   For Each member In members
      'not every person has a occupation - eg all imported patients
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update  contacts.data_employees set fk_occupation = null WHERE pk=" & member!pk)
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            old_occupation = Trim(R!occupation)
            If Trim(R!occupation) <> "" And Trim(R!occupation) <> "occupation?" Then
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = R!occupation                                                'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     const.globalstring = ""
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtNewOccupation.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & const.globalstring & "$$")
                        If IsNull(occupation) Then                                  'if not, then
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = const.globalstring           'the verified or corrected spelling
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           '  modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update  contacts.data_employees set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update  contacts.data_employees set fk_occupation = null WHERE pk=" & member!pk)
               Inc total_fk_occupation_zero
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   '-------------------------------
   'Now clin_history.Family_Members
   '-------------------------------
   members = modDBConnect.exec_query_collection("Select * from clin_history.family_members")        'get all family_members in the database
   For Each member In members
      'not every person has a occupation - eg all imported patients
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its original fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'old bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update  clin_history.family_members set fk_occupation = null WHERE pk=" & member!pk)
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            If Trim(R!occupation) <> "" And Trim(R!occupation) <> "occupation?" Then
               Print R!occupation
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = Trim(R!occupation)                                               'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     const.globalstring = ""
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtNewOccupation.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & const.globalstring & "$$")
                        If IsNull(occupation) Then                                  'should never happen with the new occupations table
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = const.globalstring           'the verified or corrected spelling
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           '   modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update clin_history.family_members set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update  clin_history.family_members set fk_occupation = null WHERE pk=" & member!pk)
               Inc total_fk_occupation_zero
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   ' modDBConnect.CommitTrans()
   '----------------------------------
   'Now clin_history.Occupationalhistory
   '------------------------------------
   members = modDBConnect.exec_query_collection("Select * from clin_history.occupational_history")        'get all patients with occupations in the database
   For Each member In members
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its original fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'old bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update clin_workcover.claims set fk_occupation = null WHERE pk=" & member!pk)
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            If Trim(R!occupation) <> "" And Trim(R!occupation) <> "occupation?" Then
               Print R!occupation
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = Trim(R!occupation)                                               'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     const.globalstring = ""
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtNewOccupation.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & const.globalstring & "$$")
                        If IsNull(occupation) Then                                  'should never happen with the new occupations table
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = const.globalstring           'the verified or corrected spelling
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           '  modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update clin_history.occupational_history set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                   'occupation field exists but was blank, set fk_occupatin to null
               'this should never happen for this table
               Message.info("Richard this should never happen stop here - clin_history.occupational_history")
               modDBConnect.exec_query("Update clin_workcover.claims set fk_occupation = null WHERE pk=" & member!pk)
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next  
   '-------------------------
   'Now clin_workcover.claims
   '-------------------------
   members = modDBConnect.exec_query_collection("Select * from clin_workcover.claims")        'get all family_members in the database
   For Each member In members
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its original fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'old bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update clin_workcover.claims set fk_occupation = null WHERE pk=" & member!pk)
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            If Trim(R!occupation) <> "" And Trim(R!occupation) <> "occupation?" Then
               Print R!occupation
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = Trim(R!occupation)                                               'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     const.globalstring = ""
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtNewOccupation.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & const.globalstring & "$$")
                        If IsNull(occupation) Then                                  'should never happen with the new occupations table
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = const.globalstring           'the verified or corrected spelling
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           '  modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update clin_workcover.claims set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update clin_workcover.claims set fk_occupation = null WHERE pk=" & member!pk)
               Inc total_fk_occupation_zero
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   '------------------------------------------------------------------------------
   'Now wipe the original common lu_occupations table, copy back the altered data
   'by inserting a cRow in the order of existing table, primary key integrity is
   'maintained. Drop the temp table.
   '------------------------------------------------------------------------------
   modDBConnect.exec_query("Delete from common.lu_occupations")      'Now wipe the common lu_occupations table
   sql = "ALTER SEQUENCE common.lu_occupations_pk_seq "              'reset the index to the start
   sql &= " INCREMENT 1 MINVALUE 1 "
   sql &= "MAXVALUE 9223372036854775807 RESTART 1 "
   sql &= "CACHE 1 NO CYCLE"
   modDBConnect.exec_query(sql)
   sql = "insert into common.lu_occupations (pk, occupation,referrer_type) select * from common.lu_occupations_temp order by pk" 
   modDBConnect.exec_query(sql)
   sql = "Select count(pk) from  common.lu_occupations"
   R = modDBConnect.exec_query(sql)
   sql = "ALTER SEQUENCE common.lu_occupations_pk_seq RESTART " 'reset starting pk
   sql &= R!count + 1
   modDBConnect.exec_query(sql)
   modDBConnect.CommitTrans()
   Dec Application.Busy
   Message.Info("Finished refurbishing the occupation table")
   
End

Public Sub Fix_Occupations_withabs_occupations()
   
   '---------------------------------------------------------------------------
   'I put this in for temporary use as all my occupations were screwed over time
   'as there is some sort of bug in the occupation creation which I need to find
   '----------------------------------------------------------------------------
   Dim sql As String
   Dim occupations As Collection
   Dim copyoccup As Collection
   Dim copycat As Collection
   Dim done As Boolean
   Dim Form_Verify_Occupation As FAllocateOccupation
   Dim members As Collection
   Dim member As Collection
   Dim old_occupation As String
   Dim R As Result
   Dim R1 As Result
   Dim x As Integer
   Dim occupation As Collection
   Dim new_pk_occupation As String
   Dim new_occupation As CRow
   Dim fk_occupation As Integer
   Dim total_patients_with_occupations As Integer
   Dim total_fk_occupation_zero As Integer
   Dim total_occupation_string_empty As Integer
   Dim total_employees_with_occupations As Integer
   
   ' FAllocateOccupation.ShowModal()
   ' Return
   '--------------------------------------------------
   'Create at tempory table to hold unique occupations
   'Then copy all unique occupations into that table
   '--------------------------------------------------
   ' Try modDBConnect.exec_query("Drop table common.lu_occupations_temp")       'try and drop it may not exist. at least it shouldn't
   '
   ' sql = "create table common.lu_occupations_temp"
   ' "(pk serial primary key,"
   ' "occupation text not null,"
   ' "referrer_type character(1) DEFAULT 'o'::bpchar"
   ' ")"
   ' modDBConnect.exec_query(sql)
   ' sql = "insert into common.lu_occupations_temp (occupation, referrer_type) "
   ' "select distinct lower(occupation) as occupation, referrer_type from common.lu_occupations "
   ' "where occupation <> '' order by occupation"
   ' modDBConnect.exec_query(sql)
   
   'sql = "Select * from common.lu_occupations order by pk"
   '------------------------------------------------
   'Now to fix all the tables containing occupations
   'Load the occupation (text) for existing persons
   '------------------------------------------------
   Inc Application.Busy
   members = modDBConnect.exec_query_collection("Select * from contacts.data_persons")
   For Each member In members
      'not every person has a occupation - eg all imported patients
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'old bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update  contacts.data_persons set fk_occupation = null WHERE pk=" & member!pk)
            Inc total_fk_occupation_zero
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            If R!occupation <> "" And R!occupation <> "occupation?" And R!occupation <> "unknown" Then
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = R!occupation                                                'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_new where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
                  Inc total_patients_with_occupations
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtOccupationNew.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_new where occupation ILIKE $$" & const.globalstring & "$$")
                        If IsNull(occupation) Then                                  'should never happen with the new occupations table
                           Message.Info("Stop, this should never happen")
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = const.globalstring           'the verified or corrected spelling
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           ' modDBConnect.update("update contacts.data_persons set fk_occupation = " & fk_occupation & " WHERE fk_occupation =" & member!fk_occupation
                           modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                        
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_new where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update  contacts.data_persons set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update  contacts.data_persons set fk_occupation = null WHERE pk=" & member!pk)
               Inc total_fk_occupation_zero
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   modDBConnect.CommitTrans()
   '-----------------------------
   'Now do the same for employees
   '-----------------------------
   members = modDBConnect.exec_query_collection("Select * from contacts.data_employees")
   For Each member In members
      'not every person has a occupation - eg all imported patients
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'bug causing missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update  contacts.data_employees set fk_occupation = null WHERE pk=" & member!pk)
            Inc total_fk_occupation_zero
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            old_occupation = Trim(R!occupation)
            If old_occupation <> "" And R!occupation <> "occupation?" And R!occupation <> "unknown" Then
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = R!occupation                                                'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_new where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
                  Inc total_patients_with_occupations
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtOccupationNew.SetFocus()
                        Dec Application.Busy
                        .ShowModal()
                        Inc Application.Busy
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_new where occupation ILIKE $$" & const.globalstring & "$$")
                        If IsNull(occupation) Then                                  'if not, then
                           Message.Info("Stop... this should never happen")
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = const.globalstring           'the verified or corrected spelling
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_new where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update  contacts.data_employees set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update  contacts.data_employees set fk_occupation = null WHERE pk=" & member!pk)
               Inc total_fk_occupation_zero
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   '------------------------------------------------------------------------------
   'Now wipe the original common lu_occupations table, copy back the altered data
   '------------------------------------------------------------------------------
   ' modDBConnect.exec_query("Delete from common.lu_occupations")      'Now wipe the common lu_occupations table
   ' sql = "ALTER SEQUENCE common.lu_occupations_pk_seq "              'reset the index to the start
   ' sql &= " INCREMENT 1 MINVALUE 1 "
   ' sql &= "MAXVALUE 9223372036854775807 RESTART 1 "
   ' sql &= "CACHE 1 NO CYCLE"
   ' modDBConnect.exec_query(sql)
   ' sql = "insert into common.lu_occupations (occupation, referrer_type) "
   ' "select distinct lower(occupation) as occupation, referrer_type from common.lu_occupations_temp "
   ' "order by occupation"
   ' modDBConnect.exec_query(sql)
   modDBConnect.CommitTrans()
   Dec Application.Busy
   Message.Info("Finished refurbishing the occupation table")
   
End

Public Sub Fix_Occupations_old()
   
   '---------------------------------------------------------------------------
   'I put this in for temporary use as all my occupations were screwed over time
   'as there is some sort of bug in the occupation creation which I need to find
   '----------------------------------------------------------------------------
   Dim sql As String
   Dim occupations As Collection
   Dim copyoccup As Collection
   Dim copycat As Collection
   Dim done As Boolean
   Dim Form_Verify_Occupation As FAllocateOccupation
   Dim members As Collection
   Dim member As Collection
   Dim old_occupation As String
   Dim R As Result
   Dim R1 As Result
   Dim x As Integer
   Dim occupation As Collection
   Dim new_pk_occupation As String
   Dim new_occupation As CRow
   Dim fk_occupation As Integer
   Dim total_patients_with_occupations As Integer
   Dim total_fk_occupation_zero As Integer
   Dim total_occupation_string_empty As Integer
   Dim total_employees_with_occupations As Integer
   
   '--------------------------------------------------
   'Create at tempory table to hold unique occupations
   'Then copy all unique occupations into that table
   '--------------------------------------------------
   ' Try modDBConnect.exec_query("Drop table common.lu_occupations_temp")       'try and drop it may not exist. at least it shouldn't
   '
   ' sql = "create table common.lu_occupations_temp"
   ' "(pk serial primary key,"
   ' "occupation text not null,"
   ' "referrer_type character(1) DEFAULT 'o'::bpchar"
   ' ")"
   ' modDBConnect.exec_query(sql)
   ' sql = "insert into common.lu_occupations_temp (occupation, referrer_type) "
   ' "select distinct lower(occupation) as occupation, referrer_type from common.lu_occupations "
   ' "where occupation <> '' order by occupation"
   ' modDBConnect.exec_query(sql)
   
   'sql = "Select * from common.lu_occupations order by pk"
   '------------------------------------------------
   'Now to fix all the tables containing occupations
   'Load the occupation (text) for existing persons
   '------------------------------------------------
   Inc Application.Busy
   members = modDBConnect.exec_query_collection("Select * from contacts.data_persons")
   For Each member In members
      'not every person has a occupation - eg all imported patients
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update  contacts.data_persons set fk_occupation = null WHERE pk=" & member!pk)
            Inc total_fk_occupation_zero
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            If R!occupation <> "" And R!occupation <> "occupation?" And R!occupation <> "unknown" Then
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = R!occupation                                                'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
                  Inc total_patients_with_occupations
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtOccupationNew.SetFocus()
                        .ShowModal()
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & const.globalstring & "$$")
                        If IsNull(occupation) Then                                  'if not, then
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = const.globalstring           'the verified or corrected spelling
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           ' modDBConnect.update("update contacts.data_persons set fk_occupation = " & fk_occupation & " WHERE fk_occupation =" & member!fk_occupation
                           modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                        
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update  contacts.data_persons set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update  contacts.data_persons set fk_occupation = null WHERE pk=" & member!pk)
               Inc total_fk_occupation_zero
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   modDBConnect.CommitTrans()
   '-----------------------------
   'Now do the same for employees
   '-----------------------------
   members = modDBConnect.exec_query_collection("Select * from contacts.data_employees")
   For Each member In members
      'not every person has a occupation - eg all imported patients
      If Not IsNull(member!fk_occupation) Then                                                 'if the person has an occupation
         sql = "Select * from common.lu_occupations where pk = " & member!fk_occupation        'for each person get its fk_occupation
         R = modDBConnect.exec_query(sql)
         If R.count = 0                                                                        'missing fk_occupation set fk_occupation back to null"
            modDBConnect.exec_query("Update  contacts.data_employees set fk_occupation = null WHERE pk=" & member!pk)
            Inc total_fk_occupation_zero
         Else                                                                                  'have a valid key to lu_occupations
            'god knows who put occupation?, unknown or blank strings (my bug) into my database
            old_occupation = Trim(R!occupation)
            If old_occupation <> "" And R!occupation <> "occupation?" And R!occupation <> "unknown" Then
               '---------------------------------------------------------------------------------------------
               'at this point have some sort of valid occupation string which is not '' and not 'occupation?
               '--------------------------------------------------------------------------------------------
               old_occupation = R!occupation                                                'get the old occupation try and match to the temp table
               sql = "Select * from common.lu_occupations_temp where occupation ILIKE $$" & old_occupation & "$$"   'and get new occupation pk
               R = modDBConnect.exec_query(sql)
               If R.count <> 0 Then                                                         'found a record
                  new_pk_occupation = R!pk                                                  'then will update the old table with new pk
                  Inc total_patients_with_occupations
               Else                                                                         'couldn't match the old occuption to the temp table
                  'see if it is a mis-spelling we have recorded
                  R1 = modDBConnect.exec_query("Select * from import_export.lu_misspelt_occupations where misspelt_occupation ILIKE '" & Trim(old_occupation) & "'")
                  If Not R1.count Then                                                     'we have not encountred this before as misspelt
                     With Form_Verify_Occupation = New FAllocateOccupation         'popup the form and show to the user for input
                        .Init(Lower(old_occupation))
                        .txtOccupationNew.SetFocus()
                        .ShowModal()
                     End With
                     If const.globalstring <> "" Then   ' if a string was returned, see if the new spelling is already in out temp table
                        occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & const.globalstring & "$$")
                        If IsNull(occupation) Then                                  'if not, then
                           new_occupation = New CRow                                'save this as a new occupation
                           new_occupation!occupation = const.globalstring           'the verified or corrected spelling
                           new_occupation.Save("common.lu_occupations_temp", "fk_occupation")
                           new_pk_occupation = new_occupation!fk_occupation
                           modDBConnect.CommitTrans()
                        Else
                           new_pk_occupation = occupation!pk
                        End If
                     Endif
                  Else           'we have encountered this mis-spelling so look up the real spelling in occupations
                     occupation = modDBConnect.exec_query_first("Select * from common.lu_occupations_temp where occupation ILIKE $$" & R1!occupation & "$$")
                     new_pk_occupation = occupation!pk
                  End If
               End If
               sql = "Update  contacts.data_employees set fk_occupation = " & new_pk_occupation & " where pk=" & member!pk
               modDBConnect.exec_query(sql)
            Else                  'occupation field exists but was blank, set fk_occupatin to null
               modDBConnect.exec_query("Update  contacts.data_employees set fk_occupation = null WHERE pk=" & member!pk)
               Inc total_fk_occupation_zero
            End If 'end if of not an empty occupation string
         Endif
      Endif
   Next
   '------------------------------------------------------------------------------
   'Now wipe the original common lu_occupations table, copy back the altered data
   '------------------------------------------------------------------------------
   modDBConnect.exec_query("Delete from common.lu_occupations")      'Now wipe the common lu_occupations table
   sql = "ALTER SEQUENCE common.lu_occupations_pk_seq "              'reset the index to the start
   sql &= " INCREMENT 1 MINVALUE 1 "
   sql &= "MAXVALUE 9223372036854775807 RESTART 1 "
   sql &= "CACHE 1 NO CYCLE"
   modDBConnect.exec_query(sql)
   sql = "insert into common.lu_occupations (occupation, referrer_type) "
   "select distinct lower(occupation) as occupation, referrer_type from common.lu_occupations_temp "
   "order by occupation"
   modDBConnect.exec_query(sql)
   modDBConnect.CommitTrans()
   Dec Application.Busy
   Message.Info("Finished refurbishing the occupation table")
   
End

Public Function Occupation_Get(person_occupation As String) As Integer
   '---------------------------------------------------------
   'Attempts to find if the occupation exists
   'if not, pops up a dialog, asks to correct spelling
   'which strips out any extra blanks and returns the string
   'then we have to re-check that this possibly corrected
   'string in which user may have changed the spelling
   'is not already an existing occupation
   '---------------------------------------------------------
   
   Dim occupation As Collection
   Dim new_occupation As CRow
   Dim fk_occupation As Integer
   Dim Form_Verify_Occupation As New FAllocateOccupation
   Dim misspelt_occupation As CRow
   Dim sql As String
   Dim bNotInMisSpeltOccupations As Boolean
   
   person_occupation = modUtil.StripExtraBlanks(person_occupation)
   Dec Application.Busy
   occupation = modCommonDBI.Occupation_Get(person_occupation)    'should only return one if this table has been fixed
   If IsNull(occupation) Then                                     'no match found in common.lu_occupations
      sql = "Select * from import_export.lu_misspelt_occupations " 'see if previously encountered as mis-spelling
      sql &= " WHERE misspelt_occupation ILIKE $$" & person_occupation & "$$"
      occupation = modDBConnect.exec_query_first(sql)             'will return only one
      If Not IsNull(occupation) Then Return occupation!fk_occupation
      bNotInMisSpeltOccupations = True
   Endif
   If IsNull(occupation) Then                                    'ok, no match and not in the misspelt table,
      With Form_Verify_Occupation                                'popup a dialog to get user interaction
         .Init(Lower(person_occupation))
         .txtOccupationNew.SetFocus()
         .ShowModal()
      End With
      If const.globalstring <> "" Then                           'ok - they typed in something
         occupation = modCommonDBI.Occupation_Get(const.globalstring) 'this could be change in spelling, so check again
         If IsNull(occupation) Then                              'give up, save this as new occupation
            new_occupation = New CRow
            new_occupation!occupation = const.globalstring        'the verified or corrected spelling
            new_occupation.Save("common.lu_occupations", "fk_occupation")
            fk_occupation = new_occupation!fk_occupation
         Else
            fk_occupation = occupation!pk
         End If
         If bNotInMisSpeltOccupations Then
            If Lower(person_occupation) <> const.globalstring Then        'user has changed the spelling
               misspelt_occupation = New CRow                      'insert this original into the misspelt occupations table
               misspelt_occupation!misspelt_occupation = person_occupation
               misspelt_occupation!fk_occupation = fk_occupation
               misspelt_occupation.Save("import_export.lu_misspelt_occupations", "fk_lu_misspelt_occupation")
            End If
         Endif
         modDBConnect.CommitTrans()
      Else
         Message.title = "Occupations"
         Message.Info("Inserting new occupation cancelled by the user")
         Return '0
      End If
   Else
      fk_occupation = occupation!pk
   Endif
   Inc Application.Busy
   Return fk_occupation
   
End
