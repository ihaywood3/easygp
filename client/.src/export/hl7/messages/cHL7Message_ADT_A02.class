' Gambas class file

' Copyright (C) 2012-2014 Bernd Brinkmann brinkmann_bernd@gmx.de

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
'
' Represents a ADT_A02 message structure (see chapter ?). This structure contains the following elements:

' 1: MSH(Message header segment)
' 2: EVN( Event type)
' 3: PID(Patient Identification)
' 4: PD1(Patient Demographic)Optional
' 5: PV1(Patient visit)
' 6: PV2(Patient visit - additional information)Optional
' 7: DB1(Disability Segment)Optional repeating
' 8: OBX(Observation segment)Optional repeating

' 
' 

Public Sub CreateHL7Message_ADT_A02(ConsultingDoctor_XCN As CHL7Datatype_XCN, ReceivingFacility_HD As CHL7Datatype_HD, ToTransferPatient_fk_Patient As Variant, ObservationResultStatus As String, Optional Attachments As String[], Optional AdmissionType As String, Optional PatientClass As String)
   '----------------------------------------------------------------------
   'This Function fills all required fields for the message and prints them to a File
   'Variables:
   '-ConsultingDoctor_XCN: Needs to be a object of the cHL7Datatype_XCN class and contains the information of the receiving doctor 
   '-ReceivingFacility_HD: Needs to be a object of the cHL7Datatype_HD class and contains the information of the receiving facility 
   '-ToTransferPatient_fk_Patient: Needs to be an integer and contains the foreign key which gives the information were the data of the to reffering patient is storred in the DB
   '-Attachments: this is a string array and caintains sings such a letter text a pdf or a picture as a sting ( be carefull to convert the attachments into the right format before calling this function
   '-ObservationResultStatus: Needs to be a string which is coded according to the HL7 table 85 
   '-AdmissionType(optional): Needs to be a string which is coded according to the HL7 user table 7
   '-PatientClass(optional): Needs to be a string which is coded according to the HL7 user table 4
   '----------------------------------------------------------------------
   
   ' Variable declaration
   Dim hFile As File 'the file were the result is printed to
   ' declaring all eventually used HL7 segments
   Dim MSH As CHL7Segment_MSH 
   Dim PID As CHL7Segment_PID
   Dim PV1 As CHL7Segment_PV1
   Dim ORC As CHL7Segment_ORC
   Dim OBR As CHL7Segment_OBR
   Dim OBX1 As CHL7Segment_OBX
   Dim EVN As CHL7Segment_EVN
   
   Dim ObservationIdentifier As New CHL7Datatype_CE ' needed for the creation of a OBX segment
   Dim UserInformation As New Collection   ' collection which later contains the information of the current user which is then used as sender
   Dim Patient As Collection ' collection which later ontains the information of the patient which that is going to be referred
   
   UserInformation = modDBConnect.currentUser ' reads the information of the current user out of the DB
   Patient = modContactsDBI.Patient_Get_Using_PK(ToTransferPatient_fk_Patient) ' reads the information of the to referring patient out of the DB 
   
   MSH = New CHL7Segment_MSH(ReceivingFacility_HD, "ADT", "A02") 'creates a new MSH segment with all the underlaying datatypes
   EVN = New CHL7Segment_EVN("A02") 'creates a new EVN segment with all the underlaying datatypes
   PID = New CHL7Segment_PID(Patient) 'creates a new EVN segment with all the underlaying datatypes
   PV1 = New CHL7Segment_PV1(ConsultingDoctor_XCN, AdmissionType, PatientClass) 'creates a new PV1 segment with all the underlaying datatypes
   
   If Attachments <> "" Then ' When a referrel letter is included create and fill the a OBX Segment wiht Data
      ObservationIdentifier.Identifier = "LETTER"
      ObservationIdentifier.Text = "LETTER"
      ObservationIdentifier.NameOfCodingSystem = "L"
      OBX1 = New CHL7Segment_OBX(1, "FT", ObservationIdentifier, ObservationResultStatus, Attachments) ' "FT" means FORMATTED TEXT
   Endif
   
   If Exist(Application.path & "/file.txt") Then  'links the hFile file to a path and ceates the file.txt if the file is not already existing 
      hFile = Open "/home/bernd/svn/" & "/file.txt" For Write Append 
   Else 
      hFile = Open "/home/bernd/svn/" & "/file.txt" For Write Create
   Endif 
   
   If Attachments <> "" Then ' When a referrel letter is included the OBX segment has to be included
      modHL7Emitter.Emit("\r", hFile, [MSH, EVN, PID, PV1, OBX1])    'NOTE: separator here should be \ r, but To be visible In a UNIX terminal use \ n"
   Else
      modHL7Emitter.Emit("\r", hFile, [MSH, EVN, PID, PV1])   'NOTE: separator here should be \ r, but To be visible In a UNIX terminal use \ n
   Endif
   Print #hFile, "\r"; 'prints a carriage return at the end of the last segment because every segment mussed be followed by one
   
End
