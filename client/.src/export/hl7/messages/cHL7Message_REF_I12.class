' Gambas class file

' Copyright (C) 2012-2013 Bernd Brinkmann brinkmann_bernd@gmx.de

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
'
' Represents a REF_I12 message structure (see chapter ?). This structure contains the following elements:

' 1: MSH(Message header segment)
' 2: RF1(Referral Information Segment)
' 3: PRD(Provider data segment)repeting
' 3: PID(Patient Identification)
' 4: OBR( Observation result segment)Optional
' 5: OBX(Observation segment)Optional repeating (there can be more than one acording to the number of referral letters, pdfś or jpgś taht are attadched to this hl7 message
'

Public fname As String ' name of the file
Public fpath As String ' full path (in temp dir)
Public message_id As String

Public Sub CreateHL7Message_REF_I12(ReferredToProvider As Collection, Patient As Collection, comms As Collection, Attachments As String[], ReferralDisposition As String, ReferralReason As String, Optional ReferralPriority As String = "R", Optional ReferralType As String = "GRF", Optional ReferralStatus As String = "P", Optional ObservationResultStatus As String, Optional ReferralDate As CHL7Datatype_TS, Optional ConsultingProvider As Collection, Optional PrimaryCareProvider As Collection, Optional ReceivingFacility_HD As CHL7Datatype_HD, Optional PlacerOrderNumber As CHL7Datatype_EI, Optional AdmissionType As String)
   '----------------------------------------------------------------------
   'This Function fills all required fields for the message and prints them to a File
   'populates public globals with message ID and path of temp directory file written to with HL7 data
   'Variables:
   '- ReferredToProvider: Needs to be a collection and contains the information of the Receiving doctor
   '- ToTransferPatient_fk_Patient: Needs to be an integer and contains the foreign key which gives the information were the data of the to reffering patient is storred in the DB
   '- ReferralStatus is a String and needs to be coded according to the hl7 table 0283 Accepted = 'A' Pending = 'P' Rejected = 'R' Expired = 'E'
   '- ReferralPriority is a string and needs to be coded according to the hl7 table 0280 (conditional) With highest priority = 'S' As soon as possible = 'A' Urgent = 'U' Early = 'E' Routine = 'R'
   '- ReferralType is a hl7 Datatype sting and needs to be coded according to the hl7 table 0281 (conditional) General referral = ‘GRF’Discharge referral = ‘DRF’Shared care update = ‘SCU’Notification = ‘NOT’Shared EHR update = ‘SEU’Decision support system update =‘DSU’
   '- ReferralDisposition is a string and needs to be coded according to hl7 table 0282 and says what is expected of the receiver (Optional) (Send written report = ‘WR’ Return patient after evaluation =‘RP’Assume management = ‘AM’Second opinion = ‘SO’ NOTE: ‘SO’ = Provide second, third Or other opinion. Additional Australian table values: Discharge summary = ‘DS’ Update care plan = ‘UCP’ Update health record = ‘UHR’ Case conference = ‘CC’ Notification – no further action =‘FI’)
   '- ReferralReason is a string and must be coded according to the hl7 table 0336 (Second opinion = ‘S’ Patient preference = ‘P’ Provider ordered = ‘O’ Work load = ‘W’ 
   '- Attachments(optional): this is a string array and caintains sings such a letter text a pdf or a picture as a sting ( be carefull to convert the attachments into the right format before calling this function
   '- ObservationResultStatus(Optional): Needs to be a string which is coded according to the HL7 table 85 
   '- ConsultingProvider(Optional): Needs to be a collection and contains the information of the consulted doctor 
   '- PrimaryCareProvider(Optional): Needs to be a collection and contains the information of the primary doctor of the patient
   '- ReceivingFacility_HD(optional): Needs to be a object of the cHL7Datatype_HD class and contains the information of the receiving facility 
   '- OriginatingReferralIdentifier(Optional) is a hl7 EI datatype and contains the global universal identifyer of this referral message (GUID) it can be passed to this function if this is a answer to a previos referral message otherwise a GUID will be generated from this function
   '- PlacerOrderNumber(Opional) is a chl7datatype_EI  and in case this is a answer to a referral the .Identifyer value has to contain the filler order number of the first referrel message
   '- AdmissionType(optional): Needs to be a string which is coded according to the HL7 user table 7
   '----------------------------------------------------------------------
   ' declaring all eventually used HL7 segments
   Dim MSH As CHL7Segment_MSH 
   Dim PID As CHL7Segment_PID
   Dim PV1 As CHL7Segment_PV1
   Dim ORC As CHL7Segment_ORC
   Dim OBR As CHL7Segment_OBR
   Dim OBX As CHL7Segment_OBX
   Dim RF1 As CHL7Segment_RF1
   Dim PRD1 As CHL7segment_PRD
   Dim PRD2 As CHL7segment_PRD
   Dim PRD3 As CHL7segment_PRD
   Dim PRD4 As CHL7segment_PRD
   
   Dim ObjectArray As New Variant[]
   Dim FillerOrderNumber_EI As New CHL7Datatype_EI
   Dim PlacerOrderNumber_EI As New CHL7Datatype_EI
   Dim ObservationIdentifier_CE As New CHL7Datatype_CE ' needed for the creation of a OBX segment
   Dim ReferralStatus_CE As New CHL7Datatype_CE
   Dim ReferralDisposition_CE As New CHL7Datatype_CE
   Dim ReferralReason_CE As New CHL7Datatype_CE
   Dim UserInformation As New Collection   ' collection which later contains the information of the current user which is then used as sender
   Dim MessageGUID_EI As New CHL7Datatype_EI
   Dim ReferralPriority_CE As New CHL7Datatype_CE
   Dim ReferralType_CE As New CHL7Datatype_CE
   Dim ProviderRole_CE As New CHL7Datatype_CE
   Dim UniversalServiceID_CE As New CHL7Datatype_CE
   Dim OriginatingReferralIdentifier_EI As New CHL7Datatype_EI
   Dim Attachment As String
   Dim sLine As String
   Dim TempString As String
   Dim TempCollection As Collection
   Dim hFile As File
   
   
   UserInformation = modDBConnect.currentUser ' reads the information of the current user out of the DB

   Select ReferralStatus 
      Case "A"
         ReferralStatus_CE.Text = "Accepted"
         ReferralStatus_CE.Identifier = ReferralStatus
         ReferralStatus_CE.NameOfCodingSystem = "HL70283"
      Case "P"
         ReferralStatus_CE.Text = "Pending"
         ReferralStatus_CE.Identifier = ReferralStatus
         ReferralStatus_CE.NameOfCodingSystem = "HL70283"
      Case "R"
         ReferralStatus_CE.Text = "Rejected"
         ReferralStatus_CE.Identifier = ReferralStatus
         ReferralStatus_CE.NameOfCodingSystem = "HL70283"
      Case "E"
         ReferralStatus_CE.Text = "Expired"
         ReferralStatus_CE.Identifier = ReferralStatus
         ReferralStatus_CE.NameOfCodingSystem = "HL70283"
   End Select
   
   Select ReferralType
      Case "GRF"
         ReferralType_CE.Text = "General referral"
         ReferralType_CE.Identifier = ReferralType
         ReferralType_CE.NameOfCodingSystem = "HL70281"
      Case "DRF"
         ReferralType_CE.Text = "Discharge referral"
         ReferralType_CE.Identifier = ReferralType
         ReferralType_CE.NameOfCodingSystem = "HL70281"
      Case "SCU"
         ReferralType_CE.Text = "Shared care update"
         ReferralType_CE.Identifier = ReferralType
         ReferralType_CE.NameOfCodingSystem = "HL70281"
      Case "NOT"
         ReferralType_CE.Text = "Notification"
         ReferralType_CE.Identifier = ReferralType
         ReferralType_CE.NameOfCodingSystem = "HL70281"
      Case "SEU"
         ReferralType_CE.Text = "Shared EHR update"
         ReferralType_CE.Identifier = ReferralType
         ReferralType_CE.NameOfCodingSystem = "HL70281"
      Case "DSU"
         ReferralType_CE.Text = "Decision support system update"
         ReferralType_CE.Identifier = ReferralType
         ReferralType_CE.NameOfCodingSystem = "HL70281"
   End Select
   
   Select Case ReferralPriority 
      Case "S"
         ReferralPriority_CE.Text = "With highest priority"
         ReferralPriority_CE.Identifier = ReferralPriority
         ReferralPriority_CE.NameOfCodingSystem = "HL70280"
      Case "A"
         ReferralPriority_CE.Text = "As soon as possible"
         ReferralPriority_CE.Identifier = ReferralPriority
         ReferralPriority_CE.NameOfCodingSystem = "HL70280"
      Case "U"
         ReferralPriority_CE.Text = "Urgent"
         ReferralPriority_CE.Identifier = ReferralPriority
         ReferralPriority_CE.NameOfCodingSystem = "HL70280"
      Case "E"
         ReferralPriority_CE.Text = "Early"
         ReferralPriority_CE.Identifier = ReferralPriority
         ReferralPriority_CE.NameOfCodingSystem = "HL70280"
      Case "R"
         ReferralPriority_CE.Text = "Routine"
         ReferralPriority_CE.Identifier = ReferralPriority
         ReferralPriority_CE.NameOfCodingSystem = "HL70280"
   End Select
   
   Select ReferralDisposition
      Case "WR"
         ReferralDisposition_CE.Text = "Send written report"
         ReferralDisposition_CE.Identifier = ReferralDisposition
         ReferralDisposition_CE.NameOfCodingSystem = "HL70282"
      Case "RP"
         ReferralDisposition_CE.Text = "Return patient after evaluation"
         ReferralDisposition_CE.Identifier = ReferralDisposition
         ReferralDisposition_CE.NameOfCodingSystem = "HL70282"
      Case "AM"
         ReferralDisposition_CE.Text = "Assume management"
         ReferralDisposition_CE.Identifier = ReferralDisposition
         ReferralDisposition_CE.NameOfCodingSystem = "HL70282"
      Case "SO"
         ReferralDisposition_CE.Text = "Second opinion"
         ReferralDisposition_CE.Identifier = ReferralDisposition
         ReferralDisposition_CE.NameOfCodingSystem = "HL70282"
      Case "DS"
         ReferralDisposition_CE.Text = "Discharge summary"
         ReferralDisposition_CE.Identifier = ReferralDisposition
         ReferralDisposition_CE.NameOfCodingSystem = "HL70282"
      Case "UCP"
         ReferralDisposition_CE.Text = "Update care plan"
         ReferralDisposition_CE.Identifier = ReferralDisposition
         ReferralDisposition_CE.NameOfCodingSystem = "HL70282"
      Case "UHR"
         ReferralDisposition_CE.Text = "Update health record"
         ReferralDisposition_CE.Identifier = ReferralDisposition
         ReferralDisposition_CE.NameOfCodingSystem = "HL70282"
      Case "CC"
         ReferralDisposition_CE.Text = "Case conference"
         ReferralDisposition_CE.Identifier = ReferralDisposition
         ReferralDisposition_CE.NameOfCodingSystem = "HL70282"
      Case "FI"
         ReferralDisposition_CE.Text = "Notification – no further action"
         ReferralDisposition_CE.Identifier = ReferralDisposition
         ReferralDisposition_CE.NameOfCodingSystem = "HL70282"
   End Select
   
   Select ReferralReason
      Case "S"
         ReferralReason_CE.Text = "Second opinion"
         ReferralReason_CE.Identifier = ReferralReason
         ReferralReason_CE.NameOfCodingSystem = "HL70336"
      Case "P"
         ReferralReason_CE.Text = "Patient preference"
         ReferralReason_CE.Identifier = ReferralReason
         ReferralReason_CE.NameOfCodingSystem = "HL70336"
      Case "O"
         ReferralReason_CE.Text = "Provider ordered"
         ReferralReason_CE.Identifier = ReferralReason
         ReferralReason_CE.NameOfCodingSystem = "HL70336"
      Case "W"
         ReferralReason_CE.Text = "Work load"
         ReferralReason_CE.Identifier = ReferralReason
         ReferralReason_CE.NameOfCodingSystem = "HL70336"
   End Select
   
   MSH = New CHL7Segment_MSH("REF", "I12", ReceivingFacility_HD) 'creates a new MSH segment with all the underlaying datatypes
   ObjectArray.Add(MSH)

   message_id = MSH.MessageControlID_ST_Req
   fname = message_id & ".ref"
   fpath = modUtil.Get_Temp_Dir() &/ fname 
   hFile = Open fpath For Write Create
   
   OriginatingReferralIdentifier_EI.Identifier = message_id 'unique message identifyer
   OriginatingReferralIdentifier_EI.AssigningAuthority.UniversalID = UserInformation["organisation"] 'here a unique identifyer of ordering facility has to be inserted
   OriginatingReferralIdentifier_EI.AssigningAuthority.ApplicationIdentifier = "EasyGP"
   OriginatingReferralIdentifier_EI.AssigningAuthority.UniversalIDType = "ID"
   ' fills the rest of the referralstatus according to the parameter 
     
   RF1 = New CHL7Segment_RF1(ReferralStatus_CE, OriginatingReferralIdentifier_EI, ReferralPriority_CE, ReferralType_CE, ReferralDisposition_CE, ReferralReason_CE) 'creates a new RF1 segment with all the underlaying datatypes
   ObjectArray.Add(RF1)
   
   PRD1 = New CHL7Segment_PRD("RP", modDBConnect.currentUser) 'creates a new EVN segment with all the underlaying datatypes
   ObjectArray.Add(PRD1)
   
   PRD2 = New CHL7Segment_PRD("RT", ReferredToProvider) 'creates a new EVN segment with all the underlaying datatypes
   ObjectArray.Add(PRD2)
   
   If Not IsNull(ConsultingProvider) Then
      PRD3 = New CHL7Segment_PRD("CP", ConsultingProvider) 'creates a new EVN segment with all the underlaying datatypes
      ObjectArray.Add(PRD3)
   Endif
   
   If Not IsNull(PrimaryCareProvider) Then
      PRD4 = New CHL7Segment_PRD("PP", PrimaryCareProvider) 'creates a new EVN segment with all the underlaying datatypes
      ObjectArray.Add(PRD4)
   Endif
   
   PID = New CHL7Segment_PID(Patient, comms) 'creates a new PID segment with all the underlaying datatypes
   ObjectArray.Add(PID)
   
   UniversalServiceID_CE.Identifier = "R"
   UniversalServiceID_CE.Text = "Referral"
   UniversalServiceID_CE.NameOfCodingSystem = "EasyGP"
   FillerOrderNumber_EI.Identifier = OriginatingReferralIdentifier_EI.Identifier
   
   If IsNull(PlacerOrderNumber) Then 
      OBR = New CHL7Segment_OBR(1, UniversalServiceID_CE, OriginatingReferralIdentifier_EI)
   Else
      OBR = New CHL7Segment_OBR(1, UniversalServiceID_CE, OriginatingReferralIdentifier_EI, PlacerOrderNumber)
   Endif
   ObjectArray.Add(OBR)
   
   ' OBX ||FT|HTML^Display format in HTML^AUSPDI||...
   ' OBX ||FT|XML^Display format in XML^AUSPDI||...
   ' OBX ||FT|TXT^Display format in text^AUSPDI||...
   ' OBX ||ED|RTF^Display format in RTF^AUSPDI||...
   ' OBX ||ED|PDF^Display format in PDF^AUSPDI||...*
   ' OBX ||ED|JPG^Display format in JPG^AUSPDI||...*
   ' OBX ||ED|TIFF^Display format in TIFF^AUSPDI||...*
   ' * NOTE: Special Format required For OBX - 5 when using ED data type.
   ' 
   For Each Attachment In Attachments
      If Left$(attachment) = "/" Then
            TempString = File.Load(attachment)
            Select Case Upper$(Right$(attachment, 3))
               Case "TXT"
                  ObservationIdentifier_CE.Identifier = "TXT"
                  ObservationIdentifier_CE.Text = "Display format in text"
                  ObservationIdentifier_CE.NameOfCodingSystem = "AUSPDI"
                  OBX = New CHL7Segment_OBX(1, "FT", ObservationIdentifier_CE, ObservationResultStatus, TempString) ' "FT" means FORMATTED TEXT
                  
               Case "RTF"
                  
                  ObservationIdentifier_CE.Identifier = "RTF"
                  ObservationIdentifier_CE.Text = "Display format in RTF"
                  ObservationIdentifier_CE.NameOfCodingSystem = "AUSPDI"
                  OBX = New CHL7Segment_OBX(1, "ED", ObservationIdentifier_CE, ObservationResultStatus, Base64(TempString)) 
                  
               Case "PDF"
                  
                  ObservationIdentifier_CE.Identifier = "PDF"
                  ObservationIdentifier_CE.Text = "Display format in PDF"
                  ObservationIdentifier_CE.NameOfCodingSystem = "AUSPDI"
                  OBX = New CHL7Segment_OBX(1, "ED", ObservationIdentifier_CE, ObservationResultStatus, Base64(TempString)) 
                  
               Case "JPG"
                  
                  ObservationIdentifier_CE.Identifier = "JPG"
                  ObservationIdentifier_CE.Text = "Display format in JPG"
                  ObservationIdentifier_CE.NameOfCodingSystem = "AUSPDI"
                  OBX = New CHL7Segment_OBX(1, "ED", ObservationIdentifier_CE, ObservationResultStatus, Base64(TempString)) 
               Case Else
                 Error.Raise("unrecognised file type " & Attachment)
            End Select
            ObjectArray.Add(OBX)
      Else
         ObservationIdentifier_CE.Identifier = "Txt"
         ObservationIdentifier_CE.Text = "Display format in text"
         ObservationIdentifier_CE.NameOfCodingSystem = "AUSPDI"
         OBX = New CHL7Segment_OBX(1, "FT", ObservationIdentifier_CE, ObservationResultStatus, Attachment) ' "FT" means FORMATTED TEXT
         ObjectArray.Add(OBX)
      Endif 
   Next
   modHL7Emitter.Emit("\r", hFile, ObjectArray)   'NOTE: separator here should be \ r, but To be visible In a UNIX terminal use \ n
   Close #hFile

End
