' Gambas module file

' Gambas class file

' Gambas module file

' Copyright (C) 2012 Ian Haywood <ian@haywood.id.au>

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
' an helper module for spitting out HL7 in the correct format


' emit a HL7 object
' takes three parameters
' - sep: the separator: "\r" for segments, "|" for fields, "^" for field components, "&" for subcomponents
' - dest: the Gambas Stream to send to, can be a File, network socket, UNIX pipe, and so on
' - data: the data as an array (use []), array elements can be Strings, Null, Integers, or other HL7 objects so long
' as they have an .Emit() method that takes the dest stream as a single parameter 
' (see cHL7Datatype_DT for the good example)
' when testing use File.Out as the stream: will send the HL7 to the console
Public Function Emit(sep As String, dest As Stream, data As Variant[])
   
   Dim i As Integer
   Dim s As String
   Dim d As Date
   
   For i = 0 To data.Max
      Select Case TypeOf(data[i])
         Case gb.String
           s = CString(data[i])
           ' escape HL7's magic characters as required
           s = Replace$(s, "<B>", "//h//", gb.IgnoreCase) ' highlight
           s = Replace$(s, "</B>", "//n//", gb.IgnoreCase) ' normal text
           s = Replace$(s, "\\", "\\E\\")
           s = Replace$(s, "^", "\\S\\")
           s = Replace$(s, "|", "\\F\\")
           s = Replace$(s, "\n", "\\.br\\")
           s = Replace$(s, "\r", "") ' shouldn't ever happen but will cause total havoc if one of these sneaks in
           s = Replace$(s, "<BR>", "\\.br\\", gb.IgnoreCase)
           s = Replace$(s, "&gt;", ">")
           s = Replace$(s, "&lt;", "<")
           s = Replace$(s, "&", "\\T\\")
           
           Print #dest, s;
         Case gb.Integer
           Print #dest, CInt(data[i])

         Case gb.Null
            ' do nothing      
         Case gb.Object
            Object.Call(data[i], "Emit", [dest])
      End Select
      If i < data.Max Then
         Print #dest, sep;
      Endif
   Next
End
