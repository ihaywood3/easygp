' Gambas class file

' 
' Copyright (C) Benoît Minisini, Fabien Bodard, Charlie Reinl, José Luis Redrejo, Robert Rowe
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 2 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor, 
' Boston, MA  02110-1301  USA
'
' Adapted for use with EasyGP with minor modifications

Private $sIcon As String
Private $sSize As String
Private $bNoStock As Boolean


Public Sub Run(sIcon As String, Optional bNoStock As Boolean) As String
  
  $sIcon = sIcon
  If Not Me.ShowModal() Then Return
  Return $sIcon
  
End


Public Sub Form_Open()

  Dim iPos As Integer

  Inc Application.Busy
  
  Settings.Read(Me)

  fchIcon.Filter = ["*.png,*.jpg,*.jpeg,*.xpm,*.gif", ("Image files")]
  'fchIcon.Root = Project.Dir
   fchIcon.Root = modUtil.Find_File("icons")
  cmbSize.List = ["small", "medium", "large", "huge", "16", "22", "32", "48", "64", "96", "128"]
  
  tabIcon[1].Visible = Not $bNoStock
  
  If $sIcon Begins "icon:/" Then 
    $sIcon = Mid$($sIcon, 7)
    iPos = InStr($sIcon, "/")
    icwStock.Clear
    If iPos Then 
      SetSize(Left$($sIcon, iPos - 1))
    Else 
      SetSize(Settings["FSelectIcon/Size", "small"])
    Endif
    $sIcon = Mid$($sIcon, iPos + 1)
    If icwStock.Exist($sIcon) Then
      icwStock[$sIcon].Selected = True
      icwStock[$sIcon].EnsureVisible
    Endif
    tabIcon.Index = 1 
  Else If $sIcon Then
   ' fchIcon.SelectedPath = Project.Dir &/ $sIcon
     fchIcon.SelectedPath = fchIcon.Root &/ $sIcon
    tabIcon.Index = 0
  Endif

  If Not $sSize Then SetSize(Settings["FSelectIcon/Size", "32"])
  
  Dec Application.Busy
  
End


Public Sub btnCancel_Click()

  Me.Close

End

Public Sub cmbSize_Activate()

  SetSize(cmbSize.Text)

End

Public Sub cmbSize_Click()

  SetSize(cmbSize.Text)

End

Private Sub RefreshStock()
  
  Dim sIcon As String
  Dim sKey As Variant
  
  Inc Application.Busy

  sKey = icwStock.Key
  icwStock.Clear

  For Each sIcon In Stock.List
    icwStock.Add(sIcon, sIcon, Stock[$sSize &/ sIcon])
  Next
  
  If sKey Then 
    icwStock[sKey].Selected = True
    icwStock[sKey].EnsureVisible
  Endif
  
  Dec Application.Busy
  
End

Private Sub SetSize(sSize As String) As Boolean

  Dim iSize As Integer
  
  sSize = LCase(sSize)
  Try iSize = CInt(sSize)
  If Error Then 
    If Not ["small", "medium", "large", "huge"].Exist(sSize) Then 
      cmbSize.Text = $sSize
      Return True
    Endif
  Else 
    If iSize < 8 Or iSize > 256 Then 
      cmbSize.Text = $sSize
      Return True
    Endif
    sSize = CStr(iSize)
  Endif
  
  $sSize = sSize
  Object.Lock(cmbSize)
  cmbSize.Text = sSize
  Object.Unlock(cmbSize)
  RefreshStock
  
End


Public Sub btnOK_Click()

  Select Case tabIcon.Index
  
    Case 0
      $sIcon = Mid$(fchIcon.SelectedPath, Len(fchIcon.Root) + 1)
      If Left($sIcon) = "/" Then $sIcon = Mid$($sIcon, 2)
  
    Case 1
      $sIcon = "icon:/" &/ $sSize &/ icwStock.Key
      Settings["FSelectIcon/Size"] = $sSize
      
  End Select 
  
  If Not $sIcon Then Return

  Me.Close(True)

End

Public Sub icwStock_Activate()

  btnOK.Value = True

End

Public Sub fchIcon_Activate()

  btnOK.Value = True

End

Public Sub Form_Close()

  Settings.Write(Me)  

End

Public Sub tabIcon_Click()

  If tabIcon.Index = 1 Then 
    icwStock.SetFocus
  Endif 

End
