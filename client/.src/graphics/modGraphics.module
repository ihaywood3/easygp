' Gambas module file

Public Sub Add_Border(bHasBorder As Boolean, sPath As String) As String 
   '-------------------
   'Adds a black border
   '-------------------
   If Not bHasBorder Then 
      Inc Application.Busy
      Shell "convert " & sPath & " -bordercolor Black -border 2x2 /tmp/border.png" Wait
      Dec Application.Busy
      Return "/tmp/border.png"
  ' Else
   '   Picture_Update(Picturebox1.tag) 'fixme dosn't reload a brightness modified picture
  End If 
End


Public Sub Resize(orig_height As Integer, orig_width As Integer, resize_factor As Integer, sPath As String, bHasBorder As Boolean) As String 
   '-------------------------------------------------
   'Re-size the image, minimum size = 10% of original
   'if already has a border, put one back on.
   '-------------------------------------------------
   Dim new_h As Integer
   Dim new_w As Integer
 
   New_H = Max(orig_height / 10, orig_height / (1000 / resize_factor))
   New_W = Max(orig_width / 10, orig_width / (1000 / resize_factor))
   Inc Application.Busy
   Shell "convert " & sPath & " -resize " & Str(New_H) & "x" & Str(New_W) & " /tmp/modified.png" Wait
   Dec Application.Busy
   If bHasBorder Then
      Return Add_Border(False, "/tmp/modified.png") 
   Else
       Return "/tmp/modified.png"
   End If   
  
End

Public Sub Brighten(orig_height As Integer, orig_width As Integer, resize_factor As Integer, brightness As Integer, sPath As String, bHasBorder As Boolean) As String 
   '-------------------------------------------------------------
   'Lighten/Darken currently no rationale for the slider settings
   '-------------------------------------------------------------
    Inc Application.Busy
    sPath = Resize(orig_height, orig_height, resize_factor, sPath, bHasBorder)
    Shell "convert " & sPath & " -modulate " & Str(brightness) & " /tmp/brightness_modified.png" Wait
    Dec Application.Busy
    If bHasBorder Then
      Return Add_Border(False, "/tmp/brightness_modified.png") 
   Else
     Return "/tmp/brightness_modified.png" 
   End If   
  
End 

Public Sub Blob_Convert_To_Picture(blob As Variant) As Collection
   'Given blob data, return a picture and path
   Dim Tempfile As String 
   Dim p As Picture
   Dim C As New Collection
   
   Tempfile = Temp() & ".png"
   
   If blob Then
       File.Save(Tempfile, blob.data)

       Try P = Picture.Load(tempfile)
       If Not Error Then
          C!path = Tempfile
          c!picture = P
          Return C
       End If  
   End If   
End
