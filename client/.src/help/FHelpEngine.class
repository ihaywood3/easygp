' Gambas class file

' Copyright (C) 2008-2013 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
' A basic help browers for our compiled help files
' ---------------------------------------------------------------------
' TODO's    - lots actually this is fairly embryonic. Put up your hands
' ---------------------------------------------------------------------
Private basedir As String
Private index As Object[]
Private StartPage As FHelpBrowser
Private DialogAboutHelpBrowser As FAbout
Public iZoom As Integer
Public default_Zoom As Integer
Private obs As Observer

Public Sub _new()
   
   basedir = modUtil.Find_File("help")
   default_Zoom = 1
   StartPage = New FHelpBrowser
  obs = New Observer(Workspace1) As "HelpBrowser"
  
End

Public Sub btnZoomIn_Click()
   
End

Public Sub btnZoomOut_Click()
   
End

Public Sub btnZoomNormal_Click()
   
   '  Startpage.Webview1.GetView().Zoom = 1
   
End

Public Sub Webview1_ZoomIn()
   
   'Startpage.Webview1.GetView().Zoom = Round(GetView().Zoom * 1.25, -2)
   ' Dim ipercent As Integer
   ' Inc izoom
   ' izoom = Min(iZoom, 6)
   ' default_zoom = const.zoom[izoom]
   ' StartPage.Webview1.Zoom = default_zoom
   
End

Public Sub Webview1_ZoomOut()
   'Startpage.Webview1.GetView().Zoom = Round(GetView().Zoom / 1.25, -2)
   ' Dim ipercent As Integer
   ' Dec iZoom
   ' iZoom = Max(iZoom, 0)
   ' default_zoom = const.zoom[izoom]
   ' StartPage.Webview1.Zoom = default_zoom
   
End 

Public Sub Settings_Save()
   
   Settings["FHelpEngine/HSplit_Main"] = HSplit_Main.Layout
   Try Settings["FHelpEngine/default_zoom"] = StartPage.Webview1.Zoom 'do not remove StartPage can be null
   
End

Private Sub Settings_Load()
   
   HSplit_Main.Layout = Settings["Help/HSplit_Main", modUtil.HSplit([387, 1324])]
   default_Zoom = Settings["Help/default_zoom", 1.0]
   If default_Zoom < 1 Then default_Zoom = 1
   StartPage.Webview1.Zoom = default_Zoom 
   
End

Public Sub Form_Open()
   
   Try Settings_Load()
   Refresh()
   
End

Public Sub Form_Close()
   
   Settings_Save()
   
End

Public Sub Refresh()
   ' read in tree 
   
   Dim fd As Stream
   Dim sLine As String
   Dim record As String[]
   Dim picClosedBook As Picture
   Dim picPage As Picture
   
   picClosedBook = Picture["icons/16/closed_book1616.png"]
   picPage = Picture["icons/16/page_1616.png"]
   
   TreeView1.Clear()
   Try fd = Open basedir &/ "toc.txt" For Input
   If Error Then
      MissingHelp()
      If IsNull(StartPage) Then
         StartPage = New FHelpBrowser
      Endif
      Workspace1.Add(StartPage)
      Return
   End If
   While Not Eof(fd)
      Line Input #fd, sLine
      record = Split(sLine, "\t")
      If record[2] = "root"
         TreeView1.Add(record[0], record[1], picClosedBook)
         
      Else
         Try TreeView1.Add(record[0], record[1], picPage, record[2])
      Endif   
   Wend
   ' read index
   Close fd
   fd = Open basedir &/ "index.txt" For Input
   index = New Object[]
   While Not Eof(fd)
      Line Input #fd, sLine
      record = Split(sLine, "")
      index.Add(record)
   Wend
   Workspace1.Add(StartPage)
   
End

Public Sub MissingHelp()
   
   Dim s As String
   
   s = "<HTML><BODY><H1>Aaargh!</H1>"
   "<P>The help files cannot be found on the local system.</P>"
   "<P>Please ask your admin to check the package <TT>easygp-doc></TT> is installed on all clients.</P>"
   "</BODY></HTML>"
   StartPage.Webview1.HTML = s
   StartPage.Webview1.Zoom = default_Zoom
   StartPage.text = "missing help"
   
End

Public Sub TreeView1_Select()
   '--------------------------------------------
   'Display the help file for the selected topic
   '--------------------------------------------
   
   If Not IsNull(TreeView1.Key)
      Print Workspace1.ActiveWindow
      If IsNull(Workspace1.ActiveWindow) Then
          StartPage = New FHelpBrowser
          Workspace1.Add(StartPage)
      Endif
      StartPage.Webview1.url = basedir &/ TreeView1.Key & ".html"
      StartPage.Webview1.Zoom = default_Zoom
      StartPage.text = TreeView1.Key & ".html"
   Endif
   
End

Public Sub SearchBox_Change()
   
   Dim i As String[]
   
   IndexList.Clear
   If Len(SearchBox.Text) > 2 Then
      For Each i In index
         If SearchBox.Text = Left$(i[0], Len(SearchBox.Text)) Then
            IndexList.Add(i[1] & ":" & i[0], i[0] & " (" & i[1] & ")")
         Endif
      Next
   Endif
   
End

Public Sub IndexList_Select()
   
   Dim i As String[]
   
   If Not IsNull(IndexList.Key) Then
      i = Split(IndexList.Key, ":")
      StartPage.Webview1.url = basedir &/ i[0] & ".html"
      StartPage.text = i[0] & ".html"
   Endif
   
End

Public Sub Buttons_Click()
   
   Select Case Last.tag
      Case "add index"
         
      Case "delete index"
         
      Case "edit index"
         
      Case "add bookmark"
         
      Case "edit bookmark"
         
      Case "delete bookmark"
         
   End Select
   
End

Public Sub toolbuttons_Click()
   
   Select Case Last.tag
      Case "open file"
         
      Case "print"
         
      Case "home"
         
      Case "back"
         
      Case "foreward"
         
      Case "locate"
         
      Case "zoom in"
         Try StartPage.Webview1.Zoom = Round(StartPage.Webview1.Zoom * 1.25, -2) 'the page may not exist
      Case "zoom out"
         Try StartPage.Webview1.Zoom = Round(StartPage.Webview1.Zoom / 1.25, -2)  'the page may not exist
      Case "view html"
         
      Case "bookmark"
         
      Case "previous page"
         
      Case "next page"
         
      Case "help"
         
      Case "search"
         
   End Select
   
End

Public Sub mnuEasyGPHelp_click()
   
   Select Case Last.tag
      Case "open file"
         
      Case "print"
         
      Case "quit"
         
      Case "copy"
         
      Case "select all"
         
      Case "view"
         
      Case "increase font"
         
      Case "decrease font"
         
      Case "view source"
         
      Case "fullscreen"
         
      Case "enable side window"
         
      Case "locate in contents"
         
      Case "set encoding"
         
      Case "bookmarks"
         
      Case "add bookmark"
         
      Case "windows"
         
      Case "settings"
         
      Case "application settings"
         
      Case "help"
         
      Case "about"
         
         DialogAboutHelpBrowser = New FAbout
         DialogAboutHelpBrowser.ShowModal()
         
      Case "what's this"
         
   End Select
   
End

Public Sub Workspace1_Clear()
   'Purpose: removes all existing child tabs from the workspace editor
   
   Dim hWindow As Window

   Workspace1.Lock
   For Each hWindow In Workspace1.Children
      hWindow.Close
   Next
   Workspace1.Unlock

End

Public Sub TreeView1_Expand()
   
End

Public Sub tbRefresh_Click()
   
   Refresh
   
End



