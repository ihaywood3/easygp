' Gambas class file

' Copyright (C) 2008-2014 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' ' This program is distributed in the hope that it will be useful,
' ' but WITHOUT ANY WARRANTY; without even the implied warranty of
' ' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' ' GNU General Public License for more details.
' 
' ' You should have received a copy of the GNU General Public License
' ' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' 'fixme: put gvar.AllowKeys_InputMask in as a constant
' 'fixme 16Nov08  I changed the wrong common.lu_measurements table
' Public bExit As Boolean
' Public currentMeasurementType As cMeasurementType
' Public MeasurementTypes As collection
' Public iCurrentMeasurementType As Integer
' Public Sub form_Open()
'  Init()
'   
'   
' End
' 
' Public Sub Init()
'   'gvar.staff_member = modGlobal.logon(Me)
'   Settings_Load()
'   cmbKeyRestriction.Add("Blood Pressure Format e.g 120/70", const.AllowKeys_BP)
'   cmbKeyRestriction.Add("whole numbers only e.g 12 ", const.AllowKeys_NumbersOnly)
'   cmbKeyRestriction.Add("numbers with decimal point e.g 29.2", const.AllowKeys_NumbersDecimal)
'   modMeasurementsDBI.Units_Get_Types(cmbUnitTypes)
'   MeasurementTypes = modMeasurementsDBI.MeasurementTypes_Get(listview1)
' End
' 
' Public Sub form_Close()
'   
'   Settings_Save()
'   
' End
' 
' Public Sub Settings_Load()
'  
' End
' 
' Public Sub Settings_Save()
'  
' End
' Public Sub Measurements_Get()  
'    'fetches measurements fromt the backend
'      MeasurementTypes = modMeasurementsDBI.MeasurementTypes_Get(listview1)
' 
' End
' 
' Public Sub EditArea_Clear()
'   
'    bExit = True
'    txtMeasurement.Text = ""
'    txtCoding.text = ""
'    txtInputMask.text = ""
'    txtAbbreviation.text = ""
'    txtMeasurementQualifier.text = ""
'    txtUpperLimit.text = ""
'    txtLowerLimit.text = ""
'    txtDecisionSupport.text = ""
'    txtPlottingMethod.text = ""
'    currentMeasurementType = New cMeasurementType
'    currentMeasurementType.name_full = "testing"
'    bExit = False
'   
' End
' 
' Public Sub tbMeasurements_Click()
' 
'   Select Case Last.tag
'   Case "new"
'   Case "print"
'   Case "reset"
'    Reset()
'   Case "save"
'    Save()
'   End Select
' 
' End
' Public Sub New_Measurement()
'   End
' Public Sub Reset()
'       Measurements_Get()      
' End
' Public Sub Save()
'   modMeasurementsDBI.MeasurementTypes_save(MeasurementTypes)
'   Reset()
' End
'   
' 
' 
' Public Sub Print()
' End
' 
' 
' Public Sub txtMeasurement_Change()
' 
'   Select Case Last.tag
'   Case "measurement"
'   Case "abbreviation"
'   Case "qualifier"
'   Case "decision suport"
'   Case "disease code"
'   Case "input mask"
'   Case "upper limit"
'   Case "lower limit"
'   Case "plotting method"
'   End Select
' 
' End
' 
' Public Sub ListView1_Click()
'   listview1.MoveCurrent
'   iCurrentMeasurementType = listview1.Item.key
'   
'   currentMeasurementType = MeasurementTypes[listview1.Item.key]
'   Measurement_Display()
' End
' Public Sub Measurement_Display()
'    txtMeasurement.text = currentMeasurementType.name_full
'    txtAbbreviation.text = currentMeasurementType.name_abbreviated
'    txtPlottingMethod.text = currentMeasurementType.plotting_method
'    txtUpperLimit.text = currentMeasurementType.upper_limit
'    txtLowerLimit.text = currentMeasurementType.lower_limit
'    txtInputMask.text = currentMeasurementType.input_mask
'    txtMeasurementQualifier.text = currentMeasurementType.unit_qualifier
'    cmbKeyRestriction.Index = currentMeasurementType.input_key_restriction
'    cmbUnitTypes.index = currentMeasurementType.fk_unit - 1
'   
' End
' Public Sub MeasurementType_Accept()
'        'add to the main array
'       MeasurementTypes.Add(currentMeasurementType, listview1.count)
'       MeasurementTypesList_Update()
'        
'   
' End
' Public Sub MeasurementTypesList_Update()
'   Dim mt As cMeasurementType
'   Dim x As Integer
'   listview1.Clear()
'   For Each mt In MeasurementTypes
'       listview1.Add(x, MeasurementTypes[x].name_full)
'       Inc x
'   Next
'  End
' 
' 
' Public Sub tbEditArea_Click()
' Select Case Last.tag
' Case "new"
'    EditArea_Clear()
' Case "accept"
'    MeasurementType_Accept()
' End Select
' End
' 
' Public Sub EditArea_Change()
'   If bExit Then Return
'   Select Case Last.tag
'   Case "measurement"
'       currentMeasurementType.name_full = Trim(Last.text)
'   Case "abbreviation"
'       currentMeasurementType.name_abbreviated = Trim(Last.text)
'   Case "qualifier"
'        currentMeasurementType.unit_qualifier = Trim(Last.text) 
'   Case "decision support"
'        currentMeasurementType.decision_support = Trim(Last.text)
'   Case "code"
'       currentMeasurementType.disease_code_text = Trim(Last.text)
'   
'   Case "mask"
'       currentMeasurementType.input_mask = Trim(Last.text)
'   Case "upper limit"
'       Try currentMeasurementType.upper_limit = Val(Last.text)
'       
'       If Error Then
'          txtUpperLimit.text = ""
'          currentMeasurementType.upper_limit = 0
'       End If
'   Case "lower limit"
'        currentMeasurementType.lower_limit = Trim(Last.text)
'        Try currentMeasurementType.lower_limit = Val(Last.text)
'       If Error Then
'          txtLowerLimit.text = ""
'           currentMeasurementType.lowerlimit = 0
'       End If
' 
'   Case "plotting method"
'        currentMeasurementType.plotting_method = Trim(Last.text)
'   End Select
'   
' 
' End
' 
' Public Sub cmbEditArea_Click()
' If bexit Then Return
' Select Case Last.tag
' Case "unit type"
'      currentMeasurementType.fk_unit = Last.index + 1 'fixme (the indexes seem to go 0,1,2, but we set them 1,2,3
'      currentMeasurementType.full_text = Last.text
' Case "key restriction"
'     currentMeasurementType.input_key_restriction = Last.index + 1
'     currentMeasurementType.input_key_restriction_name = Last.text
' End Select
'   
' 
' End
' 
