' Gambas module file

' Copyright (C) 2008-11 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

' routines which does the processing for display as
' HTML in the inbox, also breaks up atomic path and stores in the
' correct tables, called by FInbox and elsewhere

Private cell_color As String = "#FFFFFF" 'to be removed in real life as will be user-defined
Private font_color As String = "#000000"

Public Function Format_Result_Line(result_line As Collection, abnormals_fgcolor As Integer, abnormals_bgcolor As Integer) As String
   '--------------------------------------------------------------------------------
   'Colors for abnormal results: Assume abnormality, this will be switched if normal
   'back to black on white.
   '-------------------------------------------------------------------------------

   Dim s As String 
   Dim sAbnormal_text As String 
   
   font_color = Hex(abnormals_fgcolor)
   cell_color = Hex(abnormals_bgcolor)
   s = "<TR STYLE=\"color: %font_color%; background-color: %cell_color%;\">" 
   "<TD>%identifier% &nbsp;&nbsp;</TD>"
   "<TD>%value% &nbsp;&nbsp;</TD>"
   "<TD>%units%  &nbsp;&nbsp;</TD>"
   "<TD>%reference_range%  &nbsp;&nbsp;</TD>"
   "</TR>"
   s = Replace_Coll(s, result_line, "identifier")
   s = Replace_Coll(s, result_line, "value")
   s = Replace_Coll(s, result_line, "units")
   If result_line.Exist("reference_range") And Not IsNull(result_line!reference_range) Then
      result_line!reference_range = Replace(result_line!reference_range, "(", "")  'stupid but otherwise get (( ))
      result_line!reference_range = Replace(result_line!reference_range, ")", "")
      s = Replace$(s, "%reference_range%", "(" & result_line!reference_range & ")")
   Else
      s = Replace$(s, "%reference_range%", "")
   Endif
   
   '--------------------------------------------------------------------------------------------------------
   'showing abnormality is a pain, these values cover most options, yes, bizaare as the options seem
   'sometimes, vendor even puts in * or a ascii 32 character
   '--------------------------------------------------------------------------------------------------------
   Select Case result_line!abnormal
      Case "N", "", " "
         cell_color = "#FFFFFF"   'white 
         font_color = "#000000"   'black
      Case "L"
         sAbnormal_text = "Below Low Normal"
      Case "LL"
         sAbnormal_text = "Below Panic"
      Case "H"
         sAbnormal_text = "Above High Normal"
      Case "HH"
         sAbnormal_text = "Above Panic"
      Case "A", "*"
         sAbnormal_text = "Abnormal"
      Case "N"
         sAbnormal_text = "Normal"
      Case "I"
         sAbnormal_text = "Indeterminate"
      Case "NA"
         sAbnormal_text = "Not Applicable"
      Case "AA"
         sAbnormal_text = "Very Abnormal"
      Case "<"
         sAbnormal_text = "Below Absolute Low"
      Case ">"
         sAbnormal_text = "Above Absolute High"
      Case "S"
         sAbnormal_text = "Susceptible"
      Case "R"
         sAbnormal_text = "Resistant"
      Case "MS"
         sAbnormal_text = "Moderately Susceptible"
      Case "VS"
         sAbnormal_text = "Very Susceptible"
      Case "U"
         sAbnormal_text = "Significant Change Up"
      Case "D"
         sAbnormal_text = "Significant Change Down"
      Case "B"
         sAbnormal_text = "Better"
      Case "W"    
         sAbnormal_text = "Worse"
      Case "-"
         'FIXME see Ron bl's notes from western pathology for details
      Case Else
         '  Message.Info("Hey, a new out of range value I've not seen yet in HL7:" & result_line!abnormal_code)
         '  Log.ErrorMsg("Hey, a new out of range value I've not seen yet in HL7:" & result_line!abnormal_code)
         s = Replace$(s, "%cell_color%", "#FFFFFF")
         s = Replace$(s, "%font_color%", "#FF0000")
         'fixme
   End Select  
   
   s = Replace$(s, "%cell_color%", cell_color)
   s = Replace$(s, "%font_color%", font_color)
   Return s

End

Public Function Make_Result(hl7 As CHL7) As Collection
   
   Dim cc As New Collection
   
   cc!name = hl7[3, 1]
   cc!value = hl7[5]
   cc!units = hl7[6, 1]
   cc!range = hl7[7] 
   cc!abnormal = hl7[8]
   cc!segment_type = hl7[2]
   cc!pit_ftreport = hl7[2] & "|" & hl7[3] 'eg  "FT|^^PIT"
   
   Return cc

End

Public Function Construct_HTML(pat As Collection, document As Collection, results As Collection, bExcludePIT As Boolean, bExcludeFTSegment As Boolean, style As Integer, Optional fgcolor As Integer = 16711680, bgcolor As Integer = 16777215) As String
   '---------------------------------------------------------------------
   'Create the html to diplay the test result from the collections
   'Note not mentioned here some purveyors of hl7 use * as the abnormal 
   'indicator, but this will be picked up automatically
   'fixme: note the routine also called from FClinical for unfiled docs
   'fix the code back there
   'fix  this routine so that pat, document and results = obligatory,but rest optional
   '--------------------------------------------------------------------

   Dim result_line As Collection  
   Dim sAbnormal_text As String   
   Dim TableStart As String = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0>"
   Dim in_table As Boolean = False
   Dim a_result As String       
   Dim sHtml As String
   Dim segtype As String
   Dim sSTring As String
   
   If style = const.Document_Display_As_Letter Then 
     sHtml = "<html><body><P STYLE='background: #ffb515'><FONT COLOR='#ffffff'><B>Letter: %company%</B></FONT></P>%result%</body></html>"
   Else
      sHtml = modHL7Templates.pathologyResult_Template
   End If
   
   shtml = Replace(shtml, "%company%", document!msh_sending_entity) 'was provider_of_service
   shtml = Replace(shtml, "%patient%", pat!title & " " & pat!firstname & " " & pat!surname)
   If IsNull(pat!birthdate) Then
      shtml = Replace(shtml, "%dob%", "")
   Else
      shtml = Replace(shtml, "%dob%", Format(pat!birthdate, "dd/mm/yyyy"))
   End If
   shtml = Replace(shtml, "%sex%", pat!sex)
   shtml = Replace(shtml, "%age%", pat!age_display)
   shtml = Replace(shtml, "%reference%", document!internal_reference)                  'internal surgery reference
   shtml = Replace(shtml, "%requestingdr%", document!originator)                       'he who in the first place, ordered a test, wrote the letter etc
   shtml = Replace(shtml, "%usualdr%", document!staff_destination_title & " " & document!staff_destination_wholename)
   If Not IsNull(document!date_requested) Then
      shtml = Replace(shtml, "%daterequested%", Format(document!date_requested, "dd/mm/yyyy"))
   Else
      shtml = Replace(shtml, "%daterequested%", "")
   End If
   If Not IsNull(document!date_created) Then
      shtml = Replace(shtml, "%collected%", Format(document!date_created, "dd/mm/yyyy"))
   Else
      shtml = Replace(shtml, "%collected%", "")
   End If
   shtml = Replace(shtml, "%episode%", document!provider_of_service_reference)
   shtml = Replace(shtml, "%copytodr%", "")
   '--------------------------------------------------------------
   'Clinical notes from user, don't seem to be returned very often
   '--------------------------------------------------------------
   shtml = Replace(shtml, "Clinical Information:", "")
   sSTring = document!tag  'otherwise, replace will affect original collection
   sSTring = Replace(sSTring, "_", "") 'to eliminate poorly formatted lab names
   If IsNull(document!comment_on_document) Then
      
      shtml = Replace(shtml, "%clinicalnotes%", "<B>" & UCase(sSTring) & "</B>")
   Else
      shtml = Replace(shtml, "%clinicalnotes%", "<B>" & UCase(sSTring) & "</B><BR>" & Trim(document!comment_on_document) & "<BR>")   
   End If 
   
   For Each result_line In results
      segtype = result_line!value_type
      If style = const.Document_Display_As_Result Then
         If Not (bExcludeFTSegment = True And Lower(result_line!loinc) = "report") Then
            Select Case segtype
               Case "NM", "SN", "CE", "ST"
                  If Not in_table Then
                     a_result &= TableStart
                     in_table = True
                  Endif
                  If InStr(result_line!value, ".br") Then
                     result_line!value = cHL7.FreeText_Format(result_line!value, style)  
                  End If
                  a_result &= modHL7Process.Format_Result_Line(result_line, fgcolor, bgcolor)
               Case "FT", "TX"
                  If in_table Then
                     in_table = False
                     a_result &= "</TABLE>"
                  Endif
                  If result_line!pit = True And bExcludePIT = True Then
                     a_result &= ""
                  Else
                     a_result &= "<P>" & cHL7.FreeText_Format(result_line!value, style) & "</P>"       
                  End If 
            End Select
         End If
      Else
         If segtype = "FT" Then
            If result_line!pit = True Then
               If bExcludePIT = False Then
                  a_result &= "<P>" & cHL7.FreeText_Format(result_line!value, style) & "</P>"
               Endif
            Else   
               a_result &= "<P>" & cHL7.FreeText_Format(result_line!value, style) & "</P>"
            End If
         End If
      End If  
      
   Next
   If in_table Then
      a_result &= "</TABLE>"
   Endif
   sHtml = Replace(sHtml, "%result%", a_result)    
   Return sHtml

End

Public Function Make_Patient(hl7 As CHL7) As Collection 
   '-------------------------------------------------------------------
   'Create patient collection, if no birthdate put in an impossible one
   '-------------------------------------------------------------------

   Dim cc As Collection 
   Dim names As String[]

   cc = hl7.GetField(modHL7Constants.PID_Name, ["surname", "firstname", "middle_name", "unknown", "title"])
   'Austin^^Michael^William^^^
   names = Split(cc!firstname, " ")
   If names.count = 2 Then  'IAN CHECK THIS
      cc!firstname = names[0]
      cc!middle_name = names[1]
   End If
   cc!full_id = Trim(cc!title & " " & cc!firstname & " " & cc!surname) 'title may not exist
   cc!birthdate = modUtil.DateString_Decode(hl7[modHL7Constants.PID_Birthdate]) 'IAN WILL ALWAYS RETURN SOMETHING EVEN IF NO DATE EG 00.
   If cc.Exist("birthdate") Then
      If IsNull(cc!birthdate) Then  
         cc!birthdate = Date(1900, 1, 1)
      Endif
      cc!full_id &= " " & cc!birthdate
   Endif
   cc!sex = hl7[modHL7Constants.PID_Sex] 
   Return cc

End 

Private Function Replace_Coll(s As String, coll As Collection, field As String) As String
   
   If coll.Exist(field)
      Return Replace$(s, "%" & field & "%", coll[field], gb.IgnoreCase)
      'fixme gb.text seems deprecated
   Else
      Return Replace$(s, "%" & field & "%", "", gb.IgnoreCase)
   Endif
   
End

Public Function Get_EOL_Char(filepath As String) As Integer

   Dim oneline As String 
   Dim hFile As File 
   Dim linecount As Integer
   Dim eol_char As Integer

   Try hfile = Open filepath For Input 
   hfile.EndOfLine = gb.unix
   eol_char = gb.unix
   While Not Eof(hfile) 
      Line Input #hfile, OneLine
      Inc linecount
   Wend
   
   If Linecount = 1 Then
      eol_char = gb.Mac
   Else
      eol_char = gb.Windows
   End If
   
   Close #hfile
   Return eol_char

End

Public Function Get_SendingEntity(msh_subseg_sender As String) As String
   '------------------------------------------------------------------------------
   'Extract the sender from MSH, should be able to use:
   'hl7.Next("MSH", "PID") but this won't work as .Next increments at entry to 1
   'so MSH segment is missed in files which start with MSH! ?IAN FIX
   'some segments here are just |the name|  (incorrectly)
   'others are |subseg^subseg^subseg|
   'Also, many labs ID'd only by a NATA number or a text abbreviation
   'Some samples:
   '
   'Douglas:                  MSH|^~\&|APOLLO|NATA^2178^N|  
   'Hunter Imaging Group      MSH|^~\&|Sonic v2|HIG|  
   'Newcastle pathology       MSH|^~\&|LRS|Newcastle Pathology
   'Newcastle radiology       MSH |^~\&|Your Software Program|Newcastle Radiology| (coverted from PIT by me)
   'Medical objects           MSH|^~\&|EQUATORDXTRAY^EQUATORDXTRAY:2.20.2 (Build 1491)^L|Dr Andrew Hedges^2EF632CD-F10D-46D4-BBF8-B68510F964A4^GUID|
   'Hunter Area pathology     MSH|^~\&|HAPSDLOAD|HAPS| 'this is Hunter Area Pathology Services
   'Symbion Laverty Pathology MSH |^~\&|ULTRA|Symbion Laverty Pathology|
   '------------------------------------------------------------------------------

   Dim a_name As String
   Dim SendingEntity As String
   Dim seg As String
   Dim segment As String
   Dim segments As String[]
   Dim Sub_segs As String[]
   
   If InStr(msh_subseg_sender, "^") Then
      sub_segs = Split(msh_subseg_sender, "^")
      SendingEntity = sub_segs[0]
   Else
      SendingEntity = msh_subseg_sender
   End If
   '------------------------------------------------------------------------
   'Now, as they further don't identify themselves correctly, some more work
   '-----------------------------------------------------f-------------------
   Select Case SendingEntity
         
      Case "NATA"
         Select Case sub_segs[1]
            Case "2178"
               SendingEntity = "Douglass Hanly Moir"
         End Select
      Case "HIG"
         SendingEntity = "Hunter Imaging Group"
      Case "HAPS"
         SendingEntity = "Hunter Area Pathology Services"
   End Select
   Return SendingEntity          

End
