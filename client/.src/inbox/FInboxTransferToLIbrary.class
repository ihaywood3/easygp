' Gambas class file

Private Document As Collection
Private Currentconsult As CConsult
Private sLibrary_Dir_Network As String
Private sLibrary_Dir_Local As String
Private sLibraryRootDir As String
Private sHandout_Dir_Network As String
Private sHandout_Dir_Local As String
Private bcopy As Boolean
Private bhandout As Boolean
Private sDestination As String 'my library or patient handouts

Public Sub Run() As Boolean
   
   Return Not Me.ShowModal()
   
End

Public Sub Init(Doc As Collection, cons As CConsult, sMove_or_Copy As String)
   '-------------------------------------------------------------------------------------------------
   'sMove_or_copy can be:
   '"move to my library", "copy to my library", "copy to patient handouts", "move to patient handouts"
   '-------------------------------------------------------------------------------------------------- 
   
   Dim mnuLibrary As Menu
   Dim mnuWindow As Window
   
   Document = Doc
   Currentconsult = cons
   sLibrary_Dir_Network = modAdminDBI.Config_Get("library_directory_network", "", Null, modDBConnect.currentUser!fk_clinic)
   sLibrary_Dir_Local = modAdminDBI.Config_Get("library_directory_local", "", Null, modDBConnect.currentUser!fk_clinic)
   sHandout_Dir_Network = sLibrary_Dir_Network &/ "handouts"
   sHandout_Dir_Local = sLibrary_Dir_Local &/ "handouts"
   btnOK.text = modUtil.Ucase_Word_First_Letter(sMove_or_Copy)
   If InStr(sMove_or_Copy, "copy") Then
      bcopy = True
   End If   
   If InStr(sMove_or_Copy, "handout") Then 
      bhandout = True
      sDestination = "handouts"                              'otherwise is a patient handout document
      lblDestinationFolder.text = "Handout Folder"
   Else
      sDestination = "library"                                       'must be for users library 
      lblDestinationFolder.text = "Library Folder"
   End If   
   lblmeasure.text = "  Existing Filename  "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea, lblmeasure)
   txtExistingFilename.text = Document!source_file
   'FIXME - THIS SCREEN DESIGN/FUNCTIONALITY IS SHIT
   lblmeasure.text = "  Folders  "
   With mnuWindow = New Window(Hbox_MenuWindow)
      .Visible = True
   End With
   With mnuLibrary = New Menu(mnuWindow)
      .tag = "the tag"
      .text = "         "
      .Visible = True
      .Enabled = True
      .Picture = Picture.Load("icons/16/checked.png")
   End With
   '---------------------------------------------------
   'The default library structure is 
   'library/library  <- where the users files are
   'library/handouts <- where patient handouts are kept
   '---------------------------------------------------
   If IsDir(sLibrary_Dir_Network &/ sDestination) Then  'if network not mounted then this will not exist
      rbSiteNetwork.Enabled = True 
      sLibraryRootDir = sLibrary_Dir_Network
      rbSiteNetwork.value = True
   Else
      rbSiteNetwork.Enabled = False 
      rbsiteLocal.Value = True
      If IsDir(sLibrary_Dir_Local) Then   
         sLibraryRootDir = sLibrary_Dir_Local
      End If   
   Endif
   If Not bhandout Then
      Make_Menu_Library(mnuLibrary, sLibraryRootDir &/ "library")
   Else
      Make_Menu_Library(mnuLibrary, sLibraryRootDir &/ "handouts")
   End If   
   
End

Public Sub mnuLibrary_Click()
   
   txtLibraryFolder.text = Last.tag
   txtNewFilename.SetFocus()
Catch
   Return 

End

Public Sub btnOK_Click()
   '----------------------------------------
   'Validate the data, if ok, save and close
   '----------------------------------------
   
   Dim fileExtension As String
   Dim errMsg As String
   Dim fname As String
   Dim fname2 As String
   
   fileExtension = File.Ext(Document!source_file)
   If Right(txtNewFilename.text, Len(fileExtension)) <> fileExtension Then
      Message.Info("Please correct the filename extension to match the orginal file before saving.")
      Return
   Endif
   If Not bhandout Then
      fname = "library"                                              'and its not a handout
   Else
      fname = "handout"
   Endif
   fname2 = modFiles.Get("document_archiving_directory", Document!source_file)
   fname = sLibraryRootDir &/ fname &/ Trim(txtLibraryFolder.text) &/ Trim(txtNewFilename.text)
   '-------------------------------------------------------------------------------------------------------
   'If the user wants to copy the file, figure out if destination is handout or personal library, then copy
   '-------------------------------------------------------------------------------------------------------
   If bCopy Then            
      errMsg = "copied"                                            'if copying a file
      If Left$(fname2, 5) = "/tmp/" Then
         Move fname2 To fname
      Else
         Copy fname2 To fname
      Endif   
      Message.Info("The file was successfully copied to your " & sDestination)
   Else
      '----------------------------------------------------------------------------
      'Otherwise - must be selecting to move the file
      'Try and move the document to the library, and mark it deleted in the backend
      'Firstly, mark the document deleted in the backend
      'Then lay down an audit trail - if this returns true, try moving the document
      'If this fails > error message and roll back
      'If succeeds then commit the transaction.
      '----------------------------------------------------------------------------
      errMsg = "moved"
      modDBConnect.update("documents.documents", Null, ["pk": Document!pk_document, "deleted": True])
      If modAudit.MakeAudit(Currentconsult, "moved to library", "documents.documents", Document!pk_document, const.cSection_Inbox, "moved to the users library") Then 
         Move fname2 To fname  
         modDBConnect.CommitTrans
         Try FLibrary.Library_Trees_Refresh_External        'will not work if Flibary no instantiated, so try....
         Message.Info("The file was successfully moved to your " & sDestination) 
      Else
         modDBConnect.RollBack() ' user refused to give an audit reason
      End If   
   Endif   
Finally
   Me.Close(True)
Catch
   modDBConnect.RollBack()
   Log.ErrorMsg("FInboxToLibrary.btnOK_Click: " & Error.Text & Error.Backtrace)
   Message.Info("An error occurred - the file was not " & errMsg & " to your" & sDestination & ".\n\n" & Error.text)
   
End

Public Sub btnCancel_Click()
   
   Me.Close
   
End

Public Function Make_Menu_Library(ByRef mnuLibrary As Menu, sLibraryRootDir As String) As Menu
   '--------------------------------------------------------------------
   'Makes the library directory tree as a menu option
   'Probably temporary, so I can save any circulars I want to my library
   '--------------------------------------------------------------------
   
   Dim sDir As String           'hold a directory name
   Dim mnu As Menu
   Dim dirs As New String[]
   '   
   For Each sDir In Dir(sLibraryRootDir)         'Get all the dir's and sort them
      If IsDir(sLibraryRootDir &/ sDir) Then      'check if it is actually a directory 
         dirs.Add(sDir, dirs.count)
      End If   
   Next
   dirs.Sort(gb.IgnoreCase)
   mnuLibrary.Children.Clear()
   
   '  ' mnuNonPatientDocuments_ToLIbrary.Children.Clear()   'remove all current child items
   For Each sDir In Dirs                        'Add each directory to the menu if a directory
      mnu = New Menu(mnuLibrary) As "mnuLibrary"
      mnu.tag = sDir
      mnu.caption = sDir
   Next
   '   
   
End

Public Sub HBox_Library_Enter()
   
   '  mnuLibrary.popup()
   
End
