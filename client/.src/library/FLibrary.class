' Gambas class file

' Copyright (C) 2008-2011 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'-
' Purpose: Library for stuff we need to know
'-------------------------------------------      
Private picGreenDot As Picture
Private picRedDot As Picture
Private picPDF As Picture
Private sLibraryRootDir As String 'the root directory in filesystem 
Private sHandoutRootDir As String
Private sFileText As String
Private Fpdf As FPdf
Private Browser As FBrowser
Private media_player As FMoviePlayer
Private cTabLibrary As Integer = 0
Private cTabHandouts As Integer = 1
Private cTabWeb As Integer = 2
Private cTabBookmarks As Integer = 3

Public Sub Form_Open()
   
   Init()
   
End 

Public Sub Init()
   
   Try Settings_Load()
   Browser = New FBrowser(vbox_pdfviewer)
   Browser.Visible = False
   With Fpdf = New FPdf(vbox_pdfviewer)
      .BtPrint.Visible = True 
      .BtPrint.Enabled = True
      .btZoomIn.Visible = True
      .btZoomOut.Visible = True   
      .btRotate.Visible = True   
      .btRotate.Enabled = True   
   End With
   With media_player = New FMoviePlayer(vbox_pdfviewer)
      .Visible = False    
   End With
   picRedDot = Picture["icons/12/red_dot.png"]
   picGreenDot = Picture["icons/12/green_dot.png"]
   picPDF = Picture["icons/20/pdf2020.png"]
   cmbFilter.Add("*.pdf", 0)
   cmbFilter.Add("*.htm,html", 1)
   cmbFilter.Add("*.doc", 2)
   cmbFilter.Add("*.rtf", 3)
   TabStrip1.index = 0
   TabStrip1_Click()
   
End

Public Sub form_Close()
   
   Settings_Save()
   
End

Sub GetDirectory(Directory As String)
   
   Dim sFile As String
   Dim sFiles As String[]
   
   For Each sFile In Dir(Directory, "*")
      tvLIbrary.Add(sFile, SFile, picGreenDot, "GPar")
      
   Next 
   
End 

Sub PrintDirectory(Directory As String)
   
   Dim sFile As String
   
   For Each sFile In Dir(Directory, "*")
   Next       
   
End

Private Sub Settings_Save()
   
   Settings["Library/Hsplit_Main"] = HSplit_Main.Layout
   
End

Private Sub Settings_Load()
   
   Try HSplit_Main.Layout = Settings["Library/Hsplit_Main"]
   
End

Public Sub tvLIbrary_Click()
   
   Try Display_Item(tvLIbrary, sLibraryRootDir)
   
End

Public Sub tvHandOuts_Click()
   
   Try Display_Item(tvHandOuts, sHandoutRootDir)
   
End

Public Sub Load_Library_Tree()
   '------------------------------------------------------------------
   'Loads the tree control with directories and files from the library
   'Tries server first, if fails falls back to local if available
   '------------------------------------------------------------------
   
   sLibraryRootDir = modAdminDBI.Config_Get("library_directory_network", "", Null, modDBConnect.currentUser!fk_clinic) & "/"
   If Not Load_Tree(tvLibrary, sLibraryRootDir, "network") Then 
      sLibraryRootDir = modAdminDBI.Config_Get_Staff_Member("library_directory_local", "", Null, modDBConnect.currentUser!fk_clinic, modDBConnect.currentUser!fk_staff) & "/"
      If Load_Tree(tvLibrary, sLibraryRootDir, "local") Then
         TabStrip1.Caption = "My Library (local filesystem)" 
         
      Endif
   Else
      TabStrip1.Caption = "My Library (network filesystem)" 
   Endif
   
End

Public Function Load_Tree(trview As Treeview, sLibDir As String, sLocation As String) As Boolean
   '--------------------------------------------
   'Fills the tree with directories and files
   'returns true is successfull (ie files exist)
   '--------------------------------------------
   
   Dim sDir As String           'hold a directory name
   Dim sFile As String          'hold a file anme
   Dim iKey As Integer
   Dim iKey2 As Integer
   Dim sKeyGenerated As String
   Dim picTag As Picture
   Dim bFilesExist As Boolean
   
   trview.Clear()
   If IsDir(sLibDir) Then 
      'Each sub file of a DIR will be a Directory or file
      'but in our structure there are no files in the rootdir
      For Each sDir In Dir(sLibDir)        'Add each directory to the tree
         If IsDir(sLibDir & sDir) Then       'check if it is actually a directory
            trview.Add(sDir, sDir) 'if yes, then add to tree as node
            ikey = ikey + 1
            
            For Each sFile In Dir(sLibDir & sDir, "*.*")
               If InStr(Lower(Sfile), ".pdf") Then
                  pictag = picPDF   
               Else
                  picTag = picGreenDot
               End If
               Try tvLibrary.Add(sFile, sFile, picTag, sDir)
               If Error Then
               End If
               iKey2 = iKey2 + 1
               bFilesExist = True
            Next 
         Endif 
      Next 
   Endif 
   Return bFilesExist
Catch
   Message.Info("An error occurred whilst trying to find the library directory")
   
End

Public Sub Load_Library_Tree_old()
   'FIXME: put in a default dir for library - probably on server
   
   Dim sDir As String           'hold a directory name
   Dim sFile As String          'hold a file anme
   Dim iKey As Integer
   Dim iKey2 As Integer
   Dim sKeyGenerated As String
   Dim picTag As Picture
   'loads defaults for inbox, as yet there are none so hard code
   sLibraryRootDir = User.home & "/easygp/library/"
   sLibraryRootDir = User.home & "/ubuntu-server/library/"
   tvLIbrary.Clear()
   If IsDir(sLibraryRootDir) Then 
      'Each sub file of a DIR will be a Directory or file
      'but in our structure there are no files in the rootdir
      For Each sDir In Dir(sLibraryRootDir)        'Add each directory to the tree
         If IsDir(sLibraryRootDir & sDir) Then       'check if it is actually a directory
            tvLIbrary.Add(sDir, sDir) 'if yes, then add to tree as node
            ikey = ikey + 1
            
            For Each sFile In Dir(sLibraryRootDir & sDir, "*.*")
               If InStr(Lower(Sfile), ".pdf") Then
                  pictag = picPDF   
               Else
                  picTag = picGreenDot
               End If
               Try tvLIbrary.Add(sFile, sFile, picTag, sDir)
               If Error Then
               End If
               iKey2 = iKey2 + 1
            Next 
         Endif 
      Next 
   Endif 
   
End

Public Sub Load_Handouts_Tree()
   
   Dim sDir As String           'hold a directory name
   Dim sFile As String          'hold a file anme
   Dim iKey As Integer
   Dim iKey2 As Integer
   Dim sKeyGenerated As String
   Dim picTag As Picture
   'loads defaults for inbox, as yet there are none so hard code
   sHandoutRootDir = User.home & "/easygp/handouts/"
   tvHandOuts.Clear()
   If IsDir(sHandoutRootDir) Then 
      'Each sub file of a DIR will be a Directory or file
      'but in our structure there are no files in the rootdir
      For Each sDir In Dir(sHandoutRootDir)        'Add each directory to the tree
         If IsDir(sHandoutRootDir & sDir) Then       'check if it is actually a directory
            tvHandOuts.Add(sDir, sDir) 'if yes, then add to tree as node
            ikey = ikey + 1
            
            For Each sFile In Dir(sHandoutRootDir & sDir, "*.*")
               If InStr(Lower(Sfile), ".pdf") Then
                  pictag = picPDF   
               Else
                  picTag = picGreenDot
               End If
               Try tvHandOuts.Add(sFile, sFile, picTag, sDir)
               If Error Then
               End If
               iKey2 = iKey2 + 1
            Next 
         Endif 
      Next 
   Endif 
   
End

Public Sub Load_Bookmarks_Tree()
   
   Dim sDir As String           'hold a directory name
   Dim sFile As String          'hold a file anme
   Dim iKey As Integer
   Dim iKey2 As Integer
   Dim sKeyGenerated As String
   Dim picTag As Picture
   'loads defaults for inbox, as yet there are none so hard code
   Return 
   sHandoutRootDir = User.home & "/easygp/bookmarks/"
   tvHandOuts.Clear()
   If IsDir(sHandoutRootDir) Then 
      'Each sub file of a DIR will be a Directory or file
      'but in our structure there are no files in the rootdir
      For Each sDir In Dir(sHandoutRootDir)        'Add each directory to the tree
         If IsDir(sHandoutRootDir & sDir) Then       'check if it is actually a directory
            tvHandOuts.Add(sDir, sDir) 'if yes, then add to tree as node
            ikey = ikey + 1
            
            For Each sFile In Dir(sHandoutRootDir & sDir, "*.*")
               If InStr(Lower(Sfile), ".pdf") Then
                  pictag = picPDF   
               Else
                  picTag = picGreenDot
               End If
               Try tvHandOuts.Add(sFile, sFile, picTag, sDir)
               If Error Then
               End If
               iKey2 = iKey2 + 1
            Next 
         Endif 
      Next 
   Endif 
   
End

Public Sub ToolButtons_Click()
   
   Select Case Last.tag
      Case "refresh files"
         Load_Library_Tree()
         Load_Handouts_Tree()
   End Select
   
End

Public Sub Display_Item(tvw As Treeview, rootdir As String)
   
   Dim sKey As String
   Dim sParentDir As String
   Dim Pic As Picture
   Dim sFilename As String
   
   sFilename = tvw.Item.Key                'get filename
   tvw.MoveParent                          'back to parent in tree
   sParentDir = tvw.Item.Key               'top get Parent directory
   
   With media_player
      .StopMovie()
      .Visible = False   
   End With
   
   Select Case File.Ext(sFilename)    
      Case "png", "jpg", "jpeg", "gif", "bmp"
         Browser.Visible = False
         Fpdf.Visible = False
         Picturebox1.Visible = True
         Picturebox1.Picture = Picture.Load(rootdir & sParentDir & "/" & sFilename)
      Case "pdf"
         Browser.Visible = False
         Picturebox1.Visible = False
         Fpdf.Visible = True
         Try Fpdf.hPdf.Open(rootdir & sParentDir & "/" & sFilename)
         If Not Error Then
            Fpdf.Set_Filename(sLibraryRootDir & sParentDir & "/" & sFilename)
            Fpdf.Render_From_Another_Form()
         End If
      Case "html", "htm" 
         Fpdf.Visible = False
         Picturebox1.Visible = False
         Browser.Visible = True
         Browser.$currenthview.url = rootdir & sParentDir & "/" & sFilename
      Case "avi", "mov", "wmv", "flv", "mpeg", "mpg", "asf"
         If IsNull(modUtil.FindProgram("mplayer", "mplayer")) Then 
            Message.Title("Missing Program")
            Message.Info("You will need to install mplayer to play multi-media files") 
            Return 
         Endif
         Fpdf.Visible = False
         Picturebox1.Visible = False
         Browser.Visible = False 
         With media_player
            .Visible = True   
            .Init(rootdir & sParentDir & "/" & sFilename)
         End With
         
   End Select
   
End

Public Sub media_player_Stop()
   
   With media_player
      .Visible = False   
      .StopMovie()
   End With 
   
End

Public Sub TabStrip1_Click()
   
   Dim sString As String 
   
   Picturebox1.Visible = False
   media_player_Stop()
   Select Case TabStrip1.Index
      Case cTabLibrary
         Browser.Visible = False
         Fpdf.Visible = True   
         Load_Library_Tree()
      Case cTabHandouts
         Browser.Visible = False
         Fpdf.Visible = True    
         Load_Handouts_Tree()
      Case cTabWeb
         Browser.Visible = True
         Fpdf.Visible = False 
         sString = modAdminDBI.Config_Get_Staff_Member("library_default_home_page", "", Null, modDBConnect.currentUser!fk_clinic, modDBConnect.currentUser!fk_staff) 
         Browser.txtURL.text = sString
         Try Browser.$currenthview.url = modAdminDBI.Config_Get_Staff_Member("library_default_home_page", "", Null, modDBConnect.currentUser!fk_clinic, modDBConnect.currentUser!fk_staff) 
      Case cTabBookmarks 
         Load_Bookmarks_Tree()
   End Select
   
End

Public Sub TreeView4_Menu()

   mnuHandouts.popup()

End
