' Gambas class file
' Copyright (C) 2008,2009 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'-
' Purpose: Library for stuff we need to know
'-------------------------------------------      
Private picGreenDot As Picture
Private picRedDot As Picture
Private picPDF As Picture
Private sLibraryRootDir As String 'the root directory in filesystem 
Private sHandoutRootDir As String
Private sFileText As String
Private Fpdf As FPdf
Private Browser As FBrowser

Public Sub Form_Open()
   Init()
End 


Public Sub Init()
  
   Settings_Load()
   Browser = New FBrowser(vbox_pdfviewer)
   Browser.Visible = False
   Fpdf = New FPdf(vbox_pdfviewer)
   picRedDot = Picture["icons/12/red_dot.png"]
   picGreenDot = Picture["icons/12/green_dot.png"]
   picPDF = Picture["icons/20/pdf2020.png"]
   Load_Library_Tree
   cmbFilter.Add("*.pdf", 0)
   cmbFilter.Add("*.htm,html", 1)
   cmbFilter.Add("*.doc", 2)
   cmbFilter.Add("*.rtf", 3)
   Load_Handouts_Tree()
End

Public Sub form_Close()
      Settings_Save()
End

Sub GetDirectory(Directory As String)
  Dim sFile As String
  Dim sFiles As String[]
  
  
  For Each sFile In Dir(Directory, "*")
          Print sFile
          TreeView1.Add(sFile, SFile, picGreenDot, "GPar")
          
  Next 
End 
    
Sub PrintDirectory(Directory As String)
  Dim sFile As String
  For Each sFile In Dir(Directory, "*")
          Print sFile
  Next       
          
  
  
End



Private Sub Settings_Save()


       Settings["Library/Hsplit_Main"] = HSplit_Main.Layout
    

End

Private Sub Settings_Load()


       Try HSplit_Main.Layout = Settings["Library/Hsplit_Main"]
  

End


Public Sub TreeView1_Click()
   Try Display_Item(Treeview1, sLibraryRootDir)
End

Public Sub TreeView2_Click()
   Try Display_Item(Treeview2, sHandoutRootDir)
End
Public Sub TreeView1_Click_Bak()
  
  'This just updates our event stack
  '
  'Stack_Event_Log("Click")
   'This updates our event stack, this sub is used by all events... it display the current node key.
  Dim sKey As String
  Dim sParentDir As String
  Dim Pic As Picture
  sKey = Left(TreeView1.Item.Key, (Len(TreeView1.Item.Key) - 1)) 
  sKey = TreeView1.Item.Key
  TreeView1.MoveParent
  sParentDir = TreeView1.Item.Key
  Select Case Lower(Right(sKey, Len(sKey) - InStr(sKey, ".")))
  Case "png"
      Browser.Visible = False
      Fpdf.Visible = False
      Picturebox1.Visible = True
      Picturebox1.Picture = Picture.Load(sLibraryRootDir & sParentDir & "/" & sKey)
  Case "pdf"
      Browser.Visible = False
      Picturebox1.Visible = False
      Fpdf.Visible = True
      Try Fpdf.hPdf.Open(sLibraryRootDir & sParentDir & "/" & sKey)
      If Not Error Then
         Fpdf.Render_From_Another_Form()
      End If
  Case "html", "htm" 
      Print "trying to show html stuff"
         Fpdf.Visible = False
         Picturebox1.Visible = False
         Browser.Visible = True
         Browser.$currenthview.url = sLibraryRootDir & sParentDir & "/" & sKey
    End Select
End

Public Sub Load_Library_Tree()
      'FIXME: put in a default dir for library - probably on server
           Dim sDir As String           'hold a directory name
           Dim sFile As String          'hold a file anme
           Dim iKey As Integer
           Dim iKey2 As Integer
           Dim sKeyGenerated As String
           Dim picTag As Picture
          'loads defaults for inbox, as yet there are none so hard code
           sLibraryRootDir = User.home & "/easygp/library/"
          Print sLibraryRootDir
          Print 
          TreeView1.Clear()
           If IsDir(sLibraryRootDir) Then 
                    'Each sub file of a DIR will be a Directory or file
                    'but in our structure there are no files in the rootdir
                    Print "it was a directory"
                     For Each sDir In Dir(sLibraryRootDir)        'Add each directory to the tree
                         Print sLibraryRootDir & sDir 
                              If IsDir(sLibraryRootDir & sDir) Then       'check if it is actually a directory
                                TreeView1.Add(sDir, sDir) 'if yes, then add to tree as node
                                 ikey = ikey + 1
                                
                                 Print sLibraryRootDir & sDir
                                   For Each sFile In Dir(sLibraryRootDir & sDir, "*.*")
                                       If InStr(Lower(Sfile), ".pdf") Then
                                          pictag = picPDF   
                                       Else
                                          picTag = picGreenDot
                                       End If
                                        Try TreeView1.Add(sFile, sFile, picTag, sDir)
                                        If Error Then
                                          Print "Unable to add", sfile
                                        End If
                                         iKey2 = iKey2 + 1
                                   Next 
                               Endif 
                     Next 
           Endif 

 
End
Public Sub Load_Handouts_Tree()
           Dim sDir As String           'hold a directory name
           Dim sFile As String          'hold a file anme
           Dim iKey As Integer
           Dim iKey2 As Integer
           Dim sKeyGenerated As String
           Dim picTag As Picture
          'loads defaults for inbox, as yet there are none so hard code
          sHandoutRootDir = User.home & "/easygp/handouts/"
          Print sHandoutRootDir
          Print 
          Treeview2.Clear()
           If IsDir(sHandoutRootDir) Then 
                    'Each sub file of a DIR will be a Directory or file
                    'but in our structure there are no files in the rootdir
                    Print "it was a directory"
                     For Each sDir In Dir(sHandoutRootDir)        'Add each directory to the tree
                         Print sHandoutRootDir & sDir 
                              If IsDir(sHandoutRootDir & sDir) Then       'check if it is actually a directory
                                Treeview2.Add(sDir, sDir) 'if yes, then add to tree as node
                                 ikey = ikey + 1
                                
                                 Print sHandoutRootDir & sDir
                                   For Each sFile In Dir(sHandoutRootDir & sDir, "*.*")
                                       If InStr(Lower(Sfile), ".pdf") Then
                                          pictag = picPDF   
                                       Else
                                          picTag = picGreenDot
                                       End If
                                        Try Treeview2.Add(sFile, sFile, picTag, sDir)
                                        If Error Then
                                          Print "Unable to add", sfile
                                        End If
                                         iKey2 = iKey2 + 1
                                   Next 
                               Endif 
                     Next 
           Endif 
End





Public Sub ToolButtons_Click()
 Select Case Last.tag
 Case "refresh files"
    Load_Library_Tree()
    Load_Handouts_Tree()
 End Select
  

End

Public Sub Display_Item(tvw As Treeview, rootdir As String)
  
  'This just updates our event stack
  '
  'Stack_Event_Log("Click")
   'This updates our event stack, this sub is used by all events... it display the current node key.
  Dim sKey As String
  Dim sParentDir As String
  Dim Pic As Picture
  Print "clicked here"
  sKey = Left(tvw.Item.Key, (Len(tvw.Item.Key) - 1)) 
  sKey = tvw.Item.Key
  tvw.MoveParent
  sParentDir = tvw.Item.Key
  Select Case Lower(Right(sKey, Len(sKey) - InStr(sKey, ".")))
  Case "png"
      Browser.Visible = False
      Fpdf.Visible = False
      Picturebox1.Visible = True
      Picturebox1.Picture = Picture.Load(rootdir & sParentDir & "/" & sKey)
  Case "pdf"
      Browser.Visible = False
      Picturebox1.Visible = False
      Fpdf.Visible = True
      Try Fpdf.hPdf.Open(rootdir & sParentDir & "/" & sKey)
      If Not Error Then
         Fpdf.Set_Filename(sLibraryRootDir & sParentDir & "/" & sKey)
         Fpdf.Render_From_Another_Form()
      End If
  Case "html", "htm" 
         Fpdf.Visible = False
         Picturebox1.Visible = False
         Browser.Visible = True
         Browser.$currenthview.url = rootdir & sParentDir & "/" & sKey
   End Select
End

Public Sub TabStrip1_Click()
   Browser.Visible = True
   Fpdf.Visible = False
   Browser.$currenthview.url = "http://www.ciap.health.nsw.gov.au/"  
End
