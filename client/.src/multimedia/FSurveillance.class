' Gambas class file

' Copyright (C) 2008-2012 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'------------------------------------------------------------------------------------
' PURPOSE      When  written this will be for my i-p camera I have in my waiting room
'              Included now as I tested with a WebCam as proof of concepr
'------------------------------------------------------------------------------------
Public hWebcam As VideoDevice
Private OnSet As Boolean
Private Fps As Date
Private nFps As Integer
Public $himage As Image
Private resolution As String 
Private video_resolution As String[]
Private FDraw As New FDrawEditor
Private hobs As Observer
Private H As Integer
Private W As Integer





Public Sub Settings_Save()
   
   Try Settings["Surveillance/video_device"] = "/dev/video0"
   Try Settings["Surveillance/resolution"] = resolution

End

Public Sub Init(height As Integer, weight As Integer)
   
    H = height
    w = weight
    
   Get_Video()
  
End

Public Sub Set_Resolution(resolution As String)
   'not used at the moment

   video_resolution = New String[]
   video_resolution = Split(Settings["Webcam/resolution"], ",")
   Try hWebCam.Resize(video_resolution[0], video_resolution[1])

End

Public Sub Get_Video()
   
   Dim num As Integer
   Dim Buf As String
   
   If hWebCam Then
      hWebCam = Null
      Tmr.Enabled = False
   End If
   
   Try hWebCam = New VideoDevice("/dev/video0")
   ' If Error Then
   '    Message.Error(("Unable to open video device"))
   '    Return
   ' End If
   hWebCam.Source = hWebCam.TV + hWebCam.PAL
   
 
   OnSet = True

   
   Wait 0.001
   OnSet = False
   Tmr.Delay = 10
   Tmr.Enabled = True
   Fps = Now()
   nFps = 0
   
End



Public Sub Tmr_Timer()
   
   Dim T1 As Date
   Dim sBuf As String
   Dim hPict As Picture
   
   Tmr.Enabled = False
   Draw.Begin(dwgVideo)
   hPict = hWebCam.Image.Picture
 '  Draw.Picture(hPict, (dwgVideo.W - hPict.W) \ 2, (dwgVideo.H - hPict.H) \ 2)
   Draw.Picture(hPict, 0, 0, H, W)
 
   Draw.End
   
   If Not Error Then
      nFps = nFps + 1
      T1 = Now() - Fps
      If Second(T1) >= 1 Then
         Me.Caption = hWebCam.Features.Name & " (" & nFps & " fps)"
         Fps = Now()
         nFps = 0
      End If
   End If
   Tmr.Enabled = True
   
Catch
   
 '  Message.info(Webcam_error())

End








