' Gambas class file

Private hWebcam As VideoDevice
Private OnSet As Boolean
Private Fps As Date
Private nFps As Integer
Private $himage As Image
Private resolution As String 
Private video_resolution As String[]
Private FDraw As New FDrawEditor
Private hobs As Observer

Public Sub _new()
   
   Init()
   
End

Public Sub Run() As Boolean
   
   Return Not Me.ShowModal()
   
End

Public Sub btnOK_Click()    
   
   If Not IsNull(PictureBox1.Picture) Then
      Me.Close(True)
   Else
      Message.Info(No_Picture())
   End If  
   
End

Public Sub btnCancel_Click()
   
   Me.Close
   
End

Public Sub Settings_Save()
   
   Try Settings["Webcam/video_device"] = cmbDevice.text
   Try Settings["Webcam/resolution"] = resolution

End

Public Sub cmbDevice_Click()
   
   Get_Video()
   
End

Public Sub Init()
   
   cmbDevice.Add("/dev/video0")
   cmbDevice.Add("/dev/video1")
   
   cmbDevice.index = cmbDevice.Find("/dev/video0")                           
   If Not IsNull(Settings["Webcam/video_device"]) Then
      cmbDevice.index = cmbDevice.Find(Settings["Webcam/video_device"])
   Endif
   
   Get_Video()

End

Public Sub Set_Resolution(resolution As String)
   'not used at the moment

   video_resolution = New String[]
   video_resolution = Split(Settings["Webcam/resolution"], ",")
   Try hWebCam.Resize(video_resolution[0], video_resolution[1])

End

Public Sub Get_Video()
   
   Dim num As Integer
   Dim Buf As String
   
   If hWebCam Then
      hWebCam = Null
      Tmr.Enabled = False
   End If
   
   Try hWebCam = New VideoDevice(cmbDevice.text)
   If Error Then
      Message.Error(("Unable to open video device"))
      Return
   End If
   hWebCam.Source = hWebCam.TV + hWebCam.PAL
   
   Button1.Caption = ("Stop")
   btnTakeShot.Enabled = True
   Bright.Enabled = True
   Contrast.Enabled = True
   Hue.Enabled = True
   Whiteness.Enabled = True
   Colour.Enabled = True
   FreqUp.Enabled = True
   FreqDown.Enabled = True
   OnSet = True
   Bright.Value = hWebcam.Bright
   Contrast.Value = hWebcam.Contrast
   Hue.Value = hWebCam.Hue
   Whiteness.Value = hWebCam.Whiteness
   Colour.Value = hWebCam.Color
   LblFreq.Text = "Tuner frequency: " & hWebCam.Tuner.Frequency
   
   Wait 0.001
   OnSet = False
   Tmr.Delay = 10
   Tmr.Enabled = True
   Me.Caption = hWebCam.Features.Name
   Fps = Now()
   nFps = 0
   
End

Public Sub Bright_Change()
   
   If OnSet Then Return
   hWebCam.Bright = Bright.Value
   
End

Public Sub Contrast_Change()
   
   If OnSet Then Return
   hWebCam.Contrast = Contrast.Value
   
End

Public Sub Whiteness_Change()
   
   If OnSet Then Return
   hWebCam.Whiteness = Whiteness.Value
   
End

Public Sub Colour_Change()
   
   If OnSet Then Return
   hWebcam.Color = Colour.Value
   
End

Public Sub Hue_Change()
   
   If OnSet Then Return
   hWebCam.Hue = Hue.Value
   
End

Public Sub Tmr_Timer()
   
   Dim T1 As Date
   Dim sBuf As String
   Dim hPict As Picture
   
   Tmr.Enabled = False
   Draw.Begin(dwgVideo)
   hPict = hWebCam.Image.Picture
   Draw.Picture(hPict, (dwgVideo.W - hPict.W) \ 2, (dwgVideo.H - hPict.H) \ 2)
   Draw.End
   
   If Not Error Then
      nFps = nFps + 1
      T1 = Now() - Fps
      If Second(T1) >= 1 Then
         Me.Caption = hWebCam.Features.Name & " (" & nFps & " fps)"
         Fps = Now()
         nFps = 0
      End If
   End If
   Tmr.Enabled = True
   
Catch
   
   Message.info(Webcam_error())

End

Public Sub Form_Close()
   
   Tmr.Enabled = False
   hWebCam = Null
   Settings_Save()
   
End

Public Sub FreqUP_Click()
   
   hWebCam.Tuner.Frequency = hWebCam.Tuner.Frequency + 5
   LblFreq.Text = "Tuner frequency: " & hWebCam.Tuner.Frequency
   
End

Public Sub FreqDown_Click()
   
   hWebCam.Tuner.Frequency = hWebCam.Tuner.Frequency - 5
   LblFreq.Text = "Tuner frequency: " & hWebCam.Tuner.Frequency
   
End

Public Sub tbInformation_Click()
   
   Dim sCad As String
   
   sCad = "Device Bus: " & hWebCam.Features.Bus & "\n"
   sCad = sCad & "Device Driver: " & hWebCam.Features.Driver & " Version: " & hWebCam.Features.Version & "\n"
   sCad = sCad & "Device Name: " & hWebCam.Features.Name & "\n"
   sCad = sCad & "Max.Resolution: " & hWebCam.Features.MaxWidth & "x" & hWebCam.Features.MaxHeight & "\n"
   sCad = sCad & "Min. Resolution: " & hWebCam.Features.MinWidth & "x" & hWebCam.Features.MinHeight & "\n"
   Message.Title = "Video Device"
   Message.Info(sCad)
   
End

Public Sub btnTakeShot_Click()
   '------------------------------------------
   'Takes a screen shot, display's a thumbnail
   '------------------------------------------   
   
   Dim TempFile As String 
   
   Try hWebCam.Save(User.Home & "/webcam_shot.png")
   If Not Error Then
      Try $hImage = Image.Load(User.Home & "/webcam_shot.png")
      PictureBox1.Picture = Picture.Load(User.Home & "/webcam_shot.png")
      PictureBox1.Tag = User.Home & "/webcam_shot.png"
      Try Clipboard.Copy($hImage)
   End If
   
End

Public Sub rbResolution_Click()

   dwgVideo.Background = Color.Black
   Wait
   video_resolution = New String[]
   video_resolution = Split(Last.tag, ",")
   Try hWebCam.Resize(video_resolution[0], video_resolution[1])
   resolution = Last.tag

End

Public Function Webcam_error() As String
   
   Return ""
   "An error occurred whilst the webcam was trying to obtain an image.\n\n"
   "Check that it is plugged in correctly, or that the video device is correct, and try again"
   
End

Public Function No_Picture() As String
   
   Return ""
   "There is no picture to insert into the progress notes.\n\n"
   "Please click the 'Take shot' button and try again"
   
End

Public Sub tbnEdit_Click()

  
   Dim hCtrl As Control
   Dim hToolButton As ToolButton
   
   If PictureBox1.Tag = "" Then Return 
   FDraw = New FDrawEditor
   Fdraw.bEditing = True
   Fdraw.Picture_Load(PictureBox1.Tag)
   hToolbutton = Fdraw.btnSave
   hObs = New Observer(hToolbutton) As "DrawEditor_ToolButtons"
   FDraw.ShowModal()
   
End

Public Sub DrawEditor_ToolButtons_Click()
    Dim I As Image
    Dim tempfile As String 
    Print Last.tag
    Select Case Last.tag
     Case "insert picture"
         If Not IsNull(Fdraw.$hImage) Then 
           Try Clipboard.Copy(Fdraw.$hImage) 
             tempFile = Temp() & ".png"
             Fdraw.$hImage.Save(Tempfile)
             PictureBox1.Picture = Picture.Load(tempfile)
          End If
    End Select
    FDraw.Close() 
   
End
