' Gambas class file

Private bExit As Boolean
Private dacc_in_date As Picture = Picture["icons/12/green_dot.png"]
Private dacc_out_of_date As Picture = Picture["icons/12/red_dot.png"]
Private empty_2020png As Picture = Picture["icons/20/empty2020.png"]
Private bShowPatient As Boolean
Private patients As Collection
Private Patient As Collection
Private iTotalDataSetcount As Integer 
Private sSortOrder As String = "ASC"
Private sHba1cSortOrder As String = "ASC"
Private bSortbyHba1c As Boolean = False   
Private LessThan6 As Integer
Private Between6and7 As Integer
Private Between7and7point5 As Integer
Private Between7point5and8 As Integer
Private Over8 As Integer
Private Form_Graph_Hba1c As FGraph
Private Form_Graph_Lipids As FGraph
Private Form_Graph_eGFR As FGraph
Private Form_Graph_Weight As FGraph
Private Form_Graph_BP As FGraph
Private Hba1c_Results As Result
Private Lipid_Results As Result
Private eGFR_Results As Result
Private iGraphFontSize As Integer 'applies to all graphs.
Private DACCS_Overdue As Collection
Private form_pdf As FPdf
Private medications As Collection
Private medications_display_by As String
Private colours As Variant[]
Private total_value As Float = 0
Private values As New Float[]
Private titles As String[]
Private form_Progress_Notes As FProgressNotesViewer
Private iCurrentTab As Integer
Private cTab_Summary As Integer = 0
Private cTab_LastDACC As Integer = 1 
Private cTab_ProgressNotes As Integer = 2
Private cTab_CarePlanning As Integer = 3
Private cTab_Recalls As Integer = 4
Private cTab_StaffTasks As Integer = 5
Private CurrentConsult As CConsult  
Private Patients_Not_Diabetic As Collection
Private form_recalls As FRecalls
Private form_tasks As FStaffTasks
Private form_dacc As FDACC
Private egFRs As Collection

Public Sub Init()
   
   lblHba1cRange.width = lblFindPatient.Width
   cvwPatients.Columns.count = 5
   cvwPatients.Columns[2].Text = "Age"
   cvwPatients.Columns[3].Text = "Last Date" 'is column 5
   cvwPatients.Columns[4].Text = "Hba1c"
   cvwValues.Columns.count = 2
   cvwValues.Columns[0].text = "Date"
   cvwValues.Columns[1].text = "Hba1c"
   cmbSortBy.Add("surname", 0)
   cmbSortBy.Add("age", 1)
   cmbSortBy.Add("hba1c")
   cmbHba1cRange.Add("all")
   cmbHba1cRange.Add("<6.0")
   cmbHba1cRange.Add("6.0-7.0")
   cmbHba1cRange.Add("7.0-7.5")
   cmbHba1cRange.Add("7.5-8.0")
   cmbHba1cRange.Add(">8.0") 
   Colours = New Variant[]
   colours.Add(Color.Blue)
   colours.Add(Color.Red)
   colours.Add(Color.Orange)
   colours.Add(Color.Yellow)
   colours.Add(Color.Green)
   colours.Add(Color.Gray)
   colours.Add(Color.Pink)
   colours.Add(Color.Cyan)
   colours.Add(Color.Magenta)
   colours.Add(Color.DarkBlue)
   colours.Add(Color.DarkGreen)
   
   medications_display_by = "brand"
   SEttings_Load()
   bExit = True   
   
   With Form_Graph_HBa1c = New FGraph(Hbox_GraphHba1c)
      .tbGraphRemove.Visible = False   
      .tbInboxResults_AddGraph.Visible = False  
      .chkGraph_MakeDefault.Visible = False  
      .HBox_Styletypes.Visible = False 
      .Vbox_Left.visible = False
      .VBox_Right.visible = False   
      .pbMeasurementGraph.Background = Color.White
      .slGraphFontSize.value = iGraphFontSize
   End With
   With Form_Graph_Weight = New FGraph(Hbox_GraphWeight)
      .tbGraphRemove.Visible = False   
      .tbInboxResults_AddGraph.Visible = False  
      .chkGraph_MakeDefault.Visible = False  
      .HBox_Styletypes.Visible = False 
      .Vbox_Left.visible = False
      .VBox_Right.visible = False   
      .pbMeasurementGraph.Background = Color.White
      .slGraphFontSize.value = iGraphFontSize
   End With
   With Form_Graph_Lipids = New FGraph(Hbox_GraphLipids)
      .tbGraphRemove.Visible = False   
      .tbInboxResults_AddGraph.Visible = False  
      .chkGraph_MakeDefault.Visible = False
      .HBox_Styletypes.visible = False
      .Vbox_Left.visible = False
      .VBox_Right.visible = False   
      .pbMeasurementGraph.Background = Color.White
      .slGraphFontSize.value = iGraphFontSize
   End With
   With Form_Graph_eGFR = New FGraph(Hbox_GraphEGFR)
      .tbGraphRemove.Visible = False   
      .tbInboxResults_AddGraph.Visible = False  
      .chkGraph_MakeDefault.Visible = False  
      .HBox_Styletypes.Visible = False 
      .Vbox_Left.visible = False
      .VBox_Right.visible = False   
      .pbMeasurementGraph.Background = Color.White
      .slGraphFontSize.value = iGraphFontSize
   End With
   With Form_Graph_BP = New FGraph(Hbox_GraphBP)
      .tbGraphRemove.Visible = False   
      .tbInboxResults_AddGraph.Visible = False  
      .chkGraph_MakeDefault.Visible = False  
      .HBox_Styletypes.Visible = False 
      .Vbox_Left.visible = False
      .VBox_Right.visible = False   
      .pbMeasurementGraph.Background = Color.White
      .slGraphFontSize.value = iGraphFontSize
   End With
   bExit = False 
   Reload()
   cvwPatients_Refresh()
   If cvwPatients.count Then
      cvwPatients.MoveFirst
      cvwPatients.Item.Selected = True
      cvwPatients.SetFocus()
   Endif
   
End

Public Sub cvwPatients_Refresh()       'fixme remove flag                                     
   '----------------------------------------------------------
   'Displays a list of separate patients with their last hab1c
   '----------------------------------------------------------
   
   Dim key As Integer
   
   Gui_Clear()
   cvwPatients.Columns[0].width = 24
   For Each patient In patients  
      key = patient!pk 
      If patient!date_last_dacc = "01/01/1900" Then
         cvwPatients.Add(key, "", empty_2020png)
      Else
         If patient!dacc_overdue = True Then
            cvwPatients.Add(key, "", dacc_out_of_date)
         Else
            cvwPatients.Add(key, "", dacc_in_date)
         Endif
      Endif
      ' cvwPatients.Add(x, "", pic_saved)
      cvwPatients[key][1] = patient!surname & "," & patient!firstname
      cvwPatients[key][2] = patient!age_display
      cvwPatients[key][3] = Format(patient!observation_date, "dd/mm/yyyy")
      cvwPatients[key][4] = patient!value_numeric
   Next
   
End

Public Sub tbRefresh_Click()
   
   Patients_Reload()
   
End

Public Sub Reload()
   '------------------------------------------------------------------------------------
   'Reloads the data for all unique patients with hba1c no ordering into temporary table
   'The data is as yet incomplete, and unordered
   'we will insert new information such as data of last DACC
   '------------------------------------------------------------------------------------   
   
   Dim RDacc As Result
   Dim bDaccOverdue As Boolean
   Dim Latex As String
   Dim date_last_dacc As Date
   Dim seGFR As String  'eg > 90
   Dim egFrAbnormal As Integer
   Dim microalbuminuria_count As Integer
   Dim num_had_dacc_but_overdue As Integer
   Dim num_without_dacc As Integer
 
   Inc Application.Busy
   Gui_Clear()
   LessThan6 = 0 
   Between6and7 = 0
   Between7and7point5 = 0
   Between7point5and8 = 0
   Over8 = 0
   Patients_Not_Diabetic = modResearchDBI.Patients_Not_Diabetic_Get()
   modResearchDBI.Patients_With_Hba1c_Tempory_Table_Create()                  'create the table we will use
   patients = modResearchDBI.Patients_Get_Hba1cs()                            'get unique & latest but unordered and incomplete data
   egFRs = modResearchDBI.Patients_Get_EgfR()
   For Each patient In patients  
      If Not Patients_Not_Diabetic.Exist(patient!fk_patient) Then 
         If patient!value_numeric < 6 Then Inc LessThan6
         If patient!value_numeric >= 6 And patient!value_numeric < 7 Then Inc Between6and7
         If patient!value_numeric >= 7.0 And patient!value_numeric < 7.5 Then Inc Between7and7point5
         If patient!value_numeric >= 7.5 And patient!value_numeric < 8 Then Inc Between7point5and8
         If patient!value_numeric >= 8.0 Then Inc Over8
         bDaccOverdue = False                                                    'default to overdue DACC
         Latex = ""                                                              'default to no Latex
         date_last_dacc = Date(1900, 01, 01)
         RDacc = modResearchDBI.Patient_GetDaysSinceDACC(patient!fk_patient)     'get last DACC days/LaTex
         If patient!fk_patient = 6831 Then
            Print
         Endif
         If RDacc.count Then 
            If Not IsNull(RDacc!days_since_dacc_done) Then
               If RDacc!days_since_dacc_done > 365 Then
                  bDaccOverdue = True  
               Endif
               latex = RDacc!latex
               date_last_dacc = RDacc!date_completed
            Else
               Inc num_without_dacc
            Endif
         Else
            Inc num_without_dacc
         End If   
         If Not IsNull(egFRs[patient!fk_patient]) Then
            seGFR = Str(egFRs[patient!fk_patient]!value_numeric) & egFRs[patient!fk_patient]!qualifier
            If Not IsNull(egFRs[patient!fk_patient]!abnormal) Then
               If egFRs[patient!fk_patient]!abnormal <> "N" Then 
                  Inc egFrAbnormal
                  Print "egfr:", seGFR, egFRs[patient!fk_patient]!abnormal
               End If   
            Endif
         Endif
         modDBConnect.insert("patients_latest_hba1c", ["fk_patient": patient!fk_patient, "fk_person": patient!fk_person, "fk_image": patient!fk_image, "pk_observations": patient!pk_observations, "firstname": patient!firstname, "surname": patient!surname, "wholename": patient!wholename, "birthdate": patient!birthdate, "age_display": patient!age_numeric, "street1": patient!street1, "street2": patient!street2, "suburb": patient!suburb, "postcode": patient!postcode, "observation_date": patient!observation_date, "value_numeric": patient!value_numeric, "date_last_dacc": date_last_dacc, "dacc_overdue": bDaccOverdue, "latex": latex])
      End If   
   Next
   modDBConnect.CommitTrans()
   iTotalDataSetcount = patients.Count
   cvwPatients.Columns[1].text = Str(patients.count) & " patients were found" 
   lblNeverHadDacc.text = Str(num_without_dacc) & " patients (" & As_Percent(num_without_dacc) & ") have none recorded "
   num_had_dacc_but_overdue = modDBConnect.exec_query("Select count(dacc_overdue) as overdue from patients_latest_hba1c where dacc_overdue is true")!overdue
   lblDACCOverdue.text = Str(num_had_dacc_but_overdue) & " patients (" & As_Percent(num_had_dacc_but_overdue) & ") have had a previous DACC but are overdue"
   lblDACCCurrent.text = Str(100 - num_without_dacc - num_had_dacc_but_overdue) & " patients (" & Str(100 - num_without_dacc - num_had_dacc_but_overdue) & "%) have completed a DACC In the Last 12 months"
   
   lblImpariedRenalFunction.text = As_Percent(egFrAbnormal) & " have impaired renal function"
   Make_Pie()
   
   patients = modDBConnect.exec_query_collection("Select * from patients_latest_hba1c ORDER BY surname asc")
   
   Dec Application.Busy
   
End

Public Sub mnuDiabeticPatients_Click()
   '-----------------------------------------------------------------
   'Popup the menu over the patient's list, allow cleaning up of data
   '-----------------------------------------------------------------   
   
   Dim x As Integer
   Dim icount As Integer
   Dim sMsg As String
   
   sMsg = "You have selected to alter the status of %number%  %status%.\n\nThey will no longer appear in "
   "the patients list or the clinical record, but will not actually be removed from the database."
   "\n\nAre you sure you wish to proceed?"
   
   Select Case Last.tag
      Case "change font"
         modUtil.Columnview_SetFont(cvwPatients, "Research_" & Me.name)
      Case "left practice"
         '------------------------------------------------
         'create appropriate message for 1 or more patient
         '------------------------------------------------
         cvwPatients.MoveFirst
         For x = 0 To cvwPatients.count - 1
            If cvwPatients.Item.Selected = True Then
               Inc icount 
            End If    
            cvwPatients.MoveNext
         Next
         If icount = 1 Then 
            Message.Title = "Marking a Patient as Left The Practice"
            sMsg = Replace(sMsg, "%number%", "a patient")
            sMsg = Replace(sMsg, "%status%", "who has left the practice")  
         Else If icount > 1 Then
            Message.Title = "Marking Patients as Left The Practice"
            sMsg = Replace(sMsg, "%number%", "a number of patients")
            sMsg = Replace(sMsg, "%status%", "who have left the practice")
         Endif
         If Message.Question(sMsg, "Yes", "No") = 2 Then Return
         '---------------------
         'User wants to proceed
         '---------------------
         modDBConnect.exec_query("drop table patients_latest_hba1c") 
         cvwPatients.MoveFirst
         For x = 0 To cvwPatients.count - 1
            If cvwPatients.Item.Selected = True Then
               patient = patients[cvwPatients.Item.Key]
               modDBConnect.update("clerical.data_patients", Null, ["pk": patient!fk_patient, "active_status": "i"])
               modDBConnect.CommitTrans()
            Endif
            cvwPatients.MoveNext 
         Next    
         Reload()
         cvwPatients_Refresh()
         If cvwPatients.count Then
            cvwPatients.MoveFirst
            cvwPatients.Item.Selected = True
            cvwPatients.SetFocus()
         Else
            'bumma none are left 
            Gui_Clear()
         Endif
      Case "mark not diabetic"
         modDBConnect.exec_query("drop table patients_latest_hba1c")   
         modResearchDBI.Patient_Not_Diabetic_Mark(patient!fk_patient)
         modDBConnect.CommitTrans()
         Reload()
         cvwPatients_Refresh()
         If cvwPatients.count Then
            cvwPatients.MoveFirst
            cvwPatients.Item.Selected = True
            cvwPatients.SetFocus()
         Else
            'bumma none are left 
            Gui_Clear()
         Endif
      Case "mark deceased"
         '------------------------------------------------
         'create appropriate message for 1 or more patient
         '------------------------------------------------
         cvwPatients.MoveFirst
         For x = 0 To cvwPatients.count - 1
            If cvwPatients.Item.Selected = True Then
               Inc icount 
            End If    
            cvwPatients.MoveNext
         Next
         If icount = 1 Then 
            Message.Title = "Marking a Patient as Deceased"
            sMsg = Replace(sMsg, "%number%", "a patient")
            sMsg = Replace(sMsg, "%status%", "who has died")  
         Else If icount > 1 Then
            Message.Title = "Marking Patients as Deceased"
            sMsg = Replace(sMsg, "%number%", "a number of patients")
            sMsg = Replace(sMsg, "%status%", "who have died")
         Endif
         If Message.Question(sMsg, "Yes", "No") = 2 Then Return
         '---------------------
         'User wants to proceed
         '---------------------
         modDBConnect.exec_query("drop table patients_latest_hba1c")  'will have to be refreshed
         cvwPatients.MoveFirst
         For x = 0 To cvwPatients.count - 1
            If cvwPatients.Item.Selected = True Then
               patient = patients[cvwPatients.Item.Key]
               
               modDBConnect.update("contacts.data_persons", Null, ["pk": patient!fk_person, "deceased": True]) 'mark person deceased
               modDBConnect.CommitTrans()
            Endif
            cvwPatients.MoveNext
         Next    
         Reload()
         cvwPatients_Refresh()
         If cvwPatients.count Then
            cvwPatients.MoveFirst
            cvwPatients.Item.Selected = True
            cvwPatients.SetFocus()
         Else
            'bumma none are left 
            Gui_Clear()
         Endif
   End Select 
   
End

Public Sub cvwPatients_Menu()
   
   If Last.count Then mnuDiabeticPatients.popup()
   
End

Public Sub cvwPatients_Select()
   
   cvwPatients.MoveCurrent()
   patient = patients[cvwPatients.Item.Key]
   Patient_Display()
   
End

Public Sub Patient_Display_Summary()
   
   Consult_CheckStarted()
   pbPatientPicture.Picture = Null
   lblPatientName.text = modStrings.CapitaliseWord(patient!wholename)
   tlPatientDetails.text = ""
   tlPatientDetails.text &= "Age:" & patient!age_display & "<BR>"
   tlPatientDetails.text &= "DOB:" & patient!birthdate & "<BR>"
   tlPatientDetails.text &= Patient!street1 & "<BR>"
   If Not IsNull(patient!street2) Then
      tlPatientDetails.text &= Patient!street2 & "<BR>"
   Endif
   tlPatientDetails.text &= Patient!town & " " & patient!postcode & "<BR><BR>"
   Try pbPatientPicture.Picture = modContactsDBI.Person_Get_Photo(patient!fk_image)
   medications = modPrescribingDBI.Prescriptions_Written(patient!fk_patient)
   modPrescribingDBI.Prescriptions_Fill_Columnview(cvwMedications, medications, medications_display_by, True) 'active meds
   cvwMedications.Height = (cvwMedications.count + 1) * 18
   If Year(patient!date_last_dacc) = 1900 Then
      lbllastDacc.text = "NONE RECORDED"
   Else
      Try lbllastDacc.text = Format(patient!date_last_dacc, "dd/mm/yyyy")
      If patient!dacc_overdue = True Then
         lbllastDacc.text &= "  [OVERDUE]"
      Endif
   End If   
   Try label101.text = Format(patient!observation_date, "dd/mm/yyyy")
   If Error Then
      label101.text = "NIL RECORDED"
   Endif
   Hba1c_ShowGraph
   Lipids_ShowGraph
   EGFR_ShowGraph
   Weight_ShowGraph
   BP_ShowGraph '
   
End

Public Sub Patient_Display_Notes()
   
   Consult_CheckStarted()
   If IsNull(form_Progress_Notes) Then 
      form_Progress_Notes = New FProgressNotesViewer(VBox_ProgressNotes)
   End If   
   form_Progress_Notes.Init(currentconsult, modProgressNotes.AllProgressNotes_Construct_Html(currentconsult)) 
   
End

Public Sub Patient_Display_DACC()
   
   ' If IsNull(form_pdf) Then
   '    With form_pdf = New FPdf(VBox_DACC)
   '       .visible = True  
   '       .btZoomIn.Visible = True
   '       .btZoomOut.Visible = True  
   '       .BtPrint.Visible = True 
   '    End With
   ' Endif
      If IsNull(form_dacc) Then
      With form_dacc = New FDacc(VBox_DACC)
            .Init(currentconsult)
      End With
   Endif
 '  Dacc_View_Last()
   
End

Public Sub Patient_Recalls()
   
   Consult_CheckStarted()
   If IsNull(form_recalls) Then
      form_recalls = New FRecalls(Vbox_Recalls)
      form_recalls.Init(CurrentConsult)
   Endif
   
End

Public Sub Patient_StaffTasks()
   
   Consult_CheckStarted()
   If IsNull(form_tasks) Then
      form_tasks = New FStaffTasks(Vbox_Staff_Tasks)
      form_tasks.Init()
   Endif
   
End

Public Sub Patient_Display()
   '-----------------------------------------------------
   'display a summary of the patients diabetes parameters
   '-----------------------------------------------------
   'If bShowPatient = False Then Return    'if user is multi-selecting from the list
   
   lblPatientName.text = patient!title & " " & patient!wholename
   currentconsult = Null
   Select Case iCurrentTab
         
      Case cTab_Summary
         Patient_Display_Summary
      Case cTab_ProgressNotes
         Patient_Display_Notes
      Case cTab_LastDACC
         Patient_Recalls()
   End Select
   Return 
   
End

Public Sub Weight_ShowGraph()
   
   Dim R As Result
   
   With Form_Graph_Weight
      .Set_fk_Patient(Patient!fk_patient)
      .Graph(Null, "", "weight")
   End With 
   
End

Public Sub Lipids_ShowGraph()
   
   Dim R As Result
   
   With Form_Graph_Lipids
      .Set_fk_Patient(Patient!fk_patient)
      .Graph(Null, const.Loinc_TotalCholesterol, "HDL")
   End With 
   
End

Public Sub EGFR_ShowGraph()
   
   With Form_Graph_EGFR
      .Set_fk_Patient(Patient!fk_patient)
      .Graph(Null, const.Loinc_EGFR, "eGFR")
   End With 
   
End

Public Sub BP_ShowGraph()
   
   With Form_Graph_BP
      .Set_fk_Patient(Patient!fk_patient)
      .Graph(Null, "", "blood pressure")
   End With 
   
End

Public Sub Hba1c_ShowGraph()
   
   Dim R As Result
   ' 
   ' sql = "Select * from documents.vwObservations WHERE loinc =$$"
   ' sql &= const.Loinc_HBA1c & "$$ AND fk_patient =" & patient!fk_patient & " order by observation_date Desc "
   ' Hba1c_Results = modDBConnect.exec_query(sql) 
   ' cvwValues.Clear()
   ' For Each Hba1c_Results
   '    cvwValues.Add(Hba1c_Results!pk, 0)
   '    cvwValues[Hba1c_Results!pk][0] = Format(Hba1c_Results!observation_date, "dd/mm/yyyy")
   '    cvwValues[Hba1c_Results!pk][1] = Hba1c_Results!value_numeric
   ' Next
   ' lblDate.width = cvwValues.Columns[0].Width
   ' lblDate.text = "Date"
   ' lblValues.text = "HbA1c"
   ' lblValues.width = cvwValues.columns[1].width
   With Form_Graph_HBA1c
      .Set_fk_Patient(Patient!fk_patient)
      .Graph(Null, const.Loinc_HBA1c, "Hba1c")
   End With 
   
End

Public Sub rbSortAscendingDescending_Click()
   
   sSortOrder = Last.tag   
   Patients_Reload()   
   
End

Public Sub cmbsortBy_Click()
   
   Patients_Reload()   
   
End

Public Sub Patients_Reload()
   
   Dim fieldname As String
   Dim sql As String
   Dim iNoPatient_In_Range As Integer
   
   Select Case cmbSortBy.text
      Case "hba1c"
         fieldname = "value_numeric"
      Case "age"
         fieldname = "age_display"
      Case "surname"
         fieldname = "surname"
   End Select
   sql = "Select * from patients_latest_hba1c "
   Select Case cmbHba1cRange.Text
      Case "<6.0"
         iNoPatient_In_Range = LessThan6
         sql &= "WHERE value_numeric < 6 "
      Case "6.0-7.0"
         iNoPatient_In_Range = Between6and7
         sql &= " WHERE value_numeric between 6 and 7 "
      Case "7.0-7.5"
         iNoPatient_In_Range = Between7and7point5 
         sql &= " WHERE value_numeric between 7 and 7.5 "
      Case "7.5-8.0"  
         iNoPatient_In_Range = Between7point5and8 
         sql &= " WHERE value_numeric between 7.5 and 8 "
      Case ">8.0" 
         sql &= " WHERE value_numeric > 8"
   End Select
   If Trim(txtSearch.text) <> "" Then
      If InStr(sql, "value_numeric") Then
         sql &= " AND "
      Else
         sql &= " WHERE "
      End If   
      sql &= "surname ILIKE $$%" & Trim(txtSearch.text) & "%$$"
   Endif
   Patients = modDBConnect.exec_query_collection(sql & " order by " & fieldname & " " & sSortOrder)
   cvwPatients_Refresh()   
   If cvwPatients.count And Trim(txtSearch.text) = "" Or cvwPatients.count = 1 Then
      cvwPatients.MoveFirst
      cvwPatients.Item.Selected = True
      cvwPatients.SetFocus()
      cvwPatients.Columns[0].text = Str(patients.count)
      If cmbHba1cRange.text <> "all" Then
         cvwPatients.Columns[0].text &= " (" & As_Percent(iNoPatient_In_Range) & ")"
      End If    
   Endif
   
End

Public Sub cmbHba1cRange_Click()
   
   Patients_Reload()   
   
End

Private Sub Gui_Clear()
   
   cvwPatients.Clear 
   cvwValues.Clear
   Form_Graph_Hba1c.Measurement_Graph_Picture_Clear
   Form_Graph_Lipids.Measurement_Graph_Picture_Clear
   Form_Graph_EGfr.Measurement_Graph_Picture_Clear
   Form_Graph_BP.Measurement_Graph_Picture_Clear
   Form_Graph_Weight.Measurement_Graph_Picture_Clear
   
End

Public Sub txtSearch_KeyRelease()
   '----------------------------------------------------
   'Except in hospital won't have many patients
   'so not using timer - if you want one I'll put one in
   '----------------------------------------------------
   
   If Not IsNull(patients) Then Patients_Reload()
   
End

Public Sub txtSearch_GotFocus()
   
   txtSearch.text = ""  
   
End

Public Sub txtSearch_KeyPress()
   
   If key.code = key.down Then
      If cvwPatients.count Then
         cvwPatients.MoveFirst
         cvwPatients.Item.Selected = True
         cvwPatients.SetFocus()
      End If
   Endif
   
End

Private Sub SEttings_Load()
   
   Hsplit1.Layout = Settings["Research_" & Me.name & "/Hsplit1.layout"] 
   Hsplit_PatientData.Layout = Settings["Research_" & Me.name & "/Hsplit_PatientData.layout"] 
   iGraphFontSize = Settings["Research_" & Me.name & "/graph_font.size", 3]
   Try cvwPatients.Font = Font[Settings["Research_" & Me.name & "/cvwPatients.font"]]
   
End

Public Sub Settings_Save()
   
   Settings["Research_" & Me.name & "/Hsplit1.layout"] = Hsplit1.Layout
   Settings["Research_" & Me.name & "/graph_font.size"] = iGraphFontSize
   Settings["Research_" & Me.name & "/Hsplit_PatientData.layout"] = Hsplit_PatientData.Layout
   
End

Public Sub SpinBox1_Change()
   
   If bExit Then Return  
   SpinBox1.Refresh()
   SpinBox1.Enabled = False
   Inc Application.Busy
   Form_Graph_Hba1c.slGraphFontSize.value = Last.value
   Form_Graph_Lipids.slGraphFontSize.value = Last.value
   Form_Graph_eGFR.slGraphFontSize.value = Last.value
   Dec Application.Busy
   SpinBox1.Enabled = True 
   
End

Public Sub rbMedications_Click()
   
   medications_display_by = Last.tag 
   modPrescribingDBI.Prescriptions_Fill_Columnview(cvwMedications, medications, medications_display_by, True) 'active meds
   
End

Public Function As_Percent(num As Integer) As String
   
   Return Str(Round((num / iTotalDataSetcount) * 100)) & "%"
   
End

Public Sub Make_Pie()
   '----------------------------------------------- 
   'Display the pie chart + labels with percentages
   '-----------------------------------------------
   
   Dim tp As Integer = patients.Count
   
   Titles = New String[]
   values.Clear()
   AddSlice("<6 (" & As_Percent(LessThan6) & ")", LessThan6)
   AddSlice("6-7 (" & As_Percent(Between6and7) & ")", Between6and7)
   AddSlice("7-7.5 (" & As_Percent(Between7and7point5) & ")", Between7and7point5)
   AddSlice("7.5-8 (" & As_Percent(Between7point5and8) & ")", Between7point5and8)
   AddSlice(">8 (" & As_Percent(Over8) & ")", Over8)
   
End

Public Sub AddSlice(title As String, value As Float)
   
   If titles.Length >= 11 Then Error.Raise("Not enough colours for the pie chart")
   total_value += value
   values.Add(value)
   titles.Add(title)
   
End

Public Sub DrawingArea1_Draw()
   
   Dim i As Integer
   Dim x2 As Integer = CInt(DrawingArea1.Width * 0.5) ' half: i.e. the midpoint
   Dim y2 As Integer = CInt(DrawingArea1.Height * 0.5)
   Dim mid_radians As Float ' middle of pie: angle for point of text
   Dim text_x As Integer
   Dim text_y As Integer  
   Dim values_thus_far As Float = 0
   
   Draw.FillStyle = Fill.Solid
   
   For i = 0 To values.Max
      Draw.FillColor = colours[i]
      Draw.Ellipse(x2 / 2, y2 / 2, x2, y2, values_thus_far / total_value * 2 * Pi, (values_thus_far + values[i]) / total_value * 2 * Pi)
      mid_radians = (values_thus_far + (values[i] / 2)) / total_value * 2 * Pi
      text_x = CInt(x2 + (Cos(mid_radians) * x2 * 0.6))
      text_y = CInt(y2 - (Sin(mid_radians) * y2 * 0.6))
      If text_x < x2 Then ' it's to the left of the midline
         text_x -= Draw.TextWidth(titles[i])
      Endif
      Draw.Text(titles[i], text_x, text_y)
      values_thus_far += values[i]
   Next
   
End

Public Sub Dacc_View_Last()
   '--------------------------------------------------------
   'If it exists, then view the latex as pdf of the last DCC
   '-------------------------------------------------------- 
   
  
   If Not IsNull(patient!latex) Then
      With form_pdf
         .Load_PDF(modPrinting.Latex_To_PDF(patient!latex))
      End With
   Else
      TabStrip1.index = cTab_Summary
      Message.Info("Missing latex definition, sorry........")   
   Endif  
   
End

Public Sub Consult_CheckStarted()
   
   If IsNull(currentconsult) Then  
      currentconsult = New CConsult(Patient)           'Each patient has a new consult 
      'there is no commit until the consult type is set
      'currentconsult.Set(const.ConsultType_NotesPatientNotPresent, "diabetes audit") 
   End If
   
End

Public Sub TabStrip1_Click()
   
   iCurrentTab = Last.index
   Select Case Last.Index
      Case cTab_Summary
         Patient_Display_Summary()
      Case cTab_LastDACC
         Patient_Display_DACC
      Case cTab_ProgressNotes
         Patient_Display_Notes()      
      Case cTab_CarePlanning
      Case cTab_StaffTasks 
         Patient_StaffTasks  
      Case cTab_Recalls
         Patient_Recalls 
   End Select
   
End

Public Sub tbStats_Click()
   '---------------------------------------------------------------------
   'Filter diabetic cycle of care patients as "due", "overdue", "in date"
   '---------------------------------------------------------------------
   patients = modResearchDBI.Diabetic_Cycle_Of_Care_Status(Last.tag)  
   cvwPatients.Columns[1].text = Str(patients.count) & "/" & Str(iTotalDataSetcount) & " " & Last.tag
   cvwPatients_Refresh() 
   
End

Public Sub Form_KeyPress()
   
   Dim ctrlDown As Boolean
   
   ' If CtrlDown = key.Control Then
   '   bShowPatient = False 
   '   Print "the ctrl key is down"
   ' Else
   '    bShowPatient = True  
   ' Endif
   
End

Public Sub cvwMedications_Leave()
   
   Last.ScrollBar = Scroll.None
   
End

Public Sub cvwMedications_Enter()
   
   If Last.count Then Last.ScrollBar = Scroll.Horizontal
   
End

Public Sub tbReport_Click()

   modUtil.NotImplemented("Generating the report")

End
