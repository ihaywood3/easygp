' Gambas class file

' Copyright (C) 2008-2014 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' A form for doing research, like the Pen or Canning tools for MDW only better!
'------------------------------------------------------------------------------
Private $Result As Result
Private Settings As Settings
Private Groupers As Collection 
Private Grouper As String
Private keywords As Collection 
Private KeywordGroupers As Collection 
Private KeywordGrouper As Collection 
Private currentKeywordGrouper As CICPCKeywordGrouper
Private Patients As Collection
Private Patient As Collection 
Private bexit As Boolean
Private Form_Help As FHtmlViewer

Public Sub Form_Close()
   
   Settings_Save()
   
End

Public Sub init()
   '  KeywordGroupers = New Collection
   
   Try Settings_Load()
   cvwPatients_ProblemActive.Columns.count = 2
   cvwPatients_ProblemInactive.Columns.count = 2
   With form_help = New FHtmlViewer(Vbox_Help)
      .tbWebBrowserZoomIn.Visible = True
      .tbWebBrowserZoomOut.Visible = True 
   End With
   form_help.Help_Show("maintaining-vaccination-schedules.html")
   
End

Public Sub Settings_Save()
   
 Try Settings["FHealthIssuesResearch/HSplit_Research.layout"] = HSplit_Research.Layout
   
   '  Settings["FHealthIssuesResearch/VSplit_Research.layout"] = VSplit_Research.layout
   
End

Public Sub Settings_Load()
   
   HSplit_Research.layout = Settings["FHealthIssuesResearch/HSplit_Research.layout", modUtil.HSplit([1, 1])] 
   '  VSplit_Research.layout = Settings["FHealthIssuesResearch/VSplit_Research.layout", modUtil.VSplit([1, 1])] 
   cvwPatients_ProblemActive.font = Font[Settings["FHealthIssuesResearch/cvwPatients.font", "DejaVu Sans,9"]] 
   
End
' Public Sub DrawingArea1_Draw()
'   Chart.Width = DrawingArea1.Width
'   Chart.Height = DrawingArea1.Height
'   Chart.Draw()
'   
' End
' Public Sub DrawingArea2_Draw()
'   Chart1.Width = DrawingArea2.Width
'   Chart1.Height = DrawingArea2.Height
'   Chart1.Draw()
'   
' End
' Sub Display_HBA1c_Distribution()
'    Dim i As Integer
'    '------------------------------------------------------------
'    'Display the distribution of hba1c in the diabetic population
'    '------------------------------------------------------------
'    $Result = modStatsDBI.Hba1c_Distribution()
'    tvData.Rows.Count = $Result.count
'    tvData.columns.count = 2
'   For Each $Result
'    tvData[i, 0].text = $Result!XAxes_text
'    tvData[i, 1].text = $Result!count
'    Inc i
'   Next
' End
' Public Sub start_here()
' 'Chart = New Chart
' Chart.Legend.Title = "Legend"
' Chart.Legend.Visible = True
' Chart.Title.Visible = True
' Chart.Title.Text = "Hba1c Distribution"
' Display_HBA1c_Distribution
' 'tvdata.Columns.Count = 2
' 'tvData.Rows.Count = 4
' 'tvData.Header = tvData.Both
' 'tvdata.Columns[0].Text = "Headers"
' 'tvdata.Columns[1].Text = "Set 1"
' SetChartValues()
' End 
' Private Sub SetChartValues()
'  Dim XAxes_Descriptor As New String[]
'   
'   Dim ars As New String[]
'   Dim arf As New Float[]
'   Dim i As Integer
'   Dim j As Integer
'   
'   Chart.CountDataSets = tvData.Columns.Count - 1
'   
'   'For i = 0 To tvdata.Rows.Count - 1
'    ' ars.Add(tvdata[i, 0].Text)
'   'Next
'   For j = 0 To tvData.Columns.Count - 2
'     arf = New Float[]
'     For i = 0 To tvdata.Rows.Count - 1
'       Try arf.Add(CFloat(tvdata[i, J + 1].Text))
'       If Error Then arf.Add(0)
'       Chart[J].Text = tvdata[i, 0].Text
'       ars.Add(tvdata[i, 0].Text)
'     Next
'     Chart.Headers.Values = ars
'     Chart[J].Values = arf
'     Chart[J].Text = tvdata.Columns[J + 1].Text
'     ' Chart[J].Text = tvdata[i, J + 1].Text
'   Next
'   ' Chart.Headers.Values = ars
'   DrawingArea1.Refresh()
'  
' End
' Public Sub Age_Pie()
'    Dim aFont As Font
'    Dim smsg As String
'    '------------------------------------
'    'Displays all current BP measurements
'    'with FIXME - USER DEFINED LIMIT
'    '-------------------------------------
'   ' VBox_DrawingArea.Visible = False
'    'Vbox_Measurements.Visible = False
'    'Vbox_Range.Visible = False
'    'tlMeasurements.Visible = False
'   ' Hbox_TableViews.Padding = 0
'    ' If Not modMeasurementsDBI.Measurements_Display(EasyGP.p, tvwMeasurements, gvar.Measurement_BP) Then
'    '    sMsg = "<P><B>< ALIGN=CENTER>Blood Pressure Measurements></B><P>"
'    '           "There are no values for blood pressure saved to the database.<BR><BR>"
'    '           "You may enter the blood pressure in the notes using the following format:<BR><BR>" 
'    '           "bp=170/90<BR><BR>"
'    '           "Note: there must be no spaces between the letters 'bp', the sign '=' and the numbers, "
'    '           "and the program will only recognise a valid blood pressure format "
'    '           "such as the example above i.e<BR>" 
'    '           " bp = 170/90 will not trigger the formatting function.<BR><BR>"
'    '           "Save the patients record (F12=save, or click the save icon on the task bar "
'    '           "<img align=LEFT border=0 name=graphics src='icons/16/filesave1616.png')"
'    '        sMsg &= "<P></P>"    
'    '           "The blood pressure will appear in the following format in the clinical notes and will be "
'    '           "available for graphing:<BR><BR>"
'    '           "<a href='blood pressure'> blood pressure=134/70 mmhg </a" 
'    '    Hbox_TableViews.Padding = 5   
'    '    tlMeasurements.text = sMsg
'    '    tlMeasurements.Visible = True
'    '    Return
'    ' 
'    ' End If
'   ' graphtype = gvar.Measurement_BP
'   ' Vbox_Range.Visible = False
'   ' VBox_DrawingArea.Visible = True
'   ' Vsplit1.Layout = Settings["Consult Notes Graphs BP/Vsplit1"]
'   ' Vsplit_Left.Layout = Settings["Consult Notes Graphs BP/Vsplit_Left"]
'   ' Hbox_TableViews.Visible = True
'   ' lblMeasurements.text = "Blood Pressure"
'   ' 
'  ' SetChartValues_age()
' '  aFont = Font[Settings["Consult Notes Graphs BP/GraphXY Font"]]
'  ' Chart.XAxe.Font = AFont
'  ' Chart.YAxe.Font = aFont
'  ' Slider1.Value = AFont.size
'  ' tvwMeasurements.Visible = True
'   'Vbox_Measurements.Visible = True
' 
' End
' Private Sub SetChartValues_Hba1c()
'   
'   Dim XAxes_Descriptor As New String[]
'  
'   Dim Hba1c_Values As New Float[]
'   Dim i As Integer
'   Dim j As Integer
'   Dim aFont As font
''  ' Chart = New chart
'   DrawingArea1.Clear()
'   DrawingArea2.Clear()
'   '------------------------------------------------------------------------------
'   'A note on the  behaviour of this graph control
'   '
'   'If the Title is set to a null string, then it occupies no space at the top
'   'This seems to affect the x-axes names height (they squish up), hence I have
'   'set an font size for the header and a blank title "   ", which fixes the 
'   'problem. This will probably change when the graph control is released in 2009
'   'currently setting the legend for a point set eg chart[1].name, dosn't work
'   '------------------------------------------------------------------------------
'   
'    With chart
'       .type = ChartType.columns
'       .Legend.Title = "Legend"                  'the legend at the right
'       .Legend.Visible = True                   'switched this off, ?don't need is obvious
'       .Legend.Position = Align.Right   
'       .title.Font = Font["Arial,22"]            'keep this see note above
'       .Title.Text = "   " 
'       .title.Visible = True
'       .BackColor = Color.White
'       .YAxe.ShowIntervalLines = False
'       .XAxe.ShowIntervalLines = False
'      ' .YAxe.ShowIntervalLines = True
'        .CountDataSets = 1                    'systolic/diastolic, range ul, ll
'       .Border = False
'       
'    End With
'    chart.Count = 2
' '   tvwMeasurements.ToolTip = "" 
'    '-----------------------------------------------------
'    'Default from-to to the range of patients measurements
'    'FIXME - Put a default last n months as user defaults
'    '----------------------------------------------------
'   ' txtGraphFrom.text = tvwMeasurements.Columns[tvwMeasurements.Columns.Count - 2].text
'    'txtGraphTo.text = tvwMeasurements.Columns[1].text
'     '------------------------------------------------------------
'     'Calculate systolic and diastolic measurements for each date
'     '------------------------------------------------------------
'     For Each $Result
'          XAxes_Descriptor.Add($Result!XAxes_text)
'          chart.Headers.Values = XAxes_Descriptor 
'  UL.Add(CFloat(10.0))
'                
'               Hba1c_Values.Add(CFloat(Format($Result!count, "##.0")))
'              'age.Add(CFloat(10.0))
'            '   Format(bpVal[0], "###.0")))
'             '  systolic.Add(CFloat(Format(bpVal[0], "###.0")))
'             '  tvwMeasurements.ToolTip &= tvwMeasurements.Columns[j].text & ":" & tvwMeasurements[0, j].Text & "\n"
'      Next
'-----------------------------------------------------
'     'plot systolic and diastolic measurement for each date
'     'and name the Legends
'     '-----------------------------------------------------
'     'chart[0].Values = Hba1c_Values
'     'Chart[1].Values = age
'     chart.Headers.Values = XAxes_Descriptor
'      DrawingArea1.Visible = True
'      DrawingArea1.Refresh
' End

Public Sub EditArea_TextBox_LostFocus()
   
   Last.BackGround = Color.white
   
End

Public Sub EditArea_TextBox_GotFocus()
   
   Last.BackGround = Color.rgb(95, 255, 175)
   Select Case Last.tag
      Case "keyword"
         ' 
         ' With listview1
         '     .left = txtKeyword.Left
         '     .top = Hbox_Keyword.Top + Hbox_Keyword.height
         '     .width = txtKeyword.Width
         '    ' .Raise()
         ' End With
      Case "group"
         ' With listview1
         '    .left = txtGrouper.Left
         '    .top = Hbox_Group.Top + Hbox_Group.Height
         '    .width = txtGrouper.Width
         '    ' .Raise()
         ' End With
   End Select
   
End

Public Sub EditArea_TextBox_Keypress()
   
   '   fixme PUT IN KEY VALIDATION
   If bexit Then Return
   Select Case Key.Code
      Case Key.Enter
         
      Case Key.Down
         If listview1.Visible Then
            listview1.SetFocus()
         End If   
   End Select
   
End

Public Sub listview1_KeyPress()
   
   If Key.code = Key.return Then
      listview1_DblClick()
   End If
   
End

Public Sub listview1_DblClick()
   '---------------------------------------------------
   'The tag of the list is a the calling textbox control
   '----------------------------------------------------
   
   Select Case Last.tag.tag
         'Case "keyword"
         'keyword_grouper_select()
      Case "grouper"
         Grouper_Select()
   End Select
   
End

Public Sub Grouper_Select()
   '-------------------------------------------
   'Selects the grouper to find the patients on
   '-------------------------------------------
   
End

Public Sub keyword_grouper_select()
   '--------------------------------
   'Selects the keyword to search on
   '--------------------------------
   '
   
   lvwsubgroups.MoveCurrent()
   ' currentKeywordGrouper = KeywordGroupers[lvwsubgroups.Item.key]
   grouper = KeywordGroupers[lvwsubgroups.Item.key]!grouper
   txtKeyword.text = KeywordGroupers[lvwsubgroups.Item.key]!keyword
   '  txtGrouper.text = KeywordGroupers[lvwsubgroups.Item.key]!grouper_description
   Reload
   
End

Public Sub Reload()
   
   patients = modResearchDBI.Patients_Get_For_Grouper(grouper)
   lblqueryResulttotal.text = "There are " & Patients.count & " patients in this group"
   If Patients.count Then
      Patients_Refresh
   Endif
   
End

Public Sub Patients_Refresh()
   
   Dim x As Integer
   Dim y As Integer
   
   cvwPatients_ProblemActive.Clear()
   cvwPatients_ProblemInactive.Clear()
   
   For Each patient In patients
      If patient!health_issue_active = True Then
         cvwPatients_ProblemActive.Add(patient!pk_view, 0)
         cvwPatients_ProblemActive[patient!pk_view][0] = patient!firstname & " " & patient!surname
          cvwPatients_ProblemActive[patient!pk_view][1] = patient!health_issue_description
         Inc x
      Else
         cvwPatients_ProblemInactive.Add(patient!pk_view, 0)
         cvwPatients_ProblemInactive[patient!pk_view][0] = patient!firstname & " " & patient!surname
          cvwPatients_ProblemInActive[patient!pk_view][1] = patient!health_issue_description
         Inc y
      End If    
   Next
   lblqueryResultsActive.Text = "Total:" & Str(x)
   lblqueryResultsInactive.text = "Total:" & Str(y)
End

Public Sub EditArea_TextBox_KeyRelease()
   
   If bexit Then Return
   Select Case Last.tag
         
      Case "keyword"
         KeywordGroupers_Get
      Case "grouper"
         ' Groupers = modResearchDBI.Grouper_Select(Last, listview1)
   End Select
   
End

Public Sub btnHBA1c_Click()
   
   Dim R As Result
   
   R = modStatsDBI.Hba1c_Distribution()
   
End

Public Sub KeywordGroupers_Get()
   '--------------------------------------------------------------------
   'Searches the grouper view vwIcpcKeywordGroupers according to keyword
   '
   'From ICPC Documentation:
   '
   ' 1. Keyword entry – list matching groupers
   ' The User must be able to type in a keyword and 
   ' given the choice of groupers which are linked
   '
   'e.g: If you type in diab then you would get a list of all groups
   '     related to diabetes:
   '                          RETINOPATHY
   '                          DIABETES (ALL)
   '                          DIABETES (NON GESTATIONAL)
   '                          GESTATIONAL DIABETES
   '                          DIABETES INSULIN DEPENDANT
   '           ETC ETC
   '  from this the user can select what it is they want to search for
   '
   ' Finds  grouper_descriptions like keyword
   ' loads these into the calling form grouper collection
   ' displays grouper description in popup listbox
   ' adds tag of calling textbox as the listbox tag
   '------------------------------------------------------------- -------  
   
   Dim x As Integer
   
   KeywordGroupers = modUtil.Copy_Collection_Keyed_Sequentially(modResearchDBI.Grouper_Select(Trim(txtKeyword.text)))
   lvwSubGroups.Clear
   For Each KeywordGrouper In KeywordGroupers
      lvwSubGroups.Add(x, KeywordGrouper!grouper_description)
      Inc x
   Next
   
End

Public Sub Button1_Click()
   
   Patients = New Collection
   patients = modResearchDBI.Patients_Get_For_Grouper(currentKeywordGrouper.grouper, cvwPatients_ProblemActive)
   
End

Public Sub lvwsubgroups_Select()
   
   keyword_grouper_select()
   
End

Public Sub lvwSubGroups_DblClick()
   
   keyword_grouper_select()
   
End

Public Sub cvwPatients_ProblemActive_Menu()
   
   If cvwPatients_ProblemActive.count Then
      mnuPatients.Popup
   Endif
   
End

Public Sub mnuPatients_Click()
   
   Dim x As Integer
   Dim icount As Integer
   Dim sMsg As String
   
   sMsg = "You have selected to alter the status of %number%  %status%.\n\nThey will no longer appear in "
   "the patients list or the clinical record, but will not actually be removed from the database."
   "\n\nAre you sure you wish to proceed?"
   Select Case Last.tag 
      Case "left practice"
         'create appropriate message for 1 or more patient
         '------------------------------------------------
         cvwPatients_ProblemActive.MoveFirst
         For x = 0 To cvwPatients_ProblemActive.count - 1
            If cvwPatients_ProblemActive.Item.Selected = True Then
               Inc icount 
            End If    
            cvwPatients_ProblemActive.MoveNext
         Next
         If icount = 1 Then 
            Message.Title = "Marking a Patient as Left The Practice"
            sMsg = Replace(sMsg, "%number%", "a patient")
            sMsg = Replace(sMsg, "%status%", "who has left the practice")  
         Else If icount > 1 Then
            Message.Title = "Marking Patients as Left The Practice"
            sMsg = Replace(sMsg, "%number%", "a number of patients")
            sMsg = Replace(sMsg, "%status%", "who have left the practice")
         Endif
         If Message.Question(sMsg, "Yes", "No") = 2 Then Return
         '---------------------
         'User wants to proceed
         '---------------------
         cvwPatients_ProblemActive.MoveFirst
         For x = 0 To cvwPatients_ProblemActive.count - 1
            If cvwPatients_ProblemActive.Item.Selected = True Then
               patient = patients[cvwPatients_ProblemActive.Item.Key]
               modDBConnect.update("clerical.data_patients", Null, ["pk": patient!fk_patient, "fk_lu_active_status": const.PatientStatus_Inactive])
               modDBConnect.CommitTrans()
            Endif
            cvwPatients_ProblemActive.MoveNext 
         Next    
         Goto Reload_DATA
      Case "mark deceased"
         '------------------------------------------------
         'create appropriate message for 1 or more patient
         '------------------------------------------------
         cvwPatients_ProblemActive.MoveFirst
         For x = 0 To cvwPatients_ProblemActive.count - 1
            If cvwPatients_ProblemActive.Item.Selected = True Then
               Inc icount 
            End If    
            cvwPatients_ProblemActive.MoveNext
         Next
         If icount = 1 Then 
            Message.Title = "Marking a Patient as Deceased"
            sMsg = Replace(sMsg, "%number%", "a patient")
            sMsg = Replace(sMsg, "%status%", "who has died")  
         Else If icount > 1 Then
            Message.Title = "Marking Patients as Deceased"
            sMsg = Replace(sMsg, "%number%", "a number of patients")
            sMsg = Replace(sMsg, "%status%", "who have died")
         Endif
         If Message.Question(sMsg, "Yes", "No") = 2 Then Return
         '---------------------
         'User wants to proceed
         '---------------------
         '  modDBConnect.exec_query("drop table patients_latest_hba1c")  'will have to be refreshed
         cvwPatients_ProblemActive.MoveFirst
         For x = 0 To cvwPatients_ProblemActive.count - 1
            If cvwPatients_ProblemActive.Item.Selected = True Then
               patient = patients[cvwPatients_ProblemActive.Item.Key]
               modDBConnect.update("contacts.data_persons", Null, ["pk": patient!fk_person, "deceased": True]) 'mark person deceased
               modDBConnect.CommitTrans()
            Endif
            cvwPatients_ProblemActive.MoveNext
         Next    
         Goto Reload_DATA
      Case "change font"
         modUtil.Columnview_SetFont(cvwPatients_ProblemActive, "FHealthIssuesResearch")
   End Select
   
Reload_DATA:
   Reload
   
End

Public Sub EditArea_TextBox_Change()
   
   Select Case Last.tag
      Case "keyword"
         If Last.text = "" Then
            grouper = ""
            lvwsubgroups.Clear
            cvwPatients_ProblemActive.Clear
            
         Endif
   End Select
   
End
' drop view Research.vwLinkICPC2GrouperHealthIssues;
' Create view Research.vwLinkICPC2GrouperHealthIssues as
' SELECT 
'   vwpatients.*,
'  vwicpcgrouperlinkeasygpgenericcode.grouper,
'  past_history.active as health_issue_active
' FROM 
'   contacts.vwpatients, 
'   coding.vwicpcgrouperlinkeasygpgenericcode, 
'   clin_history.past_history, 
'   clin_consult.consult
' WHERE 
'   past_history.fk_code = vwicpcgrouperlinkeasygpgenericcode.fk_code AND
'   past_history.fk_consult = consult.pk AND
'   consult.fk_patient = vwpatients.fk_patient;
' 
' Create view coding.vwICPCGrouperLinkEasyGPGenericCode as
' SELECT 
'   icpc2_grp_grouper.grouper, 
'   icpc2_terms.icpc_code || icpc2_terms.term_code as fk_code
' FROM 
'   coding.icpc2_grp_grouper, 
'   coding.icpc2_grp_grp_icpc, 
'   coding.icpc2_terms
' WHERE 
'   icpc2_grp_grouper."Grouper_id" = icpc2_grp_grp_icpc.grouper_id AND
'   icpc2_grp_grp_icpc.icpc_code = icpc2_terms.icpc_code;
' 
' DROP VIEW research.vwlinkicpc2grouperhealthissues;
' 
' CREATE OR REPLACE VIEW research.vwlinkicpc2grouperhealthissues AS 
'  SELECT vwpatients.pk_view, vwpatients.fk_patient, vwpatients.fk_address, 
'  vwpatients.fk_person, vwpatients.wholename, vwpatients.fk_doctor,
'   vwpatients.fk_next_of_kin, vwpatients.fk_payer_person, vwpatients.fk_payer_branch, vwpatients.fk_family, vwpatients.medicare_number, 
'   vwpatients.medicare_ref_number, vwpatients.medicare_expiry_date, vwpatients.veteran_number, vwpatients.veteran_specific_condition, 
'   vwpatients.concession_card_number, vwpatients.concession_card_expiry_date, vwpatients.patient_memo, vwpatients.fk_legacy, 
'   vwpatients.fk_lu_aboriginality, vwpatients.fk_lu_veteran_card_type, vwpatients.fk_lu_active_status, 
'   vwpatients.fk_lu_centrelink_card_type, vwpatients.fk_lu_private_health_fund, vwpatients.private_insurance, 
'   vwpatients.active_status, vwpatients.veteran_card_type, vwpatients.concession_card_type, vwpatients.fund, vwpatients.firstname, 
'   vwpatients.surname, vwpatients.salutation, vwpatients.birthdate, vwpatients.age_display, vwpatients.age_numeric,
'    vwpatients.fk_ethnicity, vwpatients.fk_language, vwpatients.person_memo, vwpatients.fk_marital, vwpatients.fk_title,
'     vwpatients.fk_sex, vwpatients.country_birth_country_code, vwpatients.fk_image, vwpatients.retired, vwpatients.fk_occupation, 
'     vwpatients.person_deleted, vwpatients.deceased, vwpatients.date_deceased, vwpatients.language_problems, 
'     vwpatients.surname_normalised, vwpatients.aboriginality, vwpatients.country_birth, vwpatients.ethnicity, 
'     vwpatients.language, vwpatients.occupation, vwpatients.marital, vwpatients.title, vwpatients.sex, vwpatients.sex_text,
'      vwpatients.image, vwpatients.md5sum, vwpatients.tag, vwpatients.fk_consult_image, vwpatients.fk_link_persons_address, 
'      vwpatients.street1, vwpatients.fk_town, vwpatients.preferred_address, vwpatients.postal_address, vwpatients.head_office, 
'      vwpatients.geolocation, vwpatients.country_code, vwpatients.fk_lu_address_type, vwpatients.address_deleted, vwpatients.street2,
'       vwpatients.country, vwpatients.link_address_deleted, vwpatients.address_type, vwpatients.postcode, vwpatients.town, 
'       vwpatients.state, vwpatients.fk_lu_default_billing_level, vwpatients.billing_level, vwpatients.nursing_home_resident, 
'       vwpatients.ihi, vwpatients.pcehr_consent, vwpatients.ihi_updated, vwicpcgrouperlinkeasygpgenericcode.grouper,
'       past_history.description as health_issue_description
'    FROM contacts.vwpatients, coding.vwicpcgrouperlinkeasygpgenericcode, clin_history.past_history, clin_consult.consult
'   WHERE past_history.fk_code = vwicpcgrouperlinkeasygpgenericcode.fk_code 
'   AND past_history.fk_consult = consult.pk 
'   AND consult.fk_patient = vwpatients.fk_patient;
' 
' ALTER TABLE research.vwlinkicpc2grouperhealthissues
'   OWNER TO richard;
' 
' 

Public Sub cvwPatients_ProblemInActive_Menu()

   If cvwPatients_ProblemInactive.count Then
      mnuPatients.Popup
   Endif

End
