' Gambas class file

Private bExit As Boolean
Private Default_Billing_Items As Collection

Public Sub Init()
   
   Dim flag As Boolean
   
   flag = modAdminDBI.Config_Get_Staff_Member("billing_show_referral_status", False, Null, modDBConnect.currentUser!fk_clinic, modDBConnect.currentUser!fk_staff)
   bexit = True
   If Flag Then
      rbShow.value = True
   Else
      rbDoNotShow.value = True
   Endif
   bexit = False
   Default_Billing_Items_Load
   
End

Public Sub radiobuttons_Click()
   
   '------------------------------------------------------------------------
   'If Show then contacts and biling will show the patient's referral status
   '------------------------------------------------------------------------
   Dim bFlag As Boolean
   
   If bexit Then Return
   If Last.tag = "show" Then
      bflag = True
   Else
      bFlag = False
   Endif
   modAdminDBI.Config_Save_staff_member(modDBConnect.currentUser!fk_clinic, "billing_show_referral_status", bFlag, modDBConnect.currentUser!fk_staff)
   modDBConnect.CommitTrans()
   ' FPatientBillingCards.Show_Hide_Referral_Status(flag)
   
End

Public Sub HBox_Default_Billing_Items_Leave()
   
End

Public Sub Default_Billing_Items_Load()
   
   Dim sDefaultItems As String
   Dim items As String[]
   Dim item As String
   
   lvDefaultBillingItems.Clear
    sDefaultItems = modAdminDBI.Config_Get_Staff_Member("clinical_default_billing_items", "", Null, modDBConnect.currentUser!fk_clinic, modDBConnect.currentUser!fk_staff)
    items = Split(sDefaultItems, ",")
    Default_Billing_Items = New Collection
    For Each item In items  
   '    Default_Billing_Items.Add(item, item)
       lvDefaultBillingItems.Add(item, item)
    Next
   
End

Public Sub lvDefaultBillingItems_Load()
   
   Dim DBI As Collection
   For Each DBI In Default_Billing_Items
    '  lvDefaultBillingItems.Add(item, item)
   Next  
End

Public Sub Default_Billing_Items_Save()
   'Saves the uses commonly used billing items
   
   Dim x As Integer
   Dim sDefaultItems As String
   
  lvDefaultBillingItems.MoveFirst
   For x = 0 To lvDefaultBillingItems.count - 1
      sDefaultItems &= lvDefaultBillingItems.Item.Text & ","
      lvDefaultBillingItems.MoveNext
   Next
   sDefaultItems = modUtilGUI.Strip_Last_Character(sDefaultItems)
   modAdminDBI.Config_Save_staff_member(modDBConnect.currentUser!fk_clinic, "clinical_default_billing_items", sDefaultItems, modDBConnect.currentUser!fk_staff)
   modDBConnect.CommitTrans()
   
   'Saves default billing items to be loaded into he combo in the notes editor in FClinical
   'these can then be quickly selected to 'post' to the front desk for billing
   'this text must be properly comma separated eg 23,36,some text etc
   
   '  Dim items As String[] 
   '  Dim item As String
   '  Dim sMsg As String
   ' ' txtDefaultBillingItems.text = Replace(txtDefaultBillingItems.text, ", ", ",")
   '  items = Split(Trim(txtDefaultBillingItems.text), ",")
   '  'now check any numbers are valid
   '  For Each item In items
   '     If IsInteger(item) Then  
   '        If Not modBillingDBI.Item_Exists(item) Then
   '           Message.Info("The following item number does not exist in the fee schedule:\n\n" & item & "\n\nPlease fix before saving.")
   '           Return
   '        Endif
   '     End If   
   '  Next
   '  smsg = "<P><B>Default Billing Items</B></P>"
   '  sMsg &= "<P>The following items will be used in a combo pick box to allow you To quickly select an item "
   '  sMsg &= "to send to the front desk to tell the clerical staff how to bill the patient. If you've not already "
   '  sMsg &= "figured it out, you can use numbers or text eg 23, Item 23 or for example 'Ask me before billing'.<P>"
   '  For Each item In items 
   '     sMsg &= item & "<BR>"
   '  Next
   '  sMsg &= "<P>If you are happy with your selection you proceed, you may change these at any time, but the program "
   '  sMsg &= "will have to be restarted for them to take effect.</P>"
   '  If Message.Question(sMsg, "Save", "Cancel") = 2 Then Return 
   '  
   '  modAdminDBI.Config_Save_staff_member(modDBConnect.currentUser!fk_clinic, "clinical_default_billing_items", Trim(txtDefaultBillingItems.text), modDBConnect.currentUser!fk_staff)
   '  modDBConnect.CommitTrans()
   
End

Public Sub txtDefaultItemNumber_Activate()
   
   tbSaveDefaultBillingItem_Click
   
End

Public Sub tbSaveDefaultBillingItem_Click()
   
   Dim sText As String = Trim(txtDefaultItemNumber.text)
   
   If Default_Billing_Items.Exist(sText) Then 
      Message.Info("This item already exists")
   Else
      Default_Billing_Items.Add(stext, stext)
      lvDefaultBillingItems.Add(sText, sText)
   End If  
   txtDefaultItemNumber.text = ""
   txtDefaultItemNumber.SetFocus

End

Public Sub Settings_Load()
   
   lvDefaultBillingItems.Font = Font[Settings[Me.name & "/lvDefaultBillingItems.Font", "DejaVu Sans, 9"]]
   
End

Public Sub lvDefaultBillingItems_Menu()
   
   If lvDefaultBillingItems.count Then 
      mnuDefaultBillingItems.popup()
   End If   
   
End

Public Sub mnuDefaultBillingItems_Click()
   lvDefaultBillingItems.MoveCurrent
   Select Case Last.tag
      Case "font"
         modUtilGUI.Columnview_SetFont(lvDefaultBillingItems, Me.name)
      Case "delete"
         
         lvDefaultBillingItems.Item.Delete
      Case "edit"
         txtDefaultItemNumber.text = lvDefaultBillingItems.Item.Key
          lvDefaultBillingItems.Item.Delete
          txtDefaultItemNumber.SetFocus
   End Select 
   
End

Public Sub Form_Leave()
   

   
End

Public Sub tbSaveDefaultBillingItem2_Click()

   Default_Billing_Items_Save()

End
