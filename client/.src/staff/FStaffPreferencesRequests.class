' Gambas class file

' Copyright (C) 2008-2016 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'-----------------------------------------------------------------------
'PURPOSE    User preference setup for request ordering
'REASON     In medicine there are categories that one requests - eg
'           radiology, cardiology, phyisotherapy, and there are many
'           providers of these services, but the doctor usually likes
'           one particular company, so this module forces the user to
'           choose the 'default provider' and default branch. When in
'           the requests section, this will be auto-filled in to save
'           typing, but they will still have access to anyone else.
'NOTE       The administrator must define in the first place which
'           companies or individuals provide services of a particular
'           type. Not until this is done will the names of these
'           providers be 'findable'    
'----------------------------------------------------------------------
Private bexit As Boolean
Public FPreview As FHtmlViewer 'needs to be accessed by help buttons in staff  FIXME CHECK THIS PROBABLY REALLY OLD
Private branches As Collection 
Private branch As Collection 
Private providers As Collection 
Private provider As Collection 
Private Request_Types As Collection 
Private Request_Type As Collection 
Private fk_organisation As Variant
Private fk_default_branch As Variant
Private fk_lu_request_type As Variant 
Private fk_request_provider As Variant
Private fk_user_provider_default As Variant
Private fk_person As Variant
Private RequestDefaultProviders As Collection 
Private RequestDefaultProvider As Collection 
Private fk_staff As Variant  

Public Sub Set_Staff_member(staff_fk As Variant)
   '--------------------------------------------------------------------
   'This form will be used when the user or admin, having clicked on
   'a staff members name in the Practice Staff form, switches to the
   'preferences section by clicking on the Setup Preferences tab, which
   'contains, amongst others, this form. To make sure the correct staff
   'member is linked to, when their name is clicked on  in the Practice
   'Staff form, this calls this routine and sets the fk_staff
   '--------------------------------------------------------------------
   
   fk_staff = staff_fk
   
End

Public Sub Notify_No_Providers_In_Contacts()
   '------------------------------------------------------------------
   'If user selects a provider type from the list in the combo, and no
   'provider is yet linked to that type, tell them so
   '------------------------------------------------------------------
   
   Dim smsg As String
   
   sMsg = "There are no " & cmbRequestTypes.Text & "s in the contacts database \n\n"
   sMsg &= "Please enter the names and addresses of the providers\n" 
   "you wish to use in the contacts database - you can\n"
   "select this from the side bar menu\n\n"
   "If you have already entered companies or people in this category "
   "you may not have allocated them as a 'Provider'.\n\n" 
   "NB: When you enter a data in contacts, you must remember\n" 
   "to include the word 'Provider' in the category for example\n"
   "'Cardiology Provider' or 'Physiotherapy Provider', otherwise it will not be found.\n\n" 
   "After you have finished, click the refresh button on the toolbar\n"
   "and try again." 
   Message.Info(sMsg)
   
End

Public Sub Save()
   '-----------------------------------------------------------------------------------
   'Save the current provider default for the particular category shown in the combobox
   '-----------------------------------------------------------------------------------
   ' CREATE TABLE clin_requests.user_provider_defaults
   ' (
   '   pk serial NOT NULL,
   '   fk_staff integer NOT NULL, -- key to admin.staff table ie describes the user
   '   fk_default_branch_user integer NOT NULL, -- If  you look at the table clin_requests.request_providers you will see there is a fk_default_branch field....
   '   fk_request_provider integer, -- foreign key to clin_requests.requests_provideris which ultimately will point to contact details of person/employee or organisation...
   '   send_electronically boolean DEFAULT false,
   '   print_paper boolean DEFAULT true,
   '   deleted boolean DEFAULT false,
   '   fk_lu_request_type integer NOT NULL,
   '   CONSTRAINT user_provider_defaults_pkey PRIMARY KEY (pk),
   '   CONSTRAINT user_provider_defaults_fk_default_branch_fkey FOREIGN KEY (fk_default_branch_user)
   '       REFERENCES contacts.data_branches (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT user_provider_defaults_fk_lu_request_type_fkey FOREIGN KEY (fk_lu_request_type)
   '       REFERENCES clin_requests.lu_request_type (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT user_provider_defaults_fk_request_provider_fkey FOREIGN KEY (fk_request_provider)
   '       REFERENCES clin_requests.request_providers (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT user_provider_defaults_fk_staff_fkey FOREIGN KEY (fk_staff)
   '       REFERENCES admin.staff (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION
   ' )
   ' WITH (
   '   OIDS=FALSE
   ' );
   '------------------------------------------------------------------------------------
   
   Dim RequestDefaultProvider As CRow
   
   If VBox_EditArea.Padding = 0 Then Return            'nothing to save
   If Not Valid_Request_Provider_Default() Then
      Notify_No_Providers_In_Contacts()
      Return  
   End If
   RequestDefaultProvider = New CRow
   
   If Not IsNull(fk_user_provider_default) Then 
      RequestDefaultProvider.Put_Unchanged(fk_user_provider_default, "fk_user_provider_default")
   End If
   RequestDefaultProvider!fk_staff = fk_staff               
   RequestDefaultProvider!fk_default_branch_user = fk_default_branch  
   RequestDefaultProvider!fk_request_provider = fk_request_provider
   RequestDefaultProvider!fk_lu_request_type = request_types[cmbRequestTypes.index]!pk
   If chkElectronic.Value Then
      RequestDefaultProvider!send_electronically = True
   Else
      RequestDefaultProvider!send_electronically = False
   End If
   If chkPrint.value Then
      RequestDefaultProvider!print_paper = True
   Else
      RequestDefaultProvider!print_paper = False
   End If
   RequestDefaultProvider.Save("clin_requests.user_provider_defaults", "fk_user_provider_default")
   modDBConnect.CommitTrans()
   Reload()  
   Editarea_Clear()
   
End

Public Sub EditAreaTextBox_LostFocus()
   
   Last.BackGround = Color.white
   Last.pos = 0
   
End

Public Sub EditAreaTextBox_GotFocus()
   
   If bexit Then
      Return
   End If
   Last.BackGround = Color.rgb(95, 255, 175)
   Select Case Last.tag
      Case "provider"
         With Columnview1
            .top = Last.Parent.Parent.Top + Last.Parent.Height
            .width = Last.Width
            .left = Last.Parent.left + VBox_EditArea.padding + Vbox_EditArea_Inner.Padding
         End With
         If Trim(txtProvider.text) = "" Then 
            If bexit Then
               User_RequestDefault_New()
               Return
            End If
            
         Else
            If Not IsNull(fk_user_provider_default) Then
               Providers_Get
            Endif
         End If
   End Select
   
End

Public Sub ColumnView1_KeyPress()
   
   If Key.code = Key.return Then
      ColumnView1_DblClick()
   End If
   
End

Public Sub ColumnView1_LostFocus()
   
   Columnview1.Visible = False
   
End

Public Function Valid_Request_Provider_Default() As Boolean
   '---------------------------
   'do some minimal validation
   '---------------------------
   
   If IsNull(fk_lu_request_type) Then 
      cmbRequestTypes.SetFocus()
      Return False
   End If
   If IsNull(fk_request_provider) Then Return 
   If Not IsNull(fk_organisation) Then
      If IsNull(fk_default_branch) Then 
         cmbBranches.SetFocus()
         Return False
      End If
   End If   
   Return True
   
End

Public Sub User_RequestDefault_New()
   '---------------------------------------------------------------
   'Allow entry  of a new default for a provider for provider type
   'where pr ovider type e.g is radiology, pathology
   '---------------------------------------------------------------
   
   Dim sMsg As String
   
   If Not modRequestsDBI.RequestProviders_Exist() Then
      Message.title = "Setting up default providers"
      sMsg = "<P>No request providers have been setup by your Admin.</P>"
      Message.info(sMsg & Mini_Help())
      Return
   Endif
   bExit = True
   Editarea_Clear()
   branch = New Collection
   provider = New Collection 
   EditArea_Notify_Change(False)
   cmbRequestTypes.SetFocus()
   With lblEditArea_Heading
      .Foreground = Color.Red
      .Text = "New User Default Request Provider"
      .Visible = True
   End With
   VBox_EditArea.Enabled = True   
   bExit = False
   
End

Public Function Mini_Help() As String
   
   Return "<P>Please read the help files on this topic carefully</P>"
   "<UL>"
   "<LI>In Contacts the Admin user must enter the names of the companies you will be sending requests to e.g Pathology<BR>"
   "<LI>In Admin.Setup Ordering.Setup Entities To Receive Requests the Admin user must tell EasyGP that a company will receive particuliar types of requests. "
   "At this stage all users will be allocated Admin's choice of preferred provider if no previous providers have been allocated.<BR>"
   "<LI>You may as a user then tell EasyGP you want a particuliar company to be your default in this section."
   "</UL>"
   
End

Public Sub EditAreaButtons_Click()
   
   Select Case Last.tag
      Case "accept"
         save()
      Case "new"
         User_RequestDefault_New()
   End Select
   
End

Public Sub cmbRequestTypes_Click()
   '--------------------------------------------------------------------
   'If provider changes, then the whole ball game changes
   'clear the editing area which re-sets everything
   'Remember that Admin.Global Request Defaults is where admin sets up
   'which companies or individuals we can order or request things from
   'eg Pathology companies, radiology etc
   '-----------------------------------------------------
   
   Dim smsg As String
   
   If bExit Then Return
   If cmbRequestTypes.index = -1 Then Return 
   For Each RequestDefaultProvider In RequestDefaultProviders  'first check that we don't already have a default of this type
      If RequestDefaultProvider!fk_lu_request_type = Request_Types[cmbRequestTypes.index]!pk Then
         smsg = "There is already a request default for the type:\n\n" & cmbRequestTypes.Text & "\n\n"
         sMsg &= "If you wish to change the default provider for this type, please select the provider "
         "from the list below, and using the right mouse click menu, select 'Edit' and make  your changes."
         Message.Warning(smsg, "Ok")
         Editarea_Clear()
         VBox_EditArea.Enabled = False   
         Return
      Endif
   Next
   fk_lu_request_type = Request_Types[cmbRequestTypes.index]!pk   'set request type key eg 1=pathology
   
   With Columnview1
      .top = Hbox_Provider.top + HBox_Provider.Height
      .width = txtProvider.Width
      .left = txtProvider.Parent.left + VBox_EditArea.padding + Vbox_EditArea_Inner.Padding
   End With
   Providers_Get                                     'get list of providers or this type
   EditArea_Notify_Change(True)
   
End

Public Function Provider_Get_fk_lu_request_type() As Variant
   
   For Each Request_Type In Request_Types
      If cmbRequestTypes.text = Request_Type!type Then
         fk_lu_request_type = Request_Type!pk
         Return Request_Type!pk
         Break
      End If
   Next
   
End

Public Sub Providers_Get()
   '-----------------------------------------------------------------------------
   'PURPOSE    : Fetches a list of providers for the category in cmbProvidertypes
   '             e.g all pathology companies
   'NOTE       : As we cannot set a combo-key, then Provider_Get_fk_lu_request_type
   '             will figure it out
   '           : The initial provider collection is only the provider name as
   '             each provider could have multiple addresses.
   '-----------------------------------------------------------------------------
   
   Dim sMsg As String 
   
   providers = modRequestsDBI.Request_Providers_Get(Request_Types[cmbRequestTypes.index]!pk)                    'refresh providers for types
   With columnview1
      .Clear
      .Visible = False
   End With   
   '-----------------------------------------------------------------
   'If providers exist to match the text, auto-select or show a list
   '-----------------------------------------------------------------
   If providers.count Then 
      For Each provider In providers
         columnview1.Add(provider!pk_request_provider, 0)
         If Not IsNull(provider!fk_person) Then 'was if provider!fk_person<> 0
            columnview1[provider!pk_request_provider][0] = provider!wholename
         Else
            columnview1[provider!pk_request_provider][0] = provider!organisation
         Endif
      Next
      If providers.count = 1 Then
         Provider_Select(provider)
         Return 
      End If
      With columnview1
         .tag = txtprovider
         .Visible = True
         .Raise
         .SetFocus()
      End With 
   Else
      Message.Title = "Setting up default providers"
      sMsg = "<P>There are no providers for the request type<P>" & cmbRequestTypes.Text
      Message.info(sMsg & Mini_Help())
      Editarea_Clear()
      Return 
   End If
   
End

Public Sub EditArea_Notify_Change(flag As Boolean)
   
   If flag Then
      VBox_EditArea.Padding = 1
      VBox_EditArea.Background = Color.Red
      tbAccept.Foreground = Color.Red
   Else
      VBox_EditArea.Padding = 0
      tbAccept.Foreground = Color.Black
   End If
   
End

Public Sub EditAreaTextBox_KeyPress()
   
   If bexit Then Return
   
   If cmbRequestTypes.text = "undefined provider" Then 
      Stop Event
      Message.Info("You must select a provider type and ensure they are in the contacts database")
      Return
   End If
   
   Select Case Key.code
         
      Case Key.Down
         If Columnview1.Visible Then 
            Columnview1.SetFocus
            Columnview1.MoveFirst
            Columnview1.Item.Selected = True
         End If
   End Select   
   
End

Public Sub EditAreacheckBox_Click()
   
   If bexit Then Return
   If cmbRequestTypes.text = "undefined provider" Then 
      Stop Event
      Message.info("You must select a provider type and ensure they are in the contacts database")
      Return
   End If
   EditArea_Notify_Change(True)
   
End

Public Sub Editarea_Clear()
   'Clear textboxes etc in the edit area
   
   bExit = True    
   modEditAreaHelpers.EditArea_Clear(Vbox_EditArea_Inner) 
   bExit = False   
   cmbRequestTypes.index = -1 
   cmbBranches.index = -1
   Columnview1.Visible = False
   EditArea_Notify_Change(False)
   With lblEditArea_Heading
      .Foreground = Color.Red
      .Text = ""
   End With
   fk_request_provider = Null
   fk_user_provider_default = Null
   fk_default_branch = Null
   fk_lu_request_type = Null
   fk_organisation = Null
   VBox_EditArea.Enabled = False 
   
End

Public Sub User_RequestDefault_Display()
   '-----------------------------------------------------------------
   'Display the current default for the user for the request type
   'load all the branches for this organisation into the branch combo
   '-----------------------------------------------------------------   
   
   bexit = True
   cvwUserDefaults.MoveCurrent
   '  RequestDefaultProvider = New Collection
   txtProvider.text = RequestDefaultProviders[cvwUserDefaults.Item.key]!organisation
   fk_organisation = RequestDefaultProviders[cvwUserDefaults.Item.key]!fk_organisation
   If Not IsNull(fk_organisation) Then   
      branches = modUtilGUI.LoadCombo(cmbBranches, modUtil.Copy_Collection_Keyed_Sequentially(modContactsDBI.Branches_Get_For_Organisation(fk_organisation)), "branch")
   End If  
   cmbBranches.index = cmbBranches.Find(RequestDefaultProviders[cvwUserDefaults.Item.key]!default_branch)
   txtStreet1.text = RequestDefaultProviders[cvwUserDefaults.Item.key]!default_branch_street1
   txtStreet2.text = RequestDefaultProviders[cvwUserDefaults.Item.key]!default_branch_street2
   txtsuburb.text = RequestDefaultProviders[cvwUserDefaults.Item.key]!default_branch_town & " " & RequestDefaultProviders[cvwUserDefaults.Item.key]!default_branch_postcode
   cmbRequestTypes.index = cmbRequestTypes.Find(RequestDefaultProviders[cvwUserDefaults.Item.key]!request_type)
   chkElectronic.value = RequestDefaultProviders[cvwUserDefaults.Item.key]!send_electronically
   chkPrint.value = RequestDefaultProviders[cvwUserDefaults.Item.key]!print_paper
   fk_default_branch = RequestDefaultProviders[cvwUserDefaults.Item.key]!fk_default_branch
   fk_lu_request_type = RequestDefaultProviders[cvwUserDefaults.Item.key]!fk_lu_request_type
   fk_user_provider_default = cvwUserDefaults.Item.key ' = pk_default
   ' fk_request_provider = RequestDefaultProviders[cvwUserDefaults.Item.key]!fk_request_provider 'key to  clin_requests.user_provider_defaults
   ' RequestDefaultProvider!pk_default = RequestDefaultProviders[cvwUserDefaults.Item.key]!pk_default
   ' RequestDefaultProvider!fk_staff = RequestDefaultProviders[cvwUserDefaults.Item.key]!fk_staff
   ' RequestDefaultProvider!fk_default_branch = RequestDefaultProviders[cvwUserDefaults.Item.key]!fk_default_branch 
   ' RequestDefaultProvider!fk_head_office_branch = RequestDefaultProviders[cvwUserDefaults.Item.key]!fk_head_office_branch 
   ' RequestDefaultProvider!send_electronically = RequestDefaultProviders[cvwUserDefaults.Item.key]!send_electronically
   ' RequestDefaultProvider!print_paper = RequestDefaultProviders[cvwUserDefaults.Item.key]!print_paper
   ' RequestDefaultProvider!deleted = False
   bExit = False
   
End

Public Sub ColumnView1_DblClick()
   
   columnview1.MoveCurrent()
   Select Case ColumnView1.tag.tag 'Do not put Last here please it kills other calling routines
      Case "provider"
         Provider_Select(providers[columnview1.Item.key])
   End Select
   columnview1.Visible = False  
Catch
   Return
   
End

Public Sub Provider_Select(provider As Collection)
   
   '----------------------------------------------------------------------------
   'Display the selected provider and load organisations branches into the combo
   '----------------------------------------------------------------------------
   bExit = True
   fk_request_provider = provider!pk_request_provider
   If Not IsNull(provider!fk_person) Then
      txtProvider.text = provider!wholename
      txtProvider.pos = 0
      fk_person = provider!fk_person
      fk_organisation = Null
      fk_default_branch = Null
      txtStreet1.text = provider!headoffice_street1
      txtStreet1.pos = 0
      txtStreet2.text = provider!headoffice_street2
      txtStreet2.pos = 0   
      txtsuburb.text = provider!headoffice_town & " " & provider!postcode
      txtsuburb.pos = 0
   Else
      txtProvider.text = provider!organisation
      txtProvider.pos = 0
      fk_organisation = provider!fk_organisation
      fk_person = Null
      Branches_Get(provider)
   End If   
   EditArea_Notify_Change(True)
   bExit = False   
   
End

Public Sub Branches_Get(provider As Collection)
   '-------------------------------------------------------------------------
   'Gets the branches for the provider, try and match to branch in our suburb
   'otherwise The combo will be set to the first alphabetically
   'user can change if they want a different default collection branch
   '-------------------------------------------------------------------------
   
   Dim bFoundLocalBranch As Boolean
   
   branches = modUtilGUI.LoadCombo(cmbBranches, modUtil.Copy_Collection_Keyed_Sequentially(modContactsDBI.Branches_Get_For_Organisation(fk_organisation)), "branch")
   For Each branch In branches
      If branch!postcode = modDBConnect.currentUser!postcode Then
         cmbBranches.index = cmbBranches.Find(branch!branch)   'triggers the combo and sets the branch details
         bFoundLocalBranch = True
         Return   
      End If   
   Next
   If branches.count Then
      cmbBranches.index = 0 
      cmbBranches_Click()
   End If   
   
End

Public Sub Settings_Save()
   
   Settings["FStaffPreferencesRequests/VSplit_Main.Layout"] = VSplit_Main.Layout
   
End

Private Sub Settings_Load()
   
   VSplit_Main.Layout = Settings["FStaffPreferencesRequests/VSplit_Main.Layout", modUtilGUI.VSplit([313, 667])]
   cvwUserDefaults.font = Font[Settings["FStaffPreferencesRequests/cvwUserDefaults.font", "DejaVu Sans,9"]]
   
End

Public Sub Init()
   '------------------------------------------------
   'Load a html viewer to view help files if needed
   'the default provider type is undefined
   '------------------------------------------------
   
   bexit = True
   request_types = modUtilGUI.LoadCombo(cmbRequestTypes, modRequestsDBI.RequestTypes_Get(), "type") 'all available types of requests
   bexit = False
   lblMeasure.text = "  Send Electronically   "
   modEditAreaHelpers.Resize_labels(Vbox_EditArea_Inner, lblMeasure)
   Settings_Load()
   cvwUserDefaults.Columns.count = 3
   Editarea_Clear()
   
End

Public Sub Reload()
   '-----------------------------------------------------------------
   'Gets the defaults for how the user wants to handle their requests
   'e.g default pathology company, branch etc
   'Set initially in FStaffPreferences
   '-----------------------------------------------------------------
   
   Dim col_widths As New Integer[3]
   
   Editarea_Clear
   lblMeasure.font.Name = cvwUserDefaults.font.Name
   lblMeasure.Font.Size = cvwUserDefaults.Font.Size
   VBox_EditArea.Enabled = False   
   cvwUserDefaults.Clear()  
   RequestDefaultProviders = modPreferencesDBI.User_Provider_Defaults_Get(fk_staff) 
   For Each RequestDefaultProvider In RequestDefaultProviders
      cvwUserDefaults.Add(RequestDefaultProvider!pk_default, 0)
      cvwUserDefaults[RequestDefaultProvider!pk_default][0] = UCase(RequestDefaultProvider!request_type & ":")
      lblmeasure.text = UCase(RequestDefaultProvider!request_type & ":")
      col_widths[0] = Max(lblmeasure.Width, col_widths[0])
      cvwUserDefaults[RequestDefaultProvider!pk_default][1] = RequestDefaultProvider!organisation
      lblmeasure.text = RequestDefaultProvider!organisation
      col_widths[1] = Max(lblmeasure.Width, col_widths[1])
      cvwUserDefaults[RequestDefaultProvider!pk_default][2] = Trim(RequestDefaultProvider!default_branch_street1 & " " & RequestDefaultProvider!default_branch_street2) & " " & RequestDefaultProvider!default_branch_town
   Next
   cvwUserDefaults.Columns[0].width = col_widths[0]
   cvwUserDefaults.Columns[1].width = col_widths[1]
   
End

Public Sub EditAreaTextBox_Change()
   
   If bexit Then Return
   EditArea_Notify_Change(True)
   
End

Public Sub cvwUserDefaults_Menu()
   
   If Last.count Then mnuProviderDefaults.Popup
   
End

Public Sub mnuProviderDefaults_Click()
   '---------------------
   'currently only delete
   '---------------------
   
   Select Case Last.tag
      Case "delete"
         If Message.warning("Are you sure you want to delete this provider default?", "Yes", "No") = 1 Then
            modDBConnect.BeginTrans()
            If modPreferencesDBI.Request_Default_Mark_Deleted(RequestDefaultProviders, fk_user_provider_default, RequestDefaultProvider) Then
               modDBConnect.CommitTrans()
            End If   
            Reload()
         End If
      Case "edit"
         User_RequestDefault_Edit()
      Case "help"
         modUtilGUI.NotImplemented("Help for this section")
      Case "font"
         modUtilGUI.Columnview_SetFont(cvwUserDefaults, "FStaffPreferencesRequests")
   End Select
Catch
   Return 
   
End

Public Sub User_RequestDefault_Edit()
   '--------------------------------------------------------------
   'Allow user to edit current default to change eg default branch
   '--------------------------------------------------------------
   
   With lblEditArea_Heading
      .Foreground = Color.Red
      .Text = "Edit Existing User Request Default"
      .Visible = True
   End With
   
   VBox_EditArea.Enabled = True
   txtProvider.SetFocus
   
End

Public Sub cmbRequestTypes_GotFocus()
   
   Columnview1.Visible = False 'could be showing
   
End

Public Sub cvwUserDefaults_Select()
   
   Editarea_Clear()  
   User_RequestDefault_Display()
   Vbox_EditArea_Inner.Enabled = True
   VBox_EditArea.Enabled = False
   EditArea_Notify_Change(False)
   
End

Public Sub cmbBranches_Click()
   
   branch = branches[cmbBranches.index]
   txtStreet1.text = branch!street1
   txtStreet2.text = branch!street2
   txtsuburb.text = branch!town & " " & branch!postcode  
   fk_default_branch = branch!fk_branch
   EditArea_Notify_Change(True)
   
End

Public Sub VSplit_Main_Resize()
   
End
