' Gambas class file

' Copyright (C) 2008-2013 Dr. Richard Terry
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
'FSTAFFPREFERENCESSHORTCUTS
'
'PURPOSE       Allow staff members to create and maintain shorts for a user
'              to use in their clinical notes
'
'BUGS          Probably plenty please email me rterry@pacific.net.au
'
'TODO          everything
'-----------------------------------------------------------------------------------------------'

Private bexit As Boolean
Private shortcuts_available As Collection
Private shortcuts_user As Collection
Private SpellChecker As ClskSpell
Private bHaveSpellChecked As Boolean
Private fk_shortcut As Integer
Private form_text_editor As FEditor
Private bSystem_Shortcut As Boolean

Public Sub Init()
   
   shortcuts_available = modConsultDBI.Shortcuts_Available_Get(modDBConnect.currentUser!fk_clinic)
   lblMeasure.text = "  Share With Others "
   modEditAreaHelpers.Resize_labels(VBox_EditARea, lblMeasure)
   With form_text_editor = New FEditor(VBox_TextEditor)
      .lblHeading.Visible = False
      .tbLoadFile.Visible = False   
   End With
   
   With SpellChecker = New ClskSpell
      '   .EditorControlToCheck = teExpandedText
      .EditorControlToCheck = form_text_editor.teNotes
      .TempFileForSpelling = User.home &/ "myspelltemp.txt"
      .TempFileForErrors = User.home &/ "myspellerrors.txt"
   End With
   Settings_Load
   
   With gvwShortCuts
      .Columns.Count = 3
      .Columns[0].Text = "Keys"
      .Columns[0].width = 100
      .Columns[0].Alignment = Align.Left
      .Columns[1].Text = "Expanded Text" 
      .Columns[2].Text = "Shared"
      .Columns[2].width = 100
   End With
   Reload
   
End

Public Sub Form_Close()
   
   Settings_Save()
   
End

Public Sub Spelling_Check()
   '--------------------------------------------------------------------------------------------------
   'Check the letters spelling
   'bHaveSpellChecked is set so as not to bug a user who has already spell checked when they save
   'This is not perfect but pragmatic, i.e they could have introduced errors after their initial check
   'but then hey, that's their problem
   '--------------------------------------------------------------------------------------------------
   
   SpellChecker.init()
   SpellChecker.StartSpelling()
   bHaveSpellChecked = True
   
End

Private Sub Save()
   '-------------------------------------------------------------------------------------
   ' Saves the shortcut
   'CREATE TABLE clin_consult.shortcuts_user
   ' (
   ' -- Inherited from table clin_consult.lu_shortcut:  pk integer NOT NULL DEFAULT nextval('clin_consult.lu_shortcut_pk_seq'::regclass),
   ' -- Inherited from table clin_consult.lu_shortcut:  fk_staff integer, -- if true, the shortcut will be shared with other users
   ' -- Inherited from table clin_consult.lu_shortcut:  shared boolean DEFAULT false,
   ' -- Inherited from table clin_consult.lu_shortcut:  shortcut text,
   ' -- Inherited from table clin_consult.lu_shortcut:  expanded text,
   '   CONSTRAINT shortcuts_user_fk_staff_fkey FOREIGN KEY (fk_staff)
   '       REFERENCES admin.staff (pk) MATCH SIMPLE
   '       ON UPDATE NO ACTION ON DELETE NO ACTION,
   '   CONSTRAINT shortcuts_user_shortcut_fk_staff_key UNIQUE (shortcut , fk_staff )
   ' )
   ' INHERITS (clin_consult.lu_shortcut)
   ' WITH (
   '   OIDS=FALSE
   ' );
   '--------------------------------------------------------------------------------------
   
   Dim Shortcut As New CRow
   
   If Vbox_EditArea_Outer.Padding = 0 Then Return
 
   HBox_Tool_Buttons.Enabled = False   
   If Not ShortCut_Valid() Then 
      HBox_Tool_Buttons.Enabled = True 
      Return
   Endif
   If Not bHaveSpellChecked Then           '    And If Not bSuppressSpellCheck Then
      Spelling_Check()
   Endif 
   If fk_shortcut Then                                    'existing shortcut being edited?
      Shortcut.put_unchanged(fk_shortcut, "fk_shortcut")    
   Endif
   Shortcut!shortcut = Trim(txtShortcut.text)
    Shortcut!expanded = form_text_editor.teNotes.RichText
   Shortcut!fk_staff = modDBConnect.currentUser!fk_staff 
   If rbSharedYes.value = True Then    
      Shortcut!shared = True  
   End If
   If rbSharedNo.Value = True Then
      Shortcut!shared = False   
   Endif
   Shortcut.Save("clin_consult.shortcuts_user", "fk_shortcut")
   modDBConnect.CommitTrans()
   FShortcutsAvailable.Reload_Available
   Reload()
   
End

Private Function ShortCut_Valid() As Boolean
   '------------------------------------------------------
   'Ensures adequate data prior to save returns True if ok
   '------------------------------------------------------   
   
   Dim sMsg As String
   
   If Trim(txtShortcut.text) = "" Then
      Goto Getshortcut
   Else
      If Left(Trim(txtShortcut.text)) <> "." Then
         sMsg = "When you are typing in the progress notes editor and you wish to have a combination of keys "
         "trigger the insertion of an expanded block of text, the text editor will recognise any combination "
         "of letters immediatley preceeded by a period character.\n\nFor example if you wished to insert say "
         "'Discussed smoking advice....' -  which could include a blocked off descriptive text you could create "
         "a keyword of your choosing that you could remember for example '.smoke'.\n\n"
         "We can insert the period now, if you are happy with your text, or you can alter this yourself."
         Message.Title = "Creating a user defined shortcut"
         If Message.Question(sMsg, "Yes - Insert the period character", "No - Let me re-edit the text") = 1 Then
            With txtShortcut                               'user want's us to insert 
               .text = Replace(.text, ".", "")             'in case other internal periods
               .text = "." & modUtil.StripAllBlanks(.text) 'insert the period
            End With
         Else
            Goto Getshortcut
         Endif
      End If   
   End If    
   ' If Trim(teExpandedText.text) = "" Then
   If Trim(form_text_editor.teNotes.text) = "" Then   
      With form_text_editor.teNotes
         .setFocus
         Return   
      End With
   Endif
   Return True 
   
Getshortcut:
   With txtShortcut
      .text = modUtil.StripAllBlanks(.text) 'remove all internal blanks'
      .BackGround = Color.rgb(95, 255, 175)
      .pos = 0
      .SetFocus
   End With
   Return
   
End

Private Sub Reload()
   '-----------------------------
   'Reload all the users shortcuts
   '------------------------------
   
   Dim shortcut As Collection
   Dim x As Integer
   EditArea_Clear 
   With gvwShortCuts
      .Clear
   End With
   shortcuts_user = modUtil.Copy_Collection_Keyed_Sequentially(modConsultDBI.Shortcuts_For_User_get(modDBConnect.currentUser!fk_staff))
   For Each shortcut In shortcuts_user
      Inc gvwShortCuts.Rows.Count
      With gvwShortCuts[x, 0]
         .Text = shortcut!shortcut
         .Alignment = Align.TopLeft
         With gvwShortCuts.Rows[x]
            .Height = -1 
         End With
      End With 
      With gvwShortCuts[x, 1]
         .RichText = shortcut!expanded
         .WordWrap = True  
         .Alignment = Align.TopLeft
         With gvwShortCuts.Rows[x]
            .Height = -1 
         End With
      End With  
      With gvwShortCuts[x, 2]
         If shortcut!shared Then
            .Text = "Yes"
         Else
            .Text = "No"
         End If 
      End With
      Inc x    
   Next
   
End

Public Sub Settings_Save()
   
   Settings["FStaffPreferencesShortCuts/Vsplit_Shortcuts.layout"] = VSplit_Shortcuts.layout
   
End

Private Sub Settings_Load()
   
   VSplit_ShortCuts.Layout = Settings["FStaffPreferencesShortCuts/Vsplit_Shortcuts.layout", modUtil.VSplit([1, 3])]
   gvwShortCuts.Font = Font[Settings["FStaffPreferencesShortCuts/cvwUserShortcuts.font", "DejaVu Sans,9"]]
   
End

Public Sub teExpandedText_GotFocus()
   
End

Public Sub EditArea_Notify_Data_Change(bflag As Boolean)
   
   If bFlag Then
      Vbox_EditArea_Outer.Padding = 1 
      form_text_editor.Vbox_ConsultNotes.Padding = 1
   Else
      Vbox_EditArea_Outer.Padding = 0
      form_text_editor.Vbox_ConsultNotes.Padding = 0
   End If  
   
End

Public Sub EditArea_Clear()
   
   modEditAreaHelpers.EditArea_Clear(Vbox_EditArea)
   With form_text_editor
      .teNotes.Clear
      .DataChange_Update_Indicators(False)
   End With     
   rbSharedNo.value = True 
   bSystem_Shortcut = False   
   EditArea_Notify_Data_Change(False)
   Vbox_EditArea.Enabled = False 
   
End

Public Sub ShortCut_New()
   '------------------------------------------------------------
   'User wants to create a new shortcut to use in progress notes
   '------------------------------------------------------------ 
   
   EditArea_Clear
   fk_shortcut = 0
   VBox_EditARea.Enabled = True  
   txtShortcut.SetFocus
   
End

Public Sub teExpandedText_LostFocus()
   
   Last.Background = Color.White
   
End

Public Sub teExpandedText_Activate()
   
   If Last.txt = "shortcut" Then
      rbSharedYes.SetFocus
   Endif
   
End

Public Sub rbEditArea_KeyPress()
   
   If Key.code = Key.return Then
      If Last.tag = "yes" Then
         rbSharedNo.setFocus
      Else
         '   teExpandedText.setFocus()
         form_text_editor.teNotes.SetFocus
      Endif
   Endif
   
End

Public Sub gvwShortCuts_Menu()
   
   If gvwShortCuts.Rows.Count Then
      mnuShortCuts.Popup   
   Endif
   
End

Public Sub mnuShortCuts_Click()
   
   Select Case Last.tag
      Case "edit"
         ShortCut_Edit
      Case "delete"
         ShortCut_Delete
      Case "font"
         modUtil.Columnview_SetFont(gvwShortCuts, "FStaffPreferencesShortCuts")   
      Case "share"
         
   End Select
   
End

Private Sub ShortCut_Edit()
     If bSystem_Shortcut Then
      Message.info("You may not alter system wide shortcuts.")
      Return 
   Endif
   VBox_EditARea.Enabled = True   
   
End

Private Sub ShortCut_Delete()
   
End

Private Sub ShortCut_Display()
   
   Dim Shortcut As Collection
   
   If gvwShortCuts.Row = -1 Then Return
   
   ShortCut = shortcuts_user[gvwShortCuts.Row]
   EditArea_Clear
   bExit = True
   txtShortcut.text = shortcut!shortcut
   With form_text_editor
      .teNotes.RichText = shortcut!expanded
      .DataChange_Update_Indicators(False)
   End With
   If shortcut!shared Then
      rbSharedYes.value = True   
   Else
      rbSharedNo.Value = True 
   Endif
   fk_shortcut = Shortcut!pk  
   bSystem_Shortcut = shortcut!system_shortcut
   bexit = False  
   
End

Public Sub EditArea_Buttons_Click()
   
   Select Case Last.tag
      Case "test"
         VBox_EditARea.Enabled = True
         Vbox_EditArea_Outer.Enabled = True  
      Case "new"
         ShortCut_New
      Case "save"
         Save()
      Case "reload"
         Reload   
   End Select
   
End

'End

' Public Sub btnColour_Change()
'    
'    teExpandedText.Format.Color = btnColour.Color
'    
' End

' Public Sub SpinBox1_Change()
'    
'    teExpandedText.Format.Font.Size = Last.Value
'    teExpandedText.SetFocus
'    
' End

Public Sub EditArea_text_Box_Change()
   
   If bexit Then Return    
   EditArea_Notify_Data_Change(True)
   
End

Public Sub rbEditARea_Click()
   
   If bexit Then Return
   EditArea_Notify_Data_Change(True)
   
End

Public Function EditArea_TextBox_ExcludeKeys(keycode As Integer, tag As String) As Boolean
   
   Return modUtil.AllowKeys(const.AllowKeys_AtoZ_and_Period, Key.code)
   
End

Public Sub EditArea_text_Box_KeyPress()
   
   If Last.tag = "shortcut" Then
      If Not EditArea_TextBox_ExcludeKeys(Key.code, Last.tag) Then Return 'param not needed
   Endif
   
End

Public Sub EditArea_text_Box_Activate()
   
   If Last.tag = "shortcut" Then
      rbSharedYes.SetFocus
   Endif
   
End
' 
' Public Sub teExpandedText_KeyPress()
'    
'    Dim CtrlDown As Boolean
'    Dim FnDown As Boolean
'    
'    Try CtrlDown = Key.Control
'    If CtrlDown Then
'       Select Case Key.code
'          Case Asc("L")
'             teExpandedText.Format.Alignment = Align.Left
'          Case Asc("M")
'             teExpandedText.Format.Alignment = Align.Center
'          Case Asc("R")
'             teExpandedText.Format.Alignment = Align.Right
'             teExpandedText.Format.Font.Bold = Not teExpandedText.Format.Font.Bold
'          Case Asc("I")
'             teExpandedText.Format.Font.Italic = Not teExpandedText.Format.Font.Italic
'          Case Asc("U")
'             teExpandedText.Format.Font.Underline = Not teExpandedText.Format.Font.Underline
'       End Select
'    End If  
'    
' End

Public Sub gvwShortCuts_Select()
   
   ShortCut_Display()
   
End

Public Sub Form_Resize()
   
   With gvwShortCuts
      .Columns[0].width = 100
      .Columns[2].width = 100
      .Columns[1].width = gvwShortCuts.width - 200
   End With
   
End
