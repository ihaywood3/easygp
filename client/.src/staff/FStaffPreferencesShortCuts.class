' Gambas class file

' Copyright (C) 2008-2013 Dr. Richard Terry
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
'----------------------------------------------------------------------
'FSTAFFPREFERENCESSHORTCUTS
'
'PURPOSE       Allow staff members to create and maintain shorts for a user
'              to use in their clinical notes
'
'BUGS          Probably plenty please email me rterry@pacific.net.au
'
'TODO          everything
'-----------------------------------------------------------------------------------------------'

Private bexit As Boolean
Private shortcuts_available As Collection
Private shortcuts_user As Collection
Private SpellChecker As ClskSpell
Private bHaveSpellChecked As Boolean
Private fk_shortcut As Integer

Public Sub Init()
   
   shortcuts_available = modConsultDBI.Shortcuts_Available_Get(modDBConnect.currentUser!fk_clinic)
   shortcuts_user = modConsultDBI.Shortcuts_For_User_get(modDBConnect.currentUser!fk_staff)
   lblMeasure.text = "  Share With Others "
   modEditAreaHelpers.Resize_labels(VBox_EditARea, lblMeasure)
   With SpellChecker = New ClskSpell
      .EditorControlToCheck = teExpandedText
      .TempFileForSpelling = User.home &/ "myspelltemp.txt"
      .TempFileForErrors = User.home &/ "myspellerrors.txt"
   End With
   SEttings_Load
   Reload
   
End

Public Sub Spelling_Check()
   '--------------------------------------------------------------------------------------------------
   'Check the letters spelling
   'bHaveSpellChecked is set so as not to bug a user who has already spell checked when they save
   'This is not perfect but pragmatic, i.e they could have introduced errors after their initial check
   'but then hey, that's their problem
   '--------------------------------------------------------------------------------------------------
   
   SpellChecker.init()
   SpellChecker.StartSpelling()
   bHaveSpellChecked = True
   
End

Private Sub Save()
   
   Dim Shortcut As New CRow
   
   If Not ShortCut_Valid() Then Return     'check have enough data
   
   If Not bHaveSpellChecked Then ' And If Not bSuppressSpellCheck Then
      Spelling_Check()
   Endif 
   
   If fk_shortcut Then
      Shortcut.put_unchanged(fk_shortcut, "fk_shortcut")    
   Endif
   Shortcut!shortcut = Trim(txtShortcut.text)
   Shortcut!expandedtext = teExpandedText.RichText()
   Shortcut.Save("clin_consult.shortcuts_user", "fk_shortcut")
   modDBConnect.CommitTrans()
   Reload()

End

Private Sub ShortCut_Valid() As Boolean
   
   If Trim(txtShortcut.text) = "" Then
      With txtShortcut
         .BackGround = Color.rgb(95, 255, 175)
         .SetFocus
      End With
      Return
   End If   
   If Trim(teExpandedText.text) = "" Then
      With teExpandedText
         .setFocus
         Return   
      End With
   Endif
   Return True 

End

Private Sub Reload()
   
End

Public Sub Settings_Save()
   
   Settings[FStaffPreferencesShortCuts / Vsplit_Shortcuts] = VSplit_Shortcuts.layout

End

Private Sub SEttings_Load()
   
End

Public Sub teExpandedText_GotFocus()
   
   If Bexit Then Return
   Last.BackGround = Color.rgb(95, 255, 175)
   
End

Public Sub EditArea_Data_Change(bflag As Boolean)
   
   If bFlag Then
      VBox_EditARea.Padding = 1 
   Else
      VBox_EditARea.Padding = 0
   End If  
   
End

Public Sub EditArea_Clear()
   
End

Public Sub ShortCut_New()
   
   EditArea_Clear
   fk_shortcut = 0
   txtShortcut.SetFocus
   
End

Public Sub teExpandedText_LostFocus()
   
   Last.Background = Color.White
   
End

Public Sub teExpandedText_Activate()
   
   If Last.txt = "shortcut" Then
      rbSharedYes.SetFocus
   Endif
   
End

Public Sub rbEditArea_KeyPress()
   
   If Key.code = Key.return Then
      If Last.tag = "yes" Then
         rbSharedNo.setFocus
      Else
         teExpandedText.setFocus()
      Endif
   Endif
   
End

Public Sub cvwUserShortcuts_Menu()

   If Last.count Then
      mnuShortCuts.Popup   
   Endif

End

Public Sub mnuShortCuts_Click()
   
  Select Case Last.tag
  Case "edit"
        VBox_EditARea.Enabled = True   
  Case "delete"
        ShortCut_Delete
  Case "font"
  
  Case "share"
     
  End Select
   
End

Private Sub ShortCut_Delete()
   
   
   
End
