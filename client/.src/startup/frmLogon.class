' Gambas class file

' Copyright (C) 2008-2013 Dr. Richard Terry

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.
' Logging on is not the same as using the patient record
'----------------------------------------------------------------------
'Form to allow logging in to an EasyGP Database
'Keeps list of last used Hosts in combo
'----------------------------------------------------------------------
Private Hosts_Pipe_Delimited_String As String 'pipe deliminate eg localhost/db1|10.0.80.4/easygp
Private hosts As String[]

Public Sub form_Close()
   '-----------------------------------------------------------------------
   'When logon closed, display user in title bar of main application window
   '-----------------------------------------------------------------------
   
   Settings_Save()
   
End

Public Sub form_Open()
   
   Settings_load()
   Me.Center
   lblmeasure.text = "  Logon  "
   modEditAreaHelpers.Resize_labels(VBox_Logon, lblmeasure)
   txtPassword.SetFocus()
   If modUtil.CapsLockStatus() Then tlCapslock.text = "CAPS LOCK ON"
   
End

Public Sub Settings_load()

   Dim host As String
   
   txtLogon.Text = Settings["Logon/User", "easygp"]
   txtHost.text = Settings["Logon/Host", "localhost"]
   Hosts_Pipe_Delimited_String = Settings["Logon/Host", "localhost"]
   hosts = Split(Hosts_Pipe_Delimited_String, "|")
   For Each host In hosts
      cmbHosts.add(host)
   Next
   cmbHosts.index = cmbHosts.Find(Settings["Logon/Last_Host"])

End

Public Sub Settings_Save()
   
   Settings["Logon/User"] = txtLogon.Text
   Settings["Logon/Host"] = Hosts_Pipe_Delimited_String
   Settings["Logon/Last_Host"] = cmbHosts.Text
   
End

Public Sub btnConnect_Click()
   
  
   Verify_User()
   Settings_Save()
   
End



Public Sub Verify_User()
   '----------------------------------------------------------------------
   'Attempts to logon to the database
   'All users have become postgres users with encrypted postgres passwords
   'If they pass the first entry test (ie valid user + valid database name)
   'then they will be checked against admin.staff table for their hashed
   'password for easygp
   '-----------------------------------------------------------------------
   Dim $conn_error As String
   '---------------------------------------------------
   'Basic validation first before attempting to connect
   ' '---------------------------------------------------
   If Trim(txtLogon.text) = "" Then
      errortext.text = "Missing logon code"
      txtLogon.SetFocus()
      Return
   End If   
   '------------------------------------------------------------
   'have some sort of database name, and perhaps user or password
   'Try connecting to the database, if either database or
   'the user doesn't exist as a postgres user, will not connect
   '-----------------------------------------------------------
  'Try $conn_error = modDBConnect.dbConnect_global(txtHost.Text, Null, Trim$(txtLogon.Text), txtPassword.Text)
   Try $conn_error = modDBConnect.dbConnect_global(cmbHosts.Text, Null, Trim$(txtLogon.Text), txtPassword.Text)

   If Error Then $conn_error = Error.Text
   If $conn_error <> "success" Then
      If InStr($conn_error, "role") Then
         txtlogon.SetFocus
         $conn_error = Replace$($conn_error, "role", "user")
      End If
      ' a big issue is making the error message small enough to actually be visible
      ' in the textbox
      If Left$($conn_error, 30) = "Cannot open database: FATAL:  " Then
         $conn_error = Right$($conn_error, Len($conn_error) - 30)
      End If
      errortext.Text = $conn_error
      Return
   End If
   'Success, save the host
    If Not InStr(Hosts_Pipe_Delimited_String, cmbHosts.text) Then
     ' hosts.add(cmbHosts.text)
     ' txtHost.text = cmbHosts.Text
      Hosts_Pipe_Delimited_String &= "|" & cmbHosts.Text
     ' cmbHosts.Add(cmbHosts.text)
   Endif
   Me.Close(1)
   
End

Public Sub btnCancel_Click()
   
   Settings_Save()
   Me.Close(0)
   
End

Public Sub txtConnection_KeyPress()
   
   errortext.text = ""
   If Key.code = Key.return Then
      btnConnect_Click()
   End If
   
End

Public Sub cmbHosts_Activate()
   
   btnConnect_Click()
   
End

Public Sub btnConnect_KeyPress()
   
   errortext.text = ""
   btnConnect_Click()
   
End

Public Sub Form_KeyPress()
   
   If modUtil.CapsLockStatus() Then
      tlCapslock.text = "CAPS LOCK ON"
   Else
      tlCapslock.text = ""
   Endif
   
End

Public Sub cmbHosts_Click()
   
   txtHost.text = cmbHosts.Text
   
End

