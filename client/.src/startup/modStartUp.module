' Gambas module file

' Copyright (C) 2008-2010 Dr. Richard Terry, Dr. Ian Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

' main startup function
' if returns false will cause FMain to close immediately.

Public Function Startup(form_main As FMain) As Boolean
   
   Dim opt As New Collection
   Dim sMsg As String
   Dim args As Variant[]
   Dim arg As String
   
   modUtilGUI.Check_Utilities_Missing()
   opt = modCmdLine.GetOptions()
   Log.InfoMsg("EasyGP client version " & Application.Version & " running on Gambas " & System.Version)
   If Logon(opt) Then
      If opt.Exist("run") Then
         args = New Variant[] ' arguments to the function we want to call
         For Each arg In opt!extras
            args.Add(Eval(arg))
         Next
         RunCmd(opt!run, args)
         Return False
      Else
         If modAdminDBI.Clinics_Setup() Then
            form_main.Init()
            If opt.Exist("test") Then RunCmd(opt!test, [form_main])
            Return True
         Else
            If Not modUtil.Check_Coding_Missing() Then
               smsg = "EasyGP has detected you have not installed a coding system and cannot proceed.\n\n"
               sMsg &= "You should at a minimum install the ICD10 files.\n\nShould you want to use ICPC2Plus* (recommended for GP's) then you must "
               "purchase these separately. Please read the help files or contact the develpers for assistance.\n\n"
               "*Copyright of ICPC-2 PLUS is held by the University of Sydney. http://www.fmrc.org.au/icpc2plus/licensing.htm"
               Message.Info(sMsg)
               Quit  
            Endif
            If FSetupWizard.ShowModal() = 1 Then 'fixme I've just put in code to close the wizard and make user re-logon- talk to IAN
               Return True
            Else
               Return False
            Endif
         Endif
      Endif
   Else
      Return False
   Endif
   
End

Private Function Logon(opt As Collection) As Boolean
   
   Dim FLogOn As New Frmlogon
   
   If Not IsNull(opt!host) Then
      Try dbConnect(opt)
      If Error Then 
         Log.ErrorMsg(Error.Text & Error.Where)
      Else
         Return True
      Endif
   Endif
   ' okay, none of that worked, use the logon dialogue box
   Select Case FLogOn.ShowModal()
      Case 1
         Return True
      Case 0
         Return False
   End Select
   
End

Private Sub CheckDBVersion()
   
   Dim db_version As Collection
   Dim app_version As New Collection
   Dim s As String[]
   Dim msg As String
   
   Try db_version = modDBConnect.exec_query_first("Select lu_minor as minor, lu_major as major  from db.lu_version")
   If Error Then
      msg = Error.Text
      If Left$(msg, 48) = "Query failed: ERROR:  schema \"db\" does not exist" Then
         Error.Raise("The database is empty and must be set up properly on the remote system. See easygp(8)")
      Else
         Error.Raise(msg)
      Endif
   Endif
   If IsNull(db_version) Then
      Error.Raise("No database version stored")
   Endif
   modCache.SetDBVersion(db_version)
   s = Split(Application.Version, ".")
   app_version!major = CInt(s[0])
   app_version!minor = CInt(s[1])
   
   If db_version!major <> app_version!major Or If db_version!minor < app_version!minor Then
      msg = "You are running client version " & Application.Version
      msg &= " but the database is version " & db_version!major & "." & db_version!minor
      msg &= "\nThese are not compatible, you cannot login to this database.\n\n"
      msg &= "Update scripts are located in the db/updates directory of the svn. Your system administrator should know how to deal with these."
      Log.PanicMsg(msg)
      Message.Error(msg)
      Error.Raise("Incompatible database version")
   Endif
   
End

Public Function dbConnect(opt As Collection)

   Dim the_user As Collection
   
   modDBConnect.dbConnect_global(opt) ' errors get propagated as exceptions
   the_user = modConsultDBI.Staff_member_Get()
   If IsNull(the_user) And If opt!username <> "easygp" Then
      Error.Raise("No user information in database")
   Endif
   modDBConnect.Set_User(the_user)
   CheckDBVersion()
   
End

Private Sub RunCmd(test As String, args As Variant[])
   
   Dim s As String[]
   Dim kls As Class
   Dim func As String
   
   s = Split(test, ".")
   kls = Class.Load(s[0])
   If s.Length = 1 Then
      func = "UnitTest"
   Else
      func = s[1]
   Endif
   Object.Call(kls, func, args)
   
End

Public Function Clinical_Modules_Get() As Collection
   '------------------------------------------------------
   'Returns a collection of modules which can be accessed
   'from the toolbar or section menu in FClinical
   '------------------------------------------------------
   
   Return modDBConnect.exec_query_collection("Select * from admin.lu_clinical_modules")
   
End
