' Gambas module file

' Copyright (C) 2008-2010 Dr. Richard Terry, Dr. Ian Haywood

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Public Function Startup(form_main As FMain) As Boolean

   Dim opt As New Collection

   If modUtil.Check_Utilities_Missing() Then
      Return False
   End If
   opt = GetOptions()
   If Logon(opt) Then
      If opt.Exist("run") Then
         RunCmd(opt!run, [])
         Return False
      Else
         If modAdminDBI.Clinics_Setup() Then
            modFiles.CheckForLocalDirs()
            form_main.Init()
            If opt.Exist("test") Then RunCmd(opt!test, [form_main])
            Return True
         Else
            If FSetupWizard.ShowModal() = 1 Then 'fixme I've just put in code to close the wizard and make user re-logon- talk to IAN
               Return True
            Else
               Return False
            Endif
         Endif
      Endif
   Else
      Return False
   Endif
Catch
   Return False
End

Private Function Logon(opt As Collection) As Boolean

   Dim result As String
   Dim host As String
   Dim username As String
   Dim dbase As String
   Dim password As String
   Dim FLogOn As New Frmlogon

   host = Settings["Autoconnect/host", Null]
   If opt.Exist("autologon") Then
      If opt!autologon = "never" Then host = Null ' suppress auto-logon
      If opt!autologon = "try" And IsNull(host) Then
         host = "unix" ' always attempt
      Endif
   Endif
   If Not IsNull(host) Then
      username = Settings["Autoconnect/username", User.Name]
      dbase = Settings["Autoconnect/database", "easygp"]
      If host = "unix" Then host = ""
      password = Settings["Autoconnect/password", ""]
      result = modDBConnect.dbConnect_global(host, dbase, username, password)
      If result = "success" Then Return True
   Endif
   ' auto-logon for command-line: die if we can't do it
   If opt.Exist("autologon") And If opt!autologon = "always" Then
      Print #File.Err, "login failed: see log"
      Return False
   Endif
   ' okay, none of that worked, use the logon dialogue box
   Select Case FLogOn.ShowModal()
      Case 1
         Return True
      Case 0
         Return False
   End Select

End

Private Function GetOptions() As Collection

   Dim opt As New Collection
   Dim i As Integer

   i = 1
   While i < Application.Args.Count
      Select Case Application.Args[i]
         Case "-a", "--autologon"
            opt!autologon = "try"
         Case "-n", "--no-autologon"
            opt!autologon = "never"
         Case "--test", "-t"
            Inc i
            opt!test = Application.Args[i]
         Case "--run", "-r"
            Inc i
            opt!run = Application.Args[i]
      End Select
      Inc i
   Wend
   Return opt

End

Private Sub RunCmd(test As String, args As Variant[])

   Dim s As String[]
   Dim kls As Class
   Dim func As String

   s = Split(test, ".")
   kls = Class.Load(s[0])
   If s.Length = 1 Then
      func = "UnitTest"
   Else
      func = s[1]
   Endif
   Object.Call(kls, func, args)

End

Public Function Clinical_Modules_Get() As Collection
   '------------------------------------------------------
   'Returns a collection of modules which can be accessed
   'from the toolbar or section menu in FClinical
   '------------------------------------------------------

   Return modDBConnect.exec_query_collection("Select * from admin.lu_clinical_modules")

End
