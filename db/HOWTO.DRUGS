How to update PBS drugs
~~~~~~~~~~~~~~~~~~~~~~~


1. You need to obtain a ZIP file containing the PBS data, from the PBS website. http://www.pbs.gov.au/browse/downloads
you want the "PBS XML file", not the "PBS text files".
Use "version 2" not "version 3" of the XML
Always use the latest XML: it's OK to skip editions. 

2.Copy this file to this directory (easygp/trunk/db)
(Make sure no other .zip or .xml files exist in this directory and do not unzip the file - the script will do this for you)


3. Make sure you have a postgresql database with a current version of the drugs available on the same machine.
"current version" means the latest version that anyone has, but it doesn't matter how far behind the PBS that this,
the script can "catch up" to whatever PBS version you run against.

You need to be able to log in to this database and makes changes to tables under drugs schema with this logon

open up the file import_pbs.py and look for the line near the top:

conn = psycopg2.connect(database='easygp',user='ian')

edit it for your logon details, you may need to add a "password" field.

4. run the script "python import_ps.py" no command-line arguments

It will run through the database and engage in a text "conversation" with you about new drugs.

Generally it will try to see if a "new" drug is actually already in the database under a slightly
different name (again the old "Losec"/"Losec Tablets" problems)

It will offer you a list of choices. An example.

possible match on brand
New drug product found: fentanyl 100 microgram orally disintegrating tablet, 28 <-- this is the new drug

List of existing
----------------

0) fentanyl 200 microgram orally disintegrating tablet, 28
1) fentanyl 200 microgram orally disintegrating tablet, 4
2) fentanyl 400 microgram tablet: orally disintegrating, 28
3) fentanyl 400 microgram orally disintegrating tablet, 4
4) fentanyl 600 microgram orally disintegrating tablet, 28
5) fentanyl 600 microgram orally disintegrating tablet, 4
6) fentanyl 800 microgram orally disintegrating tablet, 28
7) fentanyl 400 microgram orally disintegrating tablet, 28
8) fentanyl 100 microgram orally disintegrating tablet, 4   <-- note: same strength but wrong pack size: not a match
9) fentanyl 800 microgram orally disintegrating tablet, 4
No:

BE CAREFUL: everything has to match including pack size. In this example there's
no match: as the pack size is 28 not 4
Remember drug entries that have a different pack size, but otherwise identical generic and strength, are "different" drugs in our system, that's OK.

If none of them match, at the 'No:' prompt just hit enter, if one matches exactly then select the
number and press enter.

If you chose no match, the program will then see if the product name matches a list of
commopn pattenrns, like "penicillin 400mg capsules, 28"
if so it will do the drug for you. But most of the time that won't work and
you have to manually enter the drug's details.


"Enter the generic product name:"

This is the generic or chemical name. Generally it's the "simpler" name used by
doctors, not the full chemical name, so "valproate" not "valproate sodium"
Obviously this is a judgement call (that's why the computer can't do it by itself)
and it's OK to use the fuller name if in doubt.

if the drug has multiple generic components, these are separated by the ; character.
so "amoyxcillin;clavulanic acid"


"Enter the form from standard list (see docs):"

the type of "thing" (tablet, capsule, injection, etc). This is a fixed list set in the table in our schema
(drugs.units), there are 70 or so entries. If you need a new one the DB needs to be updated.

Generally, we try not to create new ones if a clear equivalent exists, especially if it's clearly a special word 
"made up" by the manufacturer for marketing.
For example, dispersible risperidone tablets are called "Ripserdal Quicklets". Nothing else in the pharmacopoeia
is called a "quicklet" and they aren't more special than all the other types of dispersible tablets.
So we call them 'dispersible tablet" in our database, instead of creating a new form.


"input strength (see docs):"

the strength of the active ingredient in the tablet/injection/thing,
in whatever units are appropriate.
For micrograms we use "mcg", for grams "g", for millilitres, "ml". No capitals.
Note variations on "units": "units" "international units", "standard units" etc, we use just "unit"
example 500unit. note no plural.

If both milligrams and units are given, use milligrams (unless it is clearly standard clinical practice to
use units)

For compunds, separate the strengths with "-". The number of strengths must always match the number of components.

Never put spaces in the form. Example "500mg-125mg"

For solutions, use mg/ml or mcg/ml, note this must be specified for each strength in a compound, so 5mg/ml-10mg/ml, not 5mg-10mg/ml
Some drugs are "per 5ml", in this case we convert to per 1 ml, so 20mg per 5ml becomes 4mg/ml
(NOTE this gets converted back again to per 5 ml if users want to at display time, don't worry if a drug is "usually" prescribed per 5 ml)


"units per pack (default 1, PBS pack size is ..): "

sometimes the PBS pack size will be "1", even though to a prescriber that are logically a number of discrete 'things'
in the pack. Generally this is because the manufacturer doesn't want us to/doesn't care about breaking up packs,
so they just give the PBS a text description "foobar 30mg, 30 tablets", and set packsize to "1". THe PBS don't check
this: they just follow what the manufacturer tells them.

So, put "30" in here to indicate there are "really" 30 tablets 
Can leave it blank most of the time where this doesn't apply or where the PBS pack size is correct.


"Enter the total amount of ?? (NOT active ingredient) (0 is not stated/NA): "

for fluid or liquid drugs, the amount of physical drug (usually millilitres for thin fluids like injections,
and grams for thicker things like creams). Leave it 0 where is doesn't apply
(which is most of the time, usually the script won't ask you this question if it doesn't apply)

Don't enter the unit here, just the number: it's only ever "g" (grams), or "ml" (millilitres), and this is determined by the form
you chose earlier on (pastes, creams, gels etc are in grams, ointments, drops, injections etc are in millilitres).

"free comment (optional):"

sometimes very complex packs just need to be described in words here
most of the time can leave blank

Example
-------

Product: "levodopa 20 mg/mL + carbidopa monohydrate 5 mg/mL intestinal gel, 7 x 100 mL" <-- (brand name is "Duodopa")
                                                           
generic: levodopa;carbidopa <-- we drop "monohydrate" because docs don't care about, this "carbidopa" is what we call it
form: intestinal gel <-- that is one of our forms
strength: 100mg/5ml-25mg/5ml <-- two active ingredients so two strengths                     
free_comment: <-- no need for comment
pack_size: 7
units_per_pack: 1  <-- PBS got it right at "7" so we can leave this "1"        
amount: 100 <-- script will add the "ml"

"BRAND PROCESSING SECTION"

Brand processing is generally fully automatic.
One problem is companies like to change the names of brands, from a database point of
view it's as if one brand is "withdrawn" from the market and a "new" brand of the same generic from
the same company is introduced in the same month.

Output will be like

"Funkynewdrug (potassium hyperchlorate) price $4.50 isn't in the PBS anymore"
"But wait, the same company now makes Evenfunkier Pro price $5.60" 
"are they the same drug? (y/n):"

Usually nothing has actually changed and we just what to change the name in our database
but keep the same internal ID (so the patient medication list entries update automatically)
sometimes it really is a new drug and it needs it's own entry.

Final step
---------

in the end you should have a big file drugs-XXX.sql
 XXX is depending on the month and should match the zip/xml file at the start.
this is an SQL script that all users can then run on their databases. You may wish to compress it before sending it out.
It doesn't matter if they have missed a month's update, this script will "catch them up" to the current PBS.

run psql -f drugs-XXX.sql easygp
(assuming the database is called "easygp")
