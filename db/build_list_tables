Don't delete this, perhaps Ian could build this into the datbase dump

Public Sub Audit_Build_Table_List()
   'Builds a list of all tables in the database
   Dim sCommand As String
   Dim sStem As String
   Dim schema As collection 
   Dim oldtablename As String 'eg lu_type
   Dim newtablename As String 'eg lu_sys_type
   Dim x As Integer
   Dim y As Integer
   Dim tables As Collection
   Dim table As collection 
   Dim fk_schema As Integer
   Dim fk_table As Integer 
   Dim $Result As Result
   Dim Schemas As New collection
   Dim sql As String
   '----------------------------------
   'Notify user we are doing something
   '----------------------------------
   Inc Application.Busy
   
   lvMessages.Clear()
   modDBConnect.BeginTrans()
   modDBConnect.exec_query("delete From audit.lu_schemas")
   sql = "ALTER SEQUENCE audit.lu_schemas_pk_seq"
    " INCREMENT 1 MINVALUE 1 "
    "MAXVALUE 9223372036854775807 RESTART 1 "
    "CACHE 1 NO CYCLE"
    modDBConnect.exec_query(sql)
     modDBConnect.exec_query("delete From audit.lu_tables")
   sql = "ALTER SEQUENCE  audit.lu_tables_pk_seq"
    " INCREMENT 1 MINVALUE 1 "
    "MAXVALUE 9223372036854775807 RESTART 1 "
    "CACHE 1 NO CYCLE"
    modDBConnect.exec_query(sql)
   '----------------------------------------------------------------------
   'First, get all the schema's in the database, display these in the list
   'add these to a collection, except public
   '---------------------------------------------------------------------- 
   lvMessages.Add(lvMessages.count, "Exporting database structure.............")
   $Result = modDBConnect.exec_query("select * FROM pg_namespace where nspowner <> 10")
   lvSchemas.Clear()
   For Each $Result
      schema = New collection 
      schema!schema = $Result!nspname
      schema!fk_schema = modDBConnect.insert("audit.lu_schemas", schema)
      Schemas.Add(schema, schema!fk_schema)
      lvSchemas.Add(schema!fk_schema, $Result!nspname)
    Next
   lblschemas.text = Schemas.Count 
   '----------------------------------
   'For each schema, get all the tables
   '-----------------------------------
   lvMessages.Add(lvMessages.count, "Exporting lookup table names.............")
   lblschemas.text = Schemas.Count
   lvTables.Clear()
   For Each Schema In Schemas
      $Result = modDBConnect.exec_query("Select * FROM pg_tables where schemaname =$$" & schema!schema & "$$")
      For Each $Result
         table = New collection 
         table!tablename = $Result!tablename
         table!fk_schema = schema!fk_schema
         table!fk_table = modDBConnect.insert("audit.lu_tables", table)
         lvTables.Add(table!fk_table, $Result!tablename)
      Next
   Next
   lblTables.text = lvTables.Count
   lvMessages.Add(lvMessages.count, "Data export completed")
   Dec Application.Busy
   modDBConnect.CommitTrans()
End