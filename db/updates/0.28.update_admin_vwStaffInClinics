-- old view had problems leading to multiple rows for staff member if they were added to another organisation - bad design of query!

update contacts.data_addresses set fk_type = 0 where fk_type is null; -- at least now have something in them - bug caused this to be null

Drop view admin.vwStaffInClinics Cascade;

Create or replace view admin.VwStaffInClinics as 
SELECT 
(staff.pk || '-'::text) || data_addresses.pk AS pk_view,
(data_persons.firstname || ' '::text) || data_persons.surname AS wholename, 
  admin.staff.fk_person,
  admin.staff.fk_role,
  admin.staff.fk_status,
  admin.staff.logon_name,
  admin.staff.provider_number,
  admin.staff.prescriber_number,
  admin.staff.logon_date_from,
  admin.staff.logon_date_to,
  link_staff_clinics1.fk_staff,
  link_staff_clinics1.fk_clinic,
  admin.clinics.fk_branch,
  contacts.data_branches.branch,
  contacts.data_branches.fk_organisation,
  contacts.data_branches.fk_address,
  contacts.data_branches.memo AS branch_memo,
  contacts.data_branches.fk_category AS branch_category,
  contacts.data_branches.deleted as branch_deleted,
  contacts.data_employees.pk as fk_employee,
  contacts.data_employees.fk_occupation,
  contacts.data_employees.fk_category AS fk_employee_category,
  contacts.data_employees.memo as employee_memo,
  contacts.data_employees.deleted AS employee_deleted,
  contacts.data_persons.firstname,
  contacts.data_persons.surname,
  contacts.data_persons.salutation,
  contacts.data_persons.birthdate,
  contacts.data_persons.fk_ethnicity,
  contacts.data_persons.fk_language,
  contacts.data_persons.memo as person_memo,
  contacts.data_persons.fk_marital,
  contacts.data_persons.fk_title,
  contacts.data_persons.fk_sex,
  contacts.data_persons.country_code as person_country_code,
  contacts.data_persons.fk_image,
  contacts.data_persons.retired,
  contacts.data_persons.deleted as person_deleted,
  contacts.data_persons.deceased,
  contacts.data_persons.date_deceased,
  contacts.lu_title.title,
  contacts.lu_marital.marital,
  contacts.lu_sex.sex,
  contacts.lu_categories.category AS employee_category,
  common.lu_occupations.occupation,
  common.lu_ethnicity.ethnicity,
  common.lu_languages.language,
  public.all_images.image,
  public.all_images.deleted as image_deleted,
  admin.lu_staff_roles.role,
  contacts.lu_employee_status.status,
  contacts.data_organisations.organisation,
  contacts.data_organisations.deleted as organisation_deleted,
  contacts.data_addresses.street,
  contacts.data_addresses.fk_town,
  contacts.data_addresses.address_type,
  contacts.data_addresses.preferred_address,
  contacts.data_addresses.postal_address,
  contacts.data_addresses.head_office,
  contacts.data_addresses.geolocation,
  contacts.data_addresses.country_code,
  contacts.data_addresses.fk_type,
  contacts.data_addresses.deleted as address_deleted,
  contacts.lu_towns.postcode,
  contacts.lu_towns.town,
  contacts.lu_towns.state,
  link_staff_clinics1.pk as fk_link_staff_clinic
FROM
  admin.staff
  INNER JOIN admin.link_staff_clinics link_staff_clinics1 ON (admin.staff.pk = link_staff_clinics1.fk_staff)
  INNER JOIN admin.clinics ON (link_staff_clinics1.fk_clinic = admin.clinics.pk)
  INNER JOIN contacts.data_employees ON (admin.staff.fk_person = contacts.data_employees.fk_person)
  AND (admin.clinics.fk_branch = contacts.data_employees.fk_branch)
  INNER JOIN contacts.data_branches ON (admin.clinics.fk_branch = contacts.data_branches.pk)
  INNER JOIN contacts.data_persons ON (contacts.data_employees.fk_person = contacts.data_persons.pk)
  LEFT OUTER JOIN contacts.lu_sex ON (contacts.data_persons.fk_sex = contacts.lu_sex.pk)
  LEFT OUTER JOIN contacts.lu_marital ON (contacts.data_persons.fk_marital = contacts.lu_marital.pk)
  LEFT OUTER JOIN contacts.lu_title ON (contacts.data_persons.fk_title = contacts.lu_title.pk)
  LEFT OUTER JOIN contacts.lu_categories ON (contacts.data_employees.fk_category = contacts.lu_categories.pk)
  LEFT OUTER JOIN common.lu_occupations ON (contacts.data_employees.fk_occupation = common.lu_occupations.pk)
  LEFT OUTER JOIN common.lu_ethnicity ON (contacts.data_persons.fk_ethnicity = common.lu_ethnicity.pk)
  LEFT OUTER JOIN common.lu_languages ON (contacts.data_persons.fk_language = common.lu_languages.pk)
  LEFT OUTER JOIN public.all_images ON (contacts.data_persons.fk_image = public.all_images.pk)
  INNER JOIN admin.lu_staff_roles ON (admin.staff.fk_role = admin.lu_staff_roles.pk)
  INNER JOIN contacts.lu_employee_status ON (admin.staff.fk_status = contacts.lu_employee_status.pk)
  INNER JOIN contacts.data_organisations ON (contacts.data_branches.fk_organisation = contacts.data_organisations.pk)
  INNER JOIN contacts.data_addresses ON (contacts.data_branches.fk_address = contacts.data_addresses.pk)
  LEFT OUTER JOIN contacts.lu_towns ON (contacts.data_addresses.fk_town = contacts.lu_towns.pk)
  LEFT OUTER JOIN contacts.lu_address_types ON (contacts.data_addresses.fk_type = contacts.lu_address_types.pk)

  ORDER BY branch, surname ;

GRANT ALL ON TABLE "admin".vwstaffinclinics TO staff;


CREATE OR REPLACE VIEW clerical.vwtaskscomponentsnotes AS 
 SELECT task_component_notes.pk AS pk_note, task_component_notes.fk_task_component, task_component_notes.note, task_component_notes.date, task_component_notes.fk_staff_made_note, vwstaffinclinics.wholename AS staff_made_note_wholename, vwstaffinclinics.title AS staff_made_note_title, task_components.fk_task
   FROM clerical.task_component_notes
   JOIN admin.vwstaffinclinics ON task_component_notes.fk_staff_made_note = vwstaffinclinics.fk_staff
   JOIN clerical.task_components ON task_component_notes.fk_task_component = task_components.pk;

GRANT ALL ON TABLE clerical.vwtaskscomponentsnotes TO staff;



CREATE OR REPLACE VIEW clerical.vwtaskscomponents AS 
 SELECT task_components.pk AS pk_view, tasks.task, tasks.fk_schema, tasks.fk_table, tasks.fk_row, tasks.fk_staff_finalised_task, tasks.date_finalised, tasks.deleted AS task_deleted, tasks.fk_staff_filed_task, vwstaffinclinics.wholename AS staff_filed_task_wholename, vwstaffinclinics.title AS staff_filed_task_title, vwstaffinclinics2.title AS staff_finalised_task_title, vwstaffinclinics2.wholename AS staff_finalised_task_wholename, task_components.pk AS fk_component, task_components.fk_task, task_components.fk_consult, task_components.fk_staff_allocated, task_components.fk_staff_completed, task_components.allocated_staff, task_components.fk_lu_task_type, task_components.fk_urgency, task_components.details, task_components.date_completed AS date_component_completed, task_components.deleted AS component_deleted, vwstaffinclinics1.wholename AS staff_allocated_wholename, vwstaffinclinics1.title AS staff_allocated_title, consult.consult_date AS date_component_logged, vwpatients.town AS patient_town, vwpatients.state AS patient_state, vwpatients.postcode AS patient_postcode, vwpatients.street AS patient_street, vwpatients.fk_person, vwpatients.fk_patient, vwpatients.wholename AS patient_wholename, vwpatients.title AS patient_title, vwpatients.birthdate AS patient_birthdate, lu_task_types.type AS task_type, lu_urgency.urgency
   FROM clerical.task_components
   JOIN clerical.tasks ON task_components.fk_task = tasks.pk
   JOIN admin.vwstaffinclinics ON tasks.fk_staff_filed_task = vwstaffinclinics.fk_staff
   LEFT JOIN admin.vwstaffinclinics vwstaffinclinics1 ON task_components.fk_staff_allocated = vwstaffinclinics1.fk_staff
   LEFT JOIN admin.vwstaffinclinics vwstaffinclinics2 ON tasks.fk_staff_finalised_task = vwstaffinclinics2.fk_staff
   JOIN clin_consult.consult ON task_components.fk_consult = consult.pk
   JOIN contacts.vwpatients ON consult.fk_patient = vwpatients.fk_patient
   JOIN clerical.lu_task_types ON task_components.fk_lu_task_type = lu_task_types.pk
   JOIN common.lu_urgency ON task_components.fk_urgency = lu_urgency.pk
  WHERE task_components.fk_consult > 0
  ORDER BY vwpatients.fk_patient, task_components.pk;

GRANT ALL ON TABLE clerical.vwtaskscomponents TO staff;



CREATE OR REPLACE VIEW documents.vwinboxstaff AS 
         SELECT vwstaffinclinics.pk_view, vwstaffinclinics.title, vwstaffinclinics.fk_staff, 
         vwstaffinclinics.wholename, 
         vwstaffinclinics.surname, 
         NULL::unknown AS fk_unmatched_staff
           FROM admin.vwstaffinclinics
UNION 
         SELECT (unmatched_staff.pk || '-'::text) || 'unmatched'::text AS pk_view, unmatched_staff.title,
          unmatched_staff.fk_real_staff AS fk_staff, 
          (unmatched_staff.firstname || ' '::text) || (unmatched_staff.surname || ' [Unkown]'::text) AS wholename, 
          unmatched_staff.surname, unmatched_staff.pk AS fk_unmatched_staff
           FROM documents.unmatched_staff
          WHERE unmatched_staff.fk_real_staff IS NULL
  ORDER BY 5;

GRANT ALL ON TABLE documents.vwinboxstaff TO staff;
COMMENT ON VIEW documents.vwinboxstaff IS 'All staff with an inbox. If the staff member is unknown, they will still
 appear, once matched to a real staff member they are not pulled from
 the unmatched table ie fk_real_staff <> null then';


CREATE OR REPLACE VIEW clin_certificates.vwmedicalcertificates AS 
 SELECT medical_certificate.pk AS pk_medicalcertificate, medical_certificate.fk_patient, medical_certificate.fk_consult, medical_certificate.reason, medical_certificate.fk_coding_system, medical_certificate.fk_code, medical_certificate.fk_lu_illness_temporality, medical_certificate.from_date, medical_certificate.deleted, medical_certificate.to_date, consult.consult_date AS date_issued, consult.fk_staff, vwstaffinclinics.wholename AS staff_wholename, vwstaffinclinics.title AS staff_title, vwstaffinclinics.branch AS staff_branch, vwstaffinclinics.organisation AS staff_organisation, vwstaffinclinics.street AS staff_street, vwstaffinclinics.town AS staff_town, vwstaffinclinics.postcode AS staff_postcode, vwstaffinclinics.provider_number AS staff_provider_number, lu_illness_temporality.temporality
   FROM clin_certificates.medical_certificate
   JOIN clin_consult.consult ON medical_certificate.fk_consult = consult.pk
   JOIN admin.vwstaffinclinics ON consult.fk_staff = vwstaffinclinics.fk_staff
   JOIN clin_certificates.lu_illness_temporality ON medical_certificate.fk_lu_illness_temporality = lu_illness_temporality.pk
  WHERE medical_certificate.deleted = false
  ORDER BY medical_certificate.fk_patient, consult.consult_date;

GRANT ALL ON TABLE clin_certificates.vwmedicalcertificates TO staff;
COMMENT ON VIEW clin_certificates.vwmedicalcertificates IS 'A view of patients medical certificate history, includes written by which staff member and where';


truncate db.lu_version;
insert into db.lu_version (lu_major,lu_minor) values (0, 28);
