#!/bin/sh -e

# Source debconf library.
. /usr/share/debconf/confmodule

# Check their answer.
db_get easygp-server/password
PASSWORD=$RET

db_reset easygp-server/password

if [ "$PASSWORD" = "not-set" ] ; then
  echo "Password not set, so no database initialisation performed"
else
  cd /usr/share/easygp-server/
  if su postgres -c "psql -l" | grep -q '^ easygp '; then
     # database already exists, so run updates
     cd updates
     MAJOR=`su postgres -c "psql -tA -c \"select lu_major from db.lu_version\" easygp"`
     MINOR=`su postgres -c "psql -tA -c \"select lu_minor from db.lu_version\" easygp"`
     i=$(($MINOR+1))

     while [ -f $MAJOR.$i*.sql ] ; do
       su postgres -c "psql -f $MAJOR.$i*.sql easygp" > /dev/null
       i=$(($i+1))
     done

   else
     # make database from scratch
     (
       echo CREATE USER easygp CREATEUSER PASSWORD \'$PASSWORD\'\;
       echo CREATE ROLE staff NOLOGIN\;
       echo '\\set ON_ERROR_STOP 1'
       echo CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"\;
       echo CREATE DATABASE easygp OWNER easygp\;
       echo '\\c easygp'
       echo '\\i easygp.schema.sql'
       echo '\\i easygp.data.sql'
       echo '\\i coding/icd10_import_gambas.sql'
     ) | su postgres -c "psql template1" > /dev/null
  fi
fi

getent group easygp || addgroup easygp
function set_dir() {
    chgrp easygp $1
    chmod 2770 $1
}

set_dir /var/lib/easygp/scanning
set_dir /var/lib/easygp/documents
set_dir /var/lib/easygp/hl7/incoming
set_dir /var/lib/easygp/hl7/outgoing
set_dir /var/lib/easygp/hl7/errors
set_dir /var/lib/easygp/drug_pis
set_dir /var/lib/easygp/library

#DEBHELPER#
